{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# LinkTech - A Platform Connecting Entrepreneurs with Software Companies\n\n## Overview\n\nLinkTech is a full-stack web application designed as a marketplace to connect entrepreneurs with software development companies in Saudi Arabia. Its core purpose is to facilitate project posting by entrepreneurs, enable software companies to submit offers, and manage secure transactions through an escrow system. The platform aims to streamline the process of finding and collaborating on software development projects, providing a transparent and efficient environment for both parties.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### UI/UX Decisions\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite\n- **UI Framework**: Tailwind CSS with shadcn/ui components\n- **Routing**: Wouter for client-side routing\n- **Forms**: React Hook Form with Zod validation\n- **SEO**: React Helmet\n\n### Technical Implementations\n- **Backend Runtime**: Node.js with TypeScript\n- **Backend Framework**: Express.js\n- **Database**: PostgreSQL with Drizzle ORM\n- **Authentication**: JWT-based authentication system\n- **Real-time Communication**: WebSockets for live messaging\n- **Payment & Escrow**: Stripe integration with a 2.5% commission system and automated payment release.\n- **Content Management**: Blog system with admin moderation, contact forms, and newsletter management.\n- **Digital Signature Integration**: Complete Sadiq API integration with dynamic authentication service, automated token management, document lifecycle tracking, and Nafath identity verification.\n- **AI Assistant**: Project AI assistant for analysis powered by Anthropic API.\n\n### Feature Specifications\n- **User Roles**: Entrepreneur, Company, Admin with role-based access control.\n- **Company Profiles**: Detailed profiles with verification.\n- **Project Listings**: Comprehensive project posting with budget and status tracking.\n- **Offer System**: Companies submit proposals.\n- **Messaging**: Real-time chat.\n- **Testimonials**: Review and rating system.\n- **NDA Digital Signatures**: Full Sadiq integration with dynamic authentication, document upload, invitation management, status tracking, and signed document retrieval.\n- **Real-Time Notification System**: Complete database-backed notification system integrated with two-stage NDA workflow. Notifications are created when companies initiate NDA requests and when entrepreneurs complete their information.\n- **Two-Stage NDA Workflow**: Realistic notification-based process where companies initiate NDA requests, entrepreneurs are notified to complete their information separately, and Sadiq integration proceeds automatically after both parties provide data.\n- **Data Flow**: Covers user registration, project creation, AI-powered company matching, offer submission, dynamic NDA generation with Sadiq integration, secure payment via escrow, project execution with messaging, and final completion.\n- **Security Measures**: Content filtering, SQL injection protection, session security, input validation, CORS configuration, dynamic token management for external services.\n\n### System Design Choices\n- **State Management**: TanStack Query (React Query) for server state.\n- **Database Schema**: Includes Users, Company Profiles, Projects, Messages, Project Offers, Testimonials, Blog System, NDA Agreements with Sadiq tracking fields, Notifications system with real-time user alerts.\n- **Authentication**: JWT-based system for internal auth, dynamic token management for external services (Sadiq).\n- **External Service Integration**: Smart authentication service with automatic token refresh, fallback mechanisms, and comprehensive error handling.\n- **Deployment**: Configured for Replit with autoscale deployment, PostgreSQL 16, Vite for frontend, ESBuild for backend, and Node.js 20.\n- **Performance**: Database connection pooling, lazy loading, code splitting, CDN integration, intelligent token caching.\n\n## External Dependencies\n\n- **Database**: @neondatabase/serverless (for PostgreSQL connection)\n- **ORM**: drizzle-orm\n- **UI Components**: @radix-ui\n- **Email Service**: @sendgrid/mail\n- **PDF Generation**: pdfkit, pdfmake, pdf-lib\n- **WebSocket**: ws\n- **Payment Gateway**: Stripe (for payment processing)\n- **Authentication**: Passport.js (for initial strategy)\n- **Type Safety**: TypeScript\n- **Bundling**: ESBuild\n- **Database Migration**: Drizzle Kit\n- **CSS Processing**: PostCSS (with Tailwind CSS)","size_bytes":4493},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"test-mailersend.js":{"content":"import { MailerSend, EmailParams, Recipient, Sender } from \"mailersend\";\n\n// Check if API key is set\nconst apiKey = process.env.MAILERSEND_API_KEY;\nif (!apiKey) {\n  console.error(\"MAILERSEND_API_KEY is not set in environment variables\");\n  process.exit(1);\n}\n\n// Create MailerSend instance\nconst mailerSend = new MailerSend({ apiKey });\n\n// Create sender\n// Using the registered domain in MailerSend account\nconst sender = new Sender(\"noreply@test-q3enl6kkd8r42vwr.mlsender.net\", \"تِكلينك\");\n\n// Test function\nasync function testMailerSend() {\n  try {\n    console.log(\"Creating recipient...\");\n    const recipient = new Recipient(\"test@example.com\", \"Test User\");\n    const recipients = [recipient];\n    \n    console.log(\"Creating email params...\");\n    const emailParams = new EmailParams()\n      .setFrom(sender)\n      .setTo(recipients)\n      .setSubject(\"Test Email\")\n      .setHtml(\"<p>This is a test email.</p>\")\n      .setText(\"This is a test email.\");\n    \n    console.log(\"Sending email...\");\n    const response = await mailerSend.email.send(emailParams);\n    console.log(\"Email sent successfully:\", response);\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n  }\n}\n\n// Run the test\ntestMailerSend();","size_bytes":1237},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/adminCreate.ts":{"content":"// سكريبت لإضافة مستخدم المسؤول\nimport { db } from \"./db\";\nimport { users } from \"@shared/schema\";\nimport { eq } from \"drizzle-orm\";\nimport * as bcrypt from \"bcryptjs\";\n\nasync function createAdminUser() {\n  try {\n    // نتحقق أولاً مما إذا كان هناك مستخدم مسؤول بالفعل\n    const [existingAdmin] = await db.select().from(users).where(eq(users.username, \"admin\")).limit(1);\n    \n    if (existingAdmin) {\n      // إذا كان المستخدم موجوداً بالفعل، نقوم بتحديث كلمة المرور فقط\n      console.log(\"المستخدم المسؤول موجود، جاري تحديث كلمة المرور...\");\n      \n      // تشفير كلمة المرور\n      const salt = await bcrypt.genSalt(10);\n      const hashedPassword = await bcrypt.hash(\"admin123\", salt);\n      \n      await db.update(users)\n        .set({ password: hashedPassword })\n        .where(eq(users.id, existingAdmin.id));\n      \n      console.log(\"تم تحديث كلمة مرور المستخدم المسؤول بنجاح\");\n    } else {\n      // إنشاء مستخدم مسؤول جديد\n      console.log(\"جاري إنشاء مستخدم مسؤول جديد...\");\n      \n      // تشفير كلمة المرور\n      const salt = await bcrypt.genSalt(10);\n      const hashedPassword = await bcrypt.hash(\"admin123\", salt);\n      \n      const [admin] = await db.insert(users).values({\n        username: \"admin\",\n        password: hashedPassword,\n        email: \"admin@techlink.example\",\n        role: \"admin\",\n        name: \"مسؤول النظام\",\n        avatar: \"https://randomuser.me/api/portraits/men/33.jpg\",\n      }).returning();\n      \n      console.log(\"تم إنشاء المستخدم المسؤول بنجاح:\", admin);\n    }\n  } catch (error) {\n    console.error(\"حدث خطأ أثناء إنشاء/تحديث المستخدم المسؤول:\", error);\n  }\n}\n\n// تنفيذ الدالة\ncreateAdminUser();","size_bytes":1995},"server/aiProjectAssistant.ts":{"content":"/**\n * مساعد الذكاء الاصطناعي للمشاريع\n * يحلل أفكار المشاريع ويقدم توصيات تقنية وتسعيرية دقيقة\n */\n\nimport Anthropic from '@anthropic-ai/sdk';\n\n// the newest Anthropic model is \"claude-sonnet-4-20250514\" which was released May 14, 2025. Use this by default unless user has already selected claude-3-7-sonnet-20250219\nconst anthropic = new Anthropic({\n  apiKey: process.env.ANTHROPIC_API_KEY,\n});\n\nexport interface ProjectAnalysisInput {\n  projectIdea: string;\n  businessSize: 'individual' | 'small' | 'medium' | 'enterprise';\n  expectedUsers?: number;\n  budget: 'low' | 'medium' | 'high' | 'custom';\n  timeline: 'urgent' | 'normal' | 'flexible';\n  integrationNeeds?: string[];\n  securityRequirements: 'basic' | 'standard' | 'high';\n  specificRequirements?: string;\n}\n\nexport interface ProjectAnalysisResult {\n  projectType: string;\n  technicalComplexity: 'simple' | 'medium' | 'complex';\n  recommendedTechnologies: string[];\n  estimatedCostRange: {\n    min: number;\n    max: number;\n    currency: 'SAR';\n  };\n  estimatedDuration: {\n    development: number; // أسابيع\n    testing: number;\n    deployment: number;\n  };\n  projectPhases: Array<{\n    name: string;\n    description: string;\n    duration: number; // أسابيع\n    cost: number;\n  }>;\n  features: Array<{\n    name: string;\n    priority: 'essential' | 'important' | 'nice-to-have';\n    complexity: 'low' | 'medium' | 'high';\n  }>;\n  riskAssessment: {\n    technicalRisks: string[];\n    timelineRisks: string[];\n    budgetRisks: string[];\n    mitigationStrategies: string[];\n  };\n  scalabilityConsiderations: string[];\n  maintenanceRequirements: {\n    frequency: string;\n    estimatedMonthlyCost: number;\n    requiredSkills: string[];\n  };\n  competitorAnalysis?: {\n    similarSolutions: string[];\n    differentiationOpportunities: string[];\n  };\n}\n\n// قوالب المشاريع الأساسية مع التسعير\nconst PROJECT_TEMPLATES = {\n  'simple_website': {\n    basePrice: 8000,\n    complexity: 1.0,\n    estimatedDays: 14,\n    technologies: ['HTML', 'CSS', 'JavaScript', 'PHP/WordPress']\n  },\n  'business_website': {\n    basePrice: 15000,\n    complexity: 1.5,\n    estimatedDays: 28,\n    technologies: ['React', 'Node.js', 'PostgreSQL', 'Tailwind CSS']\n  },\n  'ecommerce_simple': {\n    basePrice: 25000,\n    complexity: 2.0,\n    estimatedDays: 42,\n    technologies: ['React', 'Node.js', 'PostgreSQL', 'Stripe', 'Redis']\n  },\n  'ecommerce_enterprise': {\n    basePrice: 80000,\n    complexity: 3.5,\n    estimatedDays: 120,\n    technologies: ['Microservices', 'React', 'Node.js', 'PostgreSQL', 'Redis', 'CDN', 'Load Balancing']\n  },\n  'mobile_app_simple': {\n    basePrice: 30000,\n    complexity: 2.2,\n    estimatedDays: 56,\n    technologies: ['React Native', 'Node.js', 'PostgreSQL', 'Firebase']\n  },\n  'mobile_app_complex': {\n    basePrice: 60000,\n    complexity: 3.0,\n    estimatedDays: 84,\n    technologies: ['React Native', 'Node.js', 'PostgreSQL', 'Redis', 'Push Notifications', 'Analytics']\n  },\n  'web_application': {\n    basePrice: 35000,\n    complexity: 2.5,\n    estimatedDays: 70,\n    technologies: ['React', 'Node.js', 'PostgreSQL', 'Authentication', 'Real-time features']\n  },\n  'ai_integration': {\n    basePrice: 50000,\n    complexity: 3.2,\n    estimatedDays: 90,\n    technologies: ['Python', 'TensorFlow/PyTorch', 'APIs', 'Cloud Services', 'React']\n  }\n};\n\n// عوامل تعديل السعر حسب حجم العمل\nconst BUSINESS_SIZE_MULTIPLIERS = {\n  individual: 1.0,\n  small: 1.3,\n  medium: 1.8,\n  enterprise: 2.5\n};\n\n// عوامل تعديل السعر حسب متطلبات الأمان\nconst SECURITY_MULTIPLIERS = {\n  basic: 1.0,\n  standard: 1.2,\n  high: 1.5\n};\n\n// عوامل تعديل السعر حسب الجدولة الزمنية\nconst TIMELINE_MULTIPLIERS = {\n  urgent: 1.4,\n  normal: 1.0,\n  flexible: 0.9\n};\n\n/**\n * تحليل فكرة المشروع باستخدام الذكاء الاصطناعي\n */\nexport async function analyzeProject(input: ProjectAnalysisInput): Promise<ProjectAnalysisResult> {\n  const prompt = `تحليل فكرة المشروع التقني:\n\nفكرة المشروع: ${input.projectIdea}\nحجم العمل: ${input.businessSize}\nعدد المستخدمين المتوقع: ${input.expectedUsers || 'غير محدد'}\nالميزانية: ${input.budget}\nالجدولة الزمنية: ${input.timeline}\nمتطلبات الأمان: ${input.securityRequirements}\nاحتياجات التكامل: ${input.integrationNeeds?.join(', ') || 'لا توجد'}\nمتطلبات إضافية: ${input.specificRequirements || 'لا توجد'}\n\nقم بالرد بصيغة JSON صحيحة فقط، بدون أي نص إضافي أو markdown. البنية المطلوبة:\n\n{\n  \"projectType\": \"نوع المشروع\",\n  \"technicalComplexity\": \"simple | medium | complex\",\n  \"recommendedTechnologies\": [\"تقنية1\", \"تقنية2\"],\n  \"features\": [\n    {\n      \"name\": \"اسم الميزة\",\n      \"priority\": \"essential | important | nice-to-have\",\n      \"complexity\": \"low | medium | high\"\n    }\n  ],\n  \"riskAssessment\": {\n    \"technicalRisks\": [\"مخاطر تقنية\"],\n    \"timelineRisks\": [\"مخاطر زمنية\"],\n    \"budgetRisks\": [\"مخاطر ميزانية\"],\n    \"mitigationStrategies\": [\"استراتيجيات التخفيف\"]\n  },\n  \"scalabilityConsiderations\": [\"اعتبارات التوسع\"],\n  \"competitorAnalysis\": {\n    \"similarSolutions\": [\"حلول مشابهة\"],\n    \"differentiationOpportunities\": [\"فرص التميز\"]\n  }\n}`;\n\n  try {\n    const response = await anthropic.messages.create({\n      model: 'claude-sonnet-4-20250514',\n      max_tokens: 4000,\n      messages: [\n        {\n          role: 'user',\n          content: prompt\n        }\n      ],\n    });\n\n    const content = response.content[0];\n    if (content.type !== 'text') {\n      throw new Error('Unexpected response type from AI');\n    }\n    \n    // استخراج JSON من markdown إذا كان موجوداً\n    let jsonText = content.text;\n    const jsonMatch = jsonText.match(/```json\\s*([\\s\\S]*?)\\s*```/);\n    if (jsonMatch) {\n      jsonText = jsonMatch[1];\n    } else {\n      // إزالة أي markdown formatting آخر\n      jsonText = jsonText.replace(/```[\\s\\S]*?```/g, '').trim();\n    }\n    \n    const aiAnalysis = JSON.parse(jsonText);\n    \n    // تحديد القالب المناسب بناءً على تحليل AI\n    const projectTemplate = determineProjectTemplate(aiAnalysis.projectType, input);\n    \n    // حساب التكلفة المتقدمة\n    const costAnalysis = calculateAdvancedCost(projectTemplate, input, aiAnalysis);\n    \n    // دمج تحليل AI مع حسابات التكلفة\n    const result: ProjectAnalysisResult = {\n      ...aiAnalysis,\n      estimatedCostRange: costAnalysis.costRange,\n      estimatedDuration: costAnalysis.duration,\n      projectPhases: costAnalysis.phases,\n      maintenanceRequirements: {\n        frequency: 'شهرياً',\n        estimatedMonthlyCost: Math.round(costAnalysis.costRange.max * 0.05), // 5% من التكلفة الإجمالية\n        requiredSkills: aiAnalysis.recommendedTechnologies.slice(0, 3)\n      }\n    };\n\n    return result;\n  } catch (error) {\n    console.error('خطأ في تحليل المشروع:', error);\n    throw new Error('فشل في تحليل المشروع. يرجى المحاولة مرة أخرى.');\n  }\n}\n\n/**\n * تحديد القالب المناسب للمشروع\n */\nfunction determineProjectTemplate(projectType: string, input: ProjectAnalysisInput) {\n  const normalizedType = projectType.toLowerCase();\n  \n  if (normalizedType.includes('متجر') || normalizedType.includes('تجارة')) {\n    return input.businessSize === 'enterprise' ? \n      PROJECT_TEMPLATES.ecommerce_enterprise : \n      PROJECT_TEMPLATES.ecommerce_simple;\n  }\n  \n  if (normalizedType.includes('تطبيق') && normalizedType.includes('جوال')) {\n    return input.expectedUsers && input.expectedUsers > 10000 ?\n      PROJECT_TEMPLATES.mobile_app_complex :\n      PROJECT_TEMPLATES.mobile_app_simple;\n  }\n  \n  if (normalizedType.includes('ذكاء') || normalizedType.includes('ai')) {\n    return PROJECT_TEMPLATES.ai_integration;\n  }\n  \n  if (normalizedType.includes('نظام') || normalizedType.includes('إدارة')) {\n    return PROJECT_TEMPLATES.web_application;\n  }\n  \n  if (normalizedType.includes('موقع')) {\n    return input.businessSize === 'individual' ?\n      PROJECT_TEMPLATES.simple_website :\n      PROJECT_TEMPLATES.business_website;\n  }\n  \n  // افتراضي\n  return PROJECT_TEMPLATES.business_website;\n}\n\n/**\n * حساب التكلفة المتقدم بناءً على عدة عوامل\n */\nfunction calculateAdvancedCost(template: any, input: ProjectAnalysisInput, aiAnalysis: any) {\n  let basePrice = template.basePrice;\n  \n  // تطبيق المضاعفات\n  const businessMultiplier = BUSINESS_SIZE_MULTIPLIERS[input.businessSize];\n  const securityMultiplier = SECURITY_MULTIPLIERS[input.securityRequirements];\n  const timelineMultiplier = TIMELINE_MULTIPLIERS[input.timeline];\n  \n  // عامل التعقيد الإضافي\n  const complexityMultiplier = aiAnalysis.technicalComplexity === 'complex' ? 1.5 :\n                              aiAnalysis.technicalComplexity === 'medium' ? 1.2 : 1.0;\n  \n  // عامل عدد المستخدمين\n  const userScaleMultiplier = input.expectedUsers ? \n    (input.expectedUsers > 100000 ? 2.0 :\n     input.expectedUsers > 10000 ? 1.5 :\n     input.expectedUsers > 1000 ? 1.2 : 1.0) : 1.0;\n  \n  // عامل التكامل\n  const integrationMultiplier = input.integrationNeeds && input.integrationNeeds.length > 0 ?\n    1 + (input.integrationNeeds.length * 0.1) : 1.0;\n  \n  const totalMultiplier = businessMultiplier * securityMultiplier * timelineMultiplier * \n                         complexityMultiplier * userScaleMultiplier * integrationMultiplier;\n  \n  const finalPrice = Math.round(basePrice * totalMultiplier);\n  \n  // حساب المراحل والمدة\n  const baseDuration = template.estimatedDays;\n  const adjustedDuration = Math.round(baseDuration * complexityMultiplier * userScaleMultiplier);\n  \n  const phases = [\n    {\n      name: 'التخطيط والتصميم',\n      description: 'تحليل المتطلبات وتصميم واجهات المستخدم',\n      duration: Math.round(adjustedDuration * 0.25 / 7), // تحويل لأسابيع\n      cost: Math.round(finalPrice * 0.25)\n    },\n    {\n      name: 'التطوير الأساسي',\n      description: 'برمجة الوظائف الرئيسية وقواعد البيانات',\n      duration: Math.round(adjustedDuration * 0.45 / 7),\n      cost: Math.round(finalPrice * 0.45)\n    },\n    {\n      name: 'الاختبار والمراجعة',\n      description: 'اختبار شامل وإصلاح الأخطاء',\n      duration: Math.round(adjustedDuration * 0.20 / 7),\n      cost: Math.round(finalPrice * 0.20)\n    },\n    {\n      name: 'النشر والتدريب',\n      description: 'نشر التطبيق وتدريب المستخدمين',\n      duration: Math.round(adjustedDuration * 0.10 / 7),\n      cost: Math.round(finalPrice * 0.10)\n    }\n  ];\n  \n  return {\n    costRange: {\n      min: Math.round(finalPrice * 0.85),\n      max: Math.round(finalPrice * 1.15),\n      currency: 'SAR' as const\n    },\n    duration: {\n      development: Math.round(adjustedDuration * 0.7 / 7),\n      testing: Math.round(adjustedDuration * 0.2 / 7),\n      deployment: Math.round(adjustedDuration * 0.1 / 7)\n    },\n    phases\n  };\n}\n\n/**\n * إنشاء تقرير مفصل للمشروع\n */\nexport function generateProjectReport(analysis: ProjectAnalysisResult): string {\n  return `\n# تحليل مشروع تقني مفصل\n\n## نوع المشروع\n${analysis.projectType}\n\n## مستوى التعقيد\n${analysis.technicalComplexity}\n\n## التقنيات الموصى بها\n${analysis.recommendedTechnologies.map(tech => `• ${tech}`).join('\\n')}\n\n## التكلفة المتوقعة\nمن ${analysis.estimatedCostRange.min.toLocaleString('ar-SA')} إلى ${analysis.estimatedCostRange.max.toLocaleString('ar-SA')} ريال سعودي\n\n## المدة الزمنية\n• التطوير: ${analysis.estimatedDuration.development} أسبوع\n• الاختبار: ${analysis.estimatedDuration.testing} أسبوع  \n• النشر: ${analysis.estimatedDuration.deployment} أسبوع\n\n## مراحل المشروع\n${analysis.projectPhases.map(phase => \n  `### ${phase.name}\n  ${phase.description}\n  المدة: ${phase.duration} أسبوع\n  التكلفة: ${phase.cost.toLocaleString('ar-SA')} ريال`\n).join('\\n\\n')}\n\n## الميزات الأساسية\n${analysis.features.filter(f => f.priority === 'essential').map(f => `• ${f.name}`).join('\\n')}\n\n## تقييم المخاطر\n### المخاطر التقنية\n${analysis.riskAssessment.technicalRisks.map(risk => `• ${risk}`).join('\\n')}\n\n### مخاطر الجدولة الزمنية\n${analysis.riskAssessment.timelineRisks.map(risk => `• ${risk}`).join('\\n')}\n\n### مخاطر الميزانية\n${analysis.riskAssessment.budgetRisks.map(risk => `• ${risk}`).join('\\n')}\n\n## استراتيجيات التخفيف\n${analysis.riskAssessment.mitigationStrategies.map(strategy => `• ${strategy}`).join('\\n')}\n\n## متطلبات الصيانة\n• التكرار: ${analysis.maintenanceRequirements.frequency}\n• التكلفة الشهرية: ${analysis.maintenanceRequirements.estimatedMonthlyCost.toLocaleString('ar-SA')} ريال\n• المهارات المطلوبة: ${analysis.maintenanceRequirements.requiredSkills.join(', ')}\n`;\n}","size_bytes":13628},"server/aiRecommendation.ts":{"content":"import { Project, CompanyProfile } from '@shared/schema';\nimport { storage } from './storage';\nimport { calculateJaccardSimilarity } from './recommendation';\n\n/**\n * محرك التوصيات المعتمد على الذكاء الاصطناعي\n * يقوم بتحليل المشاريع وملفات الشركات لتقديم توصيات أكثر دقة\n */\n\n/**\n * نموذج التحليل النصي البسيط لاستخراج الكلمات المفتاحية\n * @param text النص المراد تحليله\n * @returns مصفوفة من الكلمات المفتاحية\n */\nfunction extractKeywords(text: string): string[] {\n  if (!text) return [];\n  \n  // قائمة الكلمات العامة التي يتم استبعادها\n  const stopWords = new Set([\n    'في', 'من', 'على', 'أن', 'إلى', 'عن', 'مع', 'هذا', 'هذه', 'ذلك', 'تلك',\n    'التي', 'الذي', 'كان', 'كانت', 'مثل', 'عند', 'عندما', 'لكن', 'و', 'أو', 'ثم', 'أي',\n    'a', 'an', 'the', 'in', 'on', 'at', 'of', 'to', 'for', 'with', 'by', 'is', 'are', 'was', 'were'\n  ]);\n\n  // تنظيف النص واستخراج الكلمات\n  const words = text.toLowerCase()\n    .replace(/[^\\p{L}\\p{N}\\s]/gu, '') // إزالة علامات الترقيم والرموز الخاصة\n    .split(/\\s+/) // تقسيم النص إلى كلمات\n    .filter(word => \n      word.length > 2 && !stopWords.has(word)\n    ); // استبعاد الكلمات القصيرة والكلمات العامة\n  \n  // عدد تكرار كل كلمة\n  const wordFrequency: Record<string, number> = {};\n  for (const word of words) {\n    wordFrequency[word] = (wordFrequency[word] || 0) + 1;\n  }\n  \n  // ترتيب الكلمات حسب التكرار\n  const sortedWords = Object.entries(wordFrequency)\n    .sort(([, freqA], [, freqB]) => freqB - freqA)\n    .slice(0, 20) // أخذ أعلى 20 كلمة\n    .map(([word]) => word);\n  \n  return sortedWords;\n}\n\n/**\n * استخراج الكيانات المهمة من النص باستخدام قواعد بسيطة\n * @param text النص المراد تحليله\n * @returns الكيانات المستخرجة مصنفة حسب النوع\n */\nfunction extractEntities(text: string): {\n  technologies: string[];\n  domains: string[];\n  features: string[];\n} {\n  // قائمة بالتقنيات الشائعة\n  const commonTechnologies = [\n    'react', 'angular', 'vue', 'javascript', 'typescript', 'python', 'django', 'flask',\n    'nodejs', 'express', 'php', 'laravel', 'ruby', 'rails', 'java', 'spring', 'dotnet',\n    'ios', 'android', 'flutter', 'react native', 'swift', 'kotlin', 'رياكت', 'أندرويد', 'آيفون'\n  ];\n  \n  // قائمة بالمجالات الشائعة\n  const commonDomains = [\n    'تجارة إلكترونية', 'طبي', 'صحي', 'تعليمي', 'مالي', 'سياحة', 'عقارات', 'توصيل',\n    'ecommerce', 'medical', 'health', 'education', 'finance', 'travel', 'real estate',\n    'delivery', 'social media', 'وسائط اجتماعية', 'تسويق', 'marketing'\n  ];\n  \n  // قائمة بالميزات الشائعة\n  const commonFeatures = [\n    'تسجيل دخول', 'دفع', 'خرائط', 'إشعارات', 'تقارير', 'تحليلات',\n    'login', 'payment', 'maps', 'notifications', 'reports', 'analytics',\n    'chat', 'محادثة', 'دردشة', 'مباشر', 'live', 'فيديو', 'video'\n  ];\n  \n  const lowerText = text.toLowerCase();\n  \n  // البحث عن التطابقات\n  const technologies = commonTechnologies.filter(tech => \n    lowerText.includes(tech.toLowerCase())\n  );\n  \n  const domains = commonDomains.filter(domain => \n    lowerText.includes(domain.toLowerCase())\n  );\n  \n  const features = commonFeatures.filter(feature => \n    lowerText.includes(feature.toLowerCase())\n  );\n  \n  return { technologies, domains, features };\n}\n\n/**\n * تحليل مشروع واستخراج الخصائص الإضافية منه\n * @param project المشروع المراد تحليله\n * @returns المشروع المحلل مع خصائصه الإضافية المستخرجة\n */\nexport function analyzeProject(project: Project): Project & {\n  extractedKeywords: string[];\n  extractedTechnologies: string[];\n  extractedDomains: string[];\n  extractedFeatures: string[];\n} {\n  // دمج العنوان والوصف للتحليل\n  const combinedText = `${project.title} ${project.description}`;\n  \n  // استخراج الكلمات المفتاحية\n  const extractedKeywords = extractKeywords(combinedText);\n  \n  // استخراج الكيانات\n  const { technologies, domains, features } = extractEntities(combinedText);\n  \n  return {\n    ...project,\n    extractedKeywords,\n    extractedTechnologies: technologies,\n    extractedDomains: domains,\n    extractedFeatures: features\n  };\n}\n\n/**\n * تحليل ملف شركة واستخراج الخصائص الإضافية منه\n * @param company ملف الشركة المراد تحليله\n * @returns ملف الشركة المحلل مع خصائصه الإضافية المستخرجة\n */\nexport function analyzeCompany(company: CompanyProfile): CompanyProfile & {\n  extractedKeywords: string[];\n  extractedTechnologies: string[];\n  extractedDomains: string[];\n  extractedExpertise: string[];\n} {\n  // استخراج الكلمات المفتاحية من الوصف\n  const extractedKeywords = extractKeywords(company.description || '');\n  \n  // استخراج الكيانات\n  const { technologies, domains, features } = extractEntities(company.description || '');\n  \n  return {\n    ...company,\n    extractedKeywords,\n    extractedTechnologies: technologies,\n    extractedDomains: domains,\n    extractedExpertise: features\n  };\n}\n\n/**\n * حساب درجة التطابق المعززة بين مشروع وشركة\n * يأخذ في الاعتبار المهارات المعلنة والكلمات المفتاحية المستخرجة والكيانات المحددة\n * @param project المشروع المراد مطابقته\n * @param company الشركة المراد مطابقتها\n * @returns درجة التطابق من 0 إلى 1\n */\nexport function calculateEnhancedMatchScore(\n  analyzedProject: ReturnType<typeof analyzeProject>,\n  analyzedCompany: ReturnType<typeof analyzeCompany>\n): {\n  totalScore: number;\n  breakdown: {\n    skillsScore: number;\n    keywordsScore: number;\n    technologiesScore: number;\n    domainsScore: number;\n    featuresScore: number;\n  };\n} {\n  // حساب تطابق المهارات المعلنة (30% من الدرجة الكلية)\n  const skillsScore = calculateJaccardSimilarity(\n    analyzedProject.skills, \n    analyzedCompany.skills\n  );\n  \n  // حساب تطابق الكلمات المفتاحية المستخرجة (20% من الدرجة الكلية)\n  const keywordsScore = calculateJaccardSimilarity(\n    analyzedProject.extractedKeywords,\n    analyzedCompany.extractedKeywords\n  );\n  \n  // حساب تطابق التقنيات (25% من الدرجة الكلية)\n  const technologiesScore = calculateJaccardSimilarity(\n    analyzedProject.extractedTechnologies,\n    analyzedCompany.extractedTechnologies\n  );\n  \n  // حساب تطابق المجالات (15% من الدرجة الكلية)\n  const domainsScore = calculateJaccardSimilarity(\n    analyzedProject.extractedDomains,\n    analyzedCompany.extractedDomains\n  );\n  \n  // حساب تطابق الميزات والخبرات (10% من الدرجة الكلية)\n  const featuresScore = calculateJaccardSimilarity(\n    analyzedProject.extractedFeatures,\n    analyzedCompany.extractedExpertise\n  );\n  \n  // حساب الدرجة الكلية (مرجحة)\n  const totalScore = \n    (skillsScore * 0.3) + \n    (keywordsScore * 0.2) + \n    (technologiesScore * 0.25) + \n    (domainsScore * 0.15) + \n    (featuresScore * 0.1);\n  \n  return {\n    totalScore,\n    breakdown: {\n      skillsScore,\n      keywordsScore,\n      technologiesScore,\n      domainsScore,\n      featuresScore\n    }\n  };\n}\n\n/**\n * الحصول على الشركات المناسبة لمشروع باستخدام التحليل المعزز\n * @param projectId معرف المشروع\n * @param limit عدد النتائج المطلوبة\n * @returns قائمة الشركات الموصى بها مع درجة التطابق ومعلومات التفصيل\n */\nexport async function getEnhancedRecommendationsForProject(\n  projectId: number,\n  limit: number = 5\n): Promise<Array<{\n  company: CompanyProfile;\n  matchScore: number;\n  matchDetails: {\n    skillsScore: number;\n    keywordsScore: number;\n    technologiesScore: number;\n    domainsScore: number;\n    featuresScore: number;\n  };\n}>> {\n  // الحصول على معلومات المشروع\n  const project = await storage.getProject(projectId);\n  if (!project) {\n    return [];\n  }\n  \n  // تحليل المشروع\n  const analyzedProject = analyzeProject(project);\n  \n  // الحصول على جميع الشركات\n  const allCompanies = await storage.getCompanyProfiles();\n  \n  // تحليل كل شركة وحساب درجة التطابق\n  const scoredCompanies = await Promise.all(\n    allCompanies.map(async (company) => {\n      // تحليل الشركة\n      const analyzedCompany = analyzeCompany(company);\n      \n      // حساب درجة التطابق المعززة\n      const { totalScore, breakdown } = calculateEnhancedMatchScore(\n        analyzedProject,\n        analyzedCompany\n      );\n      \n      // عامل إضافي: درجة تقييم الشركة (إذا كانت متوفرة)\n      const ratingFactor = (company.rating || 0) / 5; // تطبيع التقييم إلى مقياس من 0 إلى 1\n      \n      // الصيغة النهائية للتقييم: 90% درجة التطابق + 10% درجة تقييم الشركة\n      const matchScore = (totalScore * 0.9) + (ratingFactor * 0.1);\n      \n      return {\n        company,\n        matchScore,\n        matchDetails: breakdown\n      };\n    })\n  );\n  \n  // ترتيب الشركات حسب درجة التطابق والاكتفاء بالعدد المطلوب\n  return scoredCompanies\n    .sort((a, b) => b.matchScore - a.matchScore)\n    .slice(0, limit);\n}\n\n/**\n * الحصول على المشاريع المناسبة لشركة باستخدام التحليل المعزز\n * @param companyId معرف الشركة\n * @param limit عدد النتائج المطلوبة\n * @returns قائمة المشاريع الموصى بها مع درجة التطابق ومعلومات التفصيل\n */\nexport async function getEnhancedRecommendationsForCompany(\n  companyId: number,\n  limit: number = 5\n): Promise<Array<{\n  project: Project;\n  matchScore: number;\n  matchDetails: {\n    skillsScore: number;\n    keywordsScore: number;\n    technologiesScore: number;\n    domainsScore: number;\n    featuresScore: number;\n  };\n}>> {\n  // الحصول على معلومات الشركة\n  const company = await storage.getCompanyProfile(companyId);\n  if (!company) {\n    return [];\n  }\n  \n  // تحليل الشركة\n  const analyzedCompany = analyzeCompany(company);\n  \n  // الحصول على جميع المشاريع\n  const allProjects = await storage.getProjects();\n  \n  // تحليل كل مشروع وحساب درجة التطابق\n  const scoredProjects = await Promise.all(\n    allProjects.map(async (project) => {\n      // تحليل المشروع\n      const analyzedProject = analyzeProject(project);\n      \n      // حساب درجة التطابق المعززة\n      const { totalScore, breakdown } = calculateEnhancedMatchScore(\n        analyzedProject,\n        analyzedCompany\n      );\n      \n      return {\n        project,\n        matchScore: totalScore,\n        matchDetails: breakdown\n      };\n    })\n  );\n  \n  // ترتيب المشاريع حسب درجة التطابق والاكتفاء بالعدد المطلوب\n  return scoredProjects\n    .sort((a, b) => b.matchScore - a.matchScore)\n    .slice(0, limit);\n}\n\n/**\n * الحصول على المشاريع المشابهة لمشروع معين باستخدام التحليل المعزز\n * @param projectId معرف المشروع\n * @param limit عدد النتائج المطلوبة\n * @returns قائمة المشاريع المشابهة مع درجة التشابه\n */\nexport async function getEnhancedSimilarProjects(\n  projectId: number,\n  limit: number = 3\n): Promise<Array<{\n  project: Project;\n  similarityScore: number;\n  similarityDetails: {\n    skillsScore: number;\n    keywordsScore: number;\n    technologiesScore: number;\n    domainsScore: number;\n    featuresScore: number;\n  };\n}>> {\n  // الحصول على معلومات المشروع\n  const project = await storage.getProject(projectId);\n  if (!project) {\n    return [];\n  }\n  \n  // تحليل المشروع\n  const analyzedSourceProject = analyzeProject(project);\n  \n  // الحصول على جميع المشاريع\n  const allProjects = await storage.getProjects();\n  \n  // تحليل التشابه مع كل مشروع آخر\n  const similarProjects = await Promise.all(\n    allProjects\n      .filter(p => p.id !== projectId) // استبعاد المشروع نفسه\n      .map(async (otherProject) => {\n        // تحليل المشروع الآخر\n        const analyzedOtherProject = analyzeProject(otherProject);\n        \n        // حساب تشابه المهارات (35%)\n        const skillsScore = calculateJaccardSimilarity(\n          analyzedSourceProject.skills,\n          analyzedOtherProject.skills\n        );\n        \n        // حساب تشابه الكلمات المفتاحية (25%)\n        const keywordsScore = calculateJaccardSimilarity(\n          analyzedSourceProject.extractedKeywords,\n          analyzedOtherProject.extractedKeywords\n        );\n        \n        // حساب تشابه التقنيات (20%)\n        const technologiesScore = calculateJaccardSimilarity(\n          analyzedSourceProject.extractedTechnologies,\n          analyzedOtherProject.extractedTechnologies\n        );\n        \n        // حساب تشابه المجالات (15%)\n        const domainsScore = calculateJaccardSimilarity(\n          analyzedSourceProject.extractedDomains,\n          analyzedOtherProject.extractedDomains\n        );\n        \n        // حساب تشابه الميزات (5%)\n        const featuresScore = calculateJaccardSimilarity(\n          analyzedSourceProject.extractedFeatures,\n          analyzedOtherProject.extractedFeatures\n        );\n        \n        // حساب درجة التشابه الكلية\n        const similarityScore = \n          (skillsScore * 0.35) + \n          (keywordsScore * 0.25) + \n          (technologiesScore * 0.2) + \n          (domainsScore * 0.15) + \n          (featuresScore * 0.05);\n        \n        return {\n          project: otherProject,\n          similarityScore,\n          similarityDetails: {\n            skillsScore,\n            keywordsScore,\n            technologiesScore,\n            domainsScore,\n            featuresScore\n          }\n        };\n      })\n  );\n  \n  // ترتيب المشاريع حسب درجة التشابه والاكتفاء بالعدد المطلوب\n  return similarProjects\n    .sort((a, b) => b.similarityScore - a.similarityScore)\n    .slice(0, limit);\n}\n\n/**\n * اكتشاف المجالات الشائعة من المشاريع\n * مفيد لتحليل اتجاهات السوق وعرض فئات رئيسية\n */\nexport async function discoverProjectDomains(): Promise<Array<{\n  domain: string;\n  count: number;\n  averageBudget: string;\n}>> {\n  // الحصول على جميع المشاريع\n  const allProjects = await storage.getProjects();\n  \n  // تحليل كل المشاريع\n  const analyzedProjects = allProjects.map(project => analyzeProject(project));\n  \n  // تجميع المجالات\n  const domainData: Record<string, {count: number; budgetSum: number}> = {};\n  \n  for (const project of analyzedProjects) {\n    for (const domain of project.extractedDomains) {\n      if (!domainData[domain]) {\n        domainData[domain] = { count: 0, budgetSum: 0 };\n      }\n      \n      domainData[domain].count += 1;\n      \n      // محاولة استخراج الميزانية كرقم\n      const budgetNumber = parseInt(project.budget.replace(/[^\\d]/g, ''));\n      if (!isNaN(budgetNumber)) {\n        domainData[domain].budgetSum += budgetNumber;\n      }\n    }\n  }\n  \n  // تحويل البيانات إلى المصفوفة النهائية\n  const domains = Object.entries(domainData)\n    .map(([domain, data]) => ({\n      domain,\n      count: data.count,\n      averageBudget: data.count > 0 \n        ? Math.round(data.budgetSum / data.count).toLocaleString() + ' ريال'\n        : '0 ريال'\n    }))\n    .sort((a, b) => b.count - a.count);\n  \n  return domains;\n}\n\n/**\n * اكتشاف التقنيات الشائعة من المشاريع\n * مفيد لتحليل الطلب على التقنيات المختلفة\n */\nexport async function discoverTrendingTechnologies(): Promise<Array<{\n  technology: string;\n  projectCount: number;\n  companies: number; // عدد الشركات التي تدعم هذه التقنية\n}>> {\n  // الحصول على جميع المشاريع والشركات\n  const allProjects = await storage.getProjects();\n  const allCompanies = await storage.getCompanyProfiles();\n  \n  // تحليل المشاريع والشركات\n  const analyzedProjects = allProjects.map(project => analyzeProject(project));\n  const analyzedCompanies = allCompanies.map(company => analyzeCompany(company));\n  \n  // حساب تكرار التقنيات في المشاريع\n  const techProjectCount: Record<string, number> = {};\n  for (const project of analyzedProjects) {\n    for (const tech of project.extractedTechnologies) {\n      techProjectCount[tech] = (techProjectCount[tech] || 0) + 1;\n    }\n  }\n  \n  // حساب عدد الشركات لكل تقنية\n  const techCompanyCount: Record<string, number> = {};\n  for (const company of analyzedCompanies) {\n    for (const tech of company.extractedTechnologies) {\n      techCompanyCount[tech] = (techCompanyCount[tech] || 0) + 1;\n    }\n  }\n  \n  // دمج البيانات\n  const techData = Object.keys({ ...techProjectCount, ...techCompanyCount })\n    .map(tech => ({\n      technology: tech,\n      projectCount: techProjectCount[tech] || 0,\n      companies: techCompanyCount[tech] || 0\n    }))\n    .sort((a, b) => b.projectCount - a.projectCount);\n  \n  return techData;\n}","size_bytes":18476},"server/analytics.ts":{"content":"import axios from 'axios';\n\n/**\n * وظيفة لإرسال إشعار تحديث خريطة الموقع إلى محركات البحث\n * تستخدم هذه الوظيفة لإخطار محركات البحث عند تحديث المحتوى على الموقع\n * \n * @param sitemapUrl رابط خريطة الموقع الكامل\n */\nexport async function pingSitemapToSearchEngines(sitemapUrl: string): Promise<{\n  google: boolean;\n  bing: boolean;\n}> {\n  try {\n    // إرسال إشعار لجوجل\n    const googlePingUrl = `https://www.google.com/ping?sitemap=${encodeURIComponent(sitemapUrl)}`;\n    const googleResponse = await axios.get(googlePingUrl);\n    const googleSuccess = googleResponse.status === 200;\n\n    // إرسال إشعار لبينج\n    const bingPingUrl = `https://www.bing.com/ping?sitemap=${encodeURIComponent(sitemapUrl)}`;\n    const bingResponse = await axios.get(bingPingUrl);\n    const bingSuccess = bingResponse.status === 200;\n\n    return {\n      google: googleSuccess,\n      bing: bingSuccess\n    };\n  } catch (error) {\n    console.error('فشل في إرسال إشعار تحديث خريطة الموقع:', error);\n    return {\n      google: false,\n      bing: false\n    };\n  }\n}\n\n/**\n * وظيفة للتحقق من حالة ملكية موقع Search Console\n * \n * @param token رمز التحقق من Google Search Console\n */\nexport async function verifySearchConsoleOwnership(token: string): Promise<boolean> {\n  try {\n    // في الواقع، سيكون هناك تكامل مع Google API \n    // لكن في هذه المرحلة، نقوم فقط بتخزين الرمز لاستخدامه في ملف التحقق\n    \n    return true;\n  } catch (error) {\n    console.error('فشل في التحقق من ملكية موقع Search Console:', error);\n    return false;\n  }\n}\n\n/**\n * وظيفة لتحديث إعدادات التحليلات والقياسات\n * \n * @param settings إعدادات التحليلات والقياسات\n */\nexport async function updateAnalyticsSettings(settings: {\n  googleAnalyticsId?: string;\n  googleTagManagerId?: string;\n  enabledAnalytics?: boolean;\n  anonymizeIp?: boolean;\n}): Promise<boolean> {\n  try {\n    // في الواقع، سيتم حفظ هذه الإعدادات في قاعدة البيانات\n    // لكن في هذه المرحلة، نحاكي فقط نجاح العملية\n    \n    return true;\n  } catch (error) {\n    console.error('فشل في تحديث إعدادات التحليلات:', error);\n    return false;\n  }\n}","size_bytes":2543},"server/arabicPdfTest.ts":{"content":"/**\n * وحدة اختبار PDF العربي\n * تحتوي على نقاط نهاية لاختبار عرض وتنزيل PDF عربي\n */\n\nimport { Request, Response, Router } from 'express';\nimport path from 'path';\nimport fs from 'fs';\nimport PDFKit from 'pdfkit';\n// تعريف نوع PDFDocument كـ any لتجنب مشاكل TypeScript\ntype PDFDocument = any;\nimport arabicReshaper from 'arabic-reshaper';\nimport bidi from 'bidi-js';\n\n// إنشاء موجه للمسارات\nconst router = Router();\n\n/**\n * دالة ذكية لعكس ترتيب الكلمات مع الحفاظ على علامات الترقيم في مكانها الصحيح\n * @param text النص المراد عكس كلماته\n * @returns النص بعد عكس ترتيب كلماته\n */\nfunction reverseWordsSmart(text: string): string {\n  const words = text.split(' ');\n  const reversed = [];\n\n  for (let i = words.length - 1; i >= 0; i--) {\n    // فصل العلامة إن وجدت ملتصقة بالكلمة\n    const match = words[i].match(/^(.+?)([.,،؛:]?)$/);\n    if (match) {\n      const [, word, punctuation] = match;\n      reversed.push(`${word}${punctuation}`);\n    } else {\n      reversed.push(words[i]);\n    }\n  }\n\n  return reversed.join(' ');\n}\n\n/**\n * دالة لتقسيم النص الطويل إلى أسطر مناسبة وعكس ترتيب الكلمات في كل سطر\n * @param text النص المراد تقسيمه\n * @param wordsPerLine عدد الكلمات في كل سطر\n * @returns مصفوفة من الأسطر المقسمة بعد عكس ترتيب الكلمات\n */\nfunction splitAndReverseParagraph(\n  text: string,\n  wordsPerLine = 10\n): string[] {\n  const words = text.split(' ');\n  const lines: string[] = [];\n\n  for (let i = 0; i < words.length; i += wordsPerLine) {\n    const slice = words.slice(i, i + wordsPerLine);\n    lines.push(slice.reverse().join(' '));\n  }\n\n  return lines;\n}\n\n// مساعدة لإعادة تشكيل النص العربي باستخدام النهج المحسن\nfunction toArabic(text: string): string {\n  try {\n    // استخدام الدالة الذكية لعكس ترتيب الكلمات\n    return reverseWordsSmart(text);\n  } catch (error) {\n    console.error('خطأ في معالجة النص العربي:', error);\n    return text; // إرجاع النص الأصلي في حالة الخطأ\n  }\n}\n\n// إنشاء مستند PDF عربي\nfunction createArabicPdf(doc: any) {\n  // تحميل الخط العربي - استخدام المسار النسبي للخط المتضمن في المشروع\n  const fontPath = path.join(__dirname, 'fonts', 'Cairo-Regular.ttf');\n  \n  // طباعة مسار الخط للتحقق\n  console.log('مسار ملف الخط المستخدم:', fontPath);\n  \n  // التحقق من وجود ملف الخط\n  if (fs.existsSync(fontPath)) {\n    console.log('تم العثور على ملف الخط بنجاح في مسار:', fontPath);\n    doc.font(fontPath);\n  } else {\n    console.warn('لم يتم العثور على ملف الخط في المسار:', fontPath);\n    // استمر بالخط الافتراضي\n  }\n  \n  // حساب عرض الصفحة المتاح للكتابة\n  const pageWidth = doc.page.width - (doc.page.margins as any).left - (doc.page.margins as any).right;\n  \n  // إضافة العنوان\n  doc.fontSize(24);\n  doc.text(toArabic('اتفاقية عدم إفصاح'), {\n    align: 'center'\n  });\n  doc.moveDown();\n  \n  // إضافة محتوى رئيسي\n  doc.fontSize(14);\n  \n  const content = `\nبموجب هذه الاتفاقية، يلتزم الطرف الثاني بالحفاظ على سرية جميع المعلومات المتعلقة بالمشروع،\nوعدم مشاركتها مع أي طرف ثالث دون إذن كتابي مسبق من الطرف الأول.\n\nتسري هذه الاتفاقية اعتباراً من تاريخ التوقيع الإلكتروني عليها، وتشمل جميع المراسلات\nوالمستندات والمعلومات التي يتم تبادلها بين الطرفين لغرض تنفيذ المشروع.\n\nفي حال الإخلال بأي من بنود هذه الاتفاقية، يحق للطرف المتضرر اتخاذ كافة الإجراءات القانونية\nاللازمة لحماية مصالحه وحقوقه.\n  `;\n  \n  // معالجة كل سطر على حدة للحصول على أفضل نتيجة\n  const lines = content.trim().split('\\n');\n  lines.forEach(line => {\n    if (line.trim()) {\n      // تقسيم النص الطويل إلى أسطر قصيرة وعكس ترتيب الكلمات\n      const splitLines = splitAndReverseParagraph(line, 10);\n      \n      // إضافة السطر الأول\n      doc.text(splitLines[0], {\n        align: 'right',\n        lineGap: 5\n      });\n      \n      // إضافة باقي الأسطر مع هامش للإشارة إلى أنها تابعة للفقرة السابقة\n      if (splitLines.length > 1) {\n        for (let i = 1; i < splitLines.length; i++) {\n          doc.text(splitLines[i], {\n            align: 'right',\n            lineGap: 5,\n            indent: 20 // إضافة مسافة بادئة للأسطر التابعة\n          });\n        }\n      }\n    } else {\n      doc.moveDown(0.5);\n    }\n  });\n  \n  // معلومات التواقيع\n  doc.moveDown();\n  doc.fontSize(12);\n  doc.text(toArabic('الطرف الأول: منصة لينكتك (https://linktech.app)'), {\n    align: 'right'\n  });\n  doc.moveDown();\n  doc.text(toArabic('الطرف الثاني: ______________________'), {\n    align: 'right'\n  });\n  doc.moveDown();\n  \n  // التاريخ\n  const today = new Date();\n  const dateStr = today.toISOString().split('T')[0];\n  doc.text(toArabic(`تاريخ التوقيع: ${dateStr}`), {\n    align: 'right'\n  });\n  \n  // إضافة اختبار الأرقام\n  doc.moveDown(2);\n  doc.text(toArabic('اختبار أرقام: ١٢٣٤٥٦٧٨٩٠'), {\n    align: 'right'\n  });\n}\n\n// صفحة HTML تحتوي على زر تنزيل وعرض لملف PDF\nrouter.get('/arabic-pdf-test', (req: Request, res: Response) => {\n  res.send(`\n    <!DOCTYPE html>\n    <html lang=\"ar\" dir=\"rtl\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>اختبار PDF باللغة العربية</title>\n      <style>\n        body {\n          font-family: Arial, sans-serif;\n          max-width: 800px;\n          margin: 0 auto;\n          padding: 20px;\n          text-align: center;\n        }\n        h1 {\n          color: #333;\n        }\n        .btn {\n          display: inline-block;\n          margin: 10px;\n          padding: 12px 30px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 18px;\n          text-decoration: none;\n          color: white;\n        }\n        .download-btn {\n          background-color: #4CAF50;\n        }\n        .view-btn {\n          background-color: #2196F3;\n        }\n        .option {\n          margin: 30px 0;\n          padding: 20px;\n          border: 1px solid #ddd;\n          border-radius: 8px;\n        }\n      </style>\n    </head>\n    <body>\n      <h1>اختبار عرض النصوص العربية في ملفات PDF</h1>\n      \n      <div class=\"option\">\n        <h2>الخيار 1: عرض PDF في المتصفح</h2>\n        <p>سيتم عرض ملف PDF مباشرة في المتصفح</p>\n        <a href=\"/api/view-arabic-pdf\" class=\"btn view-btn\" target=\"_blank\">عرض الملف</a>\n      </div>\n      \n      <div class=\"option\">\n        <h2>الخيار 2: تنزيل PDF</h2>\n        <p>سيتم تنزيل ملف PDF للاحتفاظ به على جهازك</p>\n        <a href=\"/api/test-arabic-pdf\" class=\"btn download-btn\">تنزيل الملف</a>\n      </div>\n    </body>\n    </html>\n  `);\n});\n\n// نقطة نهاية جديدة لعرض ملف PDF مباشرة في المتصفح\nrouter.get('/api/view-arabic-pdf', async (req: Request, res: Response) => {\n  try {\n    console.log('اختبار إنشاء PDF باللغة العربية - عرض مباشر');\n    \n    // إنشاء وثيقة PDF جديدة\n    const doc = new PDFKit({\n      size: 'A4',\n      margin: 50,\n      info: {\n        Title: 'اختبار دعم اللغة العربية',\n        Author: 'لينكتك',\n        Subject: 'اختبار توليد ملفات PDF بالعربية',\n      }\n    });\n    \n    // إعداد رأس الاستجابة لعرض PDF مباشرة في المتصفح\n    res.setHeader('Content-Type', 'application/pdf');\n    res.setHeader('Content-Disposition', 'inline; filename=arabic-test.pdf');\n    \n    // توجيه مخرجات PDF مباشرة إلى الاستجابة\n    doc.pipe(res);\n    \n    // إضافة محتوى PDF\n    createArabicPdf(doc);\n    \n    // إنهاء المستند\n    doc.end();\n    \n  } catch (error) {\n    console.error('خطأ في إنشاء PDF للاختبار (عرض):', error);\n    res.status(500).json({ message: 'حدث خطأ أثناء إنشاء PDF للاختبار' });\n  }\n});\n\n// نقطة نهاية لاختبار تنزيل ملف PDF باللغة العربية\nrouter.get('/api/test-arabic-pdf', async (req: Request, res: Response) => {\n  try {\n    console.log('اختبار إنشاء PDF باللغة العربية للتنزيل');\n    \n    // إنشاء وثيقة PDF جديدة مع دعم اللغة العربية\n    const doc = new PDFKit({\n      size: 'A4',\n      margin: 50,\n      info: {\n        Title: 'وثيقة اختبار اللغة العربية',\n        Author: 'منصة لينكتك',\n        Subject: 'اختبار',\n      }\n    });\n\n    // إعداد رأس الاستجابة للتنزيل - استخدام \"attachment\" بدلاً من \"inline\"\n    // واستخدام اسم ملف عربي مع ترميز لضمان التوافق مع المتصفحات\n    res.setHeader('Content-Type', 'application/pdf');\n    const fileName = encodeURIComponent('اختبار_النص_العربي.pdf');\n    res.setHeader('Content-Disposition', `attachment; filename=${fileName}; filename*=UTF-8''${fileName}`);\n    \n    // توجيه مخرجات PDF مباشرة إلى الاستجابة\n    doc.pipe(res);\n    \n    // إضافة محتوى PDF\n    createArabicPdf(doc);\n    \n    // إنهاء المستند\n    doc.end();\n    \n  } catch (error) {\n    console.error('خطأ في إنشاء PDF للاختبار:', error);\n    res.status(500).json({ message: 'حدث خطأ أثناء إنشاء PDF للاختبار' });\n  }\n});\n\nexport default router;","size_bytes":10625},"server/contentFilter.ts":{"content":"/**\n * وحدة تصفية المحتوى\n * تستخدم للتحقق من المحتوى وحظر إرسال معلومات التواصل في المحادثات\n * تتضمن حماية من محاولات تمرير معلومات الاتصال عبر رسائل متعددة\n */\n\n// هيكل لتخزين الرسائل الأخيرة بين المستخدمين لكشف محاولات تجاوز الفلتر\ninterface ConversationHistory {\n  userId1: number;\n  userId2: number;\n  messages: {\n    content: string;\n    timestamp: number;\n  }[];\n}\n\n// تخزين تاريخ المحادثات للكشف عن محاولات تجاوز الفلتر\nconst conversationHistories: ConversationHistory[] = [];\n\n// عدد الرسائل التي يتم الاحتفاظ بها في التاريخ (للمستخدمين المتحادثين)\nconst MESSAGE_HISTORY_LIMIT = 5;\n\n// الحد الأقصى للوقت بين الرسائل لاعتبارها متسلسلة (بالمللي ثانية)\nconst MAX_SEQUENTIAL_MESSAGE_TIME = 60000; // دقيقة واحدة\n\n/**\n * تعبيرات منتظمة للكشف عن أنماط معلومات التواصل الشائعة\n */\n \n// قاموس تحويل الأرقام المكتوبة باللغة العربية إلى أرقام\nconst arabicWordsToDigits: Record<string, string> = {\n  صفر: '0',\n  زيرو: '0',\n  واحد: '1',\n  اثنين: '2',\n  اثنان: '2',\n  إثنين: '2',\n  ثلاثة: '3',\n  ثلاث: '3',\n  ثلاثه: '3',\n  اربعة: '4',\n  اربع: '4',\n  أربعة: '4',\n  أربع: '4',\n  خمسة: '5',\n  خمس: '5',\n  خمسه: '5',\n  ستة: '6',\n  ست: '6',\n  سته: '6',\n  سبعة: '7',\n  سبع: '7',\n  سبعه: '7',\n  ثمانية: '8',\n  ثمان: '8',\n  ثمانيه: '8',\n  تسعة: '9',\n  تسع: '9',\n  تسعه: '9'\n};\n\n// قاموس تحويل الأرقام العربية إلى الأرقام الإنجليزية\nconst arabicDigitsMap: Record<string, string> = {\n  '٠': '0',\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9'\n};\n\nconst contentFilters = {\n  // أرقام الهواتف بصيغ مختلفة\n  phoneNumbers: [\n    /\\b\\d{10}\\b/g, // 5551234567\n    /\\b\\d{3}[-.\\s]?\\d{3}[-.\\s]?\\d{4}\\b/g, // 555-123-4567 or 555.123.4567 or 555 123 4567\n    /\\b\\(\\d{3}\\)[-.\\s]?\\d{3}[-.\\s]?\\d{4}\\b/g, // (555)-123-4567\n    /\\b\\+?\\d{1,3}[-.\\s]?\\d{3}[-.\\s]?\\d{3}[-.\\s]?\\d{4}\\b/g, // +1-555-123-4567 or +966555123456\n    /\\b\\+?\\d{1,3}[-.\\s]?\\d{9,10}\\b/g, // +1-5551234567 or +9665551234567\n    /\\b05\\d{8}\\b/g, // 05xxxxxxxx (Saudi format)\n    /\\b5\\d{8}\\b/g, // 5xxxxxxxx (Saudi format without leading 0)\n    /\\+?\\d{4,15}\\b/g, // أي رقم بين 4 و15 رقم متتالي مع احتمال وجود + في البداية \n    // كشف أنماط الأرقام المشفرة\n    /\\b[0٠]?[5٥][0٠\\s-]*[5٥6٦7٧8٨9٩][0٠\\s-]*\\d[\\s0-9٠١٢٣٤٥٦٧٨٩-]{7,}\\b/g, // أرقام سعودية مع احتمال استخدام أرقام عربية\n    /\\b[0٠]?[5٥][\\s-]*\\d{8}\\b/g, // الرقم السعودي مع مسافات أو شرطات\n  ],\n  \n  // عناوين البريد الإلكتروني\n  emails: [\n    /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b/g,\n    // أنماط مخفية للبريد الإلكتروني\n    /\\b[A-Za-z0-9._%+-]+\\s*[\\[\\(]at[\\]\\)]\\s*[A-Za-z0-9.-]+\\s*[\\[\\(]dot[\\]\\)]\\s*[A-Za-z]{2,}\\b/gi, // example [at] domain [dot] com\n    /\\b[A-Za-z0-9._%+-]+\\s*\\{\\{at\\}\\}\\s*[A-Za-z0-9.-]+\\s*\\{\\{dot\\}\\}\\s*[A-Za-z]{2,}\\b/gi, // example{{at}}domain{{dot}}com\n  ],\n  \n  // حسابات مواقع التواصل الاجتماعي\n  socialAccounts: [\n    /\\b(wa\\.me|whatsapp\\.com|t\\.me|telegram\\.me)\\/[a-zA-Z0-9_\\.]+\\b/g, // واتساب وتليجرام\n    /\\b@[a-zA-Z0-9_.]{1,30}\\b/g, // معرفات تويتر وإنستجرام\n    /\\b(instagram\\.com|twitter\\.com|x\\.com|facebook\\.com|fb\\.com|snap\\.chat|snapchat\\.com)\\/[a-zA-Z0-9_.]+\\b/g, // روابط مواقع التواصل\n    /\\btwitter\\.com\\/[a-zA-Z0-9_]{1,15}\\b/g,\n    /\\binstagram\\.com\\/[a-zA-Z0-9_.]{1,30}\\b/g,\n    /\\bfacebook\\.com\\/[a-zA-Z0-9.]{5,50}\\b/g,\n    /\\bsnapchat\\.com\\/add\\/[a-zA-Z0-9_.]{3,15}\\b/g,\n    /\\blinkedin\\.com\\/in\\/[a-zA-Z0-9_-]{5,30}\\b/g,\n    // معرفات مواقع تواصل مخفية\n    /\\b(انستا|انستغرام|تويتر|تلغرام|تلجرام|فيسبوك|سناب|لينكد)[\\s:]+[a-zA-Z0-9_.]{3,30}\\b/g, // الاسم بالعربي متبوع بالمعرف\n  ],\n\n  // روابط مواقع خارجية (استثناء المواقع المعروفة مثل github.com, youtube.com)\n  externalLinks: [\n    /\\b(https?:\\/\\/|www\\.)[a-zA-Z0-9][-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?![-a-zA-Z0-9()@:%_\\+.~#?&//=]*(?:github\\.com|youtube\\.com))/g,\n  ],\n  \n  // كلمات مفتاحية تشير إلى محاولة مشاركة معلومات الاتصال\n  contactKeywords: [\n    /\\b(اتصل\\s+ب|اتصلوا\\s+ب|اتصال|للتواصل|تواصل\\s+مع|تواصلوا\\s+مع|واتساب|واتس\\s+اب|الواتس|جوال|رقم|موبايل|تلفون|هاتف|ارقام|ايميل|ايميلي|بريدي|الالكتروني|الإلكتروني|انستغرام|انستقرام|سناب|سناب\\s+شات|اضفني)\\b/g,\n    /\\b(call\\s+me|contact\\s+me|reach\\s+me|my\\s+number|my\\s+email|my\\s+whatsapp|my\\s+snap|my\\s+insta|my\\s+handle)\\b/gi\n  ]\n};\n\n/**\n * تحويل الأرقام العربية (٠١٢٣٤٥٦٧٨٩) إلى أرقام إنجليزية (0123456789)\n * @param text النص المراد تحويله\n * @returns النص بعد تحويل الأرقام العربية إلى إنجليزية\n */\nfunction convertArabicDigitsToEnglish(text: string): string {\n  if (!text) return '';\n  \n  // تحويل كل رقم عربي إلى ما يقابله بالإنجليزية\n  return text.replace(/[٠١٢٣٤٥٦٧٨٩]/g, (match) => {\n    return arabicDigitsMap[match] || match;\n  });\n}\n\n/**\n * تحويل الكلمات العربية التي تمثل أرقامًا إلى أرقام\n * @param text النص المراد فحصه\n * @returns نص بعد تحويل كلمات الأرقام العربية إلى أرقام فعلية\n */\nfunction convertArabicWordsToDigits(text: string): string {\n  // تحويل الأرقام العربية إلى إنجليزية أولاً\n  const textWithEnglishDigits = convertArabicDigitsToEnglish(text);\n  \n  // تعديل النص لتسهيل التعرف على الكلمات\n  // إزالة علامات الترقيم والمسافات المتعددة\n  const processedText = textWithEnglishDigits.replace(/[.\\-,،+\\/\\\\]/g, ' ').replace(/\\s+/g, ' ');\n  \n  // تقسيم النص إلى كلمات\n  const words = processedText.split(/\\s+/);\n  let result = '';\n  let consecutiveDigits = '';\n  let digitCount = 0;\n  \n  for (let i = 0; i < words.length; i++) {\n    // تطهير الكلمة من أي رموز غير مرغوب بها\n    const word = words[i].trim().replace(/[^\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\w]/g, '');\n    \n    // البحث عن كلمة في قاموس تحويل الأرقام\n    const digit = arabicWordsToDigits[word];\n    \n    if (digit) {\n      consecutiveDigits += digit;\n      digitCount++;\n    } else {\n      // فحص إذا كانت الكلمة تحتوي أرقام مباشرة (للتعامل مع حالات مثل \"رقم5\")\n      const extractedDigits = word.match(/\\d+/g);\n      if (extractedDigits) {\n        for (const num of extractedDigits) {\n          consecutiveDigits += num;\n          digitCount += num.length;\n        }\n      } else {\n        // إذا كانت هناك مسافة أو فاصل ولدينا أرقام متتالية كافية، نضيفها للنتيجة\n        if (consecutiveDigits.length >= 4) {\n          // إذا كان لدينا رقم سعودي محتمل (يبدأ بـ \"0\" أو \"5\")\n          if (consecutiveDigits.match(/^0?5/) && consecutiveDigits.length >= 9) {\n            result += ' ' + consecutiveDigits + ' ';\n          } \n          // أو إذا كان لدينا رقم طويل (5+ أرقام)\n          else if (consecutiveDigits.length >= 5) {\n            result += ' ' + consecutiveDigits + ' ';\n          }\n        }\n        consecutiveDigits = '';\n        digitCount = 0;\n      }\n    }\n    \n    // إذا وصلنا إلى 10 أو أكثر من الأرقام المتتالية، نضيفها للنتيجة ونبدأ من جديد\n    if (consecutiveDigits.length >= 10) {\n      result += ' ' + consecutiveDigits + ' ';\n      consecutiveDigits = '';\n      digitCount = 0;\n    }\n  }\n  \n  // التحقق من الأرقام المتبقية في النهاية\n  if (consecutiveDigits.length >= 4) {\n    // إذا كان لدينا رقم سعودي محتمل (يبدأ بـ \"0\" أو \"5\")\n    if (consecutiveDigits.match(/^0?5/) && consecutiveDigits.length >= 9) {\n      result += ' ' + consecutiveDigits + ' ';\n    } \n    // أو إذا كان لدينا رقم طويل (5+ أرقام)\n    else if (consecutiveDigits.length >= 5) {\n      result += ' ' + consecutiveDigits + ' ';\n    }\n  }\n  \n  return result;\n}\n\n/**\n * البحث عن أنماط أرقام الهواتف السعودية في النص\n * @param text النص المراد فحصه\n * @returns هل يحتوي النص على نمط يشبه رقم هاتف سعودي\n */\nfunction detectSaudiPhoneNumberPatterns(text: string): boolean {\n  // التأكد من تحويل الأرقام العربية إلى إنجليزية\n  const convertedText = convertArabicDigitsToEnglish(text);\n  \n  // أنماط مختلفة لأرقام الهواتف السعودية\n  const patterns = [\n    /\\b[0٠]?[5٥]\\d{8}\\b/g, // 05xxxxxxxx or 5xxxxxxxx (يدعم الرقم 0 أو ٠ والرقم 5 أو ٥)\n    /\\b[0٠]?[5٥][\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g, // 05-xxxx-xxxx or 5 xxxx xxxx\n    /\\b\\+9665\\d{8}\\b/g, // +9665xxxxxxxx\n    /\\b\\+966[\\s-]?[5٥][\\s-]?\\d{8}\\b/g, // +966-5-xxxxxxxx or +966 5 xxxxxxxx\n    /\\b9665\\d{8}\\b/g, // 9665xxxxxxxx\n    /\\b966[\\s-]?[5٥][\\s-]?\\d{8}\\b/g, // 966-5-xxxxxxxx or 966 5 xxxxxxxx\n    // أنماط تتضمن الأرقام العربية\n    /\\b[0٠]?[5٥][٠١٢٣٤٥٦٧٨٩]{8}\\b/g, // ٠٥xxxxxxxx أو ٥xxxxxxxx بالأرقام العربية\n    /\\b[0٠]?[5٥][\\s-]?[٠١٢٣٤٥٦٧٨٩]{4}[\\s-]?[٠١٢٣٤٥٦٧٨٩]{4}\\b/g, // ٠٥-xxxx-xxxx أو ٥ xxxx xxxx بالأرقام العربية\n  ];\n  \n  // فحص النص الأصلي (قد يحتوي على أرقام عربية)\n  for (const pattern of patterns) {\n    if (pattern.test(text)) {\n      return true;\n    }\n  }\n  \n  // فحص النص بعد تحويل الأرقام العربية إلى إنجليزية\n  if (convertedText !== text) {\n    const englishPatterns = [\n      /\\b0?5\\d{8}\\b/g, // 05xxxxxxxx or 5xxxxxxxx\n      /\\b0?5[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g, // 05-xxxx-xxxx or 5 xxxx xxxx\n      /\\b\\+9665\\d{8}\\b/g, // +9665xxxxxxxx\n      /\\b\\+966[\\s-]?5[\\s-]?\\d{8}\\b/g, // +966-5-xxxxxxxx or +966 5 xxxxxxxx\n      /\\b9665\\d{8}\\b/g, // 9665xxxxxxxx\n      /\\b966[\\s-]?5[\\s-]?\\d{8}\\b/g // 966-5-xxxxxxxx or 966 5 xxxxxxxx\n    ];\n    \n    for (const pattern of englishPatterns) {\n      if (pattern.test(convertedText)) {\n        return true;\n      }\n    }\n  }\n  \n  return false;\n}\n\n/**\n * التحقق من احتمالية أن يحتوي النص على رقم مخفي\n * هذه الدالة تقوم بفحوصات إضافية للنص للبحث عن أنماط غير عادية\n * مثل النصوص التي تحتوي على عدد كبير من الأرقام أو كلمات تمثل أرقام\n */\nfunction detectSuspiciousNumberPatterns(text: string): boolean {\n  // التأكد من تحويل الأرقام العربية إلى إنجليزية\n  const convertedText = convertArabicDigitsToEnglish(text);\n  \n  // عدد الأرقام المتتالية الذي يعتبر مشبوهًا\n  const SUSPICIOUS_DIGIT_COUNT = 5;\n  \n  // فحص إذا كان النص يحتوي على كلمات دالة على أرقام متبوعة بأرقام (عربية أو إنجليزية)\n  const phoneKeywordsPattern = /\\b(رقم|جوال|موبايل|هاتف|تلفون|اتصال|واتس|واتساب|whatsapp)[\\s:]*[\\d٠١٢٣٤٥٦٧٨٩]+/gi;\n  if (phoneKeywordsPattern.test(text)) {\n    return true;\n  }\n  \n  // فحص إذا كان النص الأصلي يحتوي على أرقام عربية\n  const arabicDigitCount = (text.match(/[٠١٢٣٤٥٦٧٨٩]/g) || []).length;\n  \n  // فحص إذا كان النص المحول يحتوي على أكثر من خمسة أرقام إنجليزية\n  const englishDigitCount = (convertedText.match(/\\d/g) || []).length;\n  const totalDigitCount = englishDigitCount + arabicDigitCount - englishDigitCount; // نتجنب العد المزدوج\n  \n  if (totalDigitCount >= SUSPICIOUS_DIGIT_COUNT) {\n    // فحص إضافي: إذا كانت هذه الأرقام تشكل نسبة كبيرة من النص\n    const textLength = text.length;\n    const digitRatio = totalDigitCount / textLength;\n    \n    // إذا كانت نسبة الأرقام أكثر من 15% من النص، فهذا مشبوه\n    if (digitRatio > 0.15) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\n/**\n * الحصول على سجل المحادثة بين مستخدمين أو إنشاء سجل جديد\n * @param userId1 معرف المستخدم الأول\n * @param userId2 معرف المستخدم الثاني\n * @returns سجل المحادثة\n */\nfunction getOrCreateConversationHistory(userId1: number, userId2: number): ConversationHistory {\n  // ترتيب المعرفات لضمان التناسق في البحث والتخزين\n  const [smallerId, largerId] = userId1 < userId2 ? [userId1, userId2] : [userId2, userId1];\n  \n  // البحث عن سجل محادثة موجود\n  let history = conversationHistories.find(\n    h => h.userId1 === smallerId && h.userId2 === largerId\n  );\n  \n  // إنشاء سجل جديد إذا لم يكن موجوداً\n  if (!history) {\n    history = { userId1: smallerId, userId2: largerId, messages: [] };\n    conversationHistories.push(history);\n  }\n  \n  return history;\n}\n\n/**\n * إضافة رسالة إلى سجل المحادثة\n * @param fromUserId معرف المرسل\n * @param toUserId معرف المستقبل\n * @param messageContent محتوى الرسالة\n */\nexport function addMessageToConversationHistory(fromUserId: number, toUserId: number, messageContent: string): void {\n  const history = getOrCreateConversationHistory(fromUserId, toUserId);\n  \n  // إضافة الرسالة الجديدة\n  history.messages.push({\n    content: messageContent,\n    timestamp: Date.now()\n  });\n  \n  // الاحتفاظ فقط بالرسائل الحديثة حسب الحد المحدد\n  if (history.messages.length > MESSAGE_HISTORY_LIMIT) {\n    history.messages = history.messages.slice(history.messages.length - MESSAGE_HISTORY_LIMIT);\n  }\n}\n\n/**\n * البحث عن أنماط مشبوهة في تسلسل الرسائل\n * مثل محاولة تقسيم رقم على عدة رسائل\n * @param fromUserId معرف المرسل\n * @param toUserId معرف المستقبل\n * @param currentMessage الرسالة الحالية\n * @returns إذا كان هناك نمط مشبوه\n */\nfunction detectSuspiciousSequentialPatterns(fromUserId: number, toUserId: number, currentMessage: string): boolean {\n  const history = getOrCreateConversationHistory(fromUserId, toUserId);\n  \n  // إذا لم يكن هناك رسائل سابقة، فلا يمكن أن يكون هناك نمط تسلسلي\n  if (history.messages.length === 0) {\n    return false;\n  }\n  \n  // جمع الرسائل الأخيرة التي تم إرسالها في فترة زمنية متقاربة\n  const now = Date.now();\n  const recentMessages = history.messages.filter(\n    msg => (now - msg.timestamp) <= MAX_SEQUENTIAL_MESSAGE_TIME\n  );\n  \n  // إضافة الرسالة الحالية\n  recentMessages.push({ content: currentMessage, timestamp: now });\n  \n  // إذا كان لدينا عدة رسائل متتالية، نقوم بفحصها\n  if (recentMessages.length >= 2) {\n    // استخراج الأرقام من جميع الرسائل\n    let combinedText = recentMessages.map(msg => msg.content).join(' ');\n    \n    // تحويل كلمات الأرقام العربية إلى أرقام في النص المجمع\n    const convertedCombinedText = convertArabicWordsToDigits(combinedText);\n    \n    // البحث عن أنماط أرقام الهواتف في النص المجمع\n    if (detectSaudiPhoneNumberPatterns(combinedText) || \n        (convertedCombinedText.trim().length > 0 && detectSaudiPhoneNumberPatterns(convertedCombinedText))) {\n      return true;\n    }\n    \n    // البحث عن كميات كبيرة من الأرقام في الرسائل المجمعة\n    if (detectSuspiciousNumberPatterns(combinedText) || \n        (convertedCombinedText.trim().length > 0 && detectSuspiciousNumberPatterns(convertedCombinedText))) {\n      return true;\n    }\n    \n    // البحث عن أجزاء من الأرقام التي تكمل بعضها\n    const digits = combinedText.match(/\\d+/g) || [];\n    if (digits.length >= 2) {\n      const combinedDigits = digits.join('');\n      // التحقق إذا كان الناتج يشبه رقم هاتف (8-10 أرقام)\n      if (combinedDigits.length >= 8 && combinedDigits.length <= 15) {\n        return true;\n      }\n    }\n  }\n  \n  return false;\n}\n\n/**\n * التحقق من نص ما إذا كان يحتوي على معلومات تواصل محظورة\n * @param text النص المراد فحصه\n * @param fromUserId معرف المرسل (اختياري - للتحقق من الأنماط المتسلسلة)\n * @param toUserId معرف المستقبل (اختياري - للتحقق من الأنماط المتسلسلة)\n * @returns حالة النص (آمن أم لا) ونوع المعلومات المحظورة إن وجدت\n */\nexport function checkMessageForProhibitedContent(\n  text: string, \n  fromUserId?: number, \n  toUserId?: number\n): { safe: boolean; violations?: string[] } {\n  if (!text || typeof text !== 'string') {\n    return { safe: true };\n  }\n\n  const violations: string[] = [];\n  \n  // تحويل الأرقام العربية إلى أرقام إنجليزية\n  const textWithEnglishDigits = convertArabicDigitsToEnglish(text);\n  \n  // تحويل كلمات الأرقام العربية إلى أرقام\n  const convertedText = convertArabicWordsToDigits(text);\n  \n  // طباعة النص المحول للتأكد من عمل الدالة\n  console.log('النص المحول من الكلمات العربية:', convertedText);\n  \n  // التحقق من وجود أرقام عربية في النص الأصلي\n  if (text !== textWithEnglishDigits) {\n    console.log('النص يحتوي على أرقام عربية:', textWithEnglishDigits);\n    \n    // التحقق مباشرة إذا كان النص الأصلي يحتوي على أرقام عربية تشكل رقم هاتف\n    if (detectSaudiPhoneNumberPatterns(text)) {\n      violations.push('رقم_هاتف_عربي');\n    }\n  }\n  \n  // التحقق من أرقام الهواتف في النص الأصلي والنص المحول\n  if (violations.length === 0) {\n    // فحص النص الأصلي\n    for (const pattern of contentFilters.phoneNumbers) {\n      if (pattern.test(text)) {\n        violations.push('رقم_هاتف');\n        break;\n      }\n    }\n    \n    // فحص النص بعد تحويل الأرقام العربية إلى إنجليزية\n    if (violations.length === 0 && text !== textWithEnglishDigits) {\n      for (const pattern of contentFilters.phoneNumbers) {\n        if (pattern.test(textWithEnglishDigits)) {\n          violations.push('رقم_هاتف_أرقام_عربية');\n          break;\n        }\n      }\n    }\n    \n    // التحقق من أنماط أرقام الهواتف السعودية في النص المحول من كلمات عربية\n    if (violations.length === 0 && convertedText.trim().length > 0) {\n      if (detectSaudiPhoneNumberPatterns(convertedText)) {\n        violations.push('رقم_هاتف_مكتوب_نصياً');\n      }\n      \n      // نمط عام للأرقام الطويلة (5+ أرقام متتالية)\n      const longNumberPattern = /\\b\\d{5,}\\b/g;\n      if (longNumberPattern.test(convertedText)) {\n        violations.push('رقم_محتمل_مكتوب_نصياً');\n      }\n    }\n  }\n  \n  // فحص إضافي للأنماط المشبوهة إذا لم نجد انتهاكات سابقة\n  if (violations.length === 0) {\n    if (detectSuspiciousNumberPatterns(text) || \n        detectSuspiciousNumberPatterns(textWithEnglishDigits) || \n        (convertedText.trim().length > 0 && detectSuspiciousNumberPatterns(convertedText))) {\n      violations.push('نمط_مشبوه_محتمل_مشاركة_رقم');\n    }\n  }\n\n  // التحقق من البريد الإلكتروني\n  for (const pattern of contentFilters.emails) {\n    if (pattern.test(text)) {\n      violations.push('بريد_إلكتروني');\n      break;\n    }\n  }\n\n  // التحقق من حسابات التواصل الاجتماعي\n  for (const pattern of contentFilters.socialAccounts) {\n    if (pattern.test(text)) {\n      violations.push('حساب_تواصل_اجتماعي');\n      break;\n    }\n  }\n\n  // التحقق من الروابط الخارجية\n  for (const pattern of contentFilters.externalLinks) {\n    if (pattern.test(text)) {\n      violations.push('رابط_خارجي');\n      break;\n    }\n  }\n  \n  // التحقق من الكلمات المفتاحية التي تشير إلى محاولة مشاركة معلومات الاتصال\n  for (const pattern of contentFilters.contactKeywords) {\n    if (pattern.test(text)) {\n      violations.push('محاولة_مشاركة_معلومات_اتصال');\n      break;\n    }\n  }\n  \n  // التحقق من الأنماط المتسلسلة (إذا تم تقديم معرفات المستخدمين)\n  if (fromUserId && toUserId) {\n    if (detectSuspiciousSequentialPatterns(fromUserId, toUserId, text)) {\n      violations.push('نمط_متسلسل_مشبوه');\n      \n      // طباعة إشعار (يمكن إزالته في الإنتاج)\n      console.log(`تم اكتشاف نمط متسلسل مشبوه بين المستخدمين ${fromUserId} و ${toUserId}`);\n    }\n  }\n\n  return {\n    safe: violations.length === 0,\n    violations: violations.length > 0 ? violations : undefined\n  };\n}\n\n/**\n * تنظيف محتوى الرسالة من المعلومات المحظورة\n * @param text محتوى الرسالة الأصلي\n * @param fromUserId معرف المرسل (اختياري - للتحقق من الأنماط المتسلسلة)\n * @param toUserId معرف المستقبل (اختياري - للتحقق من الأنماط المتسلسلة)\n * @returns محتوى منظف أو تحذير إذا كان المحتوى محظوراً\n */\nexport function sanitizeMessageContent(text: string, fromUserId?: number, toUserId?: number): string {\n  const checkResult = checkMessageForProhibitedContent(text, fromUserId, toUserId);\n  \n  if (!checkResult.safe) {\n    const violationTypes = checkResult.violations?.join('، ');\n    return `[تم حظر هذه الرسالة لأنها تحتوي على: ${violationTypes}]`;\n  }\n  \n  return text;\n}","size_bytes":23451},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\n// Configure Neon for serverless environments\nneonConfig.webSocketConstructor = ws;\n\n// Enhanced connection configuration for production\nneonConfig.poolQueryViaFetch = true;\nneonConfig.useSecureWebSocket = true;\n\nif (!process.env.DATABASE_URL) {\n  const error = new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\"\n  );\n  console.error(\"Database configuration error:\", error.message);\n  throw error;\n}\n\nconsole.log(\"Initializing database connection...\");\n\n// Enhanced pool configuration for production deployment\nexport const pool = new Pool({ \n  connectionString: process.env.DATABASE_URL,\n  // Connection pool settings for production\n  max: process.env.NODE_ENV === 'production' ? 10 : 5,\n  idleTimeoutMillis: 30000,\n  connectionTimeoutMillis: 10000,\n});\n\n// Add connection error handling\npool.on('error', (err) => {\n  console.error('Database pool error:', err);\n});\n\nexport const db = drizzle(pool, { schema });\n\nconsole.log(\"Database connection initialized successfully\");","size_bytes":1186},"server/emailService.ts":{"content":"import { MailerSend, EmailParams, Recipient, Sender } from \"mailersend\";\n\n// التحقق من وجود مفتاح API لخدمة MailerSend\nif (!process.env.MAILERSEND_API_KEY) {\n  console.warn(\"تحذير: لم يتم تعيين MAILERSEND_API_KEY، لن يعمل إرسال البريد الإلكتروني\");\n}\n\n// إنشاء مثيل من MailerSend باستخدام مفتاح API\nconst mailerSend = process.env.MAILERSEND_API_KEY \n  ? new MailerSend({ apiKey: process.env.MAILERSEND_API_KEY })\n  : null;\n\n// إعداد معلومات المرسل\n// استخدام الدومين المعتمد والموثق\nconst sender = new Sender(\"noreply@linktech.app\", \"لينكتك\");\n\n/**\n * إرسال بريد إلكتروني لإعادة تعيين كلمة المرور\n * @param email البريد الإلكتروني للمستخدم\n * @param name اسم المستخدم\n * @param token رمز إعادة التعيين\n * @param resetLink رابط إعادة التعيين الكامل\n * @returns وعد بنجاح أو فشل العملية\n */\nexport async function sendPasswordResetEmail(\n  email: string,\n  name: string,\n  token: string,\n  resetLink: string\n): Promise<boolean> {\n  // التحقق من وجود مثيل MailerSend\n  if (!mailerSend) {\n    console.error(\"تعذر إرسال البريد الإلكتروني: لم يتم تكوين MailerSend\");\n    return false;\n  }\n\n  try {\n    const recipient = new Recipient(email, name);\n    const recipients = [recipient];\n\n    // بناء معلمات البريد الإلكتروني\n    const emailParams = new EmailParams()\n      .setFrom(sender)\n      .setTo(recipients)\n      .setSubject(\"إعادة تعيين كلمة المرور - منصة لينكتك\")\n      .setHtml(`\n        <div dir=\"rtl\" style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background-color: #f8f9fa; padding: 20px; text-align: center; border-radius: 8px 8px 0 0;\">\n            <h1 style=\"color: #2563eb; margin: 0; font-size: 24px;\">لينكتك</h1>\n            <p style=\"font-size: 16px; margin-top: 5px;\">منصة ربط رواد الأعمال بشركات البرمجة</p>\n          </div>\n          \n          <div style=\"background-color: #ffffff; padding: 20px; border-radius: 0 0 8px 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1);\">\n            <h2 style=\"color: #1f2937; margin-top: 0;\">طلب إعادة تعيين كلمة المرور</h2>\n            \n            <p style=\"margin-bottom: 25px;\">مرحباً ${name}،</p>\n            \n            <p>لقد تلقينا طلباً لإعادة تعيين كلمة المرور لحسابك في منصة لينكتك. يرجى النقر على الزر أدناه لإعادة تعيين كلمة المرور الخاصة بك:</p>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <a href=\"${resetLink}\" style=\"background-color: #2563eb; color: white; padding: 12px 25px; text-decoration: none; border-radius: 4px; font-weight: bold; display: inline-block;\">إعادة تعيين كلمة المرور</a>\n            </div>\n            \n            <p>أو يمكنك نسخ ولصق الرابط التالي في متصفحك:</p>\n            <p style=\"background-color: #f8f9fa; padding: 10px; border-radius: 4px; word-break: break-all;\">${resetLink}</p>\n            \n            <p style=\"margin-top: 25px;\">ينتهي هذا الرابط خلال 24 ساعة.</p>\n            \n            <p>إذا لم تطلب إعادة تعيين كلمة المرور، يرجى تجاهل هذا البريد الإلكتروني أو الاتصال بفريق الدعم إذا كان لديك أي استفسارات.</p>\n            \n            <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eaeaea; font-size: 14px; color: #666;\">\n              <p>مع تحيات،<br>فريق منصة لينكتك</p>\n            </div>\n          </div>\n        </div>\n      `)\n      .setText(\n        `مرحباً ${name}،\n        \nلقد تلقينا طلباً لإعادة تعيين كلمة المرور لحسابك في منصة لينكتك.\n\nلإعادة تعيين كلمة المرور الخاصة بك، يرجى زيارة الرابط التالي:\n${resetLink}\n\nينتهي هذا الرابط خلال 24 ساعة.\n\nإذا لم تطلب إعادة تعيين كلمة المرور، يرجى تجاهل هذا البريد الإلكتروني أو الاتصال بفريق الدعم إذا كان لديك أي استفسارات.\n\nمع تحيات،\nفريق منصة لينكتك`\n      );\n\n    // إرسال البريد الإلكتروني\n    const response = await mailerSend.email.send(emailParams);\n    console.log(\"تم إرسال بريد إعادة تعيين كلمة المرور بنجاح:\", response);\n    return true;\n  } catch (error) {\n    console.error(\"فشل في إرسال بريد إعادة تعيين كلمة المرور:\", error);\n    return false;\n  }\n}\n\n/**\n * إرسال إشعار بتغيير كلمة المرور\n * @param email البريد الإلكتروني للمستخدم\n * @param name اسم المستخدم\n * @returns وعد بنجاح أو فشل العملية\n */\nexport async function sendPasswordChangedNotification(\n  email: string,\n  name: string\n): Promise<boolean> {\n  // التحقق من وجود مثيل MailerSend\n  if (!mailerSend) {\n    console.error(\"تعذر إرسال البريد الإلكتروني: لم يتم تكوين MailerSend\");\n    return false;\n  }\n\n  try {\n    const recipient = new Recipient(email, name);\n    const recipients = [recipient];\n\n    // بناء معلمات البريد الإلكتروني\n    const emailParams = new EmailParams()\n      .setFrom(sender)\n      .setTo(recipients)\n      .setSubject(\"تم تغيير كلمة المرور الخاصة بك - منصة لينكتك\")\n      .setHtml(`\n        <div dir=\"rtl\" style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background-color: #f8f9fa; padding: 20px; text-align: center; border-radius: 8px 8px 0 0;\">\n            <h1 style=\"color: #2563eb; margin: 0; font-size: 24px;\">لينكتك</h1>\n            <p style=\"font-size: 16px; margin-top: 5px;\">منصة ربط رواد الأعمال بشركات البرمجة</p>\n          </div>\n          \n          <div style=\"background-color: #ffffff; padding: 20px; border-radius: 0 0 8px 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1);\">\n            <h2 style=\"color: #1f2937; margin-top: 0;\">تم تغيير كلمة المرور بنجاح</h2>\n            \n            <p style=\"margin-bottom: 25px;\">مرحباً ${name}،</p>\n            \n            <p>نود إعلامك أنه تم تغيير كلمة المرور لحسابك في منصة لينكتك بنجاح.</p>\n            \n            <p>إذا لم تقم بتغيير كلمة المرور، يرجى الاتصال بفريق الدعم على الفور.</p>\n            \n            <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eaeaea; font-size: 14px; color: #666;\">\n              <p>مع تحيات،<br>فريق منصة لينكتك</p>\n            </div>\n          </div>\n        </div>\n      `)\n      .setText(\n        `مرحباً ${name}،\n        \nنود إعلامك أنه تم تغيير كلمة المرور لحسابك في منصة لينكتك بنجاح.\n\nإذا لم تقم بتغيير كلمة المرور، يرجى الاتصال بفريق الدعم على الفور.\n\nمع تحيات،\nفريق منصة لينكتك`\n      );\n\n    // إرسال البريد الإلكتروني\n    const response = await mailerSend.email.send(emailParams);\n    console.log(\"تم إرسال إشعار تغيير كلمة المرور بنجاح:\", response);\n    return true;\n  } catch (error) {\n    console.error(\"فشل في إرسال إشعار تغيير كلمة المرور:\", error);\n    return false;\n  }\n}\n\n/**\n * إرسال بريد ترحيبي للمستخدم الجديد\n * @param email البريد الإلكتروني للمستخدم\n * @param name اسم المستخدم\n * @param userRole دور المستخدم (entrepreneur, company)\n * @returns وعد بنجاح أو فشل العملية\n */\n\n/**\n * إرسال إشعار بتوثيق الشركة\n * @param email البريد الإلكتروني للمستخدم\n * @param name اسم المستخدم\n * @param companyName اسم الشركة\n * @param notes ملاحظات التوثيق (اختياري)\n * @returns وعد بنجاح أو فشل العملية\n */\nexport async function sendCompanyVerificationEmail(\n  email: string,\n  name: string,\n  companyName: string,\n  notes: string = ''\n): Promise<boolean> {\n  // التحقق من وجود مثيل MailerSend\n  if (!mailerSend) {\n    console.error(\"تعذر إرسال البريد الإلكتروني: لم يتم تكوين MailerSend\");\n    return false;\n  }\n\n  try {\n    const recipient = new Recipient(email, name);\n    const recipients = [recipient];\n\n    // بناء معلمات البريد الإلكتروني\n    const emailParams = new EmailParams()\n      .setFrom(sender)\n      .setTo(recipients)\n      .setSubject(`تهانينا! تم توثيق شركتك \"${companyName}\" في منصة لينكتك`)\n      .setHtml(`\n        <div dir=\"rtl\" style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background-color: #f8f9fa; padding: 20px; text-align: center; border-radius: 8px 8px 0 0;\">\n            <h1 style=\"color: #2563eb; margin: 0; font-size: 24px;\">لينكتك</h1>\n            <p style=\"font-size: 16px; margin-top: 5px;\">منصة ربط رواد الأعمال بشركات البرمجة</p>\n          </div>\n          \n          <div style=\"background-color: #ffffff; padding: 20px; border-radius: 0 0 8px 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1);\">\n            <h2 style=\"color: #1f2937; margin-top: 0;\">تم توثيق شركتك بنجاح</h2>\n            \n            <p style=\"margin-bottom: 25px;\">مرحباً ${name}،</p>\n            \n            <p>يسعدنا إبلاغك بأنه تم توثيق شركتك <strong>${companyName}</strong> بنجاح في منصة لينكتك!</p>\n            \n            <div style=\"background-color: #f0f9ff; border: 1px solid #bae6fd; border-radius: 4px; padding: 15px; margin: 20px 0;\">\n              <div style=\"display: flex; align-items: center; margin-bottom: 10px;\">\n                <div style=\"background-color: #0ea5e9; color: white; border-radius: 50%; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; margin-left: 10px;\">✓</div>\n                <span style=\"font-weight: bold; color: #0369a1;\">توثيق رسمي</span>\n              </div>\n              <p style=\"margin: 0;\">ستظهر شركتك الآن بعلامة توثيق رسمية في المنصة. هذا سيزيد من مصداقية شركتك ويحسن فرص الفوز بمشاريع أكثر.</p>\n            </div>\n            \n            ${notes ? `\n            <div style=\"margin-top: 20px;\">\n              <p style=\"font-weight: bold;\">ملاحظات من فريق التوثيق:</p>\n              <p style=\"background-color: #f8f9fa; padding: 10px; border-radius: 4px;\">${notes}</p>\n            </div>\n            ` : ''}\n            \n            <p>ما هي المزايا التي ستحصل عليها كشركة موثقة؟</p>\n            <ul style=\"padding-right: 20px;\">\n              <li>علامة توثيق رسمية تظهر بجانب اسم شركتك</li>\n              <li>ظهور أفضل في نتائج البحث والتوصيات</li>\n              <li>زيادة معدلات الثقة لدى رواد الأعمال</li>\n              <li>أولوية في عرض العروض المقدمة على المشاريع</li>\n            </ul>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <a href=\"https://linktech.app/dashboard\" style=\"background-color: #2563eb; color: white; padding: 12px 25px; text-decoration: none; border-radius: 4px; font-weight: bold; display: inline-block;\">الانتقال إلى لوحة التحكم</a>\n            </div>\n            \n            <p>نتطلع إلى رؤية المزيد من العروض الناجحة من شركتك على منصتنا!</p>\n            \n            <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eaeaea; font-size: 14px; color: #666;\">\n              <p>مع تحيات،<br>فريق منصة لينكتك</p>\n            </div>\n          </div>\n        </div>\n      `)\n      .setText(\n        `مرحباً ${name}،\n        \nيسعدنا إبلاغك بأنه تم توثيق شركتك \"${companyName}\" بنجاح في منصة لينكتك!\n\nستظهر شركتك الآن بعلامة توثيق رسمية في المنصة. هذا سيزيد من مصداقية شركتك ويحسن فرص الفوز بمشاريع أكثر.\n\n${notes ? `ملاحظات من فريق التوثيق:\n${notes}\n\n` : ''}ما هي المزايا التي ستحصل عليها كشركة موثقة؟\n- علامة توثيق رسمية تظهر بجانب اسم شركتك\n- ظهور أفضل في نتائج البحث والتوصيات\n- زيادة معدلات الثقة لدى رواد الأعمال\n- أولوية في عرض العروض المقدمة على المشاريع\n\nنتطلع إلى رؤية المزيد من العروض الناجحة من شركتك على منصتنا!\n\nمع تحيات،\nفريق منصة لينكتك`\n      );\n\n    // إرسال البريد الإلكتروني\n    const response = await mailerSend.email.send(emailParams);\n    console.log(\"تم إرسال إشعار توثيق الشركة بنجاح:\", response);\n    return true;\n  } catch (error) {\n    console.error(\"فشل في إرسال إشعار توثيق الشركة:\", error);\n    return false;\n  }\n}\n\nexport async function sendWelcomeEmail(\n  email: string,\n  name: string,\n  userRole: string\n): Promise<boolean> {\n  // التحقق من وجود مثيل MailerSend\n  if (!mailerSend) {\n    console.error(\"تعذر إرسال البريد الإلكتروني: لم يتم تكوين MailerSend\");\n    return false;\n  }\n\n  try {\n    const recipient = new Recipient(email, name);\n    const recipients = [recipient];\n\n    // تخصيص محتوى البريد الإلكتروني بناءً على دور المستخدم\n    let roleSpecificContent = '';\n    let roleSpecificText = '';\n    let subject = \"مرحباً بك في منصة لينكتك!\";\n\n    if (userRole === 'entrepreneur') {\n      roleSpecificContent = `\n        <p>نحن متحمسون لمساعدتك في تحويل أفكارك إلى مشاريع ناجحة. إليك بعض الخطوات للبدء:</p>\n        <ul style=\"padding-right: 20px; margin-top: 10px;\">\n          <li>أكمل ملفك الشخصي لجعله جذاباً للشركات</li>\n          <li>أنشئ مشروعك الأول وحدد تفاصيله بدقة</li>\n          <li>تواصل مع الشركات التي تقدم عروضاً مناسبة</li>\n        </ul>\n      `;\n      roleSpecificText = `\nنحن متحمسون لمساعدتك في تحويل أفكارك إلى مشاريع ناجحة. إليك بعض الخطوات للبدء:\n- أكمل ملفك الشخصي لجعله جذاباً للشركات\n- أنشئ مشروعك الأول وحدد تفاصيله بدقة\n- تواصل مع الشركات التي تقدم عروضاً مناسبة`;\n    } else if (userRole === 'company') {\n      roleSpecificContent = `\n        <p>نحن متحمسون لانضمامك إلى شبكة شركات التطوير لدينا. إليك بعض الخطوات للبدء:</p>\n        <ul style=\"padding-right: 20px; margin-top: 10px;\">\n          <li>أكمل ملف شركتك وأضف المهارات والتقنيات التي تتخصص بها</li>\n          <li>استعرض المشاريع المتاحة وقدم عروضك المناسبة</li>\n          <li>تواصل مع رواد الأعمال لمناقشة تفاصيل المشاريع</li>\n        </ul>\n      `;\n      roleSpecificText = `\nنحن متحمسون لانضمامك إلى شبكة شركات التطوير لدينا. إليك بعض الخطوات للبدء:\n- أكمل ملف شركتك وأضف المهارات والتقنيات التي تتخصص بها\n- استعرض المشاريع المتاحة وقدم عروضك المناسبة\n- تواصل مع رواد الأعمال لمناقشة تفاصيل المشاريع`;\n    } else {\n      roleSpecificContent = `\n        <p>نحن سعداء بانضمامك إلى منصتنا. استكشف الميزات المختلفة وتواصل معنا إذا كانت لديك أي أسئلة.</p>\n      `;\n      roleSpecificText = `\nنحن سعداء بانضمامك إلى منصتنا. استكشف الميزات المختلفة وتواصل معنا إذا كانت لديك أي أسئلة.`;\n    }\n\n    // بناء معلمات البريد الإلكتروني\n    const emailParams = new EmailParams()\n      .setFrom(sender)\n      .setTo(recipients)\n      .setSubject(subject)\n      .setHtml(`\n        <div dir=\"rtl\" style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background-color: #f8f9fa; padding: 20px; text-align: center; border-radius: 8px 8px 0 0;\">\n            <h1 style=\"color: #2563eb; margin: 0; font-size: 24px;\">لينكتك</h1>\n            <p style=\"font-size: 16px; margin-top: 5px;\">منصة ربط رواد الأعمال بشركات البرمجة</p>\n          </div>\n          \n          <div style=\"background-color: #ffffff; padding: 20px; border-radius: 0 0 8px 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1);\">\n            <h2 style=\"color: #1f2937; margin-top: 0;\">مرحباً بك في منصة لينكتك</h2>\n            \n            <p style=\"margin-bottom: 25px;\">مرحباً ${name}،</p>\n            \n            <p>شكراً لانضمامك إلى منصة لينكتك - المنصة الرائدة في ربط رواد الأعمال بشركات تطوير البرمجيات في المملكة العربية السعودية.</p>\n            \n            ${roleSpecificContent}\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <a href=\"https://linktech.app/dashboard\" style=\"background-color: #2563eb; color: white; padding: 12px 25px; text-decoration: none; border-radius: 4px; font-weight: bold; display: inline-block;\">الانتقال إلى لوحة التحكم</a>\n            </div>\n            \n            <p>إذا كانت لديك أي استفسارات، لا تتردد في التواصل مع فريق الدعم لدينا.</p>\n            \n            <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eaeaea; font-size: 14px; color: #666;\">\n              <p>مع تحيات،<br>فريق منصة لينكتك</p>\n            </div>\n          </div>\n        </div>\n      `)\n      .setText(\n        `مرحباً ${name}،\n        \nشكراً لانضمامك إلى منصة لينكتك - المنصة الرائدة في ربط رواد الأعمال بشركات تطوير البرمجيات في المملكة العربية السعودية.\n\n${roleSpecificText}\n\nإذا كانت لديك أي استفسارات، لا تتردد في التواصل مع فريق الدعم لدينا.\n\nمع تحيات،\nفريق منصة لينكتك`\n      );\n\n    // إرسال البريد الإلكتروني\n    const response = await mailerSend.email.send(emailParams);\n    console.log(\"تم إرسال بريد الترحيب بنجاح:\", response);\n    return true;\n  } catch (error) {\n    console.error(\"فشل في إرسال بريد الترحيب:\", error);\n    return false;\n  }\n}","size_bytes":20195},"server/gamification.ts":{"content":"import { db } from './db';\nimport { userAchievements, userActivities, badgeDefinitions } from '@shared/schema';\nimport type { User, UserAchievement, BadgeDefinition, UserActivity, InsertUserActivity } from '@shared/schema';\nimport { eq, and, gte } from 'drizzle-orm';\nimport { storage } from './storage';\n\n/**\n * وحدة التلعيب (Gamification)\n * تتعامل مع النقاط والشارات والمستويات لتحفيز المستخدمين\n */\n\n// تعريف أنواع النشاطات\nexport const ActivityTypes = {\n  PROJECT_CREATED: 'project_created', // إنشاء مشروع جديد\n  PROJECT_UPDATED: 'project_updated', // تحديث مشروع\n  OFFER_SUBMITTED: 'offer_submitted', // تقديم عرض على مشروع\n  OFFER_ACCEPTED: 'offer_accepted', // قبول عرض\n  DEPOSIT_PAID: 'deposit_paid', // دفع العربون\n  MESSAGE_SENT: 'message_sent', // إرسال رسالة\n  LOGIN_STREAK: 'login_streak', // سلسلة تسجيل دخول متتالية\n  PROFILE_COMPLETED: 'profile_completed', // إكمال الملف الشخصي\n  TESTIMONIAL_ADDED: 'testimonial_added', // إضافة تقييم\n} as const;\n\n/**\n * تعيين النقاط لكل نوع نشاط\n */\nexport const ActivityPoints: Record<string, number> = {\n  [ActivityTypes.PROJECT_CREATED]: 20,\n  [ActivityTypes.PROJECT_UPDATED]: 5,\n  [ActivityTypes.OFFER_SUBMITTED]: 10,\n  [ActivityTypes.OFFER_ACCEPTED]: 15,\n  [ActivityTypes.DEPOSIT_PAID]: 25,\n  [ActivityTypes.MESSAGE_SENT]: 2,\n  [ActivityTypes.LOGIN_STREAK]: 5,\n  [ActivityTypes.PROFILE_COMPLETED]: 30,\n  [ActivityTypes.TESTIMONIAL_ADDED]: 20,\n};\n\n/**\n * معادلة حساب المستوى بناءً على النقاط\n * يمكن تعديلها لتعكس صعوبة كل مستوى\n */\nexport function calculateLevel(points: number): number {\n  // زيادة تدريجية في صعوبة المستويات\n  if (points < 50) return 1;\n  if (points < 150) return 2;\n  if (points < 300) return 3;\n  if (points < 500) return 4;\n  if (points < 750) return 5;\n  if (points < 1000) return 6;\n  if (points < 1500) return 7;\n  if (points < 2500) return 8;\n  if (points < 4000) return 9;\n  return 10;\n}\n\n/**\n * الحصول على سجل إنجازات المستخدم أو إنشاء سجل جديد إذا لم يكن موجوداً\n */\nexport async function getOrCreateUserAchievement(userId: number): Promise<UserAchievement> {\n  // البحث عن سجل الإنجازات الحالي\n  const [existingAchievement] = await db\n    .select()\n    .from(userAchievements)\n    .where(eq(userAchievements.userId, userId));\n\n  if (existingAchievement) {\n    return existingAchievement;\n  }\n\n  // إنشاء سجل جديد إذا لم يكن موجوداً\n  const [newAchievement] = await db\n    .insert(userAchievements)\n    .values({\n      userId,\n      pointsTotal: 0,\n      level: 1,\n      badges: [],\n    })\n    .returning();\n\n  return newAchievement;\n}\n\n/**\n * تسجيل نشاط جديد للمستخدم وتحديث النقاط والمستوى\n */\nexport async function recordActivity(\n  userId: number,\n  activityType: string,\n  referenceId?: number,\n  customDescription?: string\n): Promise<UserActivity> {\n  // التحقق من وجود المستخدم\n  const user = await storage.getUser(userId);\n  if (!user) {\n    throw new Error('User not found');\n  }\n\n  // الحصول على سجل الإنجازات أو إنشاء واحد جديد\n  const achievement = await getOrCreateUserAchievement(userId);\n  \n  // تحديد النقاط المكتسبة\n  const pointsEarned = ActivityPoints[activityType] || 0;\n  \n  // إنشاء وصف النشاط\n  let description = customDescription;\n  if (!description) {\n    description = generateActivityDescription(activityType, user, referenceId);\n  }\n  \n  // تسجيل النشاط\n  const [activity] = await db\n    .insert(userActivities)\n    .values({\n      userId,\n      activityType,\n      referenceId,\n      pointsEarned,\n      description,\n    })\n    .returning();\n  \n  // تحديث إجمالي النقاط\n  const newPointsTotal = achievement.pointsTotal + pointsEarned;\n  \n  // حساب المستوى الجديد بناءً على إجمالي النقاط\n  const newLevel = calculateLevel(newPointsTotal);\n  \n  // تحقق من الشارات الجديدة المحتملة\n  const currentBadges = achievement.badges || [];\n  const newBadges = await checkForNewBadges(userId, newPointsTotal, newLevel);\n  \n  // دمج الشارات الحالية والجديدة (مع إزالة التكرار)\n  const allBadges = [...new Set([...currentBadges, ...newBadges])];\n  \n  // تحديث سجل الإنجازات\n  await db\n    .update(userAchievements)\n    .set({\n      pointsTotal: newPointsTotal,\n      level: newLevel,\n      badges: allBadges,\n      lastActive: new Date(),\n      updatedAt: new Date(),\n    })\n    .where(eq(userAchievements.userId, userId));\n  \n  // تحديث الإحصائيات الخاصة بنوع النشاط\n  await updateActivitySpecificStats(userId, activityType, referenceId);\n  \n  return activity;\n}\n\n/**\n * إنشاء وصف تلقائي للنشاط\n */\nfunction generateActivityDescription(\n  activityType: string, \n  user: User, \n  referenceId?: number\n): string {\n  switch (activityType) {\n    case ActivityTypes.PROJECT_CREATED:\n      return `${user.name} قام بإنشاء مشروع جديد`;\n    case ActivityTypes.OFFER_SUBMITTED:\n      return `${user.name} قدم عرضاً على مشروع`;\n    case ActivityTypes.OFFER_ACCEPTED:\n      return `تم قبول عرض ${user.name}`;\n    case ActivityTypes.DEPOSIT_PAID:\n      return `${user.name} قام بدفع العربون`;\n    case ActivityTypes.MESSAGE_SENT:\n      return `${user.name} تواصل مع مستخدم آخر`;\n    case ActivityTypes.LOGIN_STREAK:\n      return `${user.name} حافظ على تسجيل الدخول بانتظام`;\n    case ActivityTypes.PROFILE_COMPLETED:\n      return `${user.name} أكمل ملفه الشخصي`;\n    case ActivityTypes.TESTIMONIAL_ADDED:\n      return `${user.name} أضاف تقييماً جديداً`;\n    default:\n      return `${user.name} أكمل نشاطاً جديداً`;\n  }\n}\n\n/**\n * تحديث الإحصائيات الخاصة بكل نوع نشاط\n */\nasync function updateActivitySpecificStats(\n  userId: number, \n  activityType: string, \n  referenceId?: number\n): Promise<void> {\n  const achievement = await getOrCreateUserAchievement(userId);\n  \n  // تحديث الإحصائيات الخاصة بكل نوع نشاط\n  const updates: Partial<UserAchievement> = {};\n  \n  switch (activityType) {\n    case ActivityTypes.PROJECT_CREATED:\n      updates.projectsPosted = (achievement.projectsPosted || 0) + 1;\n      break;\n    case ActivityTypes.OFFER_ACCEPTED:\n      updates.offersAccepted = (achievement.offersAccepted || 0) + 1;\n      break;\n    case ActivityTypes.OFFER_SUBMITTED:\n      // لا شيء هنا - نحن نتتبع العروض المستلمة للمشاريع وليس العروض المقدمة\n      break;\n    case ActivityTypes.LOGIN_STREAK:\n      updates.streak = (achievement.streak || 0) + 1;\n      break;\n  }\n  \n  // إذا كان هناك تحديثات\n  if (Object.keys(updates).length > 0) {\n    await db\n      .update(userAchievements)\n      .set(updates)\n      .where(eq(userAchievements.userId, userId));\n  }\n}\n\n/**\n * التحقق من الشارات الجديدة المستحقة بناءً على النقاط والمستوى\n */\nasync function checkForNewBadges(\n  userId: number, \n  points: number, \n  level: number\n): Promise<string[]> {\n  const newBadges: string[] = [];\n  \n  // الحصول على الشارات التي تتطلب نقاطًا أو مستوى معين\n  const eligibleBadges = await db\n    .select()\n    .from(badgeDefinitions)\n    .where(\n      and(\n        // الشارات التي تتطلب نقاطًا أقل من أو تساوي النقاط الحالية\n        gte(points, badgeDefinitions.requiredPoints || 0),\n        // و الشارات التي تتطلب مستوى أقل من أو يساوي المستوى الحالي\n        gte(level, badgeDefinitions.requiredLevel || 0)\n      )\n    );\n  \n  // التحقق من الشارات المحتملة\n  for (const badge of eligibleBadges) {\n    // تحقق من الشروط الخاصة لكل شارة\n    if (await checkBadgeSpecificRequirements(userId, badge)) {\n      newBadges.push(badge.code);\n    }\n  }\n  \n  return newBadges;\n}\n\n/**\n * التحقق من الشروط الخاصة بكل شارة\n */\nasync function checkBadgeSpecificRequirements(\n  userId: number, \n  badge: BadgeDefinition\n): Promise<boolean> {\n  const achievement = await getOrCreateUserAchievement(userId);\n  \n  // التحقق من شروط معينة إذا كان هناك\n  if (badge.requiredProjects && (achievement.projectsPosted || 0) < badge.requiredProjects) {\n    return false;\n  }\n  \n  if (badge.requiredOffers && (achievement.offersAccepted || 0) < badge.requiredOffers) {\n    return false;\n  }\n  \n  // يمكن إضافة شروط إضافية هنا\n  \n  return true;\n}\n\n/**\n * الحصول على قائمة النشاطات الأخيرة للمستخدم\n */\nexport async function getUserRecentActivities(\n  userId: number, \n  limit: number = 10\n): Promise<UserActivity[]> {\n  const activities = await db\n    .select()\n    .from(userActivities)\n    .where(eq(userActivities.userId, userId))\n    .orderBy(userActivities.createdAt)\n    .limit(limit);\n  \n  return activities;\n}\n\n/**\n * الحصول على سجل إنجازات المستخدم مع تفاصيل الشارات\n */\nexport async function getUserAchievementDetails(userId: number): Promise<{\n  achievement: UserAchievement;\n  badgeDetails: BadgeDefinition[];\n}> {\n  const achievement = await getOrCreateUserAchievement(userId);\n  \n  // الحصول على تفاصيل الشارات\n  const badgeCodes = achievement.badges || [];\n  const badgeDetails = await Promise.all(\n    badgeCodes.map(async (code) => {\n      const [badge] = await db\n        .select()\n        .from(badgeDefinitions)\n        .where(eq(badgeDefinitions.code, code));\n      \n      return badge;\n    })\n  );\n  \n  return {\n    achievement,\n    badgeDetails: badgeDetails.filter(Boolean), // إزالة القيم غير المعرفة\n  };\n}\n\n/**\n * الحصول على قائمة أفضل المستخدمين حسب النقاط\n */\nexport async function getTopUsers(limit: number = 10): Promise<{\n  userId: number;\n  username: string;\n  name: string;\n  avatar: string | null;\n  pointsTotal: number;\n  level: number;\n}[]> {\n  const topAchievements = await db\n    .select()\n    .from(userAchievements)\n    .orderBy(userAchievements.pointsTotal)\n    .limit(limit);\n  \n  // الحصول على تفاصيل المستخدمين\n  const topUsers = await Promise.all(\n    topAchievements.map(async (achievement) => {\n      const user = await storage.getUser(achievement.userId);\n      \n      return {\n        userId: achievement.userId,\n        username: user?.username || 'unknown',\n        name: user?.name || 'Unknown User',\n        avatar: user?.avatar || null,\n        pointsTotal: achievement.pointsTotal,\n        level: achievement.level,\n      };\n    })\n  );\n  \n  return topUsers;\n}\n\n/**\n * تحديث سلسلة تسجيل الدخول للمستخدم\n */\nexport async function updateLoginStreak(userId: number): Promise<{\n  streak: number;\n  pointsEarned: number;\n}> {\n  const achievement = await getOrCreateUserAchievement(userId);\n  \n  // التحقق من آخر نشاط\n  const lastActive = achievement.lastActive;\n  const now = new Date();\n  const yesterday = new Date(now);\n  yesterday.setDate(yesterday.getDate() - 1);\n  \n  let streak = achievement.streak || 0;\n  let pointsEarned = 0;\n  \n  if (lastActive) {\n    const lastActiveDate = new Date(lastActive);\n    \n    // إذا كان آخر نشاط اليوم، لا نقوم بأي تحديث\n    if (\n      lastActiveDate.getDate() === now.getDate() &&\n      lastActiveDate.getMonth() === now.getMonth() &&\n      lastActiveDate.getFullYear() === now.getFullYear()\n    ) {\n      return { streak, pointsEarned: 0 };\n    }\n    \n    // إذا كان آخر نشاط بالأمس، نزيد السلسلة\n    if (\n      lastActiveDate.getDate() === yesterday.getDate() &&\n      lastActiveDate.getMonth() === yesterday.getMonth() &&\n      lastActiveDate.getFullYear() === yesterday.getFullYear()\n    ) {\n      streak += 1;\n      \n      // نقاط إضافية للسلسلة\n      if (streak % 7 === 0) { // مكافأة أسبوعية\n        pointsEarned = ActivityPoints[ActivityTypes.LOGIN_STREAK] * 2;\n      } else {\n        pointsEarned = ActivityPoints[ActivityTypes.LOGIN_STREAK];\n      }\n      \n      // تسجيل النشاط ونقاط السلسلة\n      await recordActivity(\n        userId, \n        ActivityTypes.LOGIN_STREAK, \n        undefined, \n        `تسجيل دخول لليوم ${streak} على التوالي`\n      );\n    } else {\n      // إعادة ضبط السلسلة إذا انقطعت\n      streak = 1;\n    }\n  } else {\n    // أول تسجيل دخول\n    streak = 1;\n  }\n  \n  // تحديث السلسلة وتاريخ آخر نشاط\n  await db\n    .update(userAchievements)\n    .set({\n      streak,\n      lastActive: now,\n      updatedAt: now,\n    })\n    .where(eq(userAchievements.userId, userId));\n  \n  return { streak, pointsEarned };\n}\n\n/**\n * إنشاء تعريفات الشارات الافتراضية\n */\nexport async function seedDefaultBadges(): Promise<void> {\n  const defaultBadges = [\n    {\n      code: \"first_project\",\n      name: \"منشئ المشاريع\",\n      description: \"أنشأت أول مشروع لك\",\n      icon: \"trending_up\",\n      requiredProjects: 1,\n      category: \"projects\",\n    },\n    {\n      code: \"project_master\",\n      name: \"خبير المشاريع\",\n      description: \"أنشأت 5 مشاريع أو أكثر\",\n      icon: \"diamond\",\n      requiredProjects: 5,\n      category: \"projects\",\n    },\n    {\n      code: \"first_deal\",\n      name: \"المتعاقد\",\n      description: \"أبرمت أول صفقة\",\n      icon: \"handshake\",\n      requiredOffers: 1,\n      category: \"deals\",\n    },\n    {\n      code: \"level_5\",\n      name: \"محترف\",\n      description: \"وصلت إلى المستوى 5\",\n      icon: \"star\",\n      requiredLevel: 5,\n      category: \"levels\",\n    },\n    {\n      code: \"level_10\",\n      name: \"خبير\",\n      description: \"وصلت إلى المستوى 10\",\n      icon: \"stars\",\n      requiredLevel: 10,\n      category: \"levels\",\n    },\n    {\n      code: \"points_100\",\n      name: \"متميز\",\n      description: \"حصلت على 100 نقطة\",\n      icon: \"local_fire_department\",\n      requiredPoints: 100,\n      category: \"points\",\n    },\n    {\n      code: \"points_1000\",\n      name: \"أسطورة\",\n      description: \"حصلت على 1000 نقطة\",\n      icon: \"workspace_premium\",\n      requiredPoints: 1000,\n      category: \"points\",\n    },\n  ];\n  \n  // إضافة الشارات الافتراضية إذا لم تكن موجودة\n  for (const badgeData of defaultBadges) {\n    const [existingBadge] = await db\n      .select()\n      .from(badgeDefinitions)\n      .where(eq(badgeDefinitions.code, badgeData.code));\n    \n    if (!existingBadge) {\n      await db.insert(badgeDefinitions).values(badgeData);\n    }\n  }\n}","size_bytes":15394},"server/generateNDA.ts":{"content":"/**\n * ملف إنشاء اتفاقية عدم الإفصاح NDA باستخدام مكتبة pdf-lib\n */\n\nimport { Request, Response, Router } from 'express';\nimport { PDFDocument, StandardFonts, rgb } from 'pdf-lib';\nimport fs from 'fs';\nimport path from 'path';\n\n/**\n * دالة بسيطة لعكس النص للعرض الصحيح\n * @param text النص المراد معالجته\n * @returns النص بعد المعالجة\n */\nfunction processArabicText(text: string): string {\n  // إرجاع النص كما هو - النصوص العربية تعرض بشكل صحيح في pdfmake الحديث\n  return text;\n}\n\n// إنشاء موجه للمسارات\nconst router = Router();\n\n/**\n * وظيفة مساعدة لإنشاء ملف PDF لاتفاقية عدم الإفصاح\n * هذه النسخة تستخدم مكتبة pdf-lib للحصول على أفضل استقرار\n * \n * @param project بيانات المشروع\n * @param company بيانات الشركة\n * @param signerInfo معلومات الموقع (اختياري)\n * @returns وعد يرجع البفر النهائي للملف\n */\nexport async function generateProjectNdaPdf(\n  project: any, \n  company: any, \n  partialNames?: {\n    entrepreneur: string;\n    companyRep: string;\n  },\n  signerInfo?: {\n    name?: string;\n    title?: string;\n    date?: Date;\n    ip?: string;\n  }\n): Promise<Buffer> {\n  try {\n    console.log('إنشاء اتفاقية عدم الإفصاح باستخدام pdf-lib');\n    \n    // إنشاء مستند PDF جديد\n    const pdfDoc = await PDFDocument.create();\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    const boldFont = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n    \n    // إضافة صفحة\n    const page = pdfDoc.addPage([612, 792]); // 8.5 x 11 inches\n    const { width, height } = page.getSize();\n      \n    // إزالة جميع مراجع التاريخ لإنشاء قالب قابل لإعادة الاستخدام\n    \n    let y = height - 80;\n    const margin = 50;\n    const lineHeight = 20;\n    \n    // العنوان\n    page.drawText('Non-Disclosure Agreement (NDA)', {\n      x: margin,\n      y: y,\n      size: 18,\n      font: boldFont,\n      color: rgb(0, 0, 0),\n    });\n    y -= 40;\n    \n    // إزالة تاريخ الإنشاء ليصبح الملف قابلاً لإعادة الاستخدام\n    \n    // معلومات المشروع\n    page.drawText('Project Information:', {\n      x: margin,\n      y: y,\n      size: 14,\n      font: boldFont,\n    });\n    y -= lineHeight;\n    \n    page.drawText(`Project Name: ${project.title ? project.title.replace(/[\\u0600-\\u06FF]/g, '[Arabic Text]') : 'Not specified'}`, {\n      x: margin,\n      y: y,\n      size: 12,\n      font: font,\n    });\n    y -= lineHeight;\n    \n    page.drawText(`Description: ${project.description ? project.description.replace(/[\\u0600-\\u06FF]/g, '[Arabic Text]') : 'Not specified'}`, {\n      x: margin,\n      y: y,\n      size: 12,\n      font: font,\n    });\n    y -= 30;\n    \n    // معلومات الشركة\n    page.drawText('Company Information:', {\n      x: margin,\n      y: y,\n      size: 14,\n      font: boldFont,\n    });\n    y -= lineHeight;\n    \n    page.drawText(`Company Name: ${company.name ? company.name.replace(/[\\u0600-\\u06FF]/g, '[Arabic Text]') : 'Not specified'}`, {\n      x: margin,\n      y: y,\n      size: 12,\n      font: font,\n    });\n    y -= lineHeight;\n    \n    page.drawText(`Location: ${company.location ? company.location.replace(/[\\u0600-\\u06FF]/g, '[Arabic Text]') : 'Saudi Arabia'}`, {\n      x: margin,\n      y: y,\n      size: 12,\n      font: font,\n    });\n    y -= 30;\n    \n    // شروط الاتفاقية\n    page.drawText('Agreement Terms:', {\n      x: margin,\n      y: y,\n      size: 14,\n      font: boldFont,\n    });\n    y -= lineHeight;\n    \n    const terms = [\n      '1. The second party shall maintain confidentiality of all project information.',\n      '2. This agreement is effective from the date of signing.',\n      '3. This agreement remains valid for two years after project completion.',\n      '4. Any breach of this agreement allows legal action by the affected party.',\n      '5. This agreement is governed by Saudi Arabian law.'\n    ];\n    \n    terms.forEach(term => {\n      page.drawText(term, {\n        x: margin,\n        y: y,\n        size: 11,\n        font: font,\n      });\n      y -= lineHeight;\n    });\n    \n    y -= 30;\n    \n    // التوقيعات\n    page.drawText('Signatures:', {\n      x: margin,\n      y: y,\n      size: 14,\n      font: boldFont,\n    });\n    y -= 30;\n    \n    // First Party - Project Owner (sanitized name)\n    const entrepreneurName = (partialNames?.entrepreneur || '[Project Owner Name]').replace(/[\\u0600-\\u06FF]/g, '[Arabic Text]');\n    page.drawText(`First Party (Project Owner): ${entrepreneurName}`, {\n      x: margin,\n      y: y,\n      size: 12,\n      font: font,\n    });\n    page.drawText('Signature: _______________________', {\n      x: margin,\n      y: y - 15,\n      size: 11,\n      font: font,\n    });\n    y -= 50;\n    \n    // Second Party - Company Representative (sanitized names)\n    const companyRepName = (partialNames?.companyRep || '[Company Representative Name]').replace(/[\\u0600-\\u06FF]/g, '[Arabic Text]');\n    const sanitizedCompanyName = (company.name || 'Company').replace(/[\\u0600-\\u06FF]/g, '[Arabic Text]');\n    page.drawText(`Second Party (${sanitizedCompanyName}): ${companyRepName}`, {\n      x: margin,\n      y: y,\n      size: 12,\n      font: font,\n    });\n    page.drawText('Signature: _______________________', {\n      x: margin,\n      y: y - 15,\n      size: 11,\n      font: font,\n    });\n    y -= 50;\n    \n    // إزالة معلومات التوقيع التلقائية - سيتم إضافتها لاحقاً في صادق\n    \n    y -= 30;\n    \n    // معلومات المنصة\n    page.drawText('Created via LinkTech Platform - https://linktech.app', {\n      x: margin,\n      y: y,\n      size: 9,\n      font: font,\n      color: rgb(0.4, 0.4, 0.4),\n    });\n    y -= lineHeight;\n    \n    page.drawText(`Reference Number: NDA-${project.id}-${Date.now().toString().substring(0, 8)}`, {\n      x: margin,\n      y: y,\n      size: 9,\n      font: font,\n      color: rgb(0.4, 0.4, 0.4),\n    });\n    \n    // حفظ المستند كـ Buffer\n    const pdfBytes = await pdfDoc.save();\n    console.log('تم إنشاء اتفاقية عدم الإفصاح بنجاح، حجم الملف:', pdfBytes.length, 'بايت');\n    \n    return Buffer.from(pdfBytes);\n    \n  } catch (error: any) {\n    console.error('خطأ في إنشاء اتفاقية عدم الإفصاح:', error);\n    throw error;\n  }\n}\n\n// صفحة HTML لاختبار PDF\nrouter.get('/generate-nda-test', (req: Request, res: Response) => {\n  res.send(`\n    <!DOCTYPE html>\n    <html lang=\"ar\" dir=\"rtl\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>إنشاء اتفاقية عدم الإفصاح</title>\n      <style>\n        body {\n          font-family: Arial, sans-serif;\n          max-width: 800px;\n          margin: 0 auto;\n          padding: 20px;\n          text-align: center;\n        }\n        h1 {\n          color: #333;\n        }\n        .btn {\n          display: inline-block;\n          margin: 10px;\n          padding: 12px 30px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 18px;\n          text-decoration: none;\n          color: white;\n        }\n        .download-btn {\n          background-color: #4CAF50;\n        }\n        .view-btn {\n          background-color: #2196F3;\n        }\n        .option {\n          margin: 30px 0;\n          padding: 20px;\n          border: 1px solid #ddd;\n          border-radius: 8px;\n        }\n      </style>\n    </head>\n    <body>\n      <h1>اختبار إنشاء اتفاقية عدم الإفصاح</h1>\n      \n      <div class=\"option\">\n        <h2>إنشاء NDA جديدة باستخدام الطريقة المحسنة</h2>\n        <p>سيتم إنشاء اتفاقية عدم إفصاح جديدة لمنصة لينكتك</p>\n        <a href=\"/api/generate-nda?mode=view\" class=\"btn view-btn\" target=\"_blank\">عرض الملف</a>\n        <a href=\"/api/generate-nda?mode=download\" class=\"btn download-btn\">تنزيل الملف</a>\n      </div>\n    </body>\n    </html>\n  `);\n});\n\n// نقطة نهاية لإنشاء ملف NDA\nrouter.get('/api/generate-nda', async (req: Request, res: Response) => {\n  try {\n    // تحديد ما إذا كان العرض أو التنزيل\n    const mode = req.query.mode === 'download' ? 'download' : 'view';\n    console.log(`إنشاء اتفاقية عدم الإفصاح - وضع: ${mode}`);\n    \n    // إنشاء مجلد مؤقت للملف إذا لم يكن موجوداً\n    const tempDir = path.join(process.cwd(), 'temp');\n    if (!fs.existsSync(tempDir)) {\n      fs.mkdirSync(tempDir, { recursive: true });\n    }\n    \n    // بيانات نموذجية للاختبار\n    const sampleProject = {\n      id: 12345,\n      title: 'تطبيق إدارة المشاريع',\n      description: 'تطبيق متكامل لإدارة المشاريع والمهام وتتبع الوقت لتسهيل العمل الجماعي وزيادة الإنتاجية'\n    };\n    \n    const sampleCompany = {\n      name: 'شركة التقنية المتقدمة',\n      location: 'الرياض - المملكة العربية السعودية'\n    };\n    \n    // إنشاء ملف PDF بدون معلومات توقيع لإنشاء قالب قابل لإعادة الاستخدام\n    const pdfBuffer = await generateProjectNdaPdf(sampleProject, sampleCompany);\n    \n    // استخدام اسم ملف بالإنجليزية لتجنب مشاكل التشفير\n    const pdfFilename = 'linktech-nda.pdf';\n    const tempPdfPath = path.join(tempDir, pdfFilename);\n    \n    // حفظ الملف\n    fs.writeFileSync(tempPdfPath, pdfBuffer);\n    console.log(`تم إنشاء ملف PDF بنجاح في: ${tempPdfPath}`);\n    \n    // تعيين الترويسات المناسبة\n    res.setHeader('Content-Type', 'application/pdf');\n    \n    if (mode === 'download') {\n      // تنزيل الملف مع اسم عربي مناسب\n      const arabicFilename = encodeURIComponent('اتفاقية_عدم_الإفصاح.pdf');\n      res.setHeader('Content-Disposition', `attachment; filename=\"${arabicFilename}\"`);\n    } else {\n      // عرض الملف في المتصفح\n      res.setHeader('Content-Disposition', `inline; filename=\"${pdfFilename}\"`);\n    }\n    \n    // إرسال الملف\n    const fileStream = fs.createReadStream(tempPdfPath);\n    fileStream.pipe(res);\n    \n  } catch (error: any) {\n    console.error('خطأ في إنشاء اتفاقية عدم الإفصاح:', error);\n    res.status(500).json({ \n      message: 'حدث خطأ أثناء إنشاء ملف اتفاقية عدم الإفصاح', \n      error: error.message || String(error)\n    });\n  }\n});\n\nexport default router;","size_bytes":11069},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport { seedDatabase } from \"./seedDatabase\";\n\nconst app = express();\napp.use(express.json({ limit: '50mb' })); // زيادة الحد المسموح به للطلبات\napp.use(express.urlencoded({ extended: true, limit: '50mb' })); // استخدام extended: true للتعامل مع البيانات المركبة في الـ URL\n\n// تكوين التطبيق للتعامل مع الأحرف العربية في عناوين URL\napp.use((req, res, next) => {\n  // ضمان أن الحروف العربية سيتم استقبالها بشكل صحيح في params\n  if (req.params) {\n    for (let key in req.params) {\n      try {\n        // فك تشفير سلاسل URL إذا لزم الأمر (تم تشفيرها من قبل المتصفح)\n        if (req.params[key] && req.params[key].includes('%')) {\n          req.params[key] = decodeURIComponent(req.params[key]);\n        }\n      } catch (e) {\n        console.error(`Error decoding URL param ${key}:`, e);\n      }\n    }\n  }\n  next();\n});\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Add process error handlers to prevent crashes\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught Exception:', error);\n  // In production, we might want to exit gracefully\n  if (process.env.NODE_ENV === 'production') {\n    process.exit(1);\n  }\n});\n\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n  // In production, we might want to exit gracefully\n  if (process.env.NODE_ENV === 'production') {\n    process.exit(1);\n  }\n});\n\n// Add graceful shutdown handler\nprocess.on('SIGTERM', () => {\n  console.log('SIGTERM received, shutting down gracefully');\n  process.exit(0);\n});\n\nprocess.on('SIGINT', () => {\n  console.log('SIGINT received, shutting down gracefully');\n  process.exit(0);\n});\n\n(async () => {\n  // Seed the database with initial data - with enhanced error handling\n  console.log(\"Starting database seeding...\");\n  try {\n    await seedDatabase();\n    console.log(\"Database seeding completed successfully\");\n  } catch (error) {\n    console.error(\"Error seeding database:\", error);\n    // In production, don't fail the entire deployment due to seeding errors\n    if (process.env.NODE_ENV === 'production') {\n      console.warn(\"Continuing with deployment despite seeding error...\");\n    } else {\n      // In development, we can be more strict\n      throw error;\n    }\n  }\n\n  const server = await registerRoutes(app);\n\n  // Enhanced error handler\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    // Log the error for debugging\n    console.error('Express error handler:', {\n      status,\n      message,\n      stack: err.stack,\n      url: _req.url,\n      method: _req.method\n    });\n\n    res.status(status).json({ message });\n    \n    // Don't throw in production to prevent crashes\n    if (process.env.NODE_ENV !== 'production') {\n      throw err;\n    }\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  // Temporarily use static files due to Vite configuration TypeScript issue\n  serveStatic(app);\n\n  // Get port from environment or default to 5000\n  // This ensures compatibility with Cloud Run and other deployment platforms\n  const port = process.env.PORT || 5000;\n  const host = process.env.HOST || \"0.0.0.0\";\n  \n  console.log(`Starting server on ${host}:${port} in ${process.env.NODE_ENV || 'development'} mode`);\n  \n  server.listen(parseInt(port.toString(), 10), host, () => {\n    log(`serving on ${host}:${port}`);\n    console.log(`Environment: ${process.env.NODE_ENV || 'development'}`);\n    console.log(`Database URL configured: ${process.env.DATABASE_URL ? 'Yes' : 'No'}`);\n  });\n\n  // Handle server errors\n  server.on('error', (error: any) => {\n    console.error('Server error:', error);\n    if (error.code === 'EADDRINUSE') {\n      console.error(`Port ${port} is already in use`);\n      process.exit(1);\n    }\n  });\n})();\n","size_bytes":5060},"server/pdfkit.d.ts":{"content":"declare module 'pdfkit';","size_bytes":24},"server/pdfmake.d.ts":{"content":"\ndeclare module 'pdfmake/src/printer.js' {\n  export default class PdfPrinter {\n    constructor(fonts: any);\n    createPdfKitDocument(docDefinition: any): any;\n  }\n}\n","size_bytes":165},"server/pdfmakeTest.ts":{"content":"/**\n * وحدة اختبار PDF العربي باستخدام مكتبة pdfmake\n * تحتوي على نقاط نهاية لاختبار عرض وتنزيل PDF عربي\n */\n\nimport { Request, Response, Router } from 'express';\nimport path from 'path';\nimport fs from 'fs';\n// استيراد pdfmake - بطريقة تتلاءم مع TypeScript/ESM\nimport PdfPrinter from 'pdfmake/src/printer.js';\n\n// إنشاء موجه للمسارات\nconst router = Router();\n\n// لم نعد بحاجة لوظيفة إعادة تشكيل النص العربي\n// نعتمد الآن على خاصية RTL المدمجة في pdfmake\n\n// صفحة HTML لاختبار PDF\nrouter.get('/pdfmake-test', (req: Request, res: Response) => {\n  res.send(`\n    <!DOCTYPE html>\n    <html lang=\"ar\" dir=\"rtl\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>اختبار PDF باللغة العربية</title>\n      <style>\n        body {\n          font-family: Arial, sans-serif;\n          max-width: 800px;\n          margin: 0 auto;\n          padding: 20px;\n          text-align: center;\n        }\n        h1 {\n          color: #333;\n        }\n        .btn {\n          display: inline-block;\n          margin: 10px;\n          padding: 12px 30px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 18px;\n          text-decoration: none;\n          color: white;\n        }\n        .download-btn {\n          background-color: #4CAF50;\n        }\n        .view-btn {\n          background-color: #2196F3;\n        }\n        .option {\n          margin: 30px 0;\n          padding: 20px;\n          border: 1px solid #ddd;\n          border-radius: 8px;\n        }\n      </style>\n    </head>\n    <body>\n      <h1>اختبار عرض النصوص العربية في PDF باستخدام pdfmake</h1>\n\n      <div class=\"option\">\n        <h2>اختبار pdfkit (الطريقة الحالية)</h2>\n        <a href=\"/arabic-pdf-test\" class=\"btn view-btn\">فتح اختبار pdfkit</a>\n      </div>\n\n      <div class=\"option\">\n        <h2>اختبار pdfmake (الطريقة الجديدة)</h2>\n        <p>اختبار عرض النص العربي باستخدام PDFMake</p>\n        <a href=\"/api/test-pdfmake?mode=view\" class=\"btn view-btn\" target=\"_blank\">عرض الملف باستخدام pdfmake</a>\n        <a href=\"/api/test-pdfmake?mode=download\" class=\"btn download-btn\">تنزيل الملف باستخدام pdfmake</a>\n      </div>\n    </body>\n    </html>\n  `);\n});\n\n// نقطة نهاية موحدة للعرض أو التنزيل باستخدام pdfmake\nrouter.get('/api/test-pdfmake', async (req: Request, res: Response) => {\n  try {\n    // تحديد ما إذا كان العرض أو التنزيل\n    const mode = req.query.mode === 'download' ? 'download' : 'view';\n    console.log(`اختبار إنشاء PDF باللغة العربية باستخدام pdfmake - وضع: ${mode}`);\n\n    // تحميل الخط العربي وتحويله إلى Base64\n    const fontPath = path.join(process.cwd(), 'assets', 'fonts', 'Cairo-Regular.ttf');\n    let fontExists = true;\n    try {\n      fs.accessSync(fontPath, fs.constants.R_OK);\n    } catch (err) {\n      fontExists = false;\n      console.error(`خطأ: ملف الخط غير موجود في ${fontPath}`);\n    }\n\n    if (!fontExists) {\n      return res.status(500).json({ \n        message: 'لم يتم العثور على ملف الخط Cairo-Regular.ttf' \n      });\n    }\n\n    // إنشاء تعريف الخطوط المستخدمة في pdfmake\n    // استخدام مسار الملف مباشرة بدلاً من البيانات الثنائية\n    const fonts = {\n      Cairo: {\n        normal: fontPath,\n        bold: fontPath,\n        italics: fontPath,\n        bolditalics: fontPath\n      }\n    };\n\n    // إنشاء نسخة مخصصة من pdfmake\n    const printer = new PdfPrinter(fonts);\n\n    // إنشاء تعريف المستند باستخدام الطريقة الجديدة\n    const paragraphs = [\n      'بموجب هذه الاتفاقية، يلتزم الطرف الثاني بالحفاظ على سرية جميع المعلومات المتعلقة بالمشروع، وعدم مشاركتها مع أي طرف ثالث دون إذن كتابي مسبق من الطرف الأول.',\n      'تسري هذه الاتفاقية اعتباراً من تاريخ التوقيع الإلكتروني عليها، وتشمل جميع المراسلات والمستندات والمعلومات التي يتم تبادلها بين الطرفين لغرض تنفيذ المشروع.',\n      'في حال الإخلال بأي من بنود هذه الاتفاقية، يحق للطرف المتضرر اتخاذ كافة الإجراءات القانونية اللازمة لحماية مصالحه وحقوقه.',\n      'الطرف الأول: منصة لينكتك (https://linktech.app)',\n      'الطرف الثاني: _____________________________',\n      `تاريخ التوقيع: ${new Date().toISOString().split('T')[0]}`,\n      'اختبار أرقام: ١٢٣٤٥٦٧٨٩٠'\n    ];\n\n    const docDefinition = {\n      defaultStyle: {\n        font: 'Cairo',\n        alignment: 'right',\n        direction: 'rtl',\n        lineHeight: 1.3\n      },\n      pageMargins: [40, 60, 40, 60],\n      styles: {\n        header: { \n          fontSize: 20, \n          bold: true, \n          margin: [0, 0, 0, 10],\n          alignment: 'center'\n        },\n        paragraph: { \n          fontSize: 12, \n          margin: [0, 8, 0, 8] \n        }\n      },\n      content: [\n        // العنوان\n        { text: 'اتفاقية عدم الإفصاح', style: 'header' },\n        // الفقرات\n        ...paragraphs.map((p, index) => ({ \n          text: p, \n          style: 'paragraph',\n          margin: index === 3 ? [0, 30, 0, 0] : undefined // إضافة مسافة إضافية قبل معلومات الشركة\n        }))\n      ]\n    };\n\n    // إنشاء الـ PDF\n    const pdfDoc = printer.createPdfKitDocument(docDefinition);\n\n    // تحديد كيفية عرض الملف\n    if (mode === 'download') {\n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=arabic-test-pdfmake.pdf');\n    } else {\n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'inline; filename=arabic-test-pdfmake.pdf');\n    }\n\n    // إنشاء مسار مؤقت لحفظ الملف\n    const tempPdfPath = path.join(process.cwd(), 'temp', 'arabic-test-pdfmake.pdf');\n\n    // حفظ الملف محلياً ثم إرساله\n    pdfDoc.pipe(fs.createWriteStream(tempPdfPath));\n    pdfDoc.end();\n\n    // انتظار حتى يتم إنشاء الملف بالكامل\n    pdfDoc.on('end', () => {\n      const fileStream = fs.createReadStream(tempPdfPath);\n      fileStream.pipe(res);\n    });\n  } catch (error: any) {\n    console.error('خطأ في إنشاء PDF باستخدام pdfmake:', error);\n    res.status(500).json({ \n      message: 'حدث خطأ أثناء إنشاء ملف PDF', \n      error: error.message || String(error)\n    });\n  }\n});\n\nexport default router;","size_bytes":7278},"server/recommendation.ts":{"content":"import { Project, CompanyProfile, type User } from '@shared/schema';\nimport { storage } from './storage';\n\n/**\n * وحدة التوصية بالمشاريع\n * تقوم بتحليل المشاريع والشركات وتقديم توصيات باستخدام خوارزميات مطابقة\n */\n\n/**\n * حساب درجة التطابق بين المهارات\n * @param skills1 المهارات الأولى (مهارات المشروع)\n * @param skills2 المهارات الثانية (مهارات الشركة)\n * @returns درجة التطابق من 0 إلى 1\n */\nexport function calculateSkillMatch(skills1: string[] | null, skills2: string[] | null): number {\n  if (!skills1 || !skills2 || skills1.length === 0 || skills2.length === 0) {\n    return 0;\n  }\n\n  // تحويل المصفوفات إلى أحرف صغيرة للمقارنة\n  const skills1Lower = skills1.map(s => s.toLowerCase());\n  const skills2Lower = skills2.map(s => s.toLowerCase());\n  \n  // حساب عدد المهارات المشتركة\n  let matchCount = 0;\n  for (const skill of skills1Lower) {\n    if (skills2Lower.includes(skill)) {\n      matchCount++;\n    }\n  }\n\n  // إنشاء مجموعة فريدة من كل المهارات\n  const unionSet = new Set<string>();\n  for (const skill of skills1Lower) {\n    unionSet.add(skill);\n  }\n  for (const skill of skills2Lower) {\n    unionSet.add(skill);\n  }\n  \n  // نحسب متوسط الملاءمة بقسمة عدد المهارات المشتركة على مجموع المهارات الفريدة\n  return matchCount / unionSet.size;\n}\n\n/**\n * حساب تشابه جاكارد بين مجموعتين من المهارات\n * جيد للمقارنة بين مجموعات مختلفة الحجم\n */\nexport function calculateJaccardSimilarity(skills1: string[] | null, skills2: string[] | null): number {\n  if (!skills1 || !skills2 || skills1.length === 0 || skills2.length === 0) {\n    return 0;\n  }\n\n  // تحويل المصفوفات إلى أحرف صغيرة للمقارنة\n  const skills1Lower = skills1.map(s => s.toLowerCase());\n  const skills2Lower = skills2.map(s => s.toLowerCase());\n  \n  // حساب حجم التقاطع (عدد العناصر المشتركة)\n  let intersectionCount = 0;\n  for (const skill of skills1Lower) {\n    if (skills2Lower.includes(skill)) {\n      intersectionCount++;\n    }\n  }\n  \n  // إنشاء مصفوفة للاتحاد بدون تكرار\n  const unionSet = new Set<string>();\n  for (const skill of skills1Lower) {\n    unionSet.add(skill);\n  }\n  for (const skill of skills2Lower) {\n    unionSet.add(skill);\n  }\n  \n  // معامل تشابه جاكارد\n  return intersectionCount / unionSet.size;\n}\n\n/**\n * البحث عن المشاريع المناسبة لشركة معينة\n * @param companyId معرف الشركة\n * @param limit عدد النتائج المطلوبة\n * @returns قائمة المشاريع الموصى بها مع درجة التطابق\n */\nexport async function getRecommendedProjectsForCompany(\n  companyId: number,\n  limit: number = 5\n): Promise<Array<{project: Project, matchScore: number}>> {\n  // الحصول على معلومات الشركة\n  const company = await storage.getCompanyProfile(companyId);\n  if (!company) {\n    return [];\n  }\n\n  // الحصول على جميع المشاريع\n  const allProjects = await storage.getProjects();\n  \n  // حساب درجة التطابق لكل مشروع\n  const scoredProjects = allProjects.map(project => {\n    const skillMatchScore = calculateJaccardSimilarity(company.skills, project.skills);\n    \n    // يمكن توسيع المعايير هنا بإضافة عوامل أخرى للتقييم\n    const matchScore = skillMatchScore;\n    \n    return {\n      project,\n      matchScore\n    };\n  });\n  \n  // ترتيب المشاريع حسب درجة التطابق والاكتفاء بالعدد المطلوب\n  return scoredProjects\n    .sort((a, b) => b.matchScore - a.matchScore)\n    .slice(0, limit);\n}\n\n/**\n * البحث عن الشركات المناسبة لمشروع معين\n * @param projectId معرف المشروع\n * @param limit عدد النتائج المطلوبة\n * @returns قائمة الشركات الموصى بها مع درجة التطابق\n */\nexport async function getRecommendedCompaniesForProject(\n  projectId: number,\n  limit: number = 5\n): Promise<Array<{company: CompanyProfile, matchScore: number}>> {\n  // الحصول على معلومات المشروع\n  const project = await storage.getProject(projectId);\n  if (!project) {\n    return [];\n  }\n\n  // الحصول على جميع الشركات\n  const allCompanies = await storage.getCompanyProfiles();\n  \n  // حساب درجة التطابق لكل شركة\n  const scoredCompanies = allCompanies.map(company => {\n    const skillMatchScore = calculateJaccardSimilarity(project.skills, company.skills);\n    \n    // عوامل إضافية للتقييم\n    const ratingFactor = (company.rating || 0) / 5; // تطبيع التقييم إلى مقياس من 0 إلى 1\n    \n    // الصيغة النهائية للتقييم: 70% تطابق المهارات + 30% تقييم الشركة\n    const matchScore = (skillMatchScore * 0.7) + (ratingFactor * 0.3);\n    \n    return {\n      company,\n      matchScore\n    };\n  });\n  \n  // ترتيب الشركات حسب درجة التطابق والاكتفاء بالعدد المطلوب\n  return scoredCompanies\n    .sort((a, b) => b.matchScore - a.matchScore)\n    .slice(0, limit);\n}\n\n/**\n * البحث عن المشاريع المشابهة لمشروع معين\n * مفيد لاقتراح \"مشاريع مشابهة\" على صفحة المشروع\n */\nexport async function getSimilarProjects(\n  projectId: number,\n  limit: number = 3\n): Promise<Array<{project: Project, similarityScore: number}>> {\n  const project = await storage.getProject(projectId);\n  if (!project) {\n    return [];\n  }\n\n  const allProjects = await storage.getProjects();\n  \n  const similarities = allProjects\n    .filter(p => p.id !== projectId) // استبعاد المشروع نفسه\n    .map(otherProject => {\n      const skillSimilarity = calculateJaccardSimilarity(project.skills, otherProject.skills);\n      \n      return {\n        project: otherProject,\n        similarityScore: skillSimilarity\n      };\n    });\n  \n  return similarities\n    .sort((a, b) => b.similarityScore - a.similarityScore)\n    .slice(0, limit);\n}\n\n/**\n * الحصول على المشاريع الاتجاهية (الأكثر طلباً)\n * يمكن استخدامها لعرض المشاريع الشائعة على الصفحة الرئيسية\n */\nexport async function getTrendingProjects(limit: number = 5): Promise<Project[]> {\n  const allProjects = await storage.getProjects();\n  \n  // يمكن تعزيز هذه الوظيفة بمقاييس حقيقية مثل عدد المشاهدات أو الطلبات\n  // هنا نعتمد على الحالة فقط للتوضيح\n  \n  const trending = allProjects\n    .filter(project => project.highlightStatus === 'عالي الطلب');\n  \n  // إذا كان عدد المشاريع \"عالية الطلب\" أقل من المطلوب، نضيف مشاريع \"جديدة\"\n  if (trending.length < limit) {\n    const newProjects = allProjects\n      .filter(project => project.highlightStatus === 'جديد' && !trending.includes(project));\n    \n    trending.push(...newProjects.slice(0, limit - trending.length));\n  }\n  \n  // إذا استمر النقص، نضيف أي مشاريع أخرى\n  if (trending.length < limit) {\n    const otherProjects = allProjects\n      .filter(project => !trending.includes(project));\n    \n    trending.push(...otherProjects.slice(0, limit - trending.length));\n  }\n  \n  return trending.slice(0, limit);\n}","size_bytes":7770},"server/routes.ts":{"content":"import type { Express, Request, Response } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { WebSocketServer, WebSocket } from \"ws\";\nimport crypto from \"crypto\";\nimport { sendPasswordResetEmail, sendPasswordChangedNotification } from \"./emailService\";\nimport jwt from \"jsonwebtoken\";\n// استيراد مسارات Sitemap و robots.txt\nimport sitemapRoutes from \"./routes/sitemap\";\nimport arabicPdfTestRoutes from \"./arabicPdfTest\";\nimport pdfmakeTestRoutes from \"./pdfmakeTest\";\nimport generateNdaRoutes from \"./generateNDA\";\nimport sadiqRoutes from \"./routes/sadiq\";\n// Contact routes are now integrated below\nimport PDFDocument from \"pdfkit\";\nimport { Readable } from \"stream\";\nimport fsExtra from \"fs-extra\";\nimport puppeteer from \"puppeteer\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { fileURLToPath } from 'url';\nimport { dirname } from 'path';\n\n// مخزن مؤقت لإعدادات التواصل (على مستوى الوحدة لضمان الاستمرارية)\nlet globalContactSettingsCache: any = {\n  contact_email: 'info@linktech.app',\n  contact_phone: '+966 53 123 4567', \n  contact_address: 'واحة المعرفة، طريق الملك عبدالعزيز، جدة، المملكة العربية السعودية',\n  business_hours: 'الأحد - الخميس: 9:00 صباحاً - 5:00 مساءً\\nالجمعة - السبت: مغلق'\n};\n// مكتبة pdfmake للتوليد المحسّن لملفات PDF\nimport PdfPrinter from 'pdfmake/src/printer';\n\n// Track active connections\nconst connections = new Map<number, WebSocket>();\nimport { \n  insertUserSchema, \n  insertCompanyProfileSchema, \n  insertProjectSchema, \n  insertMessageSchema,\n  insertTestimonialSchema,\n  insertProjectOfferSchema,\n  insertNewsletterSubscriberSchema,\n  insertNdaAgreementSchema,\n  insertBlogCategorySchema,\n  insertBlogPostSchema,\n  insertBlogCommentSchema,\n  insertContactMessageSchema,\n  insertSiteSettingSchema\n} from \"@shared/schema\";\nimport { z } from \"zod\";\nimport { \n  getRecommendedProjectsForCompany, \n  getRecommendedCompaniesForProject,\n  getSimilarProjects,\n  getTrendingProjects\n} from \"./recommendation\";\n\nimport {\n  getEnhancedRecommendationsForProject,\n  getEnhancedRecommendationsForCompany,\n  getEnhancedSimilarProjects,\n  discoverProjectDomains,\n  discoverTrendingTechnologies,\n  analyzeProject,\n  analyzeCompany\n} from \"./aiRecommendation\";\nimport { checkMessageForProhibitedContent, sanitizeMessageContent, addMessageToConversationHistory } from \"./contentFilter\";\nimport { trackVisit, getVisitStats, getQuickStats } from \"./visitTracking\";\nimport bcrypt from \"bcryptjs\";\nimport crypto from \"crypto\";\n\n// JWT helpers\nconst JWT_SECRET = process.env.JWT_SECRET || 'linktech-jwt-secret-2024';\n\nfunction generateToken(userId: number): string {\n  return jwt.sign({ userId }, JWT_SECRET, { expiresIn: '7d' });\n}\n\nfunction verifyToken(token: string): { userId: number } | null {\n  try {\n    return jwt.verify(token, JWT_SECRET) as { userId: number };\n  } catch {\n    return null;\n  }\n}\n\n// JWT Authentication middleware\nconst jwtAuth = async (req: Request, res: Response, next: Function) => {\n  const authHeader = req.headers.authorization;\n  const token = authHeader && authHeader.startsWith('Bearer ') ? authHeader.slice(7) : null;\n  \n  console.log(`JWT Middleware: ${req.method} ${req.path}`);\n  console.log(`Authorization header: ${authHeader}`);\n  console.log(`Extracted token: ${token ? 'Present' : 'Missing'}`);\n  \n  if (!token) {\n    console.log('No token found, continuing without authentication');\n    return next(); // مواصلة بدون مصادقة\n  }\n  \n  const decoded = verifyToken(token);\n  console.log(`Token verification result: ${decoded ? 'Valid' : 'Invalid'}`);\n  \n  if (decoded) {\n    console.log(`Decoded token userId: ${decoded.userId}`);\n    const user = await storage.getUser(decoded.userId);\n    console.log(`User lookup result: ${user ? `Found user ${user.username}` : 'User not found'}`);\n    \n    if (user) {\n      req.user = user;\n      console.log(`Set req.user to: ${user.username} (${user.role})`);\n    }\n  }\n  \n  return next();\n};\n\n// تم تعريف استيراد WebSocket واستخدامها في مكان آخر من الملف\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // إضافة مسارات التحويل والتنزيل ومسارات PDF\n  app.use(arabicPdfTestRoutes);\n  app.use(pdfmakeTestRoutes);\n  app.use(generateNdaRoutes);\n  // Contact routes integrated above\n  \n  // Add webhook endpoint BEFORE JWT middleware to bypass authentication\n  // Webhook endpoint for Sadiq notifications - NO AUTHENTICATION REQUIRED\n  app.post('/api/sadiq/webhook', async (req: Request, res: Response) => {\n    try {\n      console.log('🔔 تم استلام webhook من صادق:', JSON.stringify(req.body, null, 2));\n      \n      const webhookData = req.body;\n      \n      // Verify webhook authenticity using the expected webhook secret\n      const authHeader = req.headers.authorization;\n      console.log('🔐 Authorization header:', authHeader);\n      \n      if (authHeader !== 'Bearer linktech-webhook-secret-2025') {\n        console.log('⚠️ Webhook authentication failed');\n        return res.status(401).json({ message: 'Unauthorized webhook' });\n      }\n      \n      // Extract envelope information\n      const envelopeId = webhookData.envelopeId;\n      const status = webhookData.status;\n      const referenceNumber = webhookData.referenceNumber;\n      \n      if (!referenceNumber) {\n        console.log('⚠️ لا يوجد رقم مرجع في webhook');\n        return res.status(400).json({ message: 'Missing reference number' });\n      }\n      \n      // Find NDA by reference number - search across all NDAs\n      console.log(`🔍 البحث عن اتفاقية بالرقم المرجعي: ${referenceNumber}`);\n      \n      // Try to find NDA across all projects\n      let nda = null;\n      try {\n        // Get all projects and check their NDAs\n        const allProjects = await storage.getProjects();\n        for (const project of allProjects) {\n          const projectNda = await storage.getNdaAgreementByProjectId(project.id);\n          if (projectNda && projectNda.sadiqReferenceNumber === referenceNumber) {\n            nda = projectNda;\n            break;\n          }\n        }\n      } catch (searchError) {\n        console.error('خطأ في البحث عن الاتفاقية:', searchError);\n      }\n      \n      if (!nda) {\n        console.log('⚠️ لم يتم العثور على اتفاقية بالرقم المرجعي:', referenceNumber);\n        return res.status(404).json({ message: 'NDA not found' });\n      }\n      \n      console.log(`📋 تحديث حالة الاتفاقية ${nda.id} إلى: ${status}`);\n      \n      // Update NDA status based on webhook data\n      let newStatus = nda.status;\n      let signedAt = nda.signedAt;\n      \n      if (status === 'Completed') {\n        newStatus = 'signed';\n        signedAt = new Date();\n      } else if (status === 'Voided') {\n        newStatus = 'cancelled';\n      } else if (status === 'In-progress') {\n        newStatus = 'invitation_sent';\n      }\n      \n      // Update the NDA in database\n      await storage.updateNdaAgreement(nda.id, {\n        status: newStatus,\n        envelopeStatus: status,\n        ...(signedAt && { signedAt })\n      });\n      \n      // Create notification for the user\n      if (newStatus === 'signed') {\n        const project = await storage.getProject(nda.projectId);\n        if (project) {\n          await storage.createNotification({\n            userId: project.userId,\n            type: 'nda_completed',\n            title: 'تم توقيع اتفاقية عدم الإفصاح',\n            content: `تم توقيع اتفاقية عدم الإفصاح للمشروع \"${project.title}\" من جميع الأطراف بنجاح. يمكنك الآن المتابعة مع الشركة لبدء العمل على المشروع.`,\n            relatedId: nda.id,\n            actionUrl: `/nda-complete/${nda.id}`\n          });\n          \n          console.log(`✅ تم إنشاء إشعار للمستخدم ${project.userId} حول اكتمال التوقيع`);\n        }\n      }\n      \n      console.log(`✅ تم تحديث حالة الاتفاقية ${nda.id} بنجاح`);\n      \n      res.json({\n        success: true,\n        message: 'Webhook processed successfully',\n        ndaId: nda.id,\n        newStatus: newStatus\n      });\n    } catch (error) {\n      console.error('❌ خطأ في معالجة webhook:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Internal server error'\n      });\n    }\n  });\n\n  // Initialize session and passport\n  // استخدام JWT middleware\n  app.use(jwtAuth);\n  \n  // CORS middleware للـ JWT \n  app.use((req, res, next) => {\n    const origin = req.headers.origin || req.headers.referer;\n    \n    res.header('Access-Control-Allow-Origin', origin || '*');\n    res.header('Access-Control-Allow-Credentials', 'true');\n    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS, PATCH');\n    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');\n    \n    if (req.method === 'OPTIONS') {\n      return res.sendStatus(200);\n    }\n    \n    next();\n  });\n\n  // تم إزالة passport configuration - يستخدم JWT الآن\n\n  const isAuthenticated = (req: Request, res: Response, next: Function) => {\n    console.log(`طلب ${req.method} ${req.path} - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n    \n    if (req.user) {\n      console.log(`المستخدم مصرح: ${req.user.username}, دور: ${req.user.role}`);\n      return next();\n    }\n    \n    console.log(`طلب ${req.path} - المستخدم غير مصرح`);\n    res.status(401).json({ message: 'Not authenticated' });\n  };\n  \n  // التحقق من صلاحيات المسؤول\n  const isAdmin = (req: Request, res: Response, next: Function) => {\n    if (!req.user) {\n      return res.status(401).json({ message: 'Unauthorized' });\n    }\n    \n    if (req.user.role === 'admin') {\n      return next();\n    }\n    \n    return res.status(403).json({ message: 'Forbidden - Admin access required' });\n  };\n\n  // Auth routes\n  app.post('/api/auth/register', async (req: Request, res: Response) => {\n    try {\n      const userData = insertUserSchema.parse(req.body);\n      \n      // Check if username or email exists\n      const existingUsername = await storage.getUserByUsername(userData.username);\n      if (existingUsername) {\n        return res.status(400).json({ message: 'Username already exists' });\n      }\n      \n      const existingEmail = await storage.getUserByEmail(userData.email);\n      if (existingEmail) {\n        return res.status(400).json({ message: 'Email already exists' });\n      }\n      \n      // تشفير كلمة المرور قبل التخزين\n      const hashedPassword = await bcrypt.hash(userData.password, 10);\n      const securedUserData = { ...userData, password: hashedPassword };\n      \n      const user = await storage.createUser(securedUserData);\n      \n      // If user is a company, create a company profile\n      if (userData.role === 'company' && req.body.companyProfile) {\n        const profileData = insertCompanyProfileSchema.parse({\n          ...req.body.companyProfile,\n          userId: user.id\n        });\n        await storage.createCompanyProfile(profileData);\n      }\n      \n      // إنشاء JWT token للمستخدم الجديد\n      const token = generateToken(user.id);\n      \n      // إزالة كلمة المرور من استجابة التسجيل\n      const { password, ...userWithoutPassword } = user;\n      return res.status(201).json({ \n        user: userWithoutPassword,\n        token \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: 'Validation error', errors: error.errors });\n      }\n      console.error('Registration error:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.post('/api/auth/login', async (req: Request, res: Response) => {\n    try {\n      console.log(`محاولة تسجيل دخول للمستخدم: ${req.body.username}`);\n      \n      const { username, password } = req.body;\n      if (!username || !password) {\n        return res.status(400).json({ message: 'Username and password required' });\n      }\n\n      const user = await storage.getUserByUsername(username);\n      if (!user) {\n        console.log(`لم يتم العثور على مستخدم باسم: ${username}`);\n        return res.status(401).json({ message: 'Invalid username or password' });\n      }\n      \n      console.log(`تم العثور على المستخدم: ${username}, يتم التحقق من كلمة المرور...`);\n      \n      // التحقق من كلمة المرور\n      let isValidPassword = false;\n      \n      if (user.password.startsWith('$2a$') || user.password.startsWith('$2b$')) {\n        console.log(`كلمة المرور مشفرة للمستخدم: ${username}، استخدام bcrypt للتحقق`);\n        isValidPassword = await bcrypt.compare(password, user.password);\n        console.log(`نتيجة التحقق باستخدام bcrypt: ${isValidPassword ? 'ناجح' : 'فاشل'}`);\n      } else {\n        console.log(`كلمة المرور غير مشفرة للمستخدم: ${username}، استخدام المقارنة المباشرة`);\n        isValidPassword = user.password === password;\n        console.log(`نتيجة التحقق المباشر: ${isValidPassword ? 'ناجح' : 'فاشل'}`);\n        \n        if (isValidPassword) {\n          console.log(`ترحيل كلمة المرور للمستخدم: ${username} إلى bcrypt`);\n          const hashedPassword = await bcrypt.hash(password, 10);\n          await storage.updateUserPassword(user.id, hashedPassword);\n          console.log(`تم تحديث تشفير كلمة المرور للمستخدم: ${username}`);\n        }\n      }\n      \n      if (!isValidPassword) {\n        console.log(`فشل المصادقة للمستخدم: ${username} - كلمة المرور غير صحيحة`);\n        return res.status(401).json({ message: 'Invalid username or password' });\n      }\n      \n      // إنشاء JWT token\n      const token = generateToken(user.id);\n      console.log(`نجاح المصادقة للمستخدم: ${username} بالدور: ${user.role}`);\n      console.log(`تم إنشاء JWT token للمستخدم: ${username}`);\n      \n      // إزالة كلمة المرور من استجابة تسجيل الدخول\n      const { password: _, ...userWithoutPassword } = user;\n      \n      console.log(`تسجيل دخول ناجح للمستخدم: ${username}`);\n      console.log(`إرسال استجابة تسجيل الدخول مع token`);\n      \n      return res.json({ \n        user: userWithoutPassword,\n        token \n      });\n    } catch (error) {\n      console.error('خطأ تسجيل الدخول:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.post('/api/auth/logout', (req: Request, res: Response) => {\n    console.log('طلب تسجيل خروج، إزالة token من الواجهة الأمامية');\n    res.json({ success: true });\n  });\n  \n  // Password reset routes\n  app.post('/api/auth/forgot-password', async (req: Request, res: Response) => {\n    try {\n      const { email } = req.body;\n      if (!email) {\n        return res.status(400).json({ message: 'Email is required' });\n      }\n      \n      // Check if user exists\n      const user = await storage.getUserByEmail(email);\n      if (!user) {\n        // لأسباب أمنية، نخبر المستخدم أن البريد تم إرساله حتى لو كان البريد غير موجود\n        return res.json({ success: true, message: 'If your email exists in our system, you will receive a password reset link' });\n      }\n      \n      // Generate token\n      const token = crypto.randomBytes(32).toString('hex');\n      const expiresAt = new Date();\n      expiresAt.setHours(expiresAt.getHours() + 24); // الرمز صالح لمدة 24 ساعة\n      \n      // Store token\n      const success = await storage.createPasswordResetToken(email, token, expiresAt);\n      if (!success) {\n        return res.status(500).json({ message: 'Failed to create password reset token' });\n      }\n      \n      // Generate reset link\n      const resetLink = `${req.protocol}://${req.get('host')}/auth/reset-password/${token}`;\n      \n      // Send email\n      console.log(\"إرسال بريد إعادة تعيين كلمة المرور إلى:\", user.email);\n      let emailSent = false;\n      \n      try {\n        emailSent = await sendPasswordResetEmail(\n          user.email,\n          user.name,\n          token,\n          resetLink\n        );\n        console.log(\"نتيجة إرسال البريد الإلكتروني:\", emailSent ? \"ناجح\" : \"فاشل\");\n      } catch (error) {\n        console.error(\"استثناء أثناء إرسال البريد الإلكتروني:\", error);\n      }\n      \n      // في بيئة التطوير، نعرض دائماً الرابط (سواء نجح إرسال البريد أم لا)\n      // في بيئة الإنتاج، يمكن تعديل هذا الشرط ليكون process.env.NODE_ENV !== 'production'\n      const isDevelopment = true;\n      \n      if (isDevelopment || !emailSent) {\n        console.log(\"عرض رابط إعادة التعيين في بيئة التطوير:\", resetLink);\n        return res.json({ \n          success: true, \n          message: 'Password reset link generated. For development purposes, it is returned in this response.', \n          resetLink: resetLink,\n          emailSent: emailSent\n        });\n      }\n      \n      // هذا الجزء سيتم تنفيذه فقط في حالة نجاح إرسال البريد في بيئة الإنتاج\n      res.json({ \n        success: true, \n        message: 'Password reset link has been sent to your email'\n      });\n    } catch (error) {\n      console.error('Error in forgot password:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Verify password reset token\n  app.get('/api/auth/reset-password/:token', async (req: Request, res: Response) => {\n    try {\n      const { token } = req.params;\n      \n      const tokenData = await storage.getPasswordResetToken(token);\n      if (!tokenData) {\n        return res.status(400).json({ message: 'Invalid or expired token' });\n      }\n      \n      res.json({ valid: true, email: tokenData.email });\n    } catch (error) {\n      console.error('Error verifying reset token:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Reset password with token\n  app.post('/api/auth/reset-password/:token', async (req: Request, res: Response) => {\n    try {\n      const { token } = req.params;\n      const { password } = req.body;\n      \n      if (!password) {\n        return res.status(400).json({ message: 'Password is required' });\n      }\n      \n      // Check if token is valid\n      const tokenData = await storage.getPasswordResetToken(token);\n      if (!tokenData) {\n        return res.status(400).json({ message: 'Invalid or expired token' });\n      }\n      \n      // Hash the new password\n      const hashedPassword = await bcrypt.hash(password, 10);\n      \n      // Update the user's password\n      const updatedUser = await storage.updateUserPassword(tokenData.userId, hashedPassword);\n      if (!updatedUser) {\n        return res.status(500).json({ message: 'Failed to update password' });\n      }\n      \n      // Delete the token so it can't be used again\n      await storage.deletePasswordResetToken(token);\n      \n      res.json({ success: true, message: 'Password has been reset successfully' });\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // طريقة سريعة لإنشاء حساب مسؤول (فقط للاختبار)\n  app.get('/api/admin/create', async (req: Request, res: Response) => {\n    try {\n      // تحقق مما إذا كان يوجد مستخدم بنفس اسم المستخدم\n      const existingUser = await storage.getUserByUsername('admin');\n      if (existingUser) {\n        // إزالة كلمة المرور من الاستجابة\n        const { password, ...userWithoutPassword } = existingUser;\n        return res.json({ message: 'Admin user already exists', user: userWithoutPassword });\n      }\n      \n      // تشفير كلمة المرور للمسؤول\n      const hashedPassword = await bcrypt.hash('admin123', 10);\n      \n      // إنشاء مستخدم المسؤول\n      const adminUser = await storage.createUser({\n        username: 'admin',\n        password: hashedPassword,\n        email: 'admin@linktech.app',\n        role: 'admin',\n        name: 'مسؤول النظام',\n        avatar: 'https://randomuser.me/api/portraits/men/33.jpg'\n      });\n      \n      // إزالة كلمة المرور من الاستجابة\n      const { password, ...userWithoutPassword } = adminUser;\n      return res.json({ message: 'Admin user created successfully', user: userWithoutPassword });\n    } catch (error) {\n      console.error('Error creating admin user:', error);\n      return res.status(500).json({ message: 'Error creating admin user' });\n    }\n  });\n\n  app.get('/api/auth/user', async (req: Request, res: Response) => {\n    console.log(`طلب /api/auth/user - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n    \n    if (req.user) {\n      console.log(`استرجاع معلومات المستخدم: ${req.user.username}, الدور: ${req.user.role}, معرف: ${req.user.id}`);\n      \n      try {\n        // التأكد من أن البيانات محدثة من قاعدة البيانات\n        const freshUser = await storage.getUser(req.user.id);\n        if (freshUser) {\n          const { password, ...userWithoutPassword } = freshUser;\n          console.log('إرسال معلومات المستخدم المحدثة: ', { user: userWithoutPassword });\n          return res.json({ user: userWithoutPassword });\n        } else {\n          console.log('المستخدم غير موجود في قاعدة البيانات');\n          return res.status(401).json({ message: 'User not found' });\n        }\n      } catch (error) {\n        console.error('خطأ في استرجاع بيانات المستخدم:', error);\n        return res.status(500).json({ message: 'Internal server error' });\n      }\n    }\n    \n    console.log(`طلب /api/auth/user - المستخدم غير مصرح`);\n    return res.status(401).json({ message: 'Not authenticated' });\n  });\n\n  // جلب جميع المستخدمين (للمسؤول فقط)\n  app.get('/api/users/all', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // تحقق ما إذا كان المستخدم مسؤول\n      if (req.user?.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden' });\n      }\n      \n      const users = await storage.getUsers();\n      // استثناء كلمات المرور من القائمة\n      const usersWithoutPasswords = users.map(user => {\n        const { password, ...userWithoutPassword } = user;\n        return userWithoutPassword;\n      });\n      \n      res.json(usersWithoutPasswords);\n    } catch (error) {\n      console.error('Error fetching all users:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // User routes\n  app.get('/api/users/:id', async (req: Request, res: Response) => {\n    try {\n      const user = await storage.getUser(parseInt(req.params.id));\n      if (!user) {\n        return res.status(404).json({ message: 'User not found' });\n      }\n      const { password, ...userWithoutPassword } = user;\n      res.json(userWithoutPassword);\n    } catch (error) {\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // Update user information\n  app.patch('/api/users/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const userId = parseInt(req.params.id);\n      const updates = req.body;\n      \n      // Only allow users to update their own information or admins to update any user\n      if (req.user?.id !== userId && req.user?.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden' });\n      }\n      \n      // Remove sensitive fields that shouldn't be updated through this endpoint\n      const { password, role, id, createdAt, ...allowedUpdates } = updates;\n      \n      const updatedUser = await storage.updateUser(userId, allowedUpdates);\n      if (!updatedUser) {\n        return res.status(404).json({ message: 'User not found' });\n      }\n      \n      const { password: _, ...userWithoutPassword } = updatedUser;\n      res.json(userWithoutPassword);\n    } catch (error) {\n      console.error('Error updating user:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // Company profile routes - الشركات لا تظهر أبداً للزوار أو العملاء\n  app.get('/api/companies', async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب قائمة الشركات - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n      \n      // المستخدم مسجل دخول والمستخدم هو مسؤول، نعرض جميع الشركات\n      if (req.user && (req.user as any).role === 'admin') {\n        console.log(`المستخدم مسؤول، عرض جميع الشركات`);\n        \n        const companyProfiles = await storage.getCompanyProfiles();\n        console.log(`تم العثور على ${companyProfiles.length} شركة في قاعدة البيانات`);\n        \n        // الحصول على بيانات المستخدم المرتبطة بكل شركة\n        const profilesWithUserData = await Promise.all(\n          companyProfiles.map(async (profile) => {\n            const user = await storage.getUser(profile.userId);\n            return {\n              ...profile,\n              username: user?.username,\n              name: user?.name,\n              email: user?.email\n            };\n          })\n        );\n        \n        console.log(`تم تحضير ${profilesWithUserData.length} ملف شركة للمسؤول`);\n        res.json(profilesWithUserData);\n      } else {\n        // الشركات تظهر للمستخدمين المسجلين\n        console.log(`طلب قائمة الشركات من مستخدم ليس مسؤول أو زائر غير مسجل`);\n        \n        if (req.user) {\n          // للمستخدمين المسجلين - ارسال قائمة الشركات (محجوبة جزئياً) \n          const companyProfiles = await storage.getCompanyProfiles();\n          \n          // الحصول على بيانات المستخدم المرتبطة بكل شركة\n          const profilesWithUserData = await Promise.all(\n            companyProfiles.map(async (profile) => {\n              const user = await storage.getUser(profile.userId);\n              return {\n                ...profile,\n                username: user?.username,\n                name: user?.name\n              };\n            })\n          );\n          \n          console.log(`تم إرسال ${profilesWithUserData.length} شركة للمستخدم المسجل`);\n          res.json(profilesWithUserData);\n        } else {\n          // للزوار غير المسجلين - لا نرسل أي شركات\n          console.log(`زائر غير مسجل - عدم إرسال بيانات الشركات`);\n          res.json([]);\n        }\n      }\n    } catch (error) {\n      console.error('خطأ في استرجاع قائمة الشركات:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // الحصول على بيانات الشركة بواسطة معرف المستخدم\n  app.get('/api/companies/user/:userId', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب ملف الشركة للمستخدم رقم ${req.params.userId} - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n      \n      const userId = parseInt(req.params.userId);\n      if (isNaN(userId)) {\n        return res.status(400).json({ message: 'Invalid user ID' });\n      }\n      \n      // التحقق من أن المستخدم هو صاحب الملف أو مسؤول\n      const currentUser = req.user as any;\n      if (currentUser.id !== userId && currentUser.role !== 'admin') {\n        console.log(`رفض وصول غير مصرح: المستخدم ${currentUser.id} حاول الوصول إلى ملف الشركة للمستخدم ${userId}`);\n        return res.status(403).json({ message: 'Forbidden: You are not authorized to view this profile' });\n      }\n      \n      // البحث عن ملف الشركة بناءً على معرف المستخدم\n      const profile = await storage.getCompanyProfileByUserId(userId);\n      if (!profile) {\n        console.log(`لم يتم العثور على ملف للشركة للمستخدم ${userId}`);\n        return res.status(404).json({ message: 'Company profile not found' });\n      }\n      \n      // الحصول على بيانات المستخدم\n      const user = await storage.getUser(userId);\n      if (!user) {\n        console.log(`لم يتم العثور على بيانات المستخدم ${userId}`);\n        return res.status(404).json({ message: 'User not found' });\n      }\n      \n      // بناء كائن الاستجابة\n      const response = {\n        ...profile,\n        username: user.username,\n        name: user.name,\n        email: user.email\n      };\n      \n      console.log(`تم إرسال بيانات الشركة \"${user.name}\" بنجاح`);\n      res.json(response);\n    } catch (error) {\n      console.error(`خطأ في استرجاع بيانات الشركة:`, error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  app.get('/api/companies/:id', async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب تفاصيل الشركة برقم ${req.params.id} - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n      \n      const companyId = parseInt(req.params.id);\n      if (isNaN(companyId)) {\n        return res.status(400).json({ message: 'Invalid company ID' });\n      }\n      \n      const profile = await storage.getCompanyProfile(companyId);\n      if (!profile) {\n        console.log(`لم يتم العثور على ملف للشركة برقم ${companyId}`);\n        return res.status(404).json({ message: 'Company profile not found' });\n      }\n      \n      const user = await storage.getUser(profile.userId);\n      if (!user) {\n        console.log(`لم يتم العثور على حساب المستخدم المرتبط بالشركة ${companyId}`);\n        return res.status(404).json({ message: 'Company user not found' });\n      }\n      \n      // بناء كائن الاستجابة\n      const response = {\n        ...profile,\n        username: user.username,\n        name: user.name,\n        email: user.email\n      };\n      \n      console.log(`تم إرسال بيانات الشركة \"${user.name}\" بنجاح`);\n      res.json(response);\n    } catch (error) {\n      console.error(`خطأ في استرجاع بيانات الشركة:`, error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // كشف معلومات التواصل للشركة بعد دفع الرسوم\n  app.post('/api/companies/:id/reveal-contact', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب كشف معلومات التواصل للشركة رقم ${req.params.id}`);\n      const companyId = parseInt(req.params.id);\n      \n      if (isNaN(companyId)) {\n        return res.status(400).json({ message: 'معرف الشركة غير صالح' });\n      }\n      \n      const { paymentId, amount } = req.body;\n      \n      if (!paymentId) {\n        return res.status(400).json({ message: 'معرف الدفع مطلوب' });\n      }\n      \n      // في البيئة الحقيقية، هنا يمكن التحقق من صحة عملية الدفع مع ميسر\n      console.log(`تم استلام معلومات الدفع: معرف الدفع=${paymentId}، المبلغ=${amount}`);\n      \n      // للتبسيط، سنعتبر أن جميع عمليات الدفع ناجحة في بيئة التطوير\n      \n      // إنشاء سجل للدفع في قاعدة البيانات\n      // يمكن إضافة هذه الوظيفة لاحقاً للتتبع الكامل لعمليات الدفع\n      \n      console.log(`تم كشف معلومات التواصل للشركة رقم ${companyId} بنجاح`);\n      \n      // الرد بنجاح\n      res.status(200).json({ \n        success: true, \n        message: 'تم كشف معلومات التواصل بنجاح',\n        companyId \n      });\n    } catch (error) {\n      console.error(`خطأ في معالجة طلب كشف معلومات التواصل:`, error);\n      res.status(500).json({ message: 'خطأ في الخادم الداخلي' });\n    }\n  });\n\n  app.post('/api/companies', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      if (user.role !== 'company') {\n        return res.status(403).json({ message: 'Only company accounts can create profiles' });\n      }\n      \n      // Check if profile already exists\n      const existingProfile = await storage.getCompanyProfileByUserId(user.id);\n      if (existingProfile) {\n        return res.status(400).json({ message: 'Profile already exists' });\n      }\n      \n      const profileData = insertCompanyProfileSchema.parse({\n        ...req.body,\n        userId: user.id\n      });\n      \n      const profile = await storage.createCompanyProfile(profileData);\n      res.status(201).json(profile);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: 'Validation error', errors: error.errors });\n      }\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.patch('/api/companies/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const profileId = parseInt(req.params.id);\n      \n      console.log(`طلب تحديث ملف الشركة برقم ${profileId} - المستخدم: ${user.username}`);\n      console.log('بيانات التحديث:', JSON.stringify(req.body));\n      \n      const profile = await storage.getCompanyProfile(profileId);\n      if (!profile) {\n        console.log(`خطأ: لم يتم العثور على ملف الشركة برقم ${profileId}`);\n        return res.status(404).json({ message: 'Company profile not found' });\n      }\n      \n      if (profile.userId !== user.id && user.role !== 'admin') {\n        console.log(`خطأ: المستخدم ${user.username} غير مصرح له بتحديث ملف الشركة ${profileId}`);\n        return res.status(403).json({ message: 'Not authorized to update this profile' });\n      }\n      \n      const updatedProfile = await storage.updateCompanyProfile(profileId, req.body);\n      console.log('تم تحديث ملف الشركة بنجاح:', JSON.stringify(updatedProfile));\n      res.json(updatedProfile);\n    } catch (error) {\n      console.error('خطأ في تحديث ملف الشركة:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // تحديث البيانات الشخصية للشركة (مطلوبة لاتفاقيات عدم الإفصاح)\n  app.patch('/api/companies/:id/personal-info', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const profileId = parseInt(req.params.id);\n      \n      console.log(`طلب تحديث البيانات الشخصية لملف الشركة برقم ${profileId} - المستخدم: ${user.username}`);\n      console.log('البيانات الشخصية للتحديث:', JSON.stringify(req.body));\n      \n      const profile = await storage.getCompanyProfile(profileId);\n      if (!profile) {\n        console.log(`خطأ: لم يتم العثور على ملف الشركة برقم ${profileId}`);\n        return res.status(404).json({ message: 'Company profile not found' });\n      }\n      \n      if (profile.userId !== user.id && user.role !== 'admin') {\n        console.log(`خطأ: المستخدم ${user.username} غير مصرح له بتحديث ملف الشركة ${profileId}`);\n        return res.status(403).json({ message: 'Not authorized to update this profile' });\n      }\n      \n      // استخراج البيانات الشخصية فقط من الطلب\n      const personalInfoData = {\n        fullName: req.body.fullName,\n        nationalId: req.body.nationalId,\n        phone: req.body.phone,\n        birthDate: req.body.birthDate,\n        address: req.body.address\n      };\n      \n      // تنظيف البيانات من القيم الفارغة أو undefined\n      const cleanedData = Object.fromEntries(\n        Object.entries(personalInfoData).filter(([_, value]) => value !== undefined && value !== null && value !== '')\n      );\n      \n      console.log('البيانات الشخصية المنظفة للتحديث:', JSON.stringify(cleanedData));\n      \n      const updatedProfile = await storage.updateCompanyProfile(profileId, cleanedData);\n      console.log('تم تحديث البيانات الشخصية بنجاح:', JSON.stringify(updatedProfile));\n      res.json(updatedProfile);\n    } catch (error) {\n      console.error('خطأ في تحديث البيانات الشخصية للشركة:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // توثيق أو إلغاء توثيق شركة - للمسؤولين فقط\n  app.patch('/api/companies/:id/verify', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      // تأكد من أن المستخدم مسؤول\n      if (user.role !== 'admin') {\n        return res.status(403).json({ message: 'هذه العملية متاحة للمسؤولين فقط' });\n      }\n      \n      // التحقق من صحة المعلمات\n      const companyIdStr = req.params.id;\n      if (!companyIdStr || isNaN(parseInt(companyIdStr))) {\n        return res.status(400).json({ message: 'معرف الشركة غير صالح' });\n      }\n      \n      const companyId = parseInt(companyIdStr);\n      if (companyId <= 0) {\n        return res.status(400).json({ message: 'معرف الشركة يجب أن يكون رقمًا موجبًا' });\n      }\n      \n      // التحقق من حالة التوثيق\n      if (req.body.verified === undefined) {\n        return res.status(400).json({ message: 'يجب تحديد حالة التوثيق (verified)' });\n      }\n      \n      const verified = req.body.verified === true;\n      \n      // التحقق من الملاحظات والمستندات\n      let verificationNotes = '';\n      if (req.body.verificationNotes) {\n        if (typeof req.body.verificationNotes !== 'string') {\n          return res.status(400).json({ message: 'يجب أن تكون ملاحظات التوثيق نص' });\n        }\n        \n        if (req.body.verificationNotes.length > 1000) {\n          return res.status(400).json({ message: 'ملاحظات التوثيق طويلة جداً (الحد الأقصى 1000 حرف)' });\n        }\n        \n        verificationNotes = req.body.verificationNotes;\n      }\n      \n      // التحقق من المستندات\n      let verificationDocuments = null;\n      if (req.body.verificationDocuments) {\n        if (!Array.isArray(req.body.verificationDocuments)) {\n          return res.status(400).json({ message: 'يجب أن تكون مستندات التوثيق مصفوفة' });\n        }\n        \n        // يمكن إضافة المزيد من التحقق من حجم المستندات وعددها هنا\n        if (req.body.verificationDocuments.length > 10) {\n          return res.status(400).json({ message: 'عدد مستندات التوثيق كبير جداً (الحد الأقصى 10 مستندات)' });\n        }\n        \n        verificationDocuments = req.body.verificationDocuments;\n      }\n      \n      // جمع بيانات التحقق\n      const verificationData = {\n        verifiedBy: user.id, // معرف المسؤول الذي قام بالتوثيق\n        verificationDate: new Date(),\n        verificationNotes,\n        verificationDocuments\n      };\n      \n      console.log(`توثيق شركة ${companyId} بواسطة المسؤول ${user.id} - الحالة: ${verified ? 'موثقة' : 'غير موثقة'}`);\n      \n      // التحقق من وجود الشركة قبل محاولة التوثيق\n      const existingCompany = await storage.getCompanyProfile(companyId);\n      if (!existingCompany) {\n        return res.status(404).json({ message: 'الشركة غير موجودة' });\n      }\n      \n      const companyProfile = await storage.verifyCompany(companyId, verified, verificationData);\n      if (!companyProfile) {\n        return res.status(404).json({ message: 'فشل في تحديث حالة توثيق الشركة' });\n      }\n      \n      // إرسال إشعار بالبريد الإلكتروني (إذا كان التحقق صحيحاً)\n      if (verified) {\n        try {\n          const { sendCompanyVerificationEmail } = await import('./emailService');\n          \n          // الحصول على معلومات المستخدم للشركة\n          const companyUser = await storage.getUser(companyProfile.userId);\n          if (companyUser && companyUser.email) {\n            console.log(`جاري إرسال بريد إلكتروني لإشعار الشركة بنتيجة التوثيق: ${companyUser.email}`);\n            \n            // استدعاء دالة إرسال بريد التوثيق\n            const emailSent = await sendCompanyVerificationEmail(\n              companyUser.email,\n              companyUser.name || companyUser.username,\n              companyProfile.name,\n              req.body.verificationNotes || ''\n            );\n            \n            if (emailSent) {\n              console.log(`تم إرسال بريد إشعار التوثيق بنجاح إلى: ${companyUser.email}`);\n            } else {\n              console.warn(`فشل في إرسال بريد إشعار التوثيق إلى: ${companyUser.email}`);\n            }\n          } else {\n            console.warn('لم يتم العثور على معلومات المستخدم أو البريد الإلكتروني للشركة');\n          }\n        } catch (emailError) {\n          console.error('خطأ في إرسال إشعار التوثيق:', emailError);\n          // لا نريد إيقاف العملية إذا فشل إرسال البريد الإلكتروني\n        }\n      }\n      \n      res.json(companyProfile);\n    } catch (error) {\n      console.error('Error verifying company:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // Project routes\n  app.get('/api/projects', async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب قائمة المشاريع - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n      \n      // فقط المستخدمين المسجلين يمكنهم مشاهدة المشاريع\n      if (!req.user) {\n        console.log(`رفض طلب غير مصرح للوصول إلى قائمة المشاريع`);\n        return res.json([]); // إرجاع مصفوفة فارغة للمستخدمين غير المسجلين\n      }\n      \n      // المسؤولون يمكنهم مشاهدة جميع المشاريع\n      // المستخدمون العاديون يرون فقط مشاريعهم الخاصة\n      const user = req.user as any;\n      let projects: any[] = [];\n      \n      if (user.role === 'admin') {\n        console.log(`المستخدم مسؤول، عرض جميع المشاريع`);\n        projects = await storage.getProjects();\n      } else if (user.role === 'entrepreneur') {\n        console.log(`رائد أعمال (${user.username})، عرض مشاريعه الخاصة فقط`);\n        // رواد الأعمال يرون مشاريعهم الخاصة فقط\n        const userProjects = await storage.getProjectsByUserId(user.id);\n        projects = userProjects.map(project => ({\n          ...project,\n          username: user.username,\n          name: user.name\n        }));\n        \n        console.log(`عدد المشاريع الخاصة برائد الأعمال: ${projects.length}`);\n        console.log(`إرسال ${projects.length} مشروع للمستخدم ${user.username}`);\n        return res.json(projects);\n      } else if (user.role === 'company') {\n        console.log(`شركة (${user.username})، عرض المشاريع المتاحة للشركات`);\n        \n        try {\n          // الشركات تستطيع مشاهدة المشاريع المتاحة فقط (مشاريع رواد الأعمال)\n          // استخدام الطريقة المحسنة التي تجلب بيانات المستخدم مع المشاريع في استعلام واحد\n          const projectsWithUserData = await storage.getProjectsWithUserData();\n          projects = projectsWithUserData;\n          \n          console.log(`عدد المشاريع المتاحة للشركة: ${projects.length}`);\n          \n          console.log(`إرسال ${projects.length} مشروع للمستخدم ${user.username}`);\n          return res.json(projects);\n        } catch (error) {\n          console.error('خطأ أثناء محاولة الحصول على المشاريع للشركة:', error);\n          return res.json([]);\n        }\n      } else {\n        // للمستخدمين العاديين والمسؤولين، استخدام الطريقة العادية\n        // الحصول على بيانات المستخدم المرتبطة بكل مشروع\n        const projectsWithUserData = await Promise.all(\n          projects.map(async (project) => {\n            const projectUser = await storage.getUser(project.userId);\n            return {\n              ...project,\n              username: projectUser?.username,\n              name: projectUser?.name\n            };\n          })\n        );\n        \n        console.log(`إرسال ${projectsWithUserData.length} مشروع للمستخدم ${user.username}`);\n        res.json(projectsWithUserData);\n      }\n    } catch (error) {\n      console.error('خطأ في استرجاع المشاريع:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.get('/api/projects/:id', async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب تفاصيل المشروع برقم ${req.params.id} - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n      \n      // فقط المستخدمين المسجلين يمكنهم مشاهدة تفاصيل المشاريع\n      if (!req.user) {\n        console.log(`رفض طلب غير مصرح للوصول إلى تفاصيل المشروع ${req.params.id}`);\n        return res.status(401).json({ message: 'Unauthorized access to project details' });\n      }\n      \n      const projectId = parseInt(req.params.id);\n      const project = await storage.getProject(projectId);\n      \n      if (!project) {\n        return res.status(404).json({ message: 'Project not found' });\n      }\n      \n      // المستخدم مرتبط بالمشروع، أو مسؤول، أو شركة مصرح لها بمشاهدة المشاريع المتاحة\n      const user = req.user as any;\n      \n      // في النظام المفتوح (السوق)، جميع المستخدمين المسجلين يمكنهم مشاهدة تفاصيل المشاريع\n      // فقط التحقق من أن المستخدم مسجل دخول (تم بالفعل في الأعلى)\n      console.log(`السماح بالوصول: المستخدم ${user.username} (${user.role}) يشاهد المشروع ${project.id}`);\n      \n      // إذا كان المستخدم شركة، تأكد من أن المشروع منشأ من قبل رائد أعمال\n      if (user.role === 'company') {\n        const projectOwner = await storage.getUser(project.userId);\n        if (!projectOwner || projectOwner.role !== 'entrepreneur') {\n          console.log(`رفض وصول شركة: المستخدم ${user.username} حاول الوصول إلى مشروع غير منشأ من رائد أعمال`);\n          return res.status(403).json({ message: 'Forbidden: This project is not available for companies' });\n        }\n      }\n      \n      const projectUser = await storage.getUser(project.userId);\n      \n      console.log(`تم ارسال تفاصيل المشروع \"${project.title}\" للمستخدم ${user.username}`);\n      res.json({\n        ...project,\n        username: projectUser?.username,\n        name: projectUser?.name\n      });\n    } catch (error) {\n      console.error('خطأ في استرجاع تفاصيل المشروع:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // تغيير حالة المشروع (مفتوح/مغلق) - للمسؤولين أو مالك المشروع\n  app.patch('/api/projects/:id/status', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const projectId = parseInt(req.params.id);\n      const { status } = req.body;\n      \n      if (status !== 'open' && status !== 'closed') {\n        return res.status(400).json({ message: 'الحالة غير صالحة. يجب أن تكون \"open\" أو \"closed\".' });\n      }\n      \n      // التحقق من وجود المشروع\n      const project = await storage.getProject(projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'المشروع غير موجود' });\n      }\n      \n      // التحقق من الصلاحيات - فقط المسؤول أو صاحب المشروع يمكنه تغيير الحالة\n      if (user.role !== 'admin' && project.userId !== user.id) {\n        return res.status(403).json({ message: 'غير مصرح لك بتعديل هذا المشروع' });\n      }\n      \n      // تحديث حالة المشروع\n      const updatedProject = await storage.updateProject(projectId, { status });\n      \n      console.log(`تم تغيير حالة المشروع ${projectId} إلى \"${status}\" بواسطة المستخدم ${user.username}`);\n      res.json(updatedProject);\n    } catch (error) {\n      console.error('خطأ في تحديث حالة المشروع:', error);\n      res.status(500).json({ message: 'خطأ في الخادم' });\n    }\n  });\n\n  // Delete project - only for project owner and if no active offers\n  app.delete('/api/projects/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const projectId = parseInt(req.params.id);\n      \n      // Check if project exists\n      const project = await storage.getProject(projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'المشروع غير موجود' });\n      }\n      \n      // Only project owner or admin can delete\n      if (user.role !== 'admin' && project.userId !== user.id) {\n        return res.status(403).json({ message: 'غير مصرح لك بحذف هذا المشروع' });\n      }\n      \n      // Attempt to delete the project\n      const deleted = await storage.deleteProject(projectId);\n      \n      if (!deleted) {\n        return res.status(400).json({ \n          message: 'لا يمكن حذف المشروع لأنه مرتبط بعروض مقبولة أو مكتملة من الشركات' \n        });\n      }\n      \n      console.log(`تم حذف المشروع ${projectId} بواسطة المستخدم ${user.username}`);\n      res.json({ message: 'تم حذف المشروع بنجاح' });\n    } catch (error) {\n      console.error('خطأ في حذف المشروع:', error);\n      res.status(500).json({ message: 'خطأ في الخادم' });\n    }\n  });\n\n  app.get('/api/users/:userId/projects', async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب مشاريع المستخدم ${req.params.userId} - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n      \n      // فقط المستخدمين المسجلين يمكنهم مشاهدة مشاريع المستخدمين\n      if (!req.user) {\n        console.log(`رفض طلب غير مصرح للوصول إلى مشاريع المستخدم ${req.params.userId}`);\n        return res.json([]); // إرجاع مصفوفة فارغة للمستخدمين غير المسجلين\n      }\n      \n      const userId = parseInt(req.params.userId);\n      const user = req.user as any;\n      \n      // المستخدم يمكنه فقط الوصول إلى مشاريعه الخاصة\n      // (المسؤولون يمكنهم الوصول إلى جميع المشاريع)\n      if (user.role !== 'admin' && user.id !== userId) {\n        console.log(`رفض وصول غير مصرح: المستخدم ${user.username} حاول الوصول إلى مشاريع المستخدم ${userId}`);\n        return res.json([]); // إرجاع مصفوفة فارغة للوصول غير المصرح\n      }\n      \n      const projects = await storage.getProjectsByUserId(userId);\n      console.log(`تم إرسال ${projects.length} مشروع للمستخدم ${user.username} (مشاريع المستخدم ${userId})`);\n      res.json(projects);\n    } catch (error) {\n      console.error('خطأ في استرجاع مشاريع المستخدم:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.post('/api/projects', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      if (user.role !== 'entrepreneur') {\n        return res.status(403).json({ message: 'Only entrepreneurs can create projects' });\n      }\n      \n      const projectData = insertProjectSchema.parse({\n        ...req.body,\n        userId: user.id\n      });\n      \n      const project = await storage.createProject(projectData);\n      res.status(201).json(project);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: 'Validation error', errors: error.errors });\n      }\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.patch('/api/projects/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const projectId = parseInt(req.params.id);\n      \n      const project = await storage.getProject(projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'Project not found' });\n      }\n      \n      if (project.userId !== user.id) {\n        return res.status(403).json({ message: 'Not authorized to update this project' });\n      }\n      \n      const updatedProject = await storage.updateProject(projectId, req.body);\n      res.json(updatedProject);\n    } catch (error) {\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // NDA routes - مسارات اتفاقيات عدم الإفصاح\n  \n\n  // المرحلة الأولى: الشركة تنشئ طلب اتفاقية عدم إفصاح\n  app.post('/api/projects/:projectId/nda/initiate', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const projectId = parseInt(req.params.projectId);\n      \n      // التحقق من وجود المشروع\n      const project = await storage.getProject(projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'المشروع غير موجود' });\n      }\n      \n      // تأكد من أن المستخدم هو شركة\n      if (user.role !== 'company') {\n        return res.status(403).json({ message: 'فقط الشركات يمكنها إنشاء اتفاقيات عدم الإفصاح' });\n      }\n\n      // الحصول على ملف تعريف الشركة لاستخدام بياناتها الموجودة\n      const companyProfile = await storage.getCompanyProfileByUserId(user.id);\n      if (!companyProfile) {\n        return res.status(400).json({ \n          message: 'يجب إكمال ملف تعريف الشركة أولاً لإنشاء اتفاقية عدم إفصاح' \n        });\n      }\n\n      // التحقق من وجود البيانات الأساسية للشركة\n      if (!user.email) {\n        return res.status(400).json({ \n          message: 'يجب إضافة البريد الإلكتروني في حساب المستخدم (الشركة)' \n        });\n      }\n\n      if (!companyProfile.phone) {\n        return res.status(400).json({ \n          message: 'يجب إضافة رقم الهاتف في ملف تعريف الشركة' \n        });\n      }\n\n      // ملاحظة: في النظام المرحلي الجديد، رائد الأعمال سيقدم بياناته لاحقاً عند استلام الإشعار\n      // لا نحتاج للتحقق من بيانات رائد الأعمال هنا\n      \n      // التحقق من عدم وجود اتفاقية سابقة لهذا المشروع من نفس الشركة\n      const existingNda = await storage.getNdaByProjectAndCompany(projectId, user.id);\n      if (existingNda) {\n        return res.status(400).json({ \n          message: 'يوجد بالفعل طلب اتفاقية عدم إفصاح لهذا المشروع' \n        });\n      }\n\n      // استخدام بيانات الشركة من النموذج المرسل (ليس الحساب)\n      const { companyRep } = req.body;\n      \n      if (!companyRep?.name || !companyRep?.email || !companyRep?.phone) {\n        return res.status(400).json({ \n          message: 'بيانات ممثل الشركة مطلوبة (الاسم، البريد الإلكتروني، رقم الهاتف)' \n        });\n      }\n      \n      const companyRepData = {\n        name: companyRep.name,\n        email: companyRep.email, // البريد من النموذج المرسل ❌ ليس من الحساب\n        phone: companyRep.phone, // الهاتف من النموذج المرسل\n        companyName: companyProfile.legalName || user.name || user.username\n      };\n\n      console.log(`✅ تم استخدام بيانات الشركة الموجودة: ${companyRepData.name} - ${companyRepData.email}`);\n      \n      // إنشاء طلب اتفاقية عدم الإفصاح (المرحلة الأولى)\n      const ndaData = {\n        projectId,\n        status: 'awaiting_entrepreneur' as const,\n        companySignatureInfo: {\n          companyUserId: user.id,\n          ...companyRepData,\n          createdAt: new Date().toISOString()\n        },\n      };\n      \n      const nda = await storage.createNda(ndaData);\n      \n      // إرسال إشعار لصاحب المشروع\n      await storage.createNotification({\n        userId: project.userId,\n        type: 'nda_request',\n        title: 'طلب اتفاقية عدم إفصاح جديد',\n        content: `طلبت شركة \"${companyRepData.companyName}\" إنشاء اتفاقية عدم إفصاح لمشروعك \"${project.title}\". يرجى إكمال بياناتك لبدء عملية التوقيع الإلكتروني.`,\n        actionUrl: `/nda/${nda.id}/complete`,\n        metadata: { \n          projectId: project.id, \n          ndaId: nda.id,\n          companyUserId: user.id,\n          companyName: companyRepData.companyName\n        }\n      });\n      \n      console.log(`📧 تم إرسال إشعار لصاحب المشروع ${project.userId} لإكمال بيانات اتفاقية عدم الإفصاح`);\n      console.log(`🏢 شركة ${companyRepData.companyName} بدأت طلب NDA (بيانات تلقائية من الملف الشخصي)`);\n      \n      res.json({ \n        id: nda.id, \n        message: 'تم إنشاء طلب اتفاقية عدم الإفصاح بنجاح باستخدام بياناتك الموجودة. سيتم إشعار صاحب المشروع لإكمال بياناته.',\n        status: nda.status,\n        companyRepData // إرجاع البيانات المستخدمة للتأكيد\n      });\n    } catch (error) {\n      console.error('❌ خطأ في إنشاء طلب اتفاقية عدم الإفصاح:', error);\n      res.status(500).json({ message: 'حدث خطأ في النظام' });\n    }\n  });\n  \n  // المرحلة الثانية: صاحب المشروع يكمل بياناته\n  app.post('/api/nda/:ndaId/complete', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const ndaId = parseInt(req.params.ndaId);\n      const { entrepreneur } = req.body;\n      \n      // التحقق من بيانات صاحب المشروع\n      if (!entrepreneur?.name || !entrepreneur?.email || !entrepreneur?.phone) {\n        return res.status(400).json({ \n          message: 'بيانات صاحب المشروع مطلوبة (الاسم، البريد الإلكتروني، رقم الهاتف)' \n        });\n      }\n      \n      // الحصول على اتفاقية عدم الإفصاح\n      const nda = await storage.getNda(ndaId);\n      if (!nda) {\n        return res.status(404).json({ message: 'اتفاقية عدم الإفصاح غير موجودة' });\n      }\n      \n      // التحقق من أن الحالة صحيحة\n      if (nda.status !== 'awaiting_entrepreneur') {\n        return res.status(400).json({ \n          message: 'اتفاقية عدم الإفصاح ليست في الحالة الصحيحة لإكمال البيانات' \n        });\n      }\n      \n      // التحقق من أن المستخدم هو صاحب المشروع\n      const project = await storage.getProject(nda.projectId);\n      if (!project || project.userId !== user.id) {\n        return res.status(403).json({ message: 'غير مصرح لك بإكمال هذه الاتفاقية' });\n      }\n      \n      // تحديث الاتفاقية بمعلومات صاحب المشروع\n      const updatedNda = await storage.updateNda(ndaId, {\n        entrepreneurInfo: {\n          entrepreneurUserId: user.id,\n          ...entrepreneur,\n          completedAt: new Date().toISOString()\n        },\n        status: 'ready_for_sadiq'\n      });\n      \n      // إرسال إشعار للشركة بأن البيانات اكتملت\n      const companyUserId = (updatedNda.companySignatureInfo as any)?.companyUserId;\n      if (companyUserId) {\n        await storage.createNotification({\n          userId: companyUserId,\n          type: 'nda_completed',\n          title: 'اكتملت بيانات اتفاقية عدم الإفصاح',\n          content: `أكمل صاحب المشروع \"${project.title}\" بياناته. سيتم إرسال دعوات التوقيع الإلكتروني عبر صادق قريباً.`,\n          actionUrl: `/projects/${project.id}`,\n          metadata: { \n            projectId: project.id, \n            ndaId: updatedNda.id,\n            entrepreneurUserId: user.id\n          }\n        });\n      }\n      \n      // إعداد بيانات الموقعين مبكراً لضمان الوصول في جميع أجزاء الكود\n      let signatoryList: any[] = [];\n      \n      // الآن نبدأ عملية إرسال الدعوات عبر صادق\n      try {\n        // استيراد خدمة المصادقة مع صادق\n        const { sadiqAuth } = await import('./sadiqAuthService');\n        const { generateProjectNdaPdf } = await import('./generateNDA');\n\n        // تحضير بيانات الاتفاقية\n        const companyInfo = updatedNda.companySignatureInfo as any;\n        const entrepreneurInfo = updatedNda.entrepreneurInfo as any;\n\n        const projectData = {\n          title: project.title,\n          description: project.description\n        };\n        \n        const companyData = {\n          name: companyInfo.companyName || 'شركة البرمجة',\n          location: 'المملكة العربية السعودية'\n        };\n        \n        const signingPartiesData = {\n          entrepreneur: entrepreneurInfo.name,\n          companyRep: companyInfo.name || companyInfo.signerName\n        };\n\n        // تنظيف وتنسيق أرقام الهواتف قبل الإرسال لصادق\n        const { validatePhoneNumber } = await import('./validationHelpers');\n        \n        // تنسيق رقم رائد الأعمال\n        const entrepreneurPhoneValidation = validatePhoneNumber(entrepreneurInfo.phone);\n        const cleanEntrepreneurPhone = entrepreneurPhoneValidation.isValid ? \n          (entrepreneurPhoneValidation.formattedValue || entrepreneurInfo.phone) : entrepreneurInfo.phone;\n        \n        // تنسيق رقم الشركة\n        const companyPhone = companyInfo.phone || companyInfo.signerPhone || '';\n        const companyPhoneValidation = validatePhoneNumber(companyPhone);\n        const cleanCompanyPhone = companyPhoneValidation.isValid ? \n          (companyPhoneValidation.formattedValue || companyPhone) : companyPhone;\n        \n        // إعداد بيانات الموقعين للدعوة مع أرقام منسقة\n        signatoryList = [\n          {\n            fullName: entrepreneurInfo.name,\n            email: entrepreneurInfo.email,\n            phoneNumber: cleanEntrepreneurPhone,\n            nationalId: '',\n            gender: 'NONE'\n          },\n          {\n            fullName: companyInfo.name || companyInfo.signerName,\n            email: companyInfo.email || companyInfo.signerEmail,\n            phoneNumber: cleanCompanyPhone,\n            nationalId: '',\n            gender: 'NONE'\n          }\n        ];\n\n        // طباعة أرقام الهواتف للتحقق من التنسيق\n        console.log(`📞 رقم رائد الأعمال (أصلي): ${entrepreneurInfo.phone} → (منسق): ${cleanEntrepreneurPhone}`);\n        console.log(`📞 رقم الشركة (أصلي): ${companyPhone} → (منسق): ${cleanCompanyPhone}`);\n        console.log(`📞 حالة تنسيق رقم رائد الأعمال:`, entrepreneurPhoneValidation);\n        console.log(`📞 حالة تنسيق رقم الشركة:`, companyPhoneValidation);\n\n        // إنشاء ملف PDF لاتفاقية عدم الإفصاح\n        console.log('📄 إنشاء ملف PDF لاتفاقية عدم الإفصاح...');\n        const pdfBuffer = await generateProjectNdaPdf(projectData, companyData, signingPartiesData);\n        const base64Pdf = pdfBuffer.toString('base64');\n\n        // رفع الملف إلى صادق\n        const fileName = `NDA-${project.title.replace(/\\s+/g, '-')}-${Date.now()}.pdf`;\n        console.log('⬆️ رفع ملف PDF إلى صادق...');\n        const uploadResult = await sadiqAuth.uploadDocument(base64Pdf, fileName);\n        const documentId = uploadResult.id;\n        const referenceNumber = uploadResult.referenceNumber;\n\n        // إرسال الدعوات للتوقيع باستخدام Sadiq API الصحيح\n        console.log('📧 إرسال دعوات التوقيع الإلكتروني باستخدام API الصحيح...');\n        const invitationResult = await sadiqAuth.sendSigningInvitations(documentId, signatoryList, project.title);\n\n        // تحديث اتفاقية عدم الإفصاح ببيانات صادق\n        await storage.updateNda(ndaId, {\n          sadiqEnvelopeId: invitationResult.envelopeId,\n          sadiqReferenceNumber: referenceNumber,\n          sadiqDocumentId: documentId,\n          envelopeStatus: 'invitation_sent',\n          status: 'invitations_sent'\n        });\n\n        console.log(`✅ تم إرسال دعوات التوقيع الإلكتروني بنجاح للاتفاقية ${ndaId}`);\n        console.log(`📧 تم إرسال دعوات لـ ${signatoryList[0].email} و ${signatoryList[1].email}`);\n        \n        res.json({ \n          id: updatedNda.id, \n          message: 'تم إكمال البيانات وإرسال دعوات التوقيع الإلكتروني بنجاح!',\n          status: 'invitations_sent',\n          sadiqEnvelopeId: invitationResult.envelopeId\n        });\n\n      } catch (sadiqError) {\n        console.error('❌ خطأ في إرسال دعوات التوقيع عبر صادق:', sadiqError);\n        \n        // 🔄 إعادة تعيين حالة الاتفاقية للسماح بإعادة المحاولة\n        console.log('🔄 إعادة تعيين حالة NDA للسماح بإعادة المحاولة...');\n        await storage.updateNda(ndaId, {\n          status: 'awaiting_entrepreneur', // إعادة للحالة السابقة\n          envelopeStatus: 'sadiq_failed',\n          sadiqErrorMessage: sadiqError.message || 'Sadiq integration failed'\n        });\n        \n        // 📧 نظام بديل لضمان وصول الدعوات!\n        console.log('🔄 تفعيل النظام البديل لضمان إرسال الدعوات...');\n        \n        try {\n          // إرسال دعوات عبر البريد الإلكتروني كبديل\n          const sgMail = await import('@sendgrid/mail').then(m => m.default);\n          \n          if (process.env.SENDGRID_API_KEY) {\n            sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n            \n            const pdfBuffer = await generateProjectNdaPdf(projectData, companyData, signingPartiesData);\n            const base64Pdf = pdfBuffer.toString('base64');\n            \n            // إرسال دعوة لرائد الأعمال\n            const entrepreneurMsg = {\n              to: signatoryList[0].email,\n              from: 'noreply@linktech.sa',\n              subject: `اتفاقية عدم الإفصاح - مشروع ${project.title}`,\n              html: `\n                <div dir=\"rtl\" style=\"font-family: Arial, sans-serif;\">\n                  <h2>مرحباً ${signatoryList[0].fullName}</h2>\n                  <p>نرجو منك مراجعة وتوقيع اتفاقية عدم الإفصاح المرفقة للمشروع: <strong>${project.title}</strong></p>\n                  <p>يرجى طباعة الوثيقة المرفقة، توقيعها، ومشاركة النسخة الموقعة مع الشركة.</p>\n                  <p><strong>الشركة:</strong> ${signatoryList[1].fullName}</p>\n                  <p><strong>بريد الشركة:</strong> ${signatoryList[1].email}</p>\n                  <p>شكراً لك</p>\n                  <p>فريق لينكتك</p>\n                </div>\n              `,\n              attachments: [{\n                content: base64Pdf,\n                filename: `NDA-${project.title.replace(/\\s+/g, '-')}.pdf`,\n                type: 'application/pdf',\n                disposition: 'attachment'\n              }]\n            };\n            \n            // إرسال دعوة للشركة\n            const companyMsg = {\n              to: signatoryList[1].email,\n              from: 'noreply@linktech.sa',\n              subject: `اتفاقية عدم الإفصاح - مشروع ${project.title}`,\n              html: `\n                <div dir=\"rtl\" style=\"font-family: Arial, sans-serif;\">\n                  <h2>مرحباً ${signatoryList[1].fullName}</h2>\n                  <p>نرجو منك مراجعة وتوقيع اتفاقية عدم الإفصاح المرفقة للمشروع: <strong>${project.title}</strong></p>\n                  <p>يرجى طباعة الوثيقة المرفقة، توقيعها، ومشاركة النسخة الموقعة مع رائد الأعمال.</p>\n                  <p><strong>رائد الأعمال:</strong> ${signatoryList[0].fullName}</p>\n                  <p><strong>بريد رائد الأعمال:</strong> ${signatoryList[0].email}</p>\n                  <p>شكراً لك</p>\n                  <p>فريق لينكتك</p>\n                </div>\n              `,\n              attachments: [{\n                content: base64Pdf,\n                filename: `NDA-${project.title.replace(/\\s+/g, '-')}.pdf`,\n                type: 'application/pdf',\n                disposition: 'attachment'\n              }]\n            };\n            \n            // إرسال الرسائل\n            await sgMail.send(entrepreneurMsg);\n            await sgMail.send(companyMsg);\n            \n            console.log(`✅ تم إرسال دعوات NDA عبر البريد إلى ${signatoryList[0].email} و ${signatoryList[1].email}`);\n            \n            // تحديث حالة الاتفاقية\n            await storage.updateNda(ndaId, {\n              status: 'email_invitations_sent',\n              envelopeStatus: 'email_fallback_used',\n              sadiqEnvelopeId: `email-fallback-${Date.now()}`,\n              sadiqReferenceNumber: `email-${Date.now()}`\n            });\n            \n            res.json({ \n              id: updatedNda.id, \n              message: 'تم إكمال البيانات وإرسال دعوات اتفاقية عدم الإفصاح عبر البريد الإلكتروني بنجاح!',\n              status: 'email_invitations_sent',\n              fallbackUsed: true,\n              emailsSentTo: [signatoryList[0].email, signatoryList[1].email]\n            });\n            \n          } else {\n            console.log('⚠️ SendGrid غير متوفر، تسجيل معلومات الدعوة فقط');\n            console.log(`📧 دعوة مطلوبة لـ: ${signatoryList[0].fullName} (${signatoryList[0].email})`);\n            console.log(`📧 دعوة مطلوبة لـ: ${signatoryList[1].fullName} (${signatoryList[1].email})`);\n            \n            res.json({ \n              id: updatedNda.id, \n              message: 'تم إكمال البيانات. يرجى التواصل مع الأطراف المعنية لتوقيع الاتفاقية.',\n              status: updatedNda.status,\n              contactInfo: {\n                entrepreneur: `${signatoryList[0].fullName} (${signatoryList[0].email})`,\n                company: `${signatoryList[1].fullName} (${signatoryList[1].email})`\n              }\n            });\n          }\n          \n        } catch (emailError) {\n          console.error('❌ فشل في إرسال الدعوات البديلة:', emailError);\n          \n          // على الأقل نعطي معلومات الاتصال\n          res.json({ \n            id: updatedNda.id, \n            message: 'تم إكمال البيانات. يرجى التواصل مع الأطراف المعنية لتوقيع الاتفاقية.',\n            status: updatedNda.status,\n            error: 'Sadiq and email fallback failed',\n            contactInfo: {\n              entrepreneur: `${signatoryList[0].fullName} (${signatoryList[0].email})`,\n              company: `${signatoryList[1].fullName} (${signatoryList[1].email})`\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.error('❌ خطأ في إكمال بيانات اتفاقية عدم الإفصاح:', error);\n      res.status(500).json({ message: 'حدث خطأ في النظام' });\n    }\n  });\n\n  // إنشاء اتفاقية عدم إفصاح جديدة (مسار متوافق مع النظام القديم)\n  app.post('/api/projects/:projectId/nda', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const projectId = parseInt(req.params.projectId);\n      const { entrepreneur, companyRep } = req.body;\n      \n      // التحقق من البيانات المطلوبة لكلا الطرفين\n      if (!entrepreneur?.name || !entrepreneur?.email || !entrepreneur?.phone) {\n        return res.status(400).json({ \n          message: 'بيانات رائد الأعمال مطلوبة (الاسم، البريد الإلكتروني، رقم الهاتف)' \n        });\n      }\n      \n      if (!companyRep?.name || !companyRep?.email || !companyRep?.phone) {\n        return res.status(400).json({ \n          message: 'بيانات ممثل الشركة مطلوبة (الاسم، البريد الإلكتروني، رقم الهاتف)' \n        });\n      }\n      \n      // التحقق من وجود المشروع\n      const project = await storage.getProject(projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'المشروع غير موجود' });\n      }\n      \n      // تأكد من أن المستخدم هو شركة\n      if (user.role !== 'company') {\n        return res.status(403).json({ message: 'فقط الشركات يمكنها توقيع اتفاقيات عدم الإفصاح' });\n      }\n      \n      // الحصول على ملف تعريف الشركة\n      const companyProfile = await storage.getCompanyProfileByUserId(user.id);\n      if (!companyProfile) {\n        return res.status(404).json({ message: 'ملف تعريف الشركة غير موجود' });\n      }\n\n      // التحقق من وجود البيانات الأساسية في الملف الشخصي\n      if (!user.email || !companyProfile.phone) {\n        return res.status(400).json({ \n          message: 'يجب إضافة البريد الإلكتروني في الحساب ورقم الهاتف في ملف الشركة' \n        });\n      }\n\n      // الحصول على بيانات صاحب المشروع للاتفاقية\n      const projectOwner = await storage.getUser(project.userId);\n      if (!projectOwner) {\n        return res.status(404).json({ message: 'صاحب المشروع غير موجود' });\n      }\n\n      console.log(`✅ استخدام بيانات النموذج: ${companyRep.name} - ${companyRep.email}`);\n\n      // إنشاء بيانات اتفاقية عدم الإفصاح بحالة \"pending\" في انتظار التوقيع من صادق\n      const ndaData = insertNdaAgreementSchema.parse({\n        projectId,\n        status: 'pending', // في انتظار التوقيع الإلكتروني\n        companySignatureInfo: {\n          companyId: companyProfile.id,\n          companyName: companyProfile.legalName || companyRep.name,\n          signerName: companyRep.name,\n          signerEmail: companyRep.email,\n          signerPhone: companyRep.phone,\n          signerIp: req.ip,\n          timestamp: new Date().toISOString()\n        },\n        // بيانات رائد الأعمال من النموذج\n        entrepreneurInfo: {\n          name: entrepreneur.name,\n          email: entrepreneur.email,\n          phone: entrepreneur.phone,\n          timestamp: new Date().toISOString()\n        },\n        expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) // تنتهي بعد 30 يوم\n      });\n      \n      // إنشاء اتفاقية عدم الإفصاح في قاعدة البيانات\n      const nda = await storage.createNdaAgreement(ndaData);\n\n      try {\n        // استيراد خدمة المصادقة مع صادق\n        const { sadiqAuth } = await import('./sadiqAuthService');\n\n        // إنشاء ملف PDF لاتفاقية عدم الإفصاح\n        const { generateProjectNdaPdf } = await import('./generateNDA');\n        const projectData = {\n          title: project.title,\n          description: project.description\n        };\n        const companyData = {\n          name: companyProfile.name || user.name,\n          location: companyProfile.address || 'المملكة العربية السعودية'\n        };\n        const signingPartiesData = {\n          entrepreneur: entrepreneur.name,\n          companyRep: companyRep.name\n        };\n        \n        const pdfBuffer = await generateProjectNdaPdf(projectData, companyData, signingPartiesData);\n        const base64Pdf = pdfBuffer.toString('base64');\n\n        // رفع الملف إلى صادق باستخدام خدمة المصادقة\n        const fileName = `NDA-${project.title.replace(/\\s+/g, '-')}-${Date.now()}.pdf`;\n        const uploadResult = await sadiqAuth.uploadDocument(base64Pdf, fileName);\n        const documentId = uploadResult.id;\n        const referenceNumber = uploadResult.referenceNumber;\n\n        // إعداد بيانات الموقعين للدعوة\n        const invitationData = {\n          referenceNumber,\n          envelopeDocument: {\n            documentId,\n            signOrder: 0\n          },\n          signatories: [\n            {\n              fullName: entrepreneur.name,\n              email: entrepreneur.email,\n              phoneNumber: entrepreneur.phone,\n              signOrder: 0,\n              nationalId: '',\n              gender: 'NONE'\n            },\n            {\n              fullName: companyRep.name,\n              email: companyRep.email,\n              phoneNumber: companyRep.phone,\n              signOrder: 1,\n              nationalId: '',\n              gender: 'NONE'\n            }\n          ],\n          requestFields: [],\n          invitationMessage: 'نرجو منك توقيع اتفاقية عدم الإفصاح المرفقة أدناه للمتابعة في المشروع'\n        };\n\n        // إرسال الدعوات للتوقيع باستخدام خدمة المصادقة\n        const invitationResult = await sadiqAuth.sendSigningInvitations(invitationData);\n\n        // تحديث اتفاقية عدم الإفصاح ببيانات صادق\n        const updatedNdaData = {\n          sadiqEnvelopeId: invitationResult.envelopeId,\n          sadiqReferenceNumber: referenceNumber,\n          sadiqDocumentId: documentId,\n          envelopeStatus: 'invitation_sent'\n        };\n\n        // تحديث قاعدة البيانات ببيانات صادق\n        await storage.updateNdaAgreement(nda.id, updatedNdaData);\n\n        // تحديث المشروع بإضافة علامة تتطلب اتفاقية عدم إفصاح ورقم الاتفاقية\n        await storage.updateProject(projectId, {\n          requiresNda: true,\n          ndaId: nda.id\n        });\n\n        console.log(`✅ تم إرسال دعوة التوقيع الإلكتروني بنجاح لمشروع ${projectId}`);\n        console.log(`📧 الرقم المرجعي: ${referenceNumber}`);\n        console.log(`📄 معرف الوثيقة: ${documentId}`);\n\n        res.status(201).json({\n          ...nda,\n          sadiqReferenceNumber: referenceNumber,\n          message: 'تم إرسال دعوة التوقيع الإلكتروني بنجاح'\n        });\n\n      } catch (sadiqError) {\n        console.error('خطأ في التكامل مع صادق:', sadiqError);\n        \n        // في حالة فشل التكامل مع صادق، نعيد الاتفاقية للحالة التقليدية\n        await storage.updateNdaAgreement(nda.id, {\n          status: 'active',\n          signedAt: new Date()\n        });\n\n        await storage.updateProject(projectId, {\n          requiresNda: true,\n          ndaId: nda.id\n        });\n\n        res.status(201).json({\n          ...nda,\n          message: 'تم إنشاء اتفاقية عدم الإفصاح (التوقيع التقليدي)',\n          warning: 'فشل التكامل مع النظام الإلكتروني، تم اللجوء للتوقيع التقليدي'\n        });\n      }\n      \n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: 'خطأ في التحقق من البيانات', errors: error.errors });\n      }\n      console.error('خطأ في إنشاء اتفاقية عدم الإفصاح:', error);\n      res.status(500).json({ message: 'خطأ في الخادم الداخلي' });\n    }\n  });\n  \n  // وظيفة إنشاء ملف PDF لاتفاقية عدم الإفصاح\n  async function generateNdaPdf(nda: any, project: any, company: any): Promise<Buffer> {\n    return new Promise((resolve, reject) => {\n      try {\n        // وظيفة مساعدة لإعادة تشكيل النص العربي \n        // تقوم بتحويل النص العربي إلى النموذج المناسب لعرضه في ملف PDF\n        function reshapeArabicText(text: string): string {\n          try {\n            // النهج المحسن لمعالجة النص العربي\n            \n            // 1. إعادة تشكيل النص العربي (دمج الحروف بشكل صحيح)\n            const reshaped = arabicReshaper.reshape(text);\n            \n            // 2. تصحيح اتجاه النص من اليمين إلى اليسار\n            const bidiText = bidi.getDisplay(reshaped);\n            \n            return bidiText;\n          } catch (error) {\n            console.error('خطأ في تحويل النص العربي:', error);\n            return text; // في حالة حدوث خطأ، إرجاع النص الأصلي\n          }\n        }\n      \n        const chunks: Buffer[] = [];\n        const doc = new PDFDocument({ \n          size: 'A4',\n          margin: 50,\n          info: {\n            Title: `اتفاقية عدم إفصاح - ${project.title}`,\n            Author: 'منصة لينكتك',\n            Subject: 'اتفاقية عدم إفصاح',\n          },\n          // إضافة دعم اللغة العربية\n          lang: 'ar',\n          features: ['rtla']\n        });\n\n        // تحديد مسار ملف الخط العربي\n        const arabicFontPath = path.join(process.cwd(), 'assets', 'fonts', 'Cairo-Regular.ttf');\n        console.log('مسار ملف الخط العربي:', arabicFontPath);\n        \n        // التحقق من وجود ملف الخط\n        const fontExists = fs.existsSync(arabicFontPath);\n        console.log('هل يوجد ملف الخط؟', fontExists);\n        \n        // تسجيل واستخدام الخط العربي\n        if (fontExists) {\n          try {\n            doc.registerFont('Arabic', arabicFontPath);\n            doc.font('Arabic');\n            console.log('تم تسجيل واستخدام الخط العربي بنجاح');\n          } catch (fontError) {\n            console.error('خطأ في تسجيل الخط العربي:', fontError);\n            console.log('الاستبدال بالخط الافتراضي Helvetica');\n            doc.font('Helvetica');\n          }\n        } else {\n          console.log('ملف الخط العربي غير موجود، استخدام الخط الافتراضي Helvetica');\n          doc.font('Helvetica');\n        }\n        \n        // تضبيط اتجاه RTL\n        doc.text('', 0, 0, { align: 'right' });\n\n        // التقاط البيانات المكتوبة في الملف\n        doc.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n        doc.on('end', () => {\n          const result = Buffer.concat(chunks);\n          resolve(result);\n        });\n        doc.on('error', (err) => reject(err));\n\n        // تعريف خيارات نص RTL\n        const rtlOptions = { \n          align: 'right',\n          features: ['rtla']  // تفعيل الكتابة من اليمين لليسار\n        };\n        \n        // إضافة الشعار والعنوان باستخدام معالجة النص العربي محسنة\n        // 1. إعادة تشكيل النص العربي مع bidi\n        const titleReshaped = arabicReshaper.reshape('اتفاقية عدم إفصاح');\n        const titleBidi = bidi.getDisplay(titleReshaped);\n        doc.fontSize(22).text(titleBidi, { align: 'center' });\n        doc.moveDown();\n        \n        const projectTitleText = `مشروع: ${project.title}`;\n        const projectTitleReshaped = arabicReshaper.reshape(projectTitleText);\n        const projectTitleBidi = bidi.getDisplay(projectTitleReshaped);\n        doc.fontSize(16).text(projectTitleBidi, { align: 'center' });\n        doc.moveDown(2);\n\n        // معلومات الأطراف\n        const partiesTitleReshaped = arabicReshaper.reshape('أطراف الاتفاقية:');\n        const partiesTitleBidi = bidi.getDisplay(partiesTitleReshaped);\n        doc.fontSize(14).text(partiesTitleBidi, { align: 'right', underline: true });\n        doc.moveDown();\n        \n        const firstPartyText = `الطرف الأول (صاحب المشروع): ${project.ownerName || 'غير محدد'}`;\n        const firstPartyReshaped = arabicReshaper.reshape(firstPartyText);\n        const firstPartyBidi = bidi.getDisplay(firstPartyReshaped);\n        doc.fontSize(12).text(firstPartyBidi, { align: 'right' });\n        \n        // معلومات الشركة\n        const companyName = company?.name || nda.companySignatureInfo?.companyName || 'غير محدد';\n        const secondPartyText = `الطرف الثاني (الشركة): ${companyName}`;\n        const secondPartyReshaped = arabicReshaper.reshape(secondPartyText);\n        const secondPartyBidi = bidi.getDisplay(secondPartyReshaped);\n        doc.fontSize(12).text(secondPartyBidi, { align: 'right' });\n        doc.moveDown();\n\n        // معلومات التوقيع\n        if (nda.signedAt) {\n          const signDateText = `تم توقيع هذه الاتفاقية بتاريخ: ${new Date(nda.signedAt).toLocaleDateString('ar-SA')}`;\n          const signDateReshaped = arabicReshaper.reshape(signDateText);\n          const signDateBidi = bidi.getDisplay(signDateReshaped);\n          doc.fontSize(12).text(signDateBidi, { align: 'right' });\n          \n          const signerText = `تم التوقيع بواسطة: ${nda.companySignatureInfo.signerName} (${nda.companySignatureInfo.signerTitle})`;\n          const signerReshaped = arabicReshaper.reshape(signerText);\n          const signerBidi = bidi.getDisplay(signerReshaped);\n          doc.fontSize(12).text(signerBidi, { align: 'right' });\n          \n          const ipText = `عنوان IP للتوقيع: ${nda.companySignatureInfo.signerIp}`;\n          const ipReshaped = arabicReshaper.reshape(ipText);\n          const ipBidi = bidi.getDisplay(ipReshaped);\n          doc.fontSize(11).text(ipBidi, { align: 'right' });\n        }\n        doc.moveDown(2);\n\n        // نص الاتفاقية\n        const agreementTitleReshaped = arabicReshaper.reshape('نص اتفاقية عدم الإفصاح:');\n        const agreementTitleBidi = bidi.getDisplay(agreementTitleReshaped);\n        doc.fontSize(14).text(agreementTitleBidi, { align: 'right', underline: true });\n        doc.moveDown();\n        \n        // المقدمة\n        const introTitleReshaped = arabicReshaper.reshape(\"المقدمة:\");\n        const introTitleBidi = bidi.getDisplay(introTitleReshaped);\n        doc.fontSize(12).text(introTitleBidi, { align: 'right', bold: true });\n        \n        const introTextReshaped = arabicReshaper.reshape(\"هذه الاتفاقية (\\\"الاتفاقية\\\") محررة ومبرمة بتاريخ التوقيع الإلكتروني بين الطرف الأول (صاحب المشروع) والطرف الثاني (الشركة).\");\n        const introTextBidi = bidi.getDisplay(introTextReshaped);\n        doc.fontSize(11).text(introTextBidi, { align: 'right' });\n        doc.moveDown();\n\n        // الغرض\n        const purposeTitleReshaped = arabicReshaper.reshape(\"الغرض:\");\n        const purposeTitleBidi = bidi.getDisplay(purposeTitleReshaped);\n        doc.fontSize(12).text(purposeTitleBidi, { align: 'right', bold: true });\n        \n        const purposeTextReshaped = arabicReshaper.reshape(\"لغرض تقييم إمكانية التعاون في تنفيذ المشروع المذكور، من الضروري أن يقوم الطرف الأول بالكشف عن معلومات سرية وملكية فكرية للطرف الثاني.\");\n        const purposeTextBidi = bidi.getDisplay(purposeTextReshaped);\n        doc.fontSize(11).text(purposeTextBidi, { align: 'right' });\n        doc.moveDown();\n\n        // المعلومات السرية\n        const confidentialTitleReshaped = arabicReshaper.reshape(\"المعلومات السرية:\");\n        const confidentialTitleBidi = bidi.getDisplay(confidentialTitleReshaped);\n        doc.fontSize(12).text(confidentialTitleBidi, { align: 'right', bold: true });\n        \n        const confidentialTextReshaped = arabicReshaper.reshape(\"تشمل \\\"المعلومات السرية\\\" جميع المعلومات والبيانات المتعلقة بالمشروع بما في ذلك على سبيل المثال لا الحصر: المواصفات التقنية، الوثائق، الرسومات، الخطط، الاستراتيجيات، الأفكار، المنهجيات، التصاميم، الشفرة المصدرية، واجهات المستخدم، أسرار تجارية، وأي معلومات أخرى تتعلق بالمشروع.\");\n        const confidentialTextBidi = bidi.getDisplay(confidentialTextReshaped);\n        doc.fontSize(11).text(confidentialTextBidi, { align: 'right' });\n        doc.moveDown();\n\n        // التزامات الطرف المستلم\n        const obligationsTitleReshaped = arabicReshaper.reshape(\"التزامات الطرف الثاني:\");\n        const obligationsTitleBidi = bidi.getDisplay(obligationsTitleReshaped);\n        doc.fontSize(12).text(obligationsTitleBidi, { align: 'right', bold: true });\n        \n        const obligationsIntroReshaped = arabicReshaper.reshape(\"يوافق الطرف الثاني على:\");\n        const obligationsIntroBidi = bidi.getDisplay(obligationsIntroReshaped);\n        doc.fontSize(11).text(obligationsIntroBidi, { align: 'right' });\n        \n        const obligations = [\n          \"الحفاظ على سرية جميع المعلومات السرية وعدم الكشف عنها لأي طرف ثالث.\",\n          \"استخدام المعلومات السرية فقط لغرض تقييم إمكانية التعاون في تنفيذ المشروع.\",\n          \"عدم نسخ أو تصوير أو تخزين أي من المعلومات السرية إلا بقدر ما هو ضروري لتحقيق الغرض من هذه الاتفاقية.\",\n          \"اتخاذ جميع الإجراءات المعقولة للحفاظ على سرية المعلومات السرية بنفس مستوى العناية الذي يستخدمه لحماية معلوماته السرية الخاصة.\",\n          \"إبلاغ الطرف الأول فوراً في حالة علمه بأي استخدام أو كشف غير مصرح به للمعلومات السرية.\"\n        ];\n        \n        obligations.forEach((obligation, index) => {\n          const obligationText = `${index + 1}. ${obligation}`;\n          const obligationReshaped = arabicReshaper.reshape(obligationText);\n          const obligationBidi = bidi.getDisplay(obligationReshaped);\n          doc.fontSize(11).text(obligationBidi, { align: 'right' });\n        });\n        doc.moveDown();\n\n        // مدة الاتفاقية\n        const durationTitleReshaped = arabicReshaper.reshape(\"مدة الاتفاقية:\");\n        const durationTitleBidi = bidi.getDisplay(durationTitleReshaped);\n        doc.fontSize(12).text(durationTitleBidi, { align: 'right', bold: true });\n        \n        const durationTextReshaped = arabicReshaper.reshape(\"تبقى هذه الاتفاقية سارية المفعول لمدة سنتين (2) من تاريخ توقيعها.\");\n        const durationTextBidi = bidi.getDisplay(durationTextReshaped);\n        doc.fontSize(11).text(durationTextBidi, { align: 'right' });\n        doc.moveDown();\n\n        // القانون الحاكم\n        const lawTitleReshaped = arabicReshaper.reshape(\"القانون الحاكم:\");\n        const lawTitleBidi = bidi.getDisplay(lawTitleReshaped);\n        doc.fontSize(12).text(lawTitleBidi, { align: 'right', bold: true });\n        \n        const lawTextReshaped = arabicReshaper.reshape(\"تخضع هذه الاتفاقية وتفسر وفقاً لقوانين المملكة العربية السعودية.\");\n        const lawTextBidi = bidi.getDisplay(lawTextReshaped);\n        doc.fontSize(11).text(lawTextBidi, { align: 'right' });\n        doc.moveDown();\n\n        // توقيع إلكتروني\n        const signTitleReshaped = arabicReshaper.reshape(\"توقيع إلكتروني:\");\n        const signTitleBidi = bidi.getDisplay(signTitleReshaped);\n        doc.fontSize(12).text(signTitleBidi, { align: 'right', bold: true });\n        \n        const signTextReshaped = arabicReshaper.reshape(\"يقر الطرفان بأن هذه الاتفاقية قد تم توقيعها إلكترونياً وأن هذا التوقيع الإلكتروني له نفس الأثر القانوني كالتوقيع اليدوي.\");\n        const signTextBidi = bidi.getDisplay(signTextReshaped);\n        doc.fontSize(11).text(signTextBidi, { align: 'right' });\n        doc.moveDown(2);\n\n        // مكان للتوقيعات\n        const signaturesTitleReshaped = arabicReshaper.reshape(\"التوقيعات:\");\n        const signaturesTitleBidi = bidi.getDisplay(signaturesTitleReshaped);\n        doc.fontSize(12).text(signaturesTitleBidi, { align: 'right', underline: true });\n        doc.moveDown();\n        \n        const firstPartySignReshaped = arabicReshaper.reshape(\"الطرف الأول (صاحب المشروع):\");\n        const firstPartySignBidi = bidi.getDisplay(firstPartySignReshaped);\n        doc.fontSize(11).text(firstPartySignBidi, { align: 'right' });\n        doc.moveDown();\n        \n        const nameFieldReshaped = arabicReshaper.reshape(\"الاسم: ___________________\");\n        const nameFieldBidi = bidi.getDisplay(nameFieldReshaped);\n        doc.fontSize(11).text(nameFieldBidi, { align: 'right' });\n        \n        const dateFieldReshaped = arabicReshaper.reshape(\"التاريخ: ___________________\");\n        const dateFieldBidi = bidi.getDisplay(dateFieldReshaped);\n        doc.fontSize(11).text(dateFieldBidi, { align: 'right' });\n        doc.moveDown();\n        \n        const secondPartySignReshaped = arabicReshaper.reshape(\"الطرف الثاني (الشركة):\");\n        const secondPartySignBidi = bidi.getDisplay(secondPartySignReshaped);\n        doc.fontSize(11).text(secondPartySignBidi, { align: 'right' });\n        doc.moveDown();\n        \n        const companyNameTextReshaped = arabicReshaper.reshape(`الاسم: ${nda.companySignatureInfo?.signerName || '___________________'}`);\n        const companyNameTextBidi = bidi.getDisplay(companyNameTextReshaped);\n        doc.fontSize(11).text(companyNameTextBidi, { align: 'right' });\n        \n        const dateTextReshaped = arabicReshaper.reshape(`التاريخ: ${nda.signedAt ? new Date(nda.signedAt).toLocaleDateString('ar-SA') : '___________________'}`);\n        const dateTextBidi = bidi.getDisplay(dateTextReshaped);\n        doc.fontSize(11).text(dateTextBidi, { align: 'right' });\n        \n        // إضافة الرقم التسلسلي والصفحات\n        const totalPages = doc.bufferedPageRange().count;\n        for (let i = 0; i < totalPages; i++) {\n          doc.switchToPage(i);\n          \n          const footerTextReshaped = arabicReshaper.reshape(\n            `منصة لينكتك - اتفاقية عدم إفصاح - رقم الاتفاقية: ${nda.id} - الصفحة ${i + 1} من ${totalPages}`\n          );\n          const footerTextBidi = bidi.getDisplay(footerTextReshaped);\n          \n          doc.fontSize(8).text(\n            footerTextBidi,\n            50,\n            doc.page.height - 50,\n            { align: 'center' }\n          );\n        }\n\n        // إنهاء الملف\n        doc.end();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  // الحصول على اتفاقية عدم إفصاح محددة بواسطة المعرف\n  app.get('/api/nda/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const ndaId = parseInt(req.params.id);\n      const nda = await storage.getNdaAgreement(ndaId);\n      \n      if (!nda) {\n        return res.status(404).json({ message: 'اتفاقية عدم الإفصاح غير موجودة' });\n      }\n      \n      // التحقق من صلاحية الوصول - فقط صاحب المشروع أو الشركة الموقعة أو المسؤول\n      const user = req.user as any;\n      const project = await storage.getProject(nda.projectId);\n      \n      if (!project) {\n        return res.status(404).json({ message: 'المشروع غير موجود' });\n      }\n      \n      const companyProfile = await storage.getCompanyProfileByUserId(user.id);\n      const isCompanySigner = companyProfile && \n        typeof nda.companySignatureInfo === 'object' && \n        'companyId' in nda.companySignatureInfo && \n        nda.companySignatureInfo.companyId === companyProfile.id;\n      \n      if (user.role === 'admin' || project.userId === user.id || isCompanySigner) {\n        return res.json(nda);\n      }\n      \n      res.status(403).json({ message: 'غير مصرح بالوصول إلى هذه الاتفاقية' });\n    } catch (error) {\n      console.error('خطأ في استرجاع اتفاقية عدم الإفصاح:', error);\n      res.status(500).json({ message: 'خطأ في الخادم الداخلي' });\n    }\n  });\n  \n  // تنزيل اتفاقية عدم الإفصاح بصيغة PDF\n  // يدعم التحقق من المصادقة عبر JWT token في query parameter أو Authorization header\n  app.get('/api/nda/:id/download-pdf', async (req: Request, res: Response) => {\n    let user = req.user;\n    \n    // إذا لم يكن هناك مستخدم من middleware، نحاول الحصول على التوكن من query parameter\n    if (!user && req.query.token) {\n      const decoded = verifyToken(req.query.token as string);\n      if (decoded) {\n        user = await storage.getUser(decoded.userId);\n      }\n    }\n    \n    // التحقق من المصادقة\n    if (!user) {\n      console.log('محاولة تنزيل PDF بدون مصادقة صحيحة');\n      return res.status(401).json({ message: 'يرجى تسجيل الدخول أولاً' });\n    }\n    \n    console.log('محاولة تنزيل PDF من المستخدم:', user.username);\n    \n    try {\n      const ndaId = parseInt(req.params.id);\n      const nda = await storage.getNdaAgreement(ndaId);\n      \n      if (!nda) {\n        return res.status(404).json({ message: 'اتفاقية عدم الإفصاح غير موجودة' });\n      }\n      \n      // التحقق من صلاحية الوصول - فقط صاحب المشروع أو الشركة الموقعة أو المسؤول\n      const project = await storage.getProject(nda.projectId);\n      \n      if (!project) {\n        return res.status(404).json({ message: 'المشروع غير موجود' });\n      }\n      \n      // التحقق من صلاحية الوصول\n      const isProjectOwner = project.userId === user.id;\n      const isAdmin = user.role === 'admin';\n      \n      // للشركات، نحتاج للتحقق من معرف الشركة من JSON field\n      let isCompanySigner = false;\n      if (user.role === 'company') {\n        const userCompany = await storage.getCompanyProfileByUserId(user.id);\n        \n        // فحص معرف الشركة من JSON field\n        let companyIdFromSignature = null;\n        if (nda.companySignatureInfo && typeof nda.companySignatureInfo === 'object') {\n          companyIdFromSignature = nda.companySignatureInfo.companyId;\n        }\n        \n        const signatureMatch = userCompany && companyIdFromSignature === userCompany.id;\n        const nameMatch = nda.companySignatureInfo && \n                         nda.companySignatureInfo.companyName === userCompany?.name;\n        \n        isCompanySigner = signatureMatch || nameMatch;\n        console.log(`فحص صلاحية الشركة: معرف المستخدم ${user.id}, معرف الشركة ${userCompany?.id}, معرف شركة من JSON ${companyIdFromSignature}, النتيجة: ${isCompanySigner}`);\n      }\n      \n      console.log(`فحص الصلاحيات: مالك المشروع=${isProjectOwner}, مسؤول=${isAdmin}, الشركة الموقعة=${isCompanySigner}`);\n      \n      // فحص الصلاحيات النهائي\n      const canDownload = isProjectOwner || isAdmin || isCompanySigner;\n      \n      if (!canDownload) {\n        console.log('محاولة وصول غير مصرح من المستخدم:', user.username, 'للاتفاقية:', ndaId);\n        return res.status(403).json({ message: 'غير مصرح لك بالوصول إلى هذه الاتفاقية' });\n      }\n      \n      console.log('تم السماح بالتنزيل للمستخدم:', user.username);\n      \n      // وظيفة لتحويل النص العربي إلى نص باللغة الإنجليزية لـ PDF\n      function sanitizeTextForPDF(text: string): string {\n        if (!text) return 'Not specified';\n        \n        // إذا كان النص يحتوي على أحرف عربية، نحوله لنص إنجليزي\n        const arabicRegex = /[\\u0600-\\u06FF]/;\n        if (arabicRegex.test(text)) {\n          // قاموس للتحويل من العربية للإنجليزية\n          const translations: Record<string, string> = {\n            'شركة عمر': 'Omar Company',\n            'شركة': 'Company',\n            'عمر': 'Omar',\n            'محمد': 'Mohammad',\n            'محمد جمال': 'Mohammad Jamal',\n            'mohammad2': 'Mohammad2',\n            'غير محدد': 'Not specified',\n            'مسودة (غير موقعة)': 'Draft (Not Signed)',\n            'موقعة ومفعلة': 'Signed and Active',\n            'غير محددة': 'Status Unknown'\n          };\n          \n          // البحث عن ترجمة مباشرة\n          if (translations[text]) {\n            return translations[text];\n          }\n          \n          // إذا لم توجد ترجمة، نحول النص لنسخة مبسطة\n          return text.replace(/[\\u0600-\\u06FF]/g, '?').replace(/\\?+/g, 'Arabic Text');\n        }\n        \n        return text;\n      }\n      \n      // الحصول على معلومات الشركة إذا كانت متاحة\n      let company = null;\n      if (nda.companyId) {\n        company = await storage.getCompanyProfile(nda.companyId);\n      }\n      \n      // تعيين رؤوس الاستجابة وإرسال الملف\n      const fileName = encodeURIComponent(`NDA-Agreement-${ndaId}.pdf`);\n      \n      // تعيين رؤوس CORS لدعم طلبات iframe\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.setHeader('Access-Control-Allow-Methods', 'GET');\n      res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n      res.setHeader('Access-Control-Allow-Credentials', 'true');\n      \n      // تعيين رؤوس المحتوى\n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', `attachment; filename=\"${fileName}\"`);\n      res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n      res.setHeader('Pragma', 'no-cache');\n      res.setHeader('Expires', '0');\n      \n      // تحديد بعض المعلومات\n      // استخراج معلومات الشركة\n      const companyInfo = nda.companySignatureInfo ? nda.companySignatureInfo : {};\n      const companyNameRaw = company ? (company.name || 'غير محدد') : \n                            (companyInfo && typeof companyInfo === 'object' && 'companyName' in companyInfo ? \n                             companyInfo.companyName : 'غير محدد');\n      const companyNameStr = sanitizeTextForPDF(companyNameRaw);\n      \n      // استخراج اسم صاحب المشروع\n      const projectOwnerRaw = project.userId ? (await storage.getUser(project.userId))?.name || 'غير محدد' : 'غير محدد';\n      const projectOwner = sanitizeTextForPDF(projectOwnerRaw);\n      \n      // استخدام PDFKit بدلاً من Puppeteer\n      console.log('استخدام PDFKit لإنشاء ملف PDF');\n      \n      // تحديد مسار القالب باستخدام المسار المطلق\n      const currentDir = process.cwd(); // الحصول على المسار الحالي\n      \n      const templatePath = path.join(currentDir, 'server', 'templates', 'nda-template.html');\n      console.log('مسار قالب الاتفاقية:', templatePath);\n      \n      // التحقق من وجود ملف القالب\n      const templateExists = await fsExtra.pathExists(templatePath);\n      console.log('هل يوجد ملف القالب؟', templateExists);\n      \n      // إذا لم يكن موجوداً، نستخدم قالب مضمن بدلاً من قراءة الملف\n      let templateHtml = '';\n      \n      if (templateExists) {\n        templateHtml = await fsExtra.readFile(templatePath, 'utf8');\n        console.log('تم قراءة القالب من الملف');\n      } else {\n        console.log('القالب غير موجود، استخدام قالب مضمن');\n        templateHtml = `\n        <!DOCTYPE html>\n        <html lang=\"ar\" dir=\"rtl\">\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>اتفاقية عدم الإفصاح</title>\n          <style>\n            body { font-family: Arial, sans-serif; direction: rtl; padding: 20px; }\n            .header { text-align: center; margin-bottom: 30px; }\n            .section { margin-bottom: 20px; }\n            .footer { margin-top: 50px; text-align: center; font-size: 12px; }\n            .signature { margin-top: 40px; border-top: 1px solid #ccc; padding-top: 20px; }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>اتفاقية عدم الإفصاح</h1>\n            <h2>{{PROJECT_TITLE}}</h2>\n          </div>\n          <div class=\"section\">\n            <p><strong>صاحب المشروع:</strong> {{PROJECT_OWNER_NAME}}</p>\n            <p><strong>الشركة:</strong> {{COMPANY_NAME}}</p>\n            <p><strong>التاريخ:</strong> {{CURRENT_DATE}}</p>\n          </div>\n          <div class=\"section\">\n            <h3>نص الاتفاقية:</h3>\n            <p>يتعهد الطرف الثاني (الشركة) بالحفاظ على سرية المعلومات المتعلقة بالمشروع وعدم الإفصاح عنها لأي طرف ثالث.</p>\n            <p>تسري هذه الاتفاقية لمدة سنتين من تاريخ توقيعها.</p>\n          </div>\n          <div class=\"signature\">\n            <p>{{SIGNATURE_STATUS}}</p>\n            {{SIGNATURE_INFO}}\n          </div>\n          <div class=\"footer\">\n            <p>منصة لينكتك &copy; 2025 | {{GENERATION_DATE}}</p>\n          </div>\n        </body>\n        </html>\n        `;\n      }\n      \n      // تاريخ اليوم بالتنسيق العربي\n      const arabicDate = new Date().toLocaleDateString('ar-SA');\n      const generationTime = new Date().toLocaleString('ar-SA');\n      \n      // إعداد معلومات التوقيع\n      let signatureStatus = 'الحالة: لم يتم التوقيع بعد. هذه نسخة مسودة فقط.';\n      let signatureInfo = '';\n      \n      if (nda.signedAt) {\n        const companySignInfo = nda.companySignatureInfo as any || {};\n        const signerName = typeof companySignInfo === 'object' && companySignInfo.signerName ? companySignInfo.signerName : 'غير محدد';\n        const signerTitle = typeof companySignInfo === 'object' && companySignInfo.signerTitle ? companySignInfo.signerTitle : 'غير محدد';\n        const signedDate = new Date(nda.signedAt).toLocaleDateString('ar-SA');\n        \n        signatureStatus = 'الحالة: تم التوقيع';\n        signatureInfo = `\n          <div class=\"signature-info\">تم التوقيع بواسطة: ${signerName}</div>\n          <div class=\"signature-info\">المنصب: ${signerTitle}</div>\n          <div class=\"signature-info\">التاريخ: ${signedDate}</div>\n        `;\n      }\n      \n      // استبدال القيم في القالب\n      templateHtml = templateHtml\n        .replace('{{PROJECT_TITLE}}', project.title)\n        .replace('{{PROJECT_OWNER_NAME}}', projectOwner)\n        .replace('{{COMPANY_NAME}}', companyNameStr)\n        .replace('{{CURRENT_DATE}}', arabicDate)\n        .replace('{{SIGNATURE_STATUS}}', signatureStatus)\n        .replace('{{SIGNATURE_INFO}}', signatureInfo)\n        .replace('{{GENERATION_DATE}}', generationTime);\n      \n      // استخدام PDFKit بدلاً من Puppeteer\n      console.log('استخدام PDFKit لإنشاء ملف PDF بدلاً من Puppeteer');\n      \n      // وظيفة مساعدة لإعادة تشكيل النص العربي \n      // تقوم بتحويل النص العربي إلى النموذج المناسب لعرضه في ملف PDF\n      function processText(text: string): string {\n        // Simple text processing for English - no need for Arabic reshaper\n        return text;\n      }\n      \n      // إنشاء وثيقة PDF جديدة باللغة الإنجليزية\n      const doc = new PDFDocument({\n        size: 'A4',\n        margin: 50,\n        autoFirstPage: true,\n        bufferPages: true,\n        layout: 'portrait',\n        info: {\n          Title: `Non-Disclosure Agreement - NDA`,\n          Author: 'LinkTech Platform',\n          Subject: 'Non-Disclosure Agreement',\n        }\n      });\n      \n      // استخدام الخط الافتراضي\n      doc.font('Helvetica');\n      \n      // إنشاء stream للحصول على البايتات\n      const chunks: Buffer[] = [];\n      doc.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n      \n      // وعد يتم تنفيذه عند اكتمال المستند\n      const pdfPromise = new Promise<Buffer>((resolve, reject) => {\n        doc.on('end', () => {\n          const pdfBuffer = Buffer.concat(chunks);\n          resolve(pdfBuffer);\n        });\n        doc.on('error', reject);\n      });\n      \n      // إضافة عنوان المستند\n      doc.fontSize(22).text('Non-Disclosure Agreement (NDA)', { \n        align: 'center'\n      });\n      doc.moveDown();\n      \n      // إضافة عنوان المشروع\n      doc.fontSize(16).text(`Project: ${project.title}`, { \n        align: 'center'\n      });\n      doc.moveDown(2);\n      \n      // معلومات الأطراف\n      doc.fontSize(14).text('Agreement Parties:', { \n        align: 'left', \n        underline: true\n      });\n      doc.moveDown();\n      \n      doc.fontSize(12).text(`First Party (Project Owner): ${projectOwner}`, { align: 'left' });\n      doc.moveDown();\n      \n      doc.fontSize(12).text(`Second Party (Company): ${companyNameStr}`, { align: 'left' });\n      doc.moveDown(2);\n      \n      // محتوى الاتفاقية\n      doc.fontSize(14).text('Agreement Terms:', { align: 'left', underline: true });\n      doc.moveDown();\n      \n      doc.fontSize(11).text('1. The Second Party commits to maintaining the confidentiality of all information and data related to the aforementioned project, and not disclosing it to any third party without prior written consent from the First Party.', { align: 'left' });\n      doc.moveDown();\n      \n      doc.fontSize(11).text('2. Confidential information includes, but is not limited to: work plans, designs, drawings, software, ideas, concepts, and technical and commercial details.', { align: 'left' });\n      doc.moveDown();\n      \n      doc.fontSize(11).text('3. Confidentiality obligations shall continue for a period of two years from the date of signing this agreement.', { align: 'left' });\n      doc.moveDown(2);\n      \n      // معلومات التوقيع\n      doc.fontSize(14).text('Signature Status:', { align: 'left', underline: true });\n      doc.moveDown();\n      \n      if (nda.status === 'signed' && nda.signedAt) {\n        const signDateStr = new Date(nda.signedAt).toLocaleDateString('en-US');\n        doc.fontSize(12).text(`This agreement was signed on: ${signDateStr}`, { align: 'left' });\n        \n        const signerInfo = nda.companySignatureInfo as any || {};\n        if (signerInfo.signerName) {\n          const cleanSignerName = sanitizeTextForPDF(signerInfo.signerName);\n          doc.fontSize(12).text(`Signed by: ${cleanSignerName}`, { align: 'left' });\n        }\n        if (signerInfo.signerTitle) {\n          const cleanSignerTitle = sanitizeTextForPDF(signerInfo.signerTitle);\n          doc.fontSize(12).text(`Position: ${cleanSignerTitle}`, { align: 'left' });\n        }\n      } else {\n        const cleanStatus = sanitizeTextForPDF('Draft (Not Signed)');\n        doc.fontSize(12).text(`Agreement Status: ${cleanStatus}`, { align: 'left' });\n      }\n      \n      doc.moveDown(2);\n      \n      // تذييل الصفحة\n      const todayDate = new Date().toLocaleDateString('en-US');\n      doc.fontSize(10).text(`This document was created by LinkTech Platform - ${todayDate}`, { align: 'center' });\n      \n      // إنهاء المستند\n      doc.end();\n      \n      // انتظار اكتمال إنشاء المستند\n      const pdfBuffer = await pdfPromise;\n      \n      // إرسال الملف مباشرة في الاستجابة\n      res.contentType('application/pdf');\n      res.send(pdfBuffer);\n      \n    } catch (error) {\n      console.error('خطأ في إنشاء ملف PDF للاتفاقية:', error);\n      res.status(500).json({ message: 'خطأ في إنشاء ملف PDF للاتفاقية' });\n    }\n  });\n  \n  // الحصول على جميع اتفاقيات عدم الإفصاح لمشروع محدد\n  app.get('/api/projects/:projectId/nda', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const projectId = parseInt(req.params.projectId);\n      const project = await storage.getProject(projectId);\n      \n      if (!project) {\n        return res.status(404).json({ message: 'المشروع غير موجود' });\n      }\n      \n      // التحقق من صلاحية الوصول - صاحب المشروع أو المسؤول أو الشركات (لفحص حالة اتفاقياتهم)\n      const user = req.user as any;\n      \n      if (user.role !== 'admin' && project.userId !== user.id && user.role !== 'company') {\n        return res.status(403).json({ message: 'غير مصرح بالوصول إلى اتفاقيات عدم الإفصاح لهذا المشروع' });\n      }\n      \n      // الحصول على اتفاقية عدم الإفصاح الخاصة بالمشروع\n      const ndaAgreement = await storage.getNdaAgreementByProjectId(projectId);\n      \n      // إذا وجدت اتفاقية، نرسلها كمصفوفة تحتوي على عنصر واحد\n      // إذا لم توجد، نرسل مصفوفة فارغة\n      const ndaAgreements = ndaAgreement ? [ndaAgreement] : [];\n      res.json(ndaAgreements);\n    } catch (error) {\n      console.error('خطأ في استرجاع اتفاقيات عدم الإفصاح للمشروع:', error);\n      res.status(500).json({ message: 'خطأ في الخادم الداخلي' });\n    }\n  });\n\n\n  // Check NDA status and update from Sadiq\n  app.get('/api/nda/:id/status', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const ndaId = parseInt(req.params.id);\n      const nda = await storage.getNdaAgreement(ndaId);\n      \n      if (!nda) {\n        return res.status(404).json({ message: 'اتفاقية عدم الإفصاح غير موجودة' });\n      }\n\n      // If we have Sadiq reference number, check status\n      if (nda.sadiqReferenceNumber) {\n        try {\n          const { sadiqAuth } = await import('./sadiqAuthService');\n          const sadiqEnvelopeData = await sadiqAuth.getEnvelopeStatus(nda.sadiqReferenceNumber);\n          \n          // Check if we got valid data from Sadiq\n          if (!sadiqEnvelopeData) {\n            console.log('⚠️ لم يتم الحصول على بيانات من صادق، استخدام البيانات المحلية');\n            return res.json(nda);\n          }\n          \n          // Parse Sadiq response based on the provided format\n          const signatories = sadiqEnvelopeData.signatories || [];\n          const signedCount = signatories.filter((s: any) => s.status === 'SIGNED').length;\n          const pendingCount = signatories.filter((s: any) => s.status === 'PENDING').length;\n          const totalSignatories = signatories.length;\n          const completionPercentage = totalSignatories > 0 ? Math.round((signedCount / totalSignatories) * 100) : 0;\n          \n          // Determine overall status\n          const envelopeStatus = sadiqEnvelopeData.status || 'Unknown';\n          const isCompleted = envelopeStatus === 'Completed' || (pendingCount === 0 && signedCount > 0);\n          const isSigned = isCompleted && envelopeStatus !== 'Voided';\n          \n          // Update status in database\n          const updatedStatus = isSigned ? 'signed' : (signedCount > 0 ? 'invitation_sent' : nda.status);\n          await storage.updateNdaAgreement(ndaId, {\n            envelopeStatus: envelopeStatus,\n            ...(isSigned && { status: 'signed', signedAt: new Date() })\n          });\n\n          res.json({\n            ...nda,\n            status: updatedStatus,\n            envelopeStatus: envelopeStatus,\n            sadiqStatus: {\n              envelopeId: sadiqEnvelopeData.id,\n              status: envelopeStatus,\n              completionPercentage,\n              signedCount,\n              pendingCount,\n              totalSignatories,\n              signatories: signatories,\n              documents: sadiqEnvelopeData.documents || [],\n              createDate: sadiqEnvelopeData.createDate\n            }\n          });\n        } catch (sadiqError) {\n          console.error('خطأ في التحقق من حالة صادق:', sadiqError);\n          res.json(nda); // Return current status if Sadiq check fails\n        }\n      } else {\n        res.json(nda);\n      }\n    } catch (error) {\n      console.error('خطأ في التحقق من حالة اتفاقية عدم الإفصاح:', error);\n      res.status(500).json({ message: 'خطأ في الخادم الداخلي' });\n    }\n  });\n\n  // Download signed NDA document from Sadiq\n  app.get('/api/nda/:id/download-signed', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const ndaId = parseInt(req.params.id);\n      const nda = await storage.getNdaAgreement(ndaId);\n      \n      if (!nda) {\n        return res.status(404).json({ message: 'اتفاقية عدم الإفصاح غير موجودة' });\n      }\n\n      if (!nda.sadiqDocumentId) {\n        return res.status(400).json({ message: 'لا يوجد مستند إلكتروني لهذه الاتفاقية' });\n      }\n\n      // Download signed document from Sadiq\n      const { sadiqAuth } = await import('./sadiqAuthService');\n      const base64Content = await sadiqAuth.downloadSignedDocument(nda.sadiqDocumentId);\n      \n      // Convert base64 to buffer\n      const pdfBuffer = Buffer.from(base64Content, 'base64');\n      \n      // Set response headers for PDF download\n      const filename = `NDA-Signed-${ndaId}-${Date.now()}.pdf`;\n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', `attachment; filename=\"${filename}\"`);\n      res.setHeader('Content-Length', pdfBuffer.length);\n      \n      res.send(pdfBuffer);\n    } catch (error) {\n      console.error('خطأ في تنزيل اتفاقية عدم الإفصاح الموقعة:', error);\n      res.status(500).json({ message: 'خطأ في تنزيل الوثيقة الموقعة' });\n    }\n  });\n\n  // Test Sadiq authentication with comprehensive information\n  app.get('/api/test-sadiq-auth', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const { sadiqAuth } = await import('./sadiqAuthService');\n      const token = await sadiqAuth.getAccessToken();\n      \n      res.json({\n        success: true,\n        message: 'تم الاتصال بصادق بنجاح',\n        authentication: {\n          method: 'dynamic_token_management',\n          tokenLength: token.length,\n          tokenPreview: token.substring(0, 50) + '...',\n          cacheStatus: 'active',\n          timestamp: new Date().toISOString()\n        },\n        capabilities: [\n          'رفع الوثائق',\n          'إرسال دعوات التوقيع',\n          'التحقق من حالة المغلفات',\n          'تنزيل الوثائق الموقعة'\n        ]\n      });\n    } catch (error) {\n      console.error('خطأ في اختبار صادق:', error);\n      res.status(500).json({\n        success: false,\n        message: 'فشل في الاتصال بصادق',\n        error: error.message.split('\\n')[0], // First line only for clean response\n        help: 'تأكد من إضافة SADIQ_ACCESS_TOKEN أو صحة بيانات SADIQ_EMAIL و SADIQ_PASSWORD'\n      });\n    }\n  });\n\n  // Test complete NDA workflow\n  app.post('/api/test-nda-workflow', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      if (user.role !== 'admin') {\n        return res.status(403).json({ message: 'هذا الاختبار متاح للمسؤولين فقط' });\n      }\n\n      console.log('🧪 بدء اختبار سير العمل الكامل لاتفاقية عدم الإفصاح');\n      \n      // Import required modules\n      const { sadiqAuth } = await import('./sadiqAuthService');\n      const { generateProjectNdaPdf } = await import('./generateNDA');\n\n      // Step 1: Get access token\n      const token = await sadiqAuth.getAccessToken();\n      \n      // Step 2: Generate PDF\n      const testData = {\n        project: { title: 'مشروع اختباري', description: 'وصف المشروع الاختباري' },\n        company: { name: 'شركة الاختبار', location: 'المملكة العربية السعودية' },\n        signing: { entrepreneur: '[اختبار]', companyRep: '[اختبار]' }\n      };\n      \n      const pdfBuffer = await generateProjectNdaPdf(testData.project, testData.company, testData.signing);\n      \n      // Step 3: Upload to Sadiq\n      const uploadResult = await sadiqAuth.uploadDocument(\n        pdfBuffer.toString('base64'), \n        `test-nda-${Date.now()}.pdf`\n      );\n\n      console.log('✅ تم اختبار سير العمل بنجاح');\n      \n      res.json({\n        success: true,\n        message: 'تم اختبار سير العمل الكامل بنجاح',\n        results: {\n          authentication: 'نجح',\n          pdfGeneration: `${pdfBuffer.length} بايت`,\n          documentUpload: uploadResult.id,\n          referenceNumber: uploadResult.referenceNumber,\n          timestamp: new Date().toISOString()\n        }\n      });\n      \n    } catch (error) {\n      console.error('❌ فشل اختبار سير العمل:', error);\n      res.status(500).json({\n        success: false,\n        message: 'فشل في اختبار سير العمل',\n        error: error.message.split('\\n')[0]\n      });\n    }\n  });\n  \n  // تحديث حالة اتفاقية عدم إفصاح (لتغيير الحالة، تحميل ملف PDF، إلخ)\n  app.patch('/api/nda/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const ndaId = parseInt(req.params.id);\n      const nda = await storage.getNdaAgreement(ndaId);\n      \n      if (!nda) {\n        return res.status(404).json({ message: 'اتفاقية عدم الإفصاح غير موجودة' });\n      }\n      \n      // التحقق من صلاحية الوصول - فقط المسؤول يمكنه تحديث الاتفاقية\n      const user = req.user as any;\n      \n      if (user.role !== 'admin') {\n        return res.status(403).json({ message: 'فقط المسؤولون يمكنهم تحديث اتفاقيات عدم الإفصاح' });\n      }\n      \n      // تحديث حالة اتفاقية عدم الإفصاح\n      if (req.body.status) {\n        const updatedNda = await storage.updateNdaAgreementStatus(ndaId, req.body.status);\n        return res.json(updatedNda);\n      }\n      \n      // تحديث رابط ملف PDF\n      if (req.body.pdfUrl) {\n        const updatedNda = await storage.setNdaPdfUrl(ndaId, req.body.pdfUrl);\n        return res.json(updatedNda);\n      }\n      \n      res.status(400).json({ message: 'لم يتم تحديد حقول للتحديث (status أو pdfUrl)' });\n    } catch (error) {\n      console.error('خطأ في تحديث اتفاقية عدم الإفصاح:', error);\n      res.status(500).json({ message: 'خطأ في الخادم الداخلي' });\n    }\n  });\n\n  // Message routes\n  app.get('/api/messages', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const messages = await storage.getMessages(user.id);\n      res.json(messages);\n    } catch (error) {\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.get('/api/messages/conversation/:userId', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const otherUserId = parseInt(req.params.userId); // معرف المستخدم الآخر في المحادثة\n      const projectId = req.query.projectId ? parseInt(req.query.projectId as string) : undefined;\n      \n      console.log(`طلب المحادثة مع المستخدم: ${otherUserId} من المستخدم: ${user.id}, بخصوص المشروع: ${projectId || 'غير محدد'}`);\n      \n      // إذا كان المستخدم مسؤول، اسمح له بعرض أي محادثة\n      if (user.role === 'admin') {\n        // إذا تم تحديد معرفين مختلفين من قبل المسؤول\n        const adminRequestedOtherUserId = req.query.otherUserId ? parseInt(req.query.otherUserId as string) : undefined;\n        if (adminRequestedOtherUserId) {\n          console.log(`طلب المسؤول لعرض المحادثة بين المستخدمين: ${otherUserId} و ${adminRequestedOtherUserId}`);\n          const messages = await storage.getConversation(otherUserId, adminRequestedOtherUserId, projectId);\n          return res.json(messages);\n        }\n      }\n      \n      // الحصول على المحادثة بين المستخدم الحالي والمستخدم الآخر\n      const messages = await storage.getConversation(user.id, otherUserId, projectId);\n      \n      // لوغ عدد الرسائل المسترجعة\n      console.log(`تم استرجاع ${messages.length} رسالة في المحادثة بين ${user.id} و ${otherUserId}`);\n      \n      // إضافة معلومات المستخدمين إلى الرسائل\n      const messagesWithUserDetails = await Promise.all(\n        messages.map(async (message) => {\n          const fromUser = await storage.getUser(message.fromUserId);\n          const toUser = await storage.getUser(message.toUserId);\n          \n          return {\n            ...message,\n            fromUser: fromUser ? {\n              name: fromUser.name || fromUser.username,\n              avatar: fromUser.avatar || null\n            } : null,\n            toUser: toUser ? {\n              name: toUser.name || toUser.username,\n              avatar: toUser.avatar || null\n            } : null\n          };\n        })\n      );\n      \n      res.json(messagesWithUserDetails);\n    } catch (error) {\n      console.error('خطأ في الحصول على المحادثة:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.post('/api/messages', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      // تحقق من محتوى الرسالة قبل الحفظ مع تمرير معرفات المستخدمين للكشف عن الأنماط المتسلسلة\n      const contentCheck = checkMessageForProhibitedContent(\n        req.body.content,\n        user.id,\n        req.body.toUserId\n      );\n      \n      if (!contentCheck.safe) {\n        // رسالة خطأ مخصصة للنمط المتسلسل\n        let errorMessage = 'الرسالة تحتوي على معلومات اتصال محظورة';\n        if (contentCheck.violations?.includes('نمط_متسلسل_مشبوه')) {\n          errorMessage = 'تم رصد محاولة لتمرير معلومات اتصال عبر عدة رسائل';\n          console.log(`تم اكتشاف نمط متسلسل مشبوه بين المستخدمين ${user.id} و ${req.body.toUserId}`);\n        }\n        \n        // إذا احتوت الرسالة على معلومات محظورة\n        return res.status(400).json({ \n          message: errorMessage,\n          violations: contentCheck.violations,\n          error: true\n        });\n      }\n      \n      // إضافة الرسالة إلى سجل المحادثة للفحص المستقبلي\n      addMessageToConversationHistory(user.id, req.body.toUserId, req.body.content);\n      \n      const messageData = insertMessageSchema.parse({\n        ...req.body,\n        fromUserId: user.id\n      });\n      \n      const message = await storage.createMessage(messageData);\n      res.status(201).json(message);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: 'Validation error', errors: error.errors });\n      }\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.patch('/api/messages/:id/read', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const messageId = parseInt(req.params.id);\n      const updatedMessage = await storage.markMessageAsRead(messageId);\n      \n      if (!updatedMessage) {\n        return res.status(404).json({ message: 'Message not found' });\n      }\n      \n      res.json(updatedMessage);\n    } catch (error) {\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // مسارات محرك التوصية بالمشاريع\n  // 1. الحصول على المشاريع الموصى بها لشركة معينة\n  app.get('/api/recommendations/companies/:companyId/projects', async (req: Request, res: Response) => {\n    try {\n      const companyId = parseInt(req.params.companyId);\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 5;\n      \n      const recommendedProjects = await getRecommendedProjectsForCompany(companyId, limit);\n      res.json(recommendedProjects);\n    } catch (error) {\n      console.error('Error in recommended projects:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 2. الحصول على الشركات الموصى بها لمشروع معين\n  app.get('/api/recommendations/projects/:projectId/companies', async (req: Request, res: Response) => {\n    try {\n      const projectId = parseInt(req.params.projectId);\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 5;\n      \n      const recommendedCompanies = await getRecommendedCompaniesForProject(projectId, limit);\n      res.json(recommendedCompanies);\n    } catch (error) {\n      console.error('Error in recommended companies:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 3. الحصول على المشاريع المشابهة لمشروع محدد\n  app.get('/api/recommendations/projects/:projectId/similar', async (req: Request, res: Response) => {\n    try {\n      const projectId = parseInt(req.params.projectId);\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 3;\n      \n      const similarProjects = await getSimilarProjects(projectId, limit);\n      res.json(similarProjects);\n    } catch (error) {\n      console.error('Error in similar projects:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 4. الحصول على المشاريع الرائجة (عالية الطلب)\n  app.get('/api/recommendations/trending-projects', async (req: Request, res: Response) => {\n    try {\n      console.log(`طلب المشاريع الرائجة - حالة المصادقة: ${req.user ? 'مصرح' : 'غير مصرح'}`);\n      \n      // تم تعديل الشروط للسماح بعرض المشاريع الرائجة في الواجهة العامة\n      // لا نحتاج للتحقق من تسجيل الدخول لهذا المسار لأنه يستخدم في الصفحة الرئيسية\n      \n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 5;\n      \n      const trendingProjects = await getTrendingProjects(limit);\n      \n      // التعامل مع المستخدمين المسجلين\n      if (req.user) {\n        const user = req.user as any;\n        console.log(`جلب المشاريع الرائجة للمستخدم ${user.username} (الدور: ${user.role})`);\n        \n        // المسؤولون يمكنهم مشاهدة جميع المشاريع الرائجة\n        // المستخدمون العاديون يمكنهم مشاهدة مشاريعهم الرائجة فقط\n        // الشركات يمكنها مشاهدة المشاريع الرائجة المتاحة\n        let filteredProjects = trendingProjects;\n        \n        if (user.role === 'entrepreneur') {\n          // رواد الأعمال يشاهدون فقط مشاريعهم الرائجة\n          filteredProjects = trendingProjects.filter(project => project.userId === user.id);\n        }\n        \n        console.log(`إرسال ${filteredProjects.length} مشروع رائج للمستخدم ${user.username}`);\n        return res.json(filteredProjects);\n      } else {\n        // للزوار والمستخدمين غير المسجلين - إظهار كافة المشاريع الرائجة العامة\n        console.log(`إرسال ${trendingProjects.length} مشروع رائج للزائر غير المسجل`);\n        return res.json(trendingProjects);\n      }\n    } catch (error) {\n      console.error('Error in trending projects:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // محرك التوصيات المعزز بالذكاء الاصطناعي\n  // 1. الحصول على الشركات الموصى بها لمشروع معين (نسخة معززة)\n  app.get('/api/ai-recommendations/projects/:projectId/companies', async (req: Request, res: Response) => {\n    try {\n      const projectId = parseInt(req.params.projectId);\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 5;\n      \n      // استخدام محرك التوصيات المعزز\n      const recommendedCompanies = await getEnhancedRecommendationsForProject(projectId, limit);\n      \n      // إذا كان هناك مستخدم مسجل الدخول وهو صاحب المشروع، أظهر المعلومات مع تعمية الشركات\n      if (req.user) {\n        const user = req.user as any;\n        const project = await storage.getProject(projectId);\n        \n        if (project && project.userId === user.id) {\n          const companiesWithBlurredData = await Promise.all(\n            recommendedCompanies.map(async ({ company, matchScore, matchDetails }) => {\n              const companyUser = await storage.getUser(company.userId);\n              \n              // إنشاء اسم مستعار مختصر\n              const blurredName = companyUser?.name \n                ? `شركة ${companyUser.name.charAt(0)}...` \n                : 'شركة متخصصة';\n              \n              return {\n                company: {\n                  ...company,\n                  blurredName,\n                  verified: company.verified,\n                  rating: company.rating,\n                  skills: company.skills\n                },\n                matchScore,\n                matchDetails\n              };\n            })\n          );\n          \n          return res.json(companiesWithBlurredData);\n        }\n      }\n      \n      // للزوار أو الشركات الأخرى، إخفاء المعلومات تماماً\n      res.json([]);\n    } catch (error) {\n      console.error('Error fetching AI recommendations:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 2. الحصول على المشاريع الموصى بها لشركة معينة (نسخة معززة)\n  app.get('/api/ai-recommendations/companies/:companyId/projects', async (req: Request, res: Response) => {\n    try {\n      const companyId = parseInt(req.params.companyId);\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 5;\n      \n      // استخدام محرك التوصيات المعزز\n      const recommendedProjects = await getEnhancedRecommendationsForCompany(companyId, limit);\n      res.json(recommendedProjects);\n    } catch (error) {\n      console.error('Error fetching AI recommendations:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 3. الحصول على المشاريع المشابهة لمشروع معين (نسخة معززة)\n  app.get('/api/ai-recommendations/projects/:projectId/similar', async (req: Request, res: Response) => {\n    try {\n      const projectId = parseInt(req.params.projectId);\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 3;\n      \n      // استخدام محرك التوصيات المعزز\n      const similarProjects = await getEnhancedSimilarProjects(projectId, limit);\n      res.json(similarProjects);\n    } catch (error) {\n      console.error('Error fetching AI similar projects:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 4. تحليل اتجاهات السوق - المجالات الشائعة\n  app.get('/api/ai-recommendations/market/domains', async (req: Request, res: Response) => {\n    try {\n      const domains = await discoverProjectDomains();\n      res.json(domains);\n    } catch (error) {\n      console.error('Error discovering market domains:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 5. تحليل اتجاهات السوق - التقنيات الشائعة\n  app.get('/api/ai-recommendations/market/technologies', async (req: Request, res: Response) => {\n    try {\n      const technologies = await discoverTrendingTechnologies();\n      res.json(technologies);\n    } catch (error) {\n      console.error('Error discovering trending technologies:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // 6. تحليل مشروع محدد\n  app.get('/api/ai-recommendations/analyze/project/:projectId', async (req: Request, res: Response) => {\n    try {\n      const projectId = parseInt(req.params.projectId);\n      const project = await storage.getProject(projectId);\n      \n      if (!project) {\n        return res.status(404).json({ message: 'Project not found' });\n      }\n      \n      // التحقق من صلاحية الوصول - يمكن فقط لصاحب المشروع أو مسؤول النظام رؤية التحليل\n      if (req.user) {\n        const user = req.user as any;\n        \n        if (project.userId === user.id || user.role === 'admin') {\n          const analyzedProject = analyzeProject(project);\n          return res.json(analyzedProject);\n        }\n      }\n      \n      res.status(403).json({ message: 'Unauthorized' });\n    } catch (error) {\n      console.error('Error analyzing project:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Testimonial routes\n  app.get('/api/testimonials', async (req: Request, res: Response) => {\n    try {\n      const testimonials = await storage.getTestimonials();\n      res.json(testimonials);\n    } catch (error) {\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  app.post('/api/testimonials', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      const testimonialData = insertTestimonialSchema.parse({\n        ...req.body,\n        userId: user.id,\n        role: user.role\n      });\n      \n      const testimonial = await storage.createTestimonial(testimonialData);\n      res.status(201).json(testimonial);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: 'Validation error', errors: error.errors });\n      }\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // Project Offers routes - الشركات تظهر فقط بشكل معمّى للعميل صاحب المشروع\n  app.get('/api/projects/:projectId/offers', async (req: Request, res: Response) => {\n    try {\n      const projectId = parseInt(req.params.projectId);\n      const project = await storage.getProject(projectId);\n      \n      if (!project) {\n        return res.status(404).json({ message: 'Project not found' });\n      }\n      \n      // إذا كان المستخدم مسجل الدخول وهو صاحب المشروع، أظهر كل العروض مع تعمية معلومات الشركات\n      // إذا كان المستخدم شركة، أظهر فقط عروضه على هذا المشروع\n      // إذا كان زائر، أظهر فقط عدد العروض المقدمة\n      let offers = await storage.getProjectOffersByProjectId(projectId);\n      \n      if (req.user) {\n        const user = req.user as any;\n        \n        if (project.userId === user.id) {\n          // صاحب المشروع - يرى جميع العروض مع تعمية معلومات الشركات\n          const offersWithBlurredCompanyData = await Promise.all(\n            offers.map(async (offer) => {\n              const companyProfile = await storage.getCompanyProfile(offer.companyId);\n              const companyUser = await storage.getUser(companyProfile?.userId || 0);\n              \n              // إذا كان العرض مقبول وتم الدفع، نكشف معلومات الشركة\n              if (offer.status === 'accepted' && offer.depositPaid) {\n                return {\n                  ...offer,\n                  companyName: companyUser?.name,\n                  companyLogo: companyProfile?.logo,\n                  companyVerified: companyProfile?.verified,\n                  companyRating: companyProfile?.rating,\n                  companyEmail: companyUser?.email,\n                  companyUsername: companyUser?.username,\n                  companyUserId: companyUser?.id,\n                  companyContactRevealed: true\n                };\n              }\n              \n              // وإلا نعرض المعلومات بشكل معمّى\n              return {\n                ...offer,\n                // تعمية اسم الشركة مع الإشارة إلى حالة التوثيق فقط\n                companyName: companyProfile?.verified \n                  ? `شركة موثقة ${companyUser?.name ? companyUser.name.charAt(0) : ''}***` \n                  : `شركة ${companyUser?.name ? companyUser.name.charAt(0) : ''}***`,\n                companyLogo: null, // إخفاء الشعار\n                companyVerified: companyProfile?.verified || false,\n                companyRating: companyProfile?.rating, // نعرض التقييم لأنه مفيد للمقارنة\n                companyBlurred: true // علامة للواجهة للإشارة إلى أن المعلومات معمّاة\n              };\n            })\n          );\n          \n          return res.json(offersWithBlurredCompanyData);\n        } else if (user.role === 'admin') {\n          // المسؤولون - يرون جميع البيانات كاملة\n          const offersWithFullCompanyData = await Promise.all(\n            offers.map(async (offer) => {\n              const companyProfile = await storage.getCompanyProfile(offer.companyId);\n              const companyUser = await storage.getUser(companyProfile?.userId || 0);\n              \n              return {\n                ...offer,\n                company: {\n                  ...companyProfile,\n                  username: companyUser?.username,\n                  name: companyUser?.name,\n                  email: companyUser?.email\n                }\n              };\n            })\n          );\n          \n          return res.json(offersWithFullCompanyData);\n        } else if (user.role === 'company') {\n          // الشركة - ترى فقط عروضها على هذا المشروع\n          const companyProfile = await storage.getCompanyProfileByUserId(user.id);\n          \n          if (!companyProfile) {\n            return res.status(403).json({ message: 'Company profile not found' });\n          }\n          \n          offers = offers.filter(offer => offer.companyId === companyProfile.id);\n          return res.json(offers);\n        }\n      }\n      \n      // المستخدم زائر أو غير مصرح له - يرى فقط إحصائيات العروض\n      return res.json({ \n        count: offers.length,\n        minAmount: offers.length > 0 ? Math.min(...offers.map(o => parseInt(o.amount.replace(/[^0-9]/g, '')))) : null,\n        maxAmount: offers.length > 0 ? Math.max(...offers.map(o => parseInt(o.amount.replace(/[^0-9]/g, '')))) : null,\n      });\n      \n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  app.post('/api/projects/:projectId/offers', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const projectId = parseInt(req.params.projectId);\n      \n      if (user.role !== 'company') {\n        return res.status(403).json({ message: 'Only companies can submit offers' });\n      }\n      \n      const project = await storage.getProject(projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'Project not found' });\n      }\n      \n      const companyProfile = await storage.getCompanyProfileByUserId(user.id);\n      if (!companyProfile) {\n        return res.status(403).json({ message: 'Company profile not found' });\n      }\n      \n      // تحقق مما إذا كانت الشركة قد قدمت عرضاً بالفعل\n      const existingOffers = await storage.getProjectOffersByProjectId(projectId);\n      const hasExistingOffer = existingOffers.some(offer => offer.companyId === companyProfile.id);\n      \n      if (hasExistingOffer) {\n        return res.status(400).json({ message: 'You have already submitted an offer for this project' });\n      }\n      \n      const offerData = insertProjectOfferSchema.parse({\n        ...req.body,\n        projectId,\n        companyId: companyProfile.id\n      });\n      \n      const offer = await storage.createProjectOffer(offerData);\n      res.status(201).json(offer);\n      \n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: error.errors });\n      }\n      console.error(error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  app.patch('/api/offers/:id/accept', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const offerId = parseInt(req.params.id);\n      \n      // تحقق من أن العرض موجود\n      const offer = await storage.getProjectOffer(offerId);\n      if (!offer) {\n        return res.status(404).json({ message: 'Offer not found' });\n      }\n      \n      // تحقق من أن المشروع موجود\n      const project = await storage.getProject(offer.projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'Project not found' });\n      }\n      \n      // تحقق من أن مقدم الطلب هو صاحب المشروع\n      if (project.userId !== user.id && user.role !== 'admin') {\n        return res.status(403).json({ message: 'Only the project owner can accept offers' });\n      }\n      \n      // حساب قيمة العربون (2.5% من قيمة العرض)\n      const amount = parseInt(offer.amount.replace(/[^0-9]/g, ''));\n      const depositAmount = Math.round(amount * 0.025).toString();\n      \n      // تحديث حالة العرض إلى 'accepted'\n      const updatedOffer = await storage.updateProjectOfferStatus(offerId, 'accepted');\n      \n      // إرجاع العرض المحدث مع معلومات الدفع المطلوبة\n      res.json({\n        ...updatedOffer,\n        depositAmount,\n        paymentRequired: true\n      });\n      \n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  app.post('/api/offers/:id/pay-deposit', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const offerId = parseInt(req.params.id);\n      const { paymentId, depositAmount } = req.body;\n      \n      if (!paymentId || !depositAmount) {\n        return res.status(400).json({ message: 'Payment ID and deposit amount are required' });\n      }\n      \n      // تحقق من أن العرض موجود\n      const offer = await storage.getProjectOffer(offerId);\n      if (!offer) {\n        return res.status(404).json({ message: 'Offer not found' });\n      }\n      \n      // تحقق من أن المشروع موجود\n      const project = await storage.getProject(offer.projectId);\n      if (!project) {\n        return res.status(404).json({ message: 'Project not found' });\n      }\n      \n      // تحقق من أن مقدم الطلب هو صاحب المشروع\n      if (project.userId !== user.id && user.role !== 'admin') {\n        return res.status(403).json({ message: 'Only the project owner can pay deposits' });\n      }\n      \n      // تحقق من أن العرض مقبول ولم يتم دفع العربون بعد\n      if (offer.status !== 'accepted' || offer.depositPaid) {\n        return res.status(400).json({ message: 'Invalid offer status or deposit already paid' });\n      }\n      \n      // تحديث العرض لتسجيل دفع العربون\n      const updatedOffer = await storage.setProjectOfferDepositPaid(offerId, depositAmount);\n      \n      // كشف معلومات التواصل الخاصة بالشركة\n      const revealedOffer = await storage.setProjectOfferContactRevealed(offerId);\n      \n      // الحصول على معلومات الشركة وصاحب المشروع\n      const company = await storage.getCompanyProfile(offer.companyId);\n      const companyUser = company ? await storage.getUser(company.userId) : null;\n      const projectOwner = await storage.getUser(project.userId);\n      \n      // إنشاء رسالة إلى الشركة تحتوي على تفاصيل التواصل\n      // فقط إذا لم تكن هناك محادثة موجودة بالفعل لهذا المشروع\n      if (companyUser && projectOwner) {\n        // التحقق من وجود محادثة مسبقة بين المستخدمين لهذا المشروع\n        const existingConversation = await storage.getConversation(\n          projectOwner.id, \n          companyUser.id, \n          project.id\n        );\n        \n        // إنشاء رسالة فقط إذا لم تكن هناك رسائل مسبقة لهذا المشروع\n        // أو إذا لم تحتوي المحادثة على رسالة قبول العرض\n        const hasAcceptanceMessage = existingConversation.some(msg => \n          msg.content.includes(\"تم قبول عرضك على مشروع\") && \n          msg.content.includes(project.title)\n        );\n        \n        if (!hasAcceptanceMessage) {\n          await storage.createMessage({\n            content: `تم قبول عرضك على مشروع \"${project.title}\" ودفع العربون. يمكنك التواصل مع ${projectOwner.name} عبر البريد الإلكتروني: ${projectOwner.email}`,\n            fromUserId: projectOwner.id,\n            toUserId: companyUser.id,\n            projectId: project.id\n          });\n        }\n      }\n      \n      // تحديث حالة المشروع إلى 'in-progress'\n      await storage.updateProject(project.id, { status: 'in-progress' });\n      \n      // إرسال إشعار بتحديث العرض عبر WebSocket\n      if (company && companyUser) {\n        // إشعار صاحب المشروع\n        const projectOwnerConnections = clients.get(project.userId);\n        if (projectOwnerConnections) {\n          const notification = JSON.stringify({\n            type: \"offer_updated\",\n            offerId: offerId,\n            message: \"تم تحديث العرض وكشف معلومات الشركة بعد دفع العربون\"\n          });\n          \n          projectOwnerConnections.forEach(client => {\n            if (client.readyState === OPEN) {\n              client.send(notification);\n            }\n          });\n        }\n        \n        // إشعار الشركة\n        const companyConnections = clients.get(companyUser.id);\n        if (companyConnections) {\n          const notification = JSON.stringify({\n            type: \"offer_accepted_paid\",\n            offerId: offerId,\n            projectId: project.id,\n            message: `تم قبول عرضك على المشروع \"${project.title}\" ودفع العربون`\n          });\n          \n          companyConnections.forEach(client => {\n            if (client.readyState === OPEN) {\n              client.send(notification);\n            }\n          });\n        }\n      }\n      \n      // إرجاع معلومات العرض المحدثة\n      res.json({\n        success: true,\n        offer: revealedOffer,\n        companyContact: companyUser ? {\n          name: companyUser.name,\n          email: companyUser.email,\n          username: companyUser.username\n        } : null\n      });\n      \n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // عملاء التميز (الجهات والشركاء المميزين)\n  // الحصول على قائمة عملاء التميز\n  app.get('/api/premium-clients', async (req: Request, res: Response) => {\n    try {\n      const category = req.query.category as string;\n      const featuredOnly = req.query.featured === 'true';\n      const activeOnly = req.query.active === 'true' || true; // افتراضيًا نعرض فقط العملاء النشطين\n      \n      let clients: PremiumClient[] = [];\n      \n      if (featuredOnly) {\n        clients = await storage.getFeaturedPremiumClients();\n      } else if (category) {\n        clients = await storage.getPremiumClientsByCategory(category);\n        if (activeOnly) {\n          clients = clients.filter(client => client.active);\n        }\n      } else if (activeOnly) {\n        // الحصول على جميع العملاء ثم تصفية النشطين فقط\n        clients = await storage.getPremiumClients();\n        clients = clients.filter(client => client.active !== false);\n      } else {\n        clients = await storage.getPremiumClients();\n      }\n      \n      res.json(clients);\n    } catch (error) {\n      console.error('Error getting premium clients:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على عميل تميز محدد بواسطة المعرف\n  app.get('/api/premium-clients/:id', async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'Invalid ID format' });\n      }\n      \n      const client = await storage.getPremiumClientById(id);\n      if (!client) {\n        return res.status(404).json({ message: 'Premium client not found' });\n      }\n      \n      res.json(client);\n    } catch (error) {\n      console.error('Error getting premium client:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // إنشاء عميل تميز جديد (للمسؤولين فقط)\n  app.post('/api/premium-clients', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const clientData = req.body;\n      \n      // التحقق من البيانات المطلوبة\n      if (!clientData.name || !clientData.logo || !clientData.description || !clientData.category) {\n        return res.status(400).json({ message: 'Missing required fields' });\n      }\n      \n      const newClient = await storage.createPremiumClient(clientData);\n      res.status(201).json(newClient);\n    } catch (error) {\n      console.error('Error creating premium client:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // تحديث عميل تميز (للمسؤولين فقط)\n  app.put('/api/premium-clients/:id', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'Invalid ID format' });\n      }\n      \n      const clientData = req.body;\n      const updatedClient = await storage.updatePremiumClient(id, clientData);\n      \n      if (!updatedClient) {\n        return res.status(404).json({ message: 'Premium client not found' });\n      }\n      \n      res.json(updatedClient);\n    } catch (error) {\n      console.error('Error updating premium client:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // حذف عميل تميز (للمسؤولين فقط)\n  app.delete('/api/premium-clients/:id', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'Invalid ID format' });\n      }\n      \n      const success = await storage.deletePremiumClient(id);\n      \n      if (!success) {\n        return res.status(404).json({ message: 'Premium client not found' });\n      }\n      \n      res.json({ message: 'Premium client deleted successfully' });\n    } catch (error) {\n      console.error('Error deleting premium client:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Site Settings routes\n  // Get a specific site setting by key\n  app.get('/api/site-settings/:key', async (req: Request, res: Response) => {\n    try {\n      const key = req.params.key;\n      const setting = await storage.getSiteSetting(key);\n      \n      if (!setting) {\n        return res.status(404).json({ message: 'Setting not found' });\n      }\n      \n      res.json(setting);\n    } catch (error) {\n      console.error('Error getting site setting:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Get all site settings\n  app.get('/api/site-settings', async (req: Request, res: Response) => {\n    try {\n      const settings = await storage.getAllSiteSettings();\n      res.json(settings);\n    } catch (error) {\n      console.error('Error getting all site settings:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // إحصائيات المنصة للزوار - فقط الأرقام بدون معلومات تفصيلية\n  app.get('/api/platform-stats', async (req: Request, res: Response) => {\n    try {\n      // الحصول على عدد الشركات (الجميع، ليس فقط الموثقة)\n      const companyProfiles = await storage.getCompanyProfiles();\n      const companiesCount = companyProfiles.length;\n      \n      // الحصول على عدد العروض المقدمة\n      const offers = await storage.getAllProjectOffers();\n      const offersCount = offers.length;\n      \n      // الحصول على متوسط وقت الاستجابة (30 دقيقة كقيمة ثابتة للعرض التسويقي)\n      const responseTimeMinutes = 30;\n      \n      // الحصول على عدد المشاريع المكتملة\n      const projects = await storage.getProjects();\n      const completedProjectsCount = projects.filter(project => project.status === 'completed').length;\n      \n      // الاستجابة بالإحصائيات\n      res.json({\n        companiesCount,\n        offersCount,\n        responseTimeMinutes,\n        completedProjectsCount\n      });\n    } catch (error) {\n      console.error('Error getting platform stats:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Newsletter subscription\n  app.post('/api/newsletter/subscribe', async (req: Request, res: Response) => {\n    try {\n      const { email, name } = req.body;\n      \n      if (!email) {\n        return res.status(400).json({ message: 'البريد الإلكتروني مطلوب' });\n      }\n      \n      // التحقق مما إذا كان البريد الإلكتروني موجودًا بالفعل\n      const existingSubscriber = await storage.getNewsletterSubscriberByEmail(email);\n      \n      if (existingSubscriber) {\n        // إذا كان مشترك بالفعل ولكن قد ألغى اشتراكه سابقًا\n        if (!existingSubscriber.subscribed) {\n          await storage.updateNewsletterSubscriber(existingSubscriber.id, { subscribed: true });\n          return res.status(200).json({ message: 'تم إعادة الاشتراك بنجاح' });\n        }\n        // إذا كان مشترك بالفعل\n        return res.status(200).json({ message: 'أنت مشترك بالفعل في القائمة البريدية' });\n      }\n      \n      // إنشاء اشتراك جديد\n      const subscriberData = insertNewsletterSubscriberSchema.parse({\n        email,\n        name: name || null,\n        subscribed: true\n      });\n      \n      await storage.createNewsletterSubscriber(subscriberData);\n      \n      // تسجيل نجاح الاشتراك في السجل\n      console.log(`تم اشتراك البريد الإلكتروني ${email} في النشرة البريدية`);\n      \n      res.status(201).json({ message: 'تم الاشتراك بنجاح' });\n    } catch (error) {\n      console.error('خطأ في الاشتراك بالنشرة البريدية:', error);\n      \n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: 'بيانات غير صالحة', errors: error.errors });\n      }\n      \n      res.status(500).json({ message: 'حدث خطأ أثناء الاشتراك' });\n    }\n  });\n  \n  // Newsletter unsubscribe\n  app.post('/api/newsletter/unsubscribe', async (req: Request, res: Response) => {\n    try {\n      const { email } = req.body;\n      \n      if (!email) {\n        return res.status(400).json({ message: 'البريد الإلكتروني مطلوب' });\n      }\n      \n      // التحقق مما إذا كان البريد الإلكتروني موجودًا\n      const subscriber = await storage.getNewsletterSubscriberByEmail(email);\n      \n      if (!subscriber) {\n        return res.status(404).json({ message: 'البريد الإلكتروني غير مشترك في القائمة البريدية' });\n      }\n      \n      // تحديث حالة الاشتراك\n      await storage.updateNewsletterSubscriber(subscriber.id, { subscribed: false });\n      \n      res.status(200).json({ message: 'تم إلغاء الاشتراك بنجاح' });\n    } catch (error) {\n      console.error('خطأ في إلغاء الاشتراك من النشرة البريدية:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء إلغاء الاشتراك' });\n    }\n  });\n  \n  // Set a site setting (admin only)\n  app.post('/api/site-settings/:key', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      // Only admin can update site settings\n      if (user.role !== 'admin') {\n        return res.status(403).json({ message: 'هذه العملية متاحة للمسؤولين فقط' });\n      }\n      \n      const key = req.params.key;\n      const value = req.body.value;\n      \n      if (value === undefined) {\n        return res.status(400).json({ message: 'Value is required' });\n      }\n      \n      const setting = await storage.setSiteSetting(key, value);\n      res.json(setting);\n    } catch (error) {\n      console.error('Error setting site setting:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  const httpServer = createServer(app);\n  \n  // إنشاء خادم WebSocket\n  const wss = new WebSocketServer({ \n    server: httpServer,\n    path: '/ws' // تمييز مسار WebSocket عن مسارات Vite العادية\n  });\n  \n  // استخدام ثوابت WebSocket من مكتبة ws\n  const OPEN = WebSocket.OPEN; // تعريف ثابت الاتصال المفتوح\n  \n  // تخزين اتصالات المستخدمين النشطة\n  const clients = new Map<number, WebSocket[]>();\n  \n  wss.on('connection', (ws) => {\n    console.log('اتصال WebSocket جديد');\n    \n    let userId: number | null = null;\n    \n    // الاستماع لرسائل العميل\n    ws.on('message', async (message) => {\n      try {\n        const data = JSON.parse(message.toString());\n        \n        // إذا كانت رسالة تسجيل دخول، قم بتخزين معرف المستخدم مع الاتصال\n        if (data.type === 'auth') {\n          userId = data.userId;\n          \n          if (typeof userId === 'number') {\n            // تسجيل الاتصال للمستخدم\n            if (!clients.has(userId)) {\n              clients.set(userId, []);\n            }\n            clients.get(userId)?.push(ws);\n            \n            console.log(`تم تسجيل المستخدم ${userId} في نظام WebSocket`);\n          }\n        }\n        \n        // حالة تحديث قراءة الرسالة\n        if (data.type === 'read_messages' && userId) {\n          console.log(`تحديث حالة قراءة الرسائل للمستخدم ${userId}, المرسل: ${data.fromUserId}`);\n          \n          try {\n            if (data.messageIds && Array.isArray(data.messageIds) && data.messageIds.length > 0) {\n              // تحديث حالة قراءة عدة رسائل محددة\n              const updatedMessages = await Promise.all(\n                data.messageIds.map(id => storage.markMessageAsRead(id))\n              );\n              \n              console.log(`تم تحديث ${updatedMessages.filter(Boolean).length} رسالة كمقروءة`);\n              \n              // إعلام المرسل بأن رسائله قد تمت قراءتها\n              if (data.fromUserId && clients.has(data.fromUserId)) {\n                const recipientClients = clients.get(data.fromUserId) || [];\n                \n                for (const client of recipientClients) {\n                  if (client.readyState === 1) { // WebSocket.OPEN = 1\n                    client.send(JSON.stringify({\n                      type: 'messages_read',\n                      messageIds: data.messageIds,\n                      readByUserId: userId\n                    }));\n                  }\n                }\n              }\n            } else if (data.fromUserId) {\n              // تحديث جميع الرسائل غير المقروءة من مرسل معين\n              const updatedCount = await storage.markAllMessagesAsRead(data.fromUserId, userId);\n              \n              console.log(`تم تحديث ${updatedCount} رسالة كمقروءة من المستخدم ${data.fromUserId}`);\n              \n              // إعلام المرسل بأن جميع رسائله قد تمت قراءتها\n              if (clients.has(data.fromUserId)) {\n                const recipientClients = clients.get(data.fromUserId) || [];\n                \n                for (const client of recipientClients) {\n                  if (client.readyState === 1) { // WebSocket.OPEN = 1\n                    client.send(JSON.stringify({\n                      type: 'all_messages_read',\n                      readByUserId: userId\n                    }));\n                  }\n                }\n              }\n            }\n            \n            // إرسال تأكيد للمستخدم الذي قام بتحديث حالة القراءة\n            ws.send(JSON.stringify({\n              type: 'read_confirmation',\n              success: true\n            }));\n          } catch (error) {\n            console.error('خطأ في تحديث حالة قراءة الرسائل:', error);\n            ws.send(JSON.stringify({\n              type: 'read_confirmation',\n              success: false,\n              error: 'حدث خطأ أثناء تحديث حالة قراءة الرسائل'\n            }));\n          }\n        }\n        \n        // إذا كانت رسالة دردشة جديدة\n        else if (data.type === 'message' && userId && typeof data.toUserId === 'number') {\n          console.log(`رسالة جديدة من المستخدم ${userId} إلى ${data.toUserId}`);\n          \n          // التحقق من محتوى الرسالة قبل الحفظ\n          // فحص المحتوى مع تمرير معرفات المستخدمين للكشف عن الأنماط المتسلسلة\n          const contentCheck = checkMessageForProhibitedContent(data.content, userId, data.toUserId);\n          \n          // التحقق من مخالفة قوانين المحتوى\n          if (!contentCheck.safe) {\n            console.log(`محتوى رسالة محظور من المستخدم ${userId} إلى ${data.toUserId}، المخالفات: ${contentCheck.violations?.join(', ')}`);\n            \n            // رسالة خطأ مخصصة للنمط المتسلسل\n            let errorMessage = 'الرسالة تحتوي على معلومات اتصال محظورة';\n            if (contentCheck.violations?.includes('نمط_متسلسل_مشبوه')) {\n              errorMessage = 'تم رصد محاولة لتمرير معلومات اتصال عبر عدة رسائل';\n            }\n            \n            // إرسال إشعار بالخطأ للمرسل\n            ws.send(JSON.stringify({\n              type: 'message_error',\n              error: {\n                message: errorMessage,\n                violations: contentCheck.violations\n              }\n            }));\n            \n            return; // عدم إكمال معالجة الرسالة\n          }\n          \n          // حفظ الرسالة في قاعدة البيانات\n          const message = await storage.createMessage({\n            content: data.content,\n            fromUserId: userId,\n            toUserId: data.toUserId,\n            projectId: data.projectId || null\n          });\n          \n          // التعرف على رسائل العميل ذات المعرف المؤقت\n          const clientMessageId = data.tempMessageId || null;\n          \n          // إرسال الرسالة للمستخدم المستقبل إذا كان متصلاً\n          let deliveryStatus = 'pending';\n          let deliveryAttempts = 0;\n          const maxAttempts = 5; // زيادة عدد المحاولات من 3 إلى 5\n          \n          const attemptDelivery = async () => {\n            deliveryAttempts++;\n            \n            if (clients.has(data.toUserId)) {\n              const recipientClients = clients.get(data.toUserId) || [];\n              // الحصول على معلومات المرسل لإضافتها إلى الإشعار\n              const sender = await storage.getUser(userId);\n              const senderName = sender ? sender.name : undefined;\n              \n              const messageData = {\n                type: 'new_message',\n                message: {\n                  ...message,\n                  senderName  // إضافة اسم المرسل إلى الرسالة\n                }\n              };\n              \n              let deliveredToAtLeastOne = false;\n              \n              // إرسال الرسالة لجميع اتصالات المستخدم المستقبل\n              for (const client of recipientClients) {\n                if (client.readyState === 1) { // WebSocket.OPEN = 1\n                  try {\n                    client.send(JSON.stringify(messageData));\n                    deliveredToAtLeastOne = true;\n                  } catch (error) {\n                    console.error(`فشل إرسال الرسالة للمستقبل ${data.toUserId}:`, error);\n                  }\n                }\n              }\n              \n              if (deliveredToAtLeastOne) {\n                deliveryStatus = 'delivered';\n                // تسجيل حالة التسليم في قاعدة البيانات\n                await storage.updateMessageDeliveryStatus(message.id, 'delivered');\n                \n                // إبلاغ المرسل بنجاح تسليم الرسالة\n                try {\n                  if (clients.has(userId)) {\n                    const senderClients = clients.get(userId) || [];\n                    for (const client of senderClients) {\n                      if (client.readyState === WebSocket.OPEN) {\n                        client.send(JSON.stringify({\n                          type: 'message_delivered',\n                          messageId: message.id,\n                          tempMessageId: clientMessageId\n                        }));\n                      }\n                    }\n                  }\n                } catch (error) {\n                  console.error('خطأ في إرسال إشعار نجاح التسليم للمرسل:', error);\n                }\n                \n                return true;\n              }\n            }\n            \n            // إذا وصلنا هنا، فإن الرسالة لم يتم تسليمها\n            if (deliveryAttempts < maxAttempts) {\n              // جدولة محاولة أخرى بعد فترة زمنية\n              console.log(`محاولة إرسال الرسالة ${message.id} مرة أخرى (${deliveryAttempts}/${maxAttempts})`);\n              setTimeout(attemptDelivery, 3000 * deliveryAttempts); // زيادة وقت الانتظار مع كل محاولة\n              return false;\n            } else {\n              // استنفدنا عدد المحاولات، تحديث الحالة إلى \"فشل\"\n              deliveryStatus = 'failed';\n              await storage.updateMessageDeliveryStatus(message.id, 'failed');\n              console.log(`فشل إرسال الرسالة ${message.id} بعد ${maxAttempts} محاولات`);\n              \n              // إبلاغ المرسل بالفشل النهائي\n              try {\n                ws.send(JSON.stringify({\n                  type: 'message_delivery_failed',\n                  messageId: message.id,\n                  reason: 'المستلم غير متصل بعد عدة محاولات'\n                }));\n              } catch (error) {\n                console.error('فشل في إرسال إشعار فشل التسليم للمرسل:', error);\n              }\n              \n              return false;\n            }\n          };\n          \n          // بدء محاولة الإرسال الأولى\n          attemptDelivery();\n          \n          // إرسال رد بنجاح إرسال الرسالة للمرسل مع معرف الرسالة المؤقت للتتبع\n          ws.send(JSON.stringify({\n            type: 'message_sent',\n            message,\n            tempMessageId: clientMessageId,\n            deliveryStatus: 'processing'\n          }));\n        }\n      } catch (error) {\n        console.error('خطأ في معالجة رسالة WebSocket:', error);\n      }\n    });\n    \n    // تنظيف الاتصالات عند الانقطاع\n    ws.on('close', () => {\n      console.log('انقطاع اتصال WebSocket');\n      \n      if (userId && typeof userId === 'number') {\n        const userConnections = clients.get(userId) || [];\n        const index = userConnections.indexOf(ws);\n        \n        if (index !== -1) {\n          userConnections.splice(index, 1);\n        }\n        \n        // إزالة المستخدم من قائمة المتصلين إذا لم تكن لديه اتصالات نشطة\n        if (userConnections.length === 0) {\n          clients.delete(userId);\n        }\n      }\n    });\n  });\n\n  // مسارات API للمدونة\n  \n  // الحصول على جميع فئات المدونة\n  app.get('/api/blog/categories', async (req: Request, res: Response) => {\n    try {\n      const categories = await storage.getBlogCategories();\n      res.json(categories);\n    } catch (error) {\n      console.error('Error fetching blog categories:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على فئة محددة\n  app.get('/api/blog/categories/:id', async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const category = await storage.getBlogCategory(id);\n      \n      if (!category) {\n        return res.status(404).json({ message: 'Category not found' });\n      }\n      \n      res.json(category);\n    } catch (error) {\n      console.error('Error fetching blog category:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على فئة بواسطة الرابط المخصص\n  app.get('/api/blog/categories/slug/:slug', async (req: Request, res: Response) => {\n    try {\n      const { slug } = req.params;\n      const category = await storage.getBlogCategoryBySlug(slug);\n      \n      if (!category) {\n        return res.status(404).json({ message: 'Category not found' });\n      }\n      \n      res.json(category);\n    } catch (error) {\n      console.error('Error fetching blog category by slug:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // إنشاء فئة جديدة\n  app.post('/api/blog/categories', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const category = await storage.createBlogCategory(req.body);\n      res.status(201).json(category);\n    } catch (error) {\n      console.error('Error creating blog category:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // تحديث فئة\n  app.patch('/api/blog/categories/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const id = parseInt(req.params.id);\n      const category = await storage.updateBlogCategory(id, req.body);\n      res.json(category);\n    } catch (error) {\n      console.error('Error updating blog category:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // حذف فئة\n  app.delete('/api/blog/categories/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const id = parseInt(req.params.id);\n      const success = await storage.deleteBlogCategory(id);\n      \n      if (success) {\n        res.json({ success: true });\n      } else {\n        res.status(404).json({ message: 'Category not found or could not be deleted' });\n      }\n    } catch (error) {\n      console.error('Error deleting blog category:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على المقالات (للمسؤولين - جميع المقالات بما في ذلك المسودات)\n  app.get('/api/blog/posts/all', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const { limit, offset, categoryId } = req.query;\n      const options: { limit?: number; offset?: number; categoryId?: number } = {};\n      \n      if (limit) options.limit = parseInt(limit as string);\n      if (offset) options.offset = parseInt(offset as string);\n      if (categoryId) options.categoryId = parseInt(categoryId as string);\n      \n      const posts = await storage.getBlogPosts(options);\n      res.json(posts);\n    } catch (error) {\n      console.error('Error fetching all blog posts:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على المقالات المنشورة (للعامة)\n  app.get('/api/blog/posts', async (req: Request, res: Response) => {\n    try {\n      const { limit, offset, categoryId } = req.query;\n      const options: { limit?: number; offset?: number; categoryId?: number } = {};\n      \n      if (limit) options.limit = parseInt(limit as string);\n      if (offset) options.offset = parseInt(offset as string);\n      if (categoryId) options.categoryId = parseInt(categoryId as string);\n      \n      const posts = await storage.getPublishedBlogPosts(options);\n      res.json(posts);\n    } catch (error) {\n      console.error('Error fetching published blog posts:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على مقال محدد\n  app.get('/api/blog/posts/:id', async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const post = await storage.getBlogPost(id);\n      \n      if (!post) {\n        return res.status(404).json({ message: 'Post not found' });\n      }\n      \n      // التحقق من صلاحيات المستخدم للمقالات غير المنشورة\n      if (post.status !== 'published') {\n        if (!req.user || req.user.role !== 'admin') {\n          return res.status(403).json({ message: 'Forbidden - Post is not published' });\n        }\n      }\n      \n      // زيادة عدد المشاهدات للمقالات المنشورة\n      if (post.status === 'published') {\n        await storage.incrementBlogPostViewCount(id);\n      }\n      \n      res.json(post);\n    } catch (error) {\n      console.error('Error fetching blog post:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على مقال بواسطة الرابط المخصص\n  app.get('/api/blog/posts/slug/:slug', async (req: Request, res: Response) => {\n    try {\n      const { slug } = req.params;\n      const post = await storage.getBlogPostBySlug(slug);\n      \n      if (!post) {\n        return res.status(404).json({ message: 'Post not found' });\n      }\n      \n      // التحقق من صلاحيات المستخدم للمقالات غير المنشورة\n      if (post.status !== 'published') {\n        if (!req.user || req.user.role !== 'admin') {\n          return res.status(403).json({ message: 'Forbidden - Post is not published' });\n        }\n      }\n      \n      // زيادة عدد المشاهدات للمقالات المنشورة\n      if (post.status === 'published') {\n        await storage.incrementBlogPostViewCount(post.id);\n      }\n      \n      res.json(post);\n    } catch (error) {\n      console.error('Error fetching blog post by slug:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // إنشاء مقال جديد\n  app.post('/api/blog/posts', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      // إضافة معرف المؤلف\n      const postData = { ...req.body, authorId: req.user.id };\n      \n      const post = await storage.createBlogPost(postData);\n      res.status(201).json(post);\n    } catch (error) {\n      console.error('Error creating blog post:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // تحديث مقال\n  app.patch('/api/blog/posts/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const id = parseInt(req.params.id);\n      const post = await storage.updateBlogPost(id, req.body);\n      res.json(post);\n    } catch (error) {\n      console.error('Error updating blog post:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // حذف مقال\n  app.delete('/api/blog/posts/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const id = parseInt(req.params.id);\n      const success = await storage.deleteBlogPost(id);\n      \n      if (success) {\n        res.json({ success: true });\n      } else {\n        res.status(404).json({ message: 'Post not found or could not be deleted' });\n      }\n    } catch (error) {\n      console.error('Error deleting blog post:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // الحصول على تعليقات المقال\n  app.get('/api/blog/posts/:postId/comments', async (req: Request, res: Response) => {\n    try {\n      const postId = parseInt(req.params.postId);\n      const comments = await storage.getBlogCommentsByPost(postId);\n      res.json(comments);\n    } catch (error) {\n      console.error('Error fetching blog comments:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // إضافة تعليق جديد\n  app.post('/api/blog/comments', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const commentData = { ...req.body, userId: req.user.id };\n      const comment = await storage.createBlogComment(commentData);\n      res.status(201).json(comment);\n    } catch (error) {\n      console.error('Error creating blog comment:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // تغيير حالة تعليق (للمسؤولين فقط)\n  app.patch('/api/blog/comments/:id/status', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      // التحقق من صلاحيات المستخدم (يجب أن يكون مسؤولاً)\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const id = parseInt(req.params.id);\n      const { status } = req.body;\n      \n      if (!status) {\n        return res.status(400).json({ message: 'Status is required' });\n      }\n      \n      const success = await storage.updateBlogCommentStatus(id, status);\n      \n      if (success) {\n        res.json({ success: true });\n      } else {\n        res.status(404).json({ message: 'Comment not found or could not be updated' });\n      }\n    } catch (error) {\n      console.error('Error updating blog comment status:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // حذف تعليق\n  app.delete('/api/blog/comments/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const comment = await storage.getBlogComment(id);\n      \n      if (!comment) {\n        return res.status(404).json({ message: 'Comment not found' });\n      }\n      \n      // التحقق من صلاحيات المستخدم (يجب أن يكون صاحب التعليق أو مسؤولاً)\n      if (comment.userId !== req.user.id && req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Not authorized to delete this comment' });\n      }\n      \n      const success = await storage.deleteBlogComment(id);\n      \n      if (success) {\n        res.json({ success: true });\n      } else {\n        res.status(500).json({ message: 'Comment could not be deleted' });\n      }\n    } catch (error) {\n      console.error('Error deleting blog comment:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n  \n  // Site Settings Management API (Admin only)\n  // Get all site settings\n  app.get('/api/admin/site-settings', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      // التحقق من صلاحيات المسؤول\n      const adminUser = await storage.getUser(user.id);\n      if (!adminUser || adminUser.role !== 'admin') {\n        return res.status(403).json({ message: 'الوصول غير مصرح' });\n      }\n      \n      const settings = await storage.getAllSiteSettings();\n      res.json(settings);\n    } catch (error) {\n      console.error('Error fetching site settings:', error);\n      res.status(500).json({ message: 'خطأ في جلب الإعدادات' });\n    }\n  });\n\n  // Update multiple site settings\n  app.post('/api/admin/site-settings', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      const { settings } = req.body;\n      \n      if (!settings || !Array.isArray(settings)) {\n        return res.status(400).json({ message: 'بيانات الإعدادات غير صالحة' });\n      }\n      \n      const updatedSettings = [];\n      for (const setting of settings) {\n        if (setting.key && setting.value !== undefined && setting.category) {\n          try {\n            const updatedSetting = await storage.setSiteSetting(\n              setting.key, \n              setting.value, \n              setting.category,\n              setting.description || '',\n              user.id\n            );\n            updatedSettings.push(updatedSetting);\n            console.log(`تم حفظ الإعداد: ${setting.key} = ${setting.value}`);\n          } catch (settingError) {\n            console.error(`خطأ في حفظ الإعداد ${setting.key}:`, settingError);\n          }\n        }\n      }\n      \n      res.json({ \n        success: true, \n        message: 'تم حفظ الإعدادات بنجاح',\n        settings: updatedSettings \n      });\n    } catch (error) {\n      console.error('خطأ في حفظ إعدادات الموقع:', error);\n      res.status(500).json({ message: 'خطأ في تحديث الإعدادات' });\n    }\n  });\n\n  // Get public contact information (for use in contact page)\n  app.get('/api/contact-info', async (req: Request, res: Response) => {\n    try {\n      const contactSettings = await storage.getSiteSettingsByCategory('contact');\n      \n      const contactInfo = contactSettings.reduce((acc: any, setting) => {\n        acc[setting.key] = setting.value;\n        return acc;\n      }, {});\n      \n      // إذا لم توجد بيانات، استخدم القيم الافتراضية\n      const defaultContactInfo = {\n        contact_email: contactInfo.contact_email || 'info@linktech.app',\n        contact_phone: contactInfo.contact_phone || '+966 53 123 4567',\n        contact_address: contactInfo.contact_address || 'واحة المعرفة، طريق الملك عبدالعزيز، جدة، المملكة العربية السعودية',\n        contact_whatsapp: contactInfo.contact_whatsapp || '',\n        business_hours: contactInfo.business_hours || 'الأحد - الخميس: 9:00 صباحاً - 5:00 مساءً\\nالجمعة - السبت: مغلق'\n      };\n      \n      console.log('معلومات التواصل المُرسلة:', defaultContactInfo);\n      res.json(defaultContactInfo);\n    } catch (error) {\n      console.error('خطأ في جلب معلومات التواصل:', error);\n      res.status(500).json({ message: 'خطأ في جلب معلومات التواصل' });\n    }\n  });\n\n  // استخدام مسارات Sitemap و robots.txt من ملف منفصل\n  app.use(sitemapRoutes);\n  \n  // استخدام مسارات اختبار PDF العربي\n  app.use(arabicPdfTestRoutes);\n  app.use(pdfmakeTestRoutes);\n  \n  // صفحة HTML تحتوي على زر تنزيل وعرض لملف PDF\n  app.get('/arabic-pdf-test', (req: Request, res: Response) => {\n    res.send(`\n      <!DOCTYPE html>\n      <html lang=\"ar\" dir=\"rtl\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>اختبار PDF باللغة العربية</title>\n        <style>\n          body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            text-align: center;\n          }\n          h1 {\n            color: #333;\n          }\n          .btn {\n            display: inline-block;\n            margin: 10px;\n            padding: 12px 30px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 18px;\n            text-decoration: none;\n            color: white;\n          }\n          .download-btn {\n            background-color: #4CAF50;\n          }\n          .view-btn {\n            background-color: #2196F3;\n          }\n          .option {\n            margin: 30px 0;\n            padding: 20px;\n            border: 1px solid #ddd;\n            border-radius: 8px;\n          }\n        </style>\n      </head>\n      <body>\n        <h1>اختبار عرض النصوص العربية في ملفات PDF</h1>\n        \n        <div class=\"option\">\n          <h2>الخيار 1: عرض PDF في المتصفح</h2>\n          <p>سيتم عرض ملف PDF مباشرة في المتصفح</p>\n          <a href=\"/api/view-arabic-pdf\" class=\"btn view-btn\" target=\"_blank\">عرض الملف</a>\n        </div>\n        \n        <div class=\"option\">\n          <h2>الخيار 2: تنزيل PDF</h2>\n          <p>سيتم تنزيل ملف PDF للاحتفاظ به على جهازك</p>\n          <a href=\"/api/test-arabic-pdf\" class=\"btn download-btn\">تنزيل الملف</a>\n        </div>\n      </body>\n      </html>\n    `);\n  });\n\n  // نقطة نهاية جديدة لعرض ملف PDF مباشرة في المتصفح\n  app.get('/api/view-arabic-pdf', async (req: Request, res: Response) => {\n    try {\n      console.log('اختبار إنشاء PDF باللغة العربية - عرض مباشر');\n      \n      // مساعدة لإعادة تشكيل و bidi مع تحسين لمعالجة ترتيب الكلمات\n      function toArabic(text: string): string {\n        try {\n          // 1) reshape: يربط الحروف مع بعض\n          const reshaped = arabicReshaper.reshape(text);\n          \n          // 2) معالجة خاصة للاتجاه من اليمين لليسار\n          // تقسيم النص إلى جمل/سطور (اختياري)\n          const lines = reshaped.split('\\n');\n          const processedLines = lines.map(line => {\n            // تقسيم كل سطر إلى كلمات\n            const words = line.split(' ');\n            // عكس ترتيب الكلمات (حتى تظهر من اليمين إلى اليسار)\n            const reversedWords = words.reverse();\n            // إعادة دمج الكلمات المعكوسة\n            return reversedWords.join(' ');\n          });\n          \n          // إعادة دمج السطور\n          const processedText = processedLines.join('\\n');\n          \n          // 3) استخدام bidi للحصول على النص المرئي النهائي\n          return bidi.getVisualString(processedText);\n        } catch (error) {\n          console.error('خطأ في معالجة النص العربي:', error);\n          return text; // إرجاع النص الأصلي في حالة الخطأ\n        }\n      }\n      \n      // إنشاء وثيقة PDF جديدة\n      const doc = new PDFDocument({\n        size: 'A4',\n        margin: 50,\n        info: {\n          Title: 'اختبار دعم اللغة العربية',\n          Author: 'لينكتك',\n          Subject: 'اختبار توليد ملفات PDF بالعربية',\n        }\n      });\n      \n      // تحميل الخط العربي\n      const fontPath = path.join(process.cwd(), 'attached_assets', 'Cairo-Regular.ttf');\n      doc.font(fontPath);\n      \n      // إعداد رأس الاستجابة لعرض PDF مباشرة في المتصفح\n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'inline; filename=arabic-test.pdf');\n      \n      // توجيه مخرجات PDF مباشرة إلى الاستجابة\n      doc.pipe(res);\n      \n      // إضافة محتوى باللغة العربية للاختبار\n      doc.fontSize(24).text(toArabic('مرحبًا بكم في اختبار دعم اللغة العربية'), {\n        align: 'right'\n      });\n      \n      doc.moveDown();\n      doc.fontSize(16).text(toArabic('هذا اختبار لعرض النصوص العربية في ملفات PDF'), {\n        align: 'right'\n      });\n      \n      doc.moveDown();\n      doc.fontSize(14).text(toArabic('محتوى فقرة تجريبية باللغة العربية. نختبر هنا قدرة المكتبة على عرض النصوص العربية بشكل صحيح مع دعم التشكيل والاتجاه من اليمين إلى اليسار.'), {\n        align: 'right'\n      });\n      \n      doc.moveDown();\n      const currentDate = new Date();\n      const dateString = currentDate.toLocaleDateString('ar-SA');\n      doc.fontSize(12).text(toArabic(`تاريخ إنشاء المستند: ${dateString}`), {\n        align: 'right'\n      });\n      \n      doc.moveDown();\n      doc.fontSize(14).text(toArabic('أرقام للاختبار: ١٢٣٤٥٦٧٨٩٠'), {\n        align: 'right'\n      });\n      \n      // إنهاء المستند\n      doc.end();\n      \n    } catch (error) {\n      console.error('خطأ في إنشاء PDF للاختبار (عرض):', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء إنشاء PDF للاختبار' });\n    }\n  });\n\n  // نقطة نهاية لاختبار دعم اللغة العربية في ملفات PDF (تنزيل)\n  app.get('/api/test-arabic-pdf', async (req: Request, res: Response) => {\n    try {\n      console.log('اختبار إنشاء PDF باللغة العربية');\n      \n      // مساعدة لإعادة تشكيل و bidi مع تحسين لمعالجة ترتيب الكلمات\n      function toArabic(text: string): string {\n        try {\n          // 1) reshape: يربط الحروف مع بعض\n          const reshaped = arabicReshaper.reshape(text);\n          \n          // 2) معالجة خاصة للاتجاه من اليمين لليسار\n          // تقسيم النص إلى جمل/سطور (اختياري)\n          const lines = reshaped.split('\\n');\n          const processedLines = lines.map(line => {\n            // تقسيم كل سطر إلى كلمات\n            const words = line.split(' ');\n            // عكس ترتيب الكلمات (حتى تظهر من اليمين إلى اليسار)\n            const reversedWords = words.reverse();\n            // إعادة دمج الكلمات المعكوسة\n            return reversedWords.join(' ');\n          });\n          \n          // إعادة دمج السطور\n          const processedText = processedLines.join('\\n');\n          \n          // 3) استخدام bidi للحصول على النص المرئي النهائي\n          return bidi.getVisualString(processedText);\n        } catch (error) {\n          console.error('خطأ في معالجة النص العربي:', error);\n          return text; // إرجاع النص الأصلي في حالة الخطأ\n        }\n      }\n      \n      // إضافة مسار الخط العربي المطلق\n      const arabicFontPath = path.join(process.cwd(), 'assets', 'fonts', 'Cairo-Regular.ttf');\n      \n      // إنشاء وثيقة PDF جديدة مع دعم اللغة العربية\n      const doc = new PDFDocument({\n        size: 'A4',\n        margin: 50,\n        info: {\n          Title: 'وثيقة اختبار اللغة العربية',\n          Author: 'منصة لينكتك',\n          Subject: 'اختبار',\n        }\n      });\n      \n      // تسجيل الخط العربي\n      doc.registerFont('Cairo', arabicFontPath);\n      \n      // استخدام الخط العربي\n      doc.font('Cairo');\n      \n      // إنشاء stream للحصول على البايتات\n      const chunks: Buffer[] = [];\n      doc.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n      \n      // الوعد باكتمال إنشاء PDF\n      const pdfPromise = new Promise<Buffer>((resolve, reject) => {\n        doc.on('end', () => {\n          const pdfData = Buffer.concat(chunks);\n          resolve(pdfData);\n        });\n        doc.on('error', reject);\n      });\n      \n      // إضافة عنوان المستند\n      doc.fontSize(24).text(toArabic('اختبار دعم اللغة العربية'), { \n        align: 'center' \n      });\n      doc.moveDown();\n      \n      // إضافة نصوص للاختبار\n      doc.fontSize(18).text(toArabic('هذا نص عربي للتجربة'), { \n        align: 'right'\n      });\n      doc.moveDown();\n      \n      doc.fontSize(14).text(toArabic('١٢٣٤٥ - أرقام عربية للتجربة'), { \n        align: 'right'\n      });\n      doc.moveDown();\n      \n      doc.fontSize(12).text(toArabic('هذه فقرة طويلة باللغة العربية لاختبار ظهور النصوص الطويلة وكيفية التعامل معها في مستندات PDF. يجب أن تظهر النصوص العربية من اليمين إلى اليسار بشكل صحيح مع حروف متصلة.'), { \n        align: 'right'\n      });\n      doc.moveDown(2);\n      \n      // اختبار كلمات منفصلة\n      doc.fontSize(16).text(toArabic('كلمات - منفصلة - للاختبار'), { \n        align: 'right'\n      });\n      doc.moveDown();\n      \n      // اختبار جملة مع أرقام وعلامات خاصة\n      doc.fontSize(14).text(toArabic('تاريخ الاختبار: ١٥-٠٥-٢٠٢٥'), { \n        align: 'right'\n      });\n      doc.moveDown(2);\n      \n      // تذييل المستند\n      doc.fontSize(10).text(toArabic('تم إنشاء هذا المستند للاختبار فقط - منصة لينكتك ©'), { \n        align: 'center'\n      });\n      \n      // إنهاء المستند\n      doc.end();\n      \n      // انتظار اكتمال إنشاء المستند\n      const pdfBuffer = await pdfPromise;\n      \n      // إنشاء ملف في المجلد العام ليكون متاحًا للتنزيل عبر الوصول المباشر\n      const publicPdfPath = path.join(process.cwd(), 'public', 'arabic-test.pdf');\n      \n      // التأكد من وجود مجلد public\n      const publicDir = path.join(process.cwd(), 'public');\n      if (!fs.existsSync(publicDir)) {\n        fs.mkdirSync(publicDir, { recursive: true });\n      }\n      \n      // كتابة الملف في المجلد العام\n      fs.writeFileSync(publicPdfPath, pdfBuffer);\n      \n      // تعديل صفحة HTML للإشارة إلى المسار الجديد\n      res.send(`<!DOCTYPE html>\n      <html lang=\"ar\" dir=\"rtl\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>PDF تم توليده بنجاح</title>\n        <style>\n          body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            text-align: center;\n          }\n          h1 { color: #4CAF50; }\n          .download-btn {\n            display: inline-block;\n            background-color: #4CAF50;\n            color: white;\n            padding: 12px 30px;\n            margin: 20px 0;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 18px;\n            text-decoration: none;\n          }\n        </style>\n      </head>\n      <body>\n        <h1>تم إنشاء ملف PDF بنجاح!</h1>\n        <p>تم إنشاء ملف PDF بنجاح ويمكنك تنزيله من خلال الرابط أدناه</p>\n        <a href=\"/arabic-test.pdf\" class=\"download-btn\" download>تنزيل الملف</a>\n        <p>أو، يمكنك الوصول للملف مباشرة من:</p>\n        <a href=\"/arabic-test.pdf\" target=\"_blank\">/arabic-test.pdf</a>\n      </body>\n      </html>`);\n      \n    } catch (error) {\n      console.error('خطأ في إنشاء PDF للاختبار:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء إنشاء PDF للاختبار' });\n    }\n  });\n\n  // === نقاط نهاية الإشعارات ===\n  \n  // الحصول على إشعارات المستخدم\n  app.get('/api/notifications', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      console.log(`طلب GET /api/notifications - حالة المصادقة: مصرح`);\n      console.log(`المستخدم مصرح: ${user.username}, دور: ${user.role}`);\n      \n      // الحصول على الإشعارات الحقيقية من قاعدة البيانات\n      const notifications = await storage.getNotificationsByUserId(user.id);\n      \n      res.json(notifications);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // تعيين إشعار كمقروء\n  app.post('/api/notifications/:id/read', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const notificationId = parseInt(req.params.id);\n      \n      const notification = await storage.markNotificationAsRead(notificationId);\n      \n      if (!notification) {\n        return res.status(404).json({ message: 'الإشعار غير موجود' });\n      }\n      \n      console.log(`تم تعيين الإشعار ${notificationId} كمقروء`);\n      res.json({ success: true });\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // تعيين جميع الإشعارات كمقروءة\n  app.post('/api/notifications/mark-all-read', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      \n      await storage.markAllNotificationsAsRead(user.id);\n      \n      console.log(`تم تعيين جميع إشعارات المستخدم ${user.id} كمقروءة`);\n      res.json({ success: true });\n    } catch (error) {\n      console.error('Error marking all notifications as read:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // === نقاط نهاية إحصائيات الزيارات ===\n  \n  // تسجيل زيارة جديدة\n  app.post('/api/visits/track', async (req: Request, res: Response) => {\n    try {\n      const { pageUrl, pageTitle, sessionId } = req.body;\n      \n      if (!pageUrl) {\n        return res.status(400).json({ message: 'Page URL is required' });\n      }\n\n      const userId = req.user ? req.user.id : undefined;\n      \n      await trackVisit(req, {\n        pageUrl,\n        pageTitle,\n        sessionId,\n        userId,\n        referrer: req.get('Referer')\n      });\n      \n      res.json({ success: true });\n    } catch (error) {\n      console.error('خطأ في تسجيل الزيارة:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // الحصول على إحصائيات الزيارات (للمسؤولين فقط)\n  app.get('/api/admin/visit-stats', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n\n      const days = parseInt(req.query.days as string) || 7;\n      const stats = await getVisitStats(days);\n      \n      res.json(stats);\n    } catch (error) {\n      console.error('خطأ في الحصول على إحصائيات الزيارات:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // الحصول على الإحصائيات السريعة (للمسؤولين فقط)\n  app.get('/api/admin/quick-stats', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      if (req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n\n      const stats = await getQuickStats();\n      res.json(stats);\n    } catch (error) {\n      console.error('خطأ في الحصول على الإحصائيات السريعة:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // مساعد الذكاء الاصطناعي للمشاريع\n  app.post('/api/ai/analyze-project', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const { analyzeProject } = await import('./aiProjectAssistant');\n      \n      const validationSchema = z.object({\n        projectIdea: z.string().min(10, 'وصف المشروع يجب أن يكون على الأقل 10 أحرف'),\n        businessSize: z.enum(['individual', 'small', 'medium', 'enterprise']),\n        expectedUsers: z.number().optional(),\n        budget: z.enum(['low', 'medium', 'high', 'custom']),\n        timeline: z.enum(['urgent', 'normal', 'flexible']),\n        integrationNeeds: z.array(z.string()).optional(),\n        securityRequirements: z.enum(['basic', 'standard', 'high']),\n        specificRequirements: z.string().optional()\n      });\n\n      const validatedData = validationSchema.parse(req.body);\n      \n      // تحليل المشروع باستخدام AI\n      const analysisResult = await analyzeProject(validatedData);\n      \n      // حفظ التحليل في قاعدة البيانات\n      const sessionId = crypto.randomUUID();\n      const analysis = await storage.createAiProjectAnalysis({\n        userId: req.user.id,\n        sessionId,\n        projectIdea: validatedData.projectIdea,\n        projectType: analysisResult.projectType,\n        businessSize: validatedData.businessSize,\n        expectedUsers: validatedData.expectedUsers,\n        budget: validatedData.budget,\n        timeline: validatedData.timeline,\n        technicalComplexity: analysisResult.technicalComplexity,\n        integrationNeeds: validatedData.integrationNeeds || [],\n        securityRequirements: validatedData.securityRequirements,\n        analysisResult: JSON.stringify(analysisResult),\n        estimatedCost: `${analysisResult.estimatedCostRange.min}-${analysisResult.estimatedCostRange.max} ${analysisResult.estimatedCostRange.currency}`,\n        recommendedTechnologies: analysisResult.recommendedTechnologies,\n        projectPhases: JSON.stringify(analysisResult.projectPhases),\n        riskAssessment: JSON.stringify(analysisResult.riskAssessment),\n        status: 'completed'\n      });\n\n      res.json({\n        id: analysis.id,\n        ...analysisResult\n      });\n    } catch (error) {\n      console.error('خطأ في تحليل المشروع:', error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: 'بيانات غير صحيحة', \n          errors: error.errors \n        });\n      }\n      res.status(500).json({ \n        message: error.message || 'حدث خطأ أثناء تحليل المشروع' \n      });\n    }\n  });\n\n  // الحصول على تحليلات المستخدم السابقة\n  \n  // === نقاط نهاية العملاء المميزين ===\n  \n  // الحصول على جميع العملاء المميزين النشطين\n  app.get('/api/featured-clients', async (req: Request, res: Response) => {\n    try {\n      const clients = await storage.getActiveFeaturedClients();\n      res.json(clients);\n    } catch (error) {\n      console.error('Error fetching featured clients:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // الحصول على جميع العملاء المميزين (للمدير)\n  app.get('/api/admin/featured-clients', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      if (req.user?.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n      \n      const clients = await storage.getFeaturedClients();\n      res.json(clients);\n    } catch (error) {\n      console.error('Error fetching all featured clients:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // إنشاء عميل مميز جديد (للمدير)\n  app.post('/api/admin/featured-clients', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      if (req.user?.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n\n      const validation = schema.insertFeaturedClientSchema.safeParse(req.body);\n      if (!validation.success) {\n        return res.status(400).json({ message: 'Invalid data', errors: validation.error.errors });\n      }\n\n      const client = await storage.createFeaturedClient(validation.data);\n      res.status(201).json(client);\n    } catch (error) {\n      console.error('Error creating featured client:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // تحديث عميل مميز (للمدير)\n  app.put('/api/admin/featured-clients/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      if (req.user?.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n\n      const id = parseInt(req.params.id);\n      const validation = schema.insertFeaturedClientSchema.partial().safeParse(req.body);\n      if (!validation.success) {\n        return res.status(400).json({ message: 'Invalid data', errors: validation.error.errors });\n      }\n\n      const updatedClient = await storage.updateFeaturedClient(id, validation.data);\n      if (!updatedClient) {\n        return res.status(404).json({ message: 'Client not found' });\n      }\n\n      res.json(updatedClient);\n    } catch (error) {\n      console.error('Error updating featured client:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // حذف عميل مميز (للمدير)\n  app.delete('/api/admin/featured-clients/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      if (req.user?.role !== 'admin') {\n        return res.status(403).json({ message: 'Forbidden - Admin access required' });\n      }\n\n      const id = parseInt(req.params.id);\n      const success = await storage.deleteFeaturedClient(id);\n      if (!success) {\n        return res.status(404).json({ message: 'Client not found' });\n      }\n\n      res.json({ message: 'Client deleted successfully' });\n    } catch (error) {\n      console.error('Error deleting featured client:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n\n  app.get('/api/ai/my-analyses', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const analyses = await storage.getUserAiAnalyses(req.user.id);\n      res.json(analyses);\n    } catch (error) {\n      console.error('خطأ في الحصول على التحليلات:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // الحصول على تحليل محدد\n  app.get('/api/ai/analysis/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const analysisId = parseInt(req.params.id);\n      const analysis = await storage.getAiProjectAnalysis(analysisId);\n      \n      if (!analysis) {\n        return res.status(404).json({ message: 'التحليل غير موجود' });\n      }\n      \n      if (analysis.userId !== req.user.id && req.user.role !== 'admin') {\n        return res.status(403).json({ message: 'غير مسموح بالوصول' });\n      }\n      \n      res.json(analysis);\n    } catch (error) {\n      console.error('خطأ في الحصول على التحليل:', error);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // تقييم دقة التحليل\n  app.post('/api/ai/rate-analysis/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const analysisId = parseInt(req.params.id);\n      const validationSchema = z.object({\n        accuracyRating: z.number().min(1).max(5),\n        usefulnessRating: z.number().min(1).max(5),\n        priceAccuracy: z.number().min(1).max(5),\n        feedback: z.string().optional(),\n        actualProjectCost: z.number().optional()\n      });\n\n      const validatedData = validationSchema.parse(req.body);\n      \n      const analysis = await storage.getAiProjectAnalysis(analysisId);\n      if (!analysis || analysis.userId !== req.user.id) {\n        return res.status(404).json({ message: 'التحليل غير موجود' });\n      }\n\n      const rating = await storage.createAnalysisRating({\n        analysisId,\n        userId: req.user.id,\n        ...validatedData\n      });\n\n      res.json(rating);\n    } catch (error) {\n      console.error('خطأ في تقييم التحليل:', error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: 'بيانات غير صحيحة', \n          errors: error.errors \n        });\n      }\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  });\n\n  // تحميل تقرير PDF للتحليل\n  app.get('/api/ai/analysis/:id/report', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const analysisId = parseInt(req.params.id);\n      const user = req.user as any;\n      \n      console.log(`طلب تحميل التقرير للتحليل ${analysisId} من المستخدم ${user.id}`);\n      \n      if (isNaN(analysisId)) {\n        return res.status(400).json({ message: 'معرف التحليل غير صحيح' });\n      }\n      \n      const analysis = await storage.getAiProjectAnalysis(analysisId);\n      \n      if (!analysis) {\n        console.log(`التحليل ${analysisId} غير موجود`);\n        return res.status(404).json({ message: 'التحليل غير موجود' });\n      }\n      \n      if (analysis.userId !== user.id) {\n        console.log(`المستخدم ${user.id} غير مخول لتحميل التحليل ${analysisId} (المالك: ${analysis.userId})`);\n        return res.status(403).json({ message: 'غير مخول لتحميل هذا التحليل' });\n      }\n\n      const { generateProjectReport } = await import('./aiProjectAssistant');\n      const analysisResult = JSON.parse(analysis.analysisResult);\n      const reportContent = generateProjectReport(analysisResult);\n      \n      console.log(`تم إنشاء التقرير بنجاح، الطول: ${reportContent.length} حرف`);\n\n      // إنشاء اسم ملف آمن بدون أحرف عربية\n      const safeFilename = `project-analysis-${analysisId}.txt`;\n      const encodedFilename = encodeURIComponent(`تحليل-المشروع-${analysisId}.txt`);\n      \n      // إعداد headers لإجبار التحميل\n      res.setHeader('Content-Type', 'text/plain; charset=utf-8');\n      res.setHeader('Content-Disposition', `attachment; filename=\"${safeFilename}\"`);\n      res.setHeader('Content-Length', Buffer.byteLength(reportContent, 'utf8'));\n      res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n      res.setHeader('Pragma', 'no-cache');\n      res.setHeader('Expires', '0');\n      \n      // إرسال المحتوى\n      res.end(reportContent, 'utf8');\n    } catch (error) {\n      console.error('خطأ في إنشاء التقرير:', error);\n      res.status(500).json({ message: 'Internal server error', error: error.message });\n    }\n  });\n\n  // Contact messages API\n  app.get('/api/contact-messages', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const messages = await storage.getContactMessages();\n      res.json(messages);\n    } catch (error) {\n      console.error('خطأ في استرجاع رسائل الاتصال:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء جلب رسائل الاتصال' });\n    }\n  });\n\n  app.patch('/api/contact-messages/:id/status', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'معرف غير صالح' });\n      }\n      \n      const { status } = req.body;\n      if (!['new', 'read', 'replied', 'archived'].includes(status)) {\n        return res.status(400).json({ message: 'حالة غير صالحة' });\n      }\n      \n      const updatedMessage = await storage.updateContactMessageStatus(id, status);\n      res.json(updatedMessage);\n    } catch (error) {\n      console.error('خطأ في تحديث حالة رسالة الاتصال:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء تحديث حالة الرسالة' });\n    }\n  });\n\n  app.patch('/api/contact-messages/:id/notes', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'معرف غير صالح' });\n      }\n      \n      const { notes } = req.body;\n      if (!notes) {\n        return res.status(400).json({ message: 'الملاحظات مطلوبة' });\n      }\n      \n      const updatedMessage = await storage.addNoteToContactMessage(id, notes);\n      res.json(updatedMessage);\n    } catch (error) {\n      console.error('خطأ في إضافة ملاحظة إلى رسالة الاتصال:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء إضافة الملاحظة' });\n    }\n  });\n\n  app.delete('/api/contact-messages/:id', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'معرف غير صالح' });\n      }\n      \n      const success = await storage.deleteContactMessage(id);\n      res.json({ success: true, message: 'تم حذف الرسالة بنجاح' });\n    } catch (error) {\n      console.error('خطأ في حذف رسالة الاتصال:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء حذف الرسالة' });\n    }\n  });\n\n  app.post('/api/contact-messages/:id/reply', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'معرف غير صالح' });\n      }\n      \n      const { replyMessage } = req.body;\n      if (!replyMessage) {\n        return res.status(400).json({ message: 'نص الرد مطلوب' });\n      }\n      \n      const updatedMessage = await storage.replyToContactMessage(id, replyMessage);\n      if (!updatedMessage) {\n        return res.status(404).json({ message: 'الرسالة غير موجودة' });\n      }\n      \n      res.json(updatedMessage);\n    } catch (error) {\n      console.error('خطأ في الرد على رسالة الاتصال:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء إرسال الرد' });\n    }\n  });\n\n  // Site settings API\n  app.get('/api/admin/site-settings', isAdmin, async (req: Request, res: Response) => {\n    try {\n      const settings = await storage.getAllSiteSettings();\n      res.json(settings);\n    } catch (error) {\n      console.error('خطأ في استرجاع إعدادات الموقع:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء جلب الإعدادات' });\n    }\n  });\n\n  // Contact Messages API - Create new contact message (public endpoint)\n  app.post('/api/contact-messages', async (req: Request, res: Response) => {\n    try {\n      console.log('استلام طلب إنشاء رسالة تواصل جديدة:', JSON.stringify(req.body));\n      \n      // تحويل البيانات من تنسيق الواجهة الأمامية إلى تنسيق قاعدة البيانات\n      const frontendData = req.body;\n      const messageData = {\n        name: frontendData.name,\n        email: frontendData.email,\n        phone: frontendData.phone || null,\n        message: frontendData.message,\n        subject: frontendData.messageDetails?.subject || frontendData.subject || 'استفسار عام'\n      };\n      \n      console.log('بيانات الرسالة بعد التحويل:', JSON.stringify(messageData));\n      \n      // التحقق من صحة البيانات باستخدام مخطط Zod\n      const validatedData = insertContactMessageSchema.parse(messageData);\n      console.log('تم التحقق من صحة البيانات بنجاح');\n      \n      // حفظ الرسالة في قاعدة البيانات\n      const savedMessage = await storage.createContactMessage(validatedData);\n      console.log('تم حفظ رسالة التواصل بنجاح، معرف:', savedMessage.id);\n      \n      res.status(201).json({ \n        success: true, \n        message: 'تم إرسال رسالتك بنجاح، سنقوم بالرد عليك قريباً',\n        id: savedMessage.id \n      });\n    } catch (error) {\n      console.error('خطأ في إنشاء رسالة التواصل:', error);\n      \n      if (error instanceof z.ZodError) {\n        console.log('خطأ في التحقق من البيانات:', error.errors);\n        return res.status(400).json({ \n          message: 'بيانات غير صالحة', \n          errors: error.errors \n        });\n      }\n      \n      res.status(500).json({ message: 'حدث خطأ أثناء إرسال الرسالة، يرجى المحاولة مرة أخرى' });\n    }\n  });\n\n  // Contact Messages Management API\n  app.get('/api/contact-messages', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      if (!user || user.role !== 'admin') {\n        return res.status(403).json({ message: 'الوصول غير مصرح - يجب أن تكون مديراً' });\n      }\n      \n      const messages = await storage.getContactMessages();\n      res.json(messages);\n    } catch (error) {\n      console.error('خطأ في جلب رسائل التواصل:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء جلب الرسائل' });\n    }\n  });\n\n  app.patch('/api/contact-messages/:id/status', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      if (!user || user.role !== 'admin') {\n        return res.status(403).json({ message: 'الوصول غير مصرح' });\n      }\n      \n      const id = parseInt(req.params.id);\n      const { status } = req.body;\n      \n      if (isNaN(id) || !status) {\n        return res.status(400).json({ message: 'بيانات غير صالحة' });\n      }\n      \n      const updatedMessage = await storage.updateContactMessageStatus(id, status);\n      if (!updatedMessage) {\n        return res.status(404).json({ message: 'الرسالة غير موجودة' });\n      }\n      \n      res.json({ success: true, message: updatedMessage });\n    } catch (error) {\n      console.error('خطأ في تحديث حالة الرسالة:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء التحديث' });\n    }\n  });\n\n  app.delete('/api/contact-messages/:id', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      if (!user || user.role !== 'admin') {\n        return res.status(403).json({ message: 'الوصول غير مصرح' });\n      }\n      \n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: 'معرف غير صالح' });\n      }\n      \n      const deleted = await storage.deleteContactMessage(id);\n      if (!deleted) {\n        return res.status(404).json({ message: 'الرسالة غير موجودة' });\n      }\n      \n      res.json({ success: true, message: 'تم حذف الرسالة بنجاح' });\n    } catch (error) {\n      console.error('خطأ في حذف الرسالة:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء الحذف' });\n    }\n  });\n\n  // Contact Statistics API\n  app.get('/api/contact-stats', isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      if (!user || user.role !== 'admin') {\n        return res.status(403).json({ message: 'الوصول غير مصرح' });\n      }\n      \n      const stats = await storage.getContactStats();\n      res.json(stats);\n    } catch (error) {\n      console.error('خطأ في جلب إحصائيات التواصل:', error);\n      res.status(500).json({ message: 'حدث خطأ أثناء جلب الإحصائيات' });\n    }\n  });\n\n  // Simple in-memory storage for contact settings\n  const contactSettings = {\n    contact_email: 'info@linktech.app',\n    contact_phone: '+966 53 123 4567',\n    contact_address: 'واحة المعرفة، طريق الملك عبدالعزيز، جدة، المملكة العربية السعودية',\n    contact_whatsapp: '',\n    business_hours: 'الأحد - الخميس: 9:00 صباحاً - 5:00 مساءً\\nالجمعة - السبت: مغلق'\n  };\n\n  // API للحصول على معلومات التواصل\n  app.get('/api/contact-info', (req: Request, res: Response) => {\n    res.json(contactSettings);\n  });\n\n  // API لتحديث معلومات التواصل\n  app.post('/api/contact-info', isAuthenticated, (req: Request, res: Response) => {\n    const user = req.user as any;\n    if (user && user.role === 'admin') {\n      const { contact_email, contact_phone, contact_address, contact_whatsapp, business_hours } = req.body;\n      \n      if (contact_email) contactSettings.contact_email = contact_email;\n      if (contact_phone) contactSettings.contact_phone = contact_phone;\n      if (contact_address) contactSettings.contact_address = contact_address;\n      if (contact_whatsapp !== undefined) contactSettings.contact_whatsapp = contact_whatsapp;\n      if (business_hours) contactSettings.business_hours = business_hours;\n      \n      res.json({ success: true, message: 'تم تحديث معلومات التواصل بنجاح' });\n    } else {\n      res.status(403).json({ message: 'غير مصرح' });\n    }\n  });\n\n  // استخدام مسارات صادق API\n  app.use('/api/sadiq', sadiqRoutes);\n\n  return httpServer;\n}\n","size_bytes":237141},"server/seedDatabase.ts":{"content":"import { db } from \"./db\";\nimport { users, companyProfiles, projects, testimonials } from \"@shared/schema\";\nimport { eq } from \"drizzle-orm\";\n\nasync function seedDatabase() {\n  console.log(\"Seeding database with initial data...\");\n\n  try {\n    // Test database connection first by attempting to query existing tables\n    console.log(\"Testing database connection...\");\n    // Simple connection test by querying the information schema\n    await db.query.users.findMany({ limit: 0 });\n    console.log(\"Database connection successful\");\n\n    // First check if we have any data in essential tables to avoid duplicating data\n    const existingUsers = await db.query.users.findMany({ limit: 1 });\n    const existingCompanies = await db.query.companyProfiles.findMany({ limit: 1 });\n    const existingProjects = await db.query.projects.findMany({ limit: 1 });\n    \n    // Skip user creation if users already exist\n    let skipUsers = existingUsers.length > 0;\n    let skipCompanies = existingCompanies.length > 0;\n    let skipProjects = existingProjects.length > 0;\n    \n    if (skipUsers && skipCompanies && skipProjects) {\n      console.log(\"All database tables already have data, skipping seed\");\n      return;\n    }\n\n    // Get or create sample users\n    let user1, user2, user3, user4, user5;\n    \n    if (skipUsers) {\n      console.log(\"Users already exist, retrieving existing user data\");\n      // Get existing users\n      [user1] = await db.select().from(users).where(eq(users.username, \"ahmed_entrepreneur\")).limit(1);\n      [user2] = await db.select().from(users).where(eq(users.username, \"tech_solutions\")).limit(1);\n      [user3] = await db.select().from(users).where(eq(users.username, \"digital_hub\")).limit(1);\n      [user4] = await db.select().from(users).where(eq(users.username, \"smart_code\")).limit(1);\n      [user5] = await db.select().from(users).where(eq(users.username, \"sara_entrepreneur\")).limit(1);\n    } else {\n      console.log(\"Creating new users...\");\n      // Create new users\n      [user1] = await db.insert(users).values({\n        username: \"ahmed_entrepreneur\",\n        password: \"password123\",\n        email: \"ahmed@example.com\",\n        role: \"entrepreneur\",\n        name: \"أحمد السيد\",\n        avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      }).returning();\n      \n      [user2] = await db.insert(users).values({\n        username: \"tech_solutions\",\n        password: \"password123\",\n        email: \"tech@example.com\",\n        role: \"company\",\n        name: \"تك سوليوشنز\",\n        avatar: \"https://randomuser.me/api/portraits/men/2.jpg\",\n      }).returning();\n      \n      [user3] = await db.insert(users).values({\n        username: \"digital_hub\",\n        password: \"password123\",\n        email: \"digital@example.com\",\n        role: \"company\",\n        name: \"ديجيتال هب\",\n        avatar: \"https://randomuser.me/api/portraits/women/3.jpg\",\n      }).returning();\n      \n      [user4] = await db.insert(users).values({\n        username: \"smart_code\",\n        password: \"password123\",\n        email: \"smart@example.com\",\n        role: \"company\",\n        name: \"سمارت كود\",\n        avatar: \"https://randomuser.me/api/portraits/men/4.jpg\",\n      }).returning();\n      \n      [user5] = await db.insert(users).values({\n        username: \"sara_entrepreneur\",\n        password: \"password123\",\n        email: \"sara@example.com\",\n        role: \"entrepreneur\",\n        name: \"سارة العمري\",\n        avatar: \"https://randomuser.me/api/portraits/women/5.jpg\",\n      }).returning();\n    }\n    \n    // Create company profiles\n    if (!skipCompanies) {\n      console.log(\"Creating company profiles...\");\n      await db.insert(companyProfiles).values({\n        userId: user2.id,\n        description: \"متخصصون في تطوير تطبيقات الجوال والويب للشركات والمؤسسات، مع خبرة تزيد عن 8 سنوات في مجال البرمجة.\",\n        logo: \"https://randomuser.me/api/portraits/men/2.jpg\",\n        coverPhoto: \"https://images.unsplash.com/photo-1560179707-f14e90ef3623\",\n        website: \"https://techsolutions.example.com\",\n        location: \"الرياض، المملكة العربية السعودية\",\n        skills: [\"تطبيقات الويب\", \"تطبيقات الجوال\", \"الذكاء الاصطناعي\"],\n        rating: 5,\n        reviewCount: 48\n      });\n      \n      await db.insert(companyProfiles).values({\n        userId: user3.id,\n        description: \"شركة رائدة في مجال التحول الرقمي وتطوير الحلول المتكاملة للشركات الناشئة والمؤسسات الكبيرة.\",\n        logo: \"https://randomuser.me/api/portraits/women/3.jpg\",\n        coverPhoto: \"https://images.unsplash.com/photo-1522071820081-009f0129c71c\",\n        website: \"https://digitalhub.example.com\",\n        location: \"جدة، المملكة العربية السعودية\",\n        skills: [\"التحول الرقمي\", \"تجارة إلكترونية\", \"برمجة خلفية\"],\n        rating: 5,\n        reviewCount: 62\n      });\n      \n      await db.insert(companyProfiles).values({\n        userId: user4.id,\n        description: \"متخصصون في تطوير واجهات المستخدم وتجربة المستخدم، مع تركيز على تصميم تطبيقات سهلة الاستخدام.\",\n        logo: \"https://randomuser.me/api/portraits/men/4.jpg\",\n        coverPhoto: \"https://images.unsplash.com/photo-1556761175-4b46a572b786\",\n        website: \"https://smartcode.example.com\",\n        location: \"الدمام، المملكة العربية السعودية\",\n        skills: [\"تصميم UI/UX\", \"تطوير واجهات\", \"مواقع تفاعلية\"],\n        rating: 4,\n        reviewCount: 27\n      });\n    } else {\n      console.log(\"Company profiles already exist, skipping creation\");\n    }\n    \n    // Create projects\n    const today = new Date();\n    \n    if (!skipProjects) {\n      console.log(\"Creating projects...\");\n      await db.insert(projects).values({\n        title: \"تطبيق توصيل طلبات للمطاعم\",\n        description: \"نبحث عن شركة برمجة متخصصة لتطوير تطبيق جوّال لتوصيل الطعام من المطاعم المحلية، مع لوحة تحكم للمطاعم ونظام تتبع للسائقين.\",\n        budget: \"50,000 - 80,000 ريال\",\n        duration: \"3-6 أشهر\",\n        skills: [\"تطبيق جوال\", \"iOS\", \"Android\", \"لوحة تحكم\"],\n        userId: user1.id,\n        status: \"open\",\n        highlightStatus: \"عالي الطلب\",\n        createdAt: new Date(today.getTime() - 5 * 24 * 60 * 60 * 1000) // 5 days ago\n      });\n      \n      await db.insert(projects).values({\n        title: \"منصة تعليمية تفاعلية\",\n        description: \"تطوير منصة تعليمية على الويب تدعم الدورات التفاعلية، والاختبارات، ومنتدى للطلاب. يجب أن تكون متوافقة مع الأجهزة المختلفة.\",\n        budget: \"70,000 - 120,000 ريال\",\n        duration: \"4-8 أشهر\",\n        skills: [\"تطوير ويب\", \"تصميم UI/UX\", \"React\", \"Node.js\"],\n        userId: user5.id,\n        status: \"open\",\n        highlightStatus: \"جديد\",\n        createdAt: new Date(today.getTime() - 2 * 24 * 60 * 60 * 1000) // 2 days ago\n      });\n      \n      await db.insert(projects).values({\n        title: \"نظام إدارة عقارات\",\n        description: \"نظام متكامل لإدارة العقارات يشمل إدارة الممتلكات، والإيجارات، والصيانة، والفواتير، مع تطبيق جوال للمستأجرين والملاك.\",\n        budget: \"100,000 - 150,000 ريال\",\n        duration: \"6-10 أشهر\",\n        skills: [\"نظام إدارة\", \"تطبيق ويب\", \"تطبيق جوال\", \"API\"],\n        userId: user1.id,\n        status: \"open\",\n        highlightStatus: null,\n        createdAt: new Date(today.getTime() - 10 * 24 * 60 * 60 * 1000) // 10 days ago\n      });\n    } else {\n      console.log(\"Projects already exist, skipping creation\");\n    }\n    \n    // Check for testimonials\n    const existingTestimonials = await db.query.testimonials.findMany({ limit: 1 });\n    let skipTestimonials = existingTestimonials.length > 0;\n    \n    // Create testimonials\n    if (!skipTestimonials) {\n      console.log(\"Creating testimonials...\");\n      await db.insert(testimonials).values({\n        userId: user1.id,\n        content: \"وجدت الشريك المثالي لتنفيذ مشروعي من خلال المنصة. تواصلت مع عدة شركات مميزة واخترت الأنسب. التطبيق الآن يعمل بكفاءة عالية ولدينا أكثر من 10,000 مستخدم نشط.\",\n        role: \"entrepreneur\",\n        companyName: null,\n        userTitle: \"مؤسس تطبيق \\\"طلباتي\\\"\",\n        rating: 5,\n        avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n        createdAt: new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000) // 30 days ago\n      });\n      \n      await db.insert(testimonials).values({\n        userId: user5.id,\n        content: \"المنصة ساعدتنا في الوصول لعملاء جدد وتنفيذ مشاريع متنوعة. نظام التواصل سهل وفعال، والدعم الفني ممتاز. حققنا نمواً بنسبة 40% في عدد المشاريع منذ انضمامنا للمنصة.\",\n        role: \"company\",\n        companyName: \"شركة ديجيتال هب\",\n        userTitle: \"مديرة تطوير الأعمال\",\n        rating: 5,\n        avatar: \"https://randomuser.me/api/portraits/women/5.jpg\",\n        createdAt: new Date(today.getTime() - 45 * 24 * 60 * 60 * 1000) // 45 days ago\n      });\n    } else {\n      console.log(\"Testimonials already exist, skipping creation\");\n    }\n    \n    console.log(\"Database successfully seeded with initial data\");\n  } catch (error) {\n    console.error(\"Error seeding database:\", error);\n    \n    // Log more detailed database error information\n    if (error instanceof Error) {\n      console.error(\"Error name:\", error.name);\n      console.error(\"Error message:\", error.message);\n      console.error(\"Error stack:\", error.stack);\n    }\n    \n    // Re-throw in development for debugging, but not in production\n    if (process.env.NODE_ENV !== 'production') {\n      throw error;\n    }\n    \n    console.warn(\"Seeding failed but continuing in production mode\");\n  }\n}\n\nexport { seedDatabase };","size_bytes":10595},"server/sitemap.ts":{"content":"import { Request, Response } from \"express\";\nimport { db } from \"./db\";\nimport { projects, companyProfiles, CompanyProfile } from \"@shared/schema\";\nimport { eq } from \"drizzle-orm\";\nimport { storage } from \"./storage\";\n\n/**\n * وظيفة لتوليد خريطة موقع XML ديناميكية\n * \n * تنشئ هذه الوظيفة ملف XML يحتوي على روابط صفحات الموقع الأساسية،\n * بالإضافة إلى روابط ديناميكية للمشاريع والشركات الموثقة\n * \n * ملاحظة: تم استبعاد صفحات المشاريع الفردية بناءً على طلب العميل \n * لأنها تحتوي على معلومات حساسة\n */\nexport async function generateSitemap(req: Request, res: Response) {\n  try {\n    // الحصول على مسار الموقع من الطلب\n    const baseUrl = process.env.WEBSITE_URL || `${req.protocol}://${req.get('host')}`;\n    \n    // تاريخ التحديث\n    const date = new Date().toISOString();\n\n    // الصفحات الثابتة\n    const staticPages = [\n      { url: '', priority: '1.0', changefreq: 'daily' },\n      { url: 'about', priority: '0.8', changefreq: 'monthly' },\n      { url: 'contact', priority: '0.8', changefreq: 'monthly' },\n      { url: 'how-it-works', priority: '0.8', changefreq: 'monthly' },\n      { url: 'for-companies', priority: '0.8', changefreq: 'monthly' },\n      { url: 'faq', priority: '0.8', changefreq: 'monthly' },\n      { url: 'terms', priority: '0.5', changefreq: 'monthly' },\n      { url: 'privacy', priority: '0.5', changefreq: 'monthly' },\n      { url: 'blog', priority: '0.9', changefreq: 'daily' },\n    ];\n    \n    // صفحات الخدمات\n    const servicePages = [\n      { url: 'services', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/software-company-saudi', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/custom-app-development', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/ecommerce-development', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/software-development', priority: '0.9', changefreq: 'weekly' },\n    ];\n    \n    // جلب الشركات الموثقة من قاعدة البيانات\n    const companies = await storage.getVerifiedCompanies();\n    \n    // بداية ملف XML\n    let xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n    xml += '<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\\n';\n    \n    // إضافة الصفحات الثابتة\n    staticPages.forEach((page: { url: string; priority: string; changefreq: string }) => {\n      xml += `  <url>\\n`;\n      xml += `    <loc>${baseUrl}/${page.url}</loc>\\n`;\n      xml += `    <lastmod>${date}</lastmod>\\n`;\n      xml += `    <changefreq>${page.changefreq}</changefreq>\\n`;\n      xml += `    <priority>${page.priority}</priority>\\n`;\n      xml += `  </url>\\n`;\n    });\n    \n    // إضافة صفحات الخدمات\n    servicePages.forEach((page: { url: string; priority: string; changefreq: string }) => {\n      xml += `  <url>\\n`;\n      xml += `    <loc>${baseUrl}/${page.url}</loc>\\n`;\n      xml += `    <lastmod>${date}</lastmod>\\n`;\n      xml += `    <changefreq>${page.changefreq}</changefreq>\\n`;\n      xml += `    <priority>${page.priority}</priority>\\n`;\n      xml += `  </url>\\n`;\n    });\n    \n    // إضافة صفحات الشركات الموثقة\n    companies.forEach((company: CompanyProfile) => {\n      xml += `  <url>\\n`;\n      xml += `    <loc>${baseUrl}/companies/${company.id}</loc>\\n`;\n      xml += `    <lastmod>${date}</lastmod>\\n`;\n      xml += `    <changefreq>weekly</changefreq>\\n`;\n      xml += `    <priority>0.7</priority>\\n`;\n      xml += `  </url>\\n`;\n    });\n    \n    // جلب فئات المدونة وإضافتها إلى السايت ماب\n    try {\n      const blogCategories = await storage.getBlogCategories();\n      blogCategories.forEach((category) => {\n        xml += `  <url>\\n`;\n        xml += `    <loc>${baseUrl}/blog/category/${category.slug}</loc>\\n`;\n        xml += `    <lastmod>${category.updatedAt?.toISOString() || date}</lastmod>\\n`;\n        xml += `    <changefreq>weekly</changefreq>\\n`;\n        xml += `    <priority>0.6</priority>\\n`;\n        xml += `  </url>\\n`;\n      });\n    } catch (error) {\n      console.error('Error fetching blog categories:', error);\n    }\n    \n    // جلب مقالات المدونة المنشورة وإضافتها إلى السايت ماب\n    try {\n      const blogPosts = await storage.getPublishedBlogPosts();\n      blogPosts.forEach((post) => {\n        xml += `  <url>\\n`;\n        xml += `    <loc>${baseUrl}/blog/${post.slug}</loc>\\n`;\n        xml += `    <lastmod>${post.updatedAt?.toISOString() || date}</lastmod>\\n`;\n        xml += `    <changefreq>weekly</changefreq>\\n`;\n        xml += `    <priority>0.8</priority>\\n`;\n        xml += `  </url>\\n`;\n      });\n    } catch (error) {\n      console.error('Error fetching blog posts:', error);\n    }\n    \n    // نهاية ملف XML\n    xml += '</urlset>';\n    \n    // إرسال الرد\n    res.header('Content-Type', 'application/xml');\n    res.send(xml);\n  } catch (error) {\n    console.error('Error generating sitemap:', error);\n    res.status(500).send('Error generating sitemap');\n  }\n}\n\n/**\n * وظيفة لتوليد ملف robots.txt\n * \n * تنشئ هذه الوظيفة ملف robots.txt الذي يحدد قواعد الزحف لمحركات البحث\n */\nexport function generateRobotsTxt(req: Request, res: Response) {\n  try {\n    const baseUrl = process.env.WEBSITE_URL || `${req.protocol}://${req.get('host')}`;\n    \n    let robotsTxt = 'User-agent: *\\n';\n    robotsTxt += 'Allow: /\\n';\n    robotsTxt += 'Disallow: /api/\\n';\n    robotsTxt += 'Disallow: /dashboard/\\n';\n    robotsTxt += 'Disallow: /admin/\\n';\n    robotsTxt += 'Disallow: /projects/*\\n'; // حسب طلب العميل، منع فهرسة صفحات المشاريع لأنها تحتوي على معلومات حساسة\n    robotsTxt += `Sitemap: ${baseUrl}/sitemap.xml\\n`;\n    \n    res.header('Content-Type', 'text/plain');\n    res.send(robotsTxt);\n  } catch (error) {\n    console.error('Error generating robots.txt:', error);\n    res.status(500).send('Error generating robots.txt');\n  }\n}","size_bytes":6269},"server/storage.ts":{"content":"import * as schema from \"@shared/schema\";\nimport { \n  User, InsertUser, \n  CompanyProfile, InsertCompanyProfile,\n  Project, InsertProject,\n  Message, InsertMessage,\n  Testimonial, InsertTestimonial,\n  ProjectOffer, InsertProjectOffer,\n  SiteSetting, InsertSiteSetting,\n  siteSettings,\n  passwordResetTokens,\n  InsertPasswordResetToken,\n  NewsletterSubscriber, InsertNewsletterSubscriber,\n  newsletterSubscribers,\n  NdaAgreement, InsertNdaAgreement,\n  ndaAgreements,\n  blogCategories, blogPosts, blogComments,\n  PremiumClient, InsertPremiumClient,\n  premiumClients,\n  ContactMessage, InsertContactMessage,\n  contactMessages,\n  FeaturedClient, InsertFeaturedClient,\n  featuredClients,\n  Notification, InsertNotification,\n  notifications,\n  PersonalInformation, InsertPersonalInformation,\n  personalInformation,\n} from \"@shared/schema\";\nimport { sql } from \"drizzle-orm\";\nimport { db } from \"./db\";\nimport { eq, and, or, desc, asc } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  getUsers(): Promise<User[]>;\n  updateUser(id: number, updates: Partial<User>): Promise<User | undefined>;\n  updateUserPassword(id: number, hashedPassword: string): Promise<User | undefined>;\n  \n  // Password reset operations\n  createPasswordResetToken(email: string, token: string, expiresAt: Date): Promise<boolean>;\n  getPasswordResetToken(token: string): Promise<{userId: number, email: string, expiresAt: Date} | undefined>;\n  deletePasswordResetToken(token: string): Promise<boolean>;\n  \n  // Company profile operations\n  getCompanyProfile(id: number): Promise<CompanyProfile | undefined>;\n  getCompanyProfileByUserId(userId: number): Promise<CompanyProfile | undefined>;\n  createCompanyProfile(profile: InsertCompanyProfile): Promise<CompanyProfile>;\n  updateCompanyProfile(id: number, profile: Partial<CompanyProfile>): Promise<CompanyProfile | undefined>;\n  getCompanyProfiles(): Promise<CompanyProfile[]>;\n  getVerifiedCompanies(): Promise<CompanyProfile[]>;\n  verifyCompany(id: number, verified: boolean): Promise<CompanyProfile | undefined>;\n  \n  // Personal information operations\n  getPersonalInformationByUserId(userId: number): Promise<PersonalInformation | undefined>;\n  createPersonalInformation(info: InsertPersonalInformation): Promise<PersonalInformation>;\n  updatePersonalInformation(userId: number, info: Partial<PersonalInformation>): Promise<PersonalInformation | undefined>;\n  \n  // Project operations\n  getProject(id: number): Promise<Project | undefined>;\n  getProjects(): Promise<Project[]>;\n  getProjectsWithUserData(): Promise<(Project & { username?: string; name?: string })[]>;\n  getProjectsByUserId(userId: number): Promise<Project[]>;\n  createProject(project: InsertProject): Promise<Project>;\n  updateProject(id: number, project: Partial<Project>): Promise<Project | undefined>;\n  deleteProject(id: number): Promise<boolean>;\n  \n  // Message operations\n  getMessage(id: number): Promise<Message | undefined>;\n  getMessages(userId: number): Promise<Message[]>;\n  getConversation(user1Id: number, user2Id: number, projectId?: number): Promise<Message[]>;\n  createMessage(message: InsertMessage): Promise<Message>;\n  markMessageAsRead(id: number): Promise<Message | undefined>;\n  markAllMessagesAsRead(fromUserId: number, toUserId: number): Promise<number>; // عدد الرسائل التي تم تحديثها\n  updateMessageDeliveryStatus(id: number, status: 'pending' | 'delivered' | 'failed'): Promise<Message | undefined>;\n  \n  // Testimonial operations\n  getTestimonial(id: number): Promise<Testimonial | undefined>;\n  getTestimonials(): Promise<Testimonial[]>;\n  createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial>;\n\n  // Project Offer operations\n  getProjectOffer(id: number): Promise<ProjectOffer | undefined>;\n  getProjectOffersByProjectId(projectId: number): Promise<ProjectOffer[]>;\n  getProjectOffersByCompanyId(companyId: number): Promise<ProjectOffer[]>;\n  getAllProjectOffers(): Promise<ProjectOffer[]>;\n  createProjectOffer(offer: InsertProjectOffer): Promise<ProjectOffer>;\n  updateProjectOfferStatus(id: number, status: string): Promise<ProjectOffer | undefined>;\n  setProjectOfferDepositPaid(id: number, depositAmount: string): Promise<ProjectOffer | undefined>;\n  setProjectOfferContactRevealed(id: number): Promise<ProjectOffer | undefined>;\n  \n  // Site Settings operations\n  getSiteSetting(key: string): Promise<SiteSetting | undefined>;\n  setSiteSetting(key: string, value: string): Promise<SiteSetting>;\n  getAllSiteSettings(): Promise<SiteSetting[]>;\n  \n  // Newsletter Subscriber operations\n  getNewsletterSubscriberByEmail(email: string): Promise<NewsletterSubscriber | undefined>;\n  createNewsletterSubscriber(subscriber: InsertNewsletterSubscriber): Promise<NewsletterSubscriber>;\n  getNewsletterSubscribers(): Promise<NewsletterSubscriber[]>;\n  updateNewsletterSubscriber(id: number, updates: Partial<NewsletterSubscriber>): Promise<NewsletterSubscriber | undefined>;\n  \n  // NDA Agreement operations\n  getNdaAgreement(id: number): Promise<NdaAgreement | undefined>;\n  getNdaAgreementByProjectId(projectId: number): Promise<NdaAgreement | undefined>;\n  getNdaByProjectAndCompany(projectId: number, companyUserId: number): Promise<NdaAgreement | undefined>;\n  createNdaAgreement(agreement: InsertNdaAgreement): Promise<NdaAgreement>;\n  updateNdaAgreement(id: number, updates: Partial<NdaAgreement>): Promise<NdaAgreement | undefined>;\n  updateNdaAgreementStatus(id: number, status: string): Promise<NdaAgreement | undefined>;\n  signNdaAgreement(id: number, signatureInfo: any): Promise<NdaAgreement | undefined>;\n  getNdaAgreements(): Promise<NdaAgreement[]>;\n  setNdaPdfUrl(id: number, pdfUrl: string): Promise<NdaAgreement | undefined>;\n  \n  // Notification operations\n  createNotification(notification: InsertNotification): Promise<Notification>;\n  getNotificationsByUserId(userId: number): Promise<Notification[]>;\n  markNotificationAsRead(id: number): Promise<Notification | undefined>;\n  markAllNotificationsAsRead(userId: number): Promise<void>;\n  \n  // Blog operations\n  getBlogCategories(): Promise<{ id: number; name: string; slug: string; description: string | null; image: string | null; parentId: number | null; order: number | null; createdAt: Date; updatedAt: Date; }[]>;\n  getBlogCategory(id: number): Promise<{ id: number; name: string; slug: string; description: string | null; image: string | null; parentId: number | null; order: number | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  getBlogCategoryBySlug(slug: string): Promise<{ id: number; name: string; slug: string; description: string | null; image: string | null; parentId: number | null; order: number | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  createBlogCategory(category: any): Promise<{ id: number; name: string; slug: string; description: string | null; image: string | null; parentId: number | null; order: number | null; createdAt: Date; updatedAt: Date; }>;\n  updateBlogCategory(id: number, category: any): Promise<{ id: number; name: string; slug: string; description: string | null; image: string | null; parentId: number | null; order: number | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  deleteBlogCategory(id: number): Promise<boolean>;\n  getBlogPosts(categoryId?: number): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; }[]>;\n  getBlogPost(id: number): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  getBlogPostBySlug(slug: string): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  createBlogPost(post: any): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; }>;\n  updateBlogPost(id: number, post: any): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  deleteBlogPost(id: number): Promise<boolean>;\n  incrementBlogPostViewCount(id: number): Promise<boolean>;\n  getBlogCommentsByPost(postId: number): Promise<{ id: number; postId: number; userId: number | null; parentId: number | null; authorName: string | null; authorEmail: string | null; content: string; status: string; createdAt: Date; updatedAt: Date; }[]>;\n  getBlogComment(id: number): Promise<{ id: number; postId: number; userId: number | null; parentId: number | null; authorName: string | null; authorEmail: string | null; content: string; status: string; createdAt: Date; updatedAt: Date; } | undefined>;\n  createBlogComment(comment: any): Promise<{ id: number; postId: number; userId: number | null; parentId: number | null; authorName: string | null; authorEmail: string | null; content: string; status: string; createdAt: Date; updatedAt: Date; }>;\n  updateBlogCommentStatus(id: number, status: string): Promise<{ id: number; postId: number; userId: number | null; parentId: number | null; authorName: string | null; authorEmail: string | null; content: string; status: string; createdAt: Date; updatedAt: Date; } | undefined>;\n  deleteBlogComment(id: number): Promise<boolean>;\n  getPublishedBlogPosts(): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; }[]>;\n  getBlogPost(id: number): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  getBlogPostBySlug(slug: string): Promise<{ id: number; title: string; slug: string; excerpt: string | null; content: string; status: string; featuredImage: string | null; authorId: number; categoryId: number | null; tags: string[] | null; metaTitle: string | null; metaDescription: string | null; metaKeywords: string | null; published: boolean | null; views: number | null; publishedAt: Date | null; createdAt: Date; updatedAt: Date; } | undefined>;\n  \n  // عمليات عملاء التميز\n  getPremiumClients(): Promise<PremiumClient[]>;\n  getPremiumClientById(id: number): Promise<PremiumClient | undefined>;\n  getPremiumClientsByCategory(category: string): Promise<PremiumClient[]>;\n  getActivePremiumClients(): Promise<PremiumClient[]>;\n  getFeaturedPremiumClients(): Promise<PremiumClient[]>;\n  createPremiumClient(client: InsertPremiumClient): Promise<PremiumClient>;\n  updatePremiumClient(id: number, updates: Partial<InsertPremiumClient>): Promise<PremiumClient | undefined>;\n  deletePremiumClient(id: number): Promise<boolean>;\n  \n  // عمليات رسائل الاتصال\n  getContactMessages(): Promise<ContactMessage[]>;\n  getContactMessageById(id: number): Promise<ContactMessage | undefined>;\n  createContactMessage(message: InsertContactMessage): Promise<ContactMessage>;\n  updateContactMessageStatus(id: number, status: string): Promise<ContactMessage | undefined>;\n  addNoteToContactMessage(id: number, note: string): Promise<ContactMessage | undefined>;\n  replyToContactMessage(id: number, replyMessage: string): Promise<ContactMessage | undefined>;\n\n  // عمليات مساعد الذكاء الاصطناعي\n  createAiProjectAnalysis(analysis: schema.InsertAiProjectAnalysis): Promise<schema.AiProjectAnalysis>;\n  getAiProjectAnalysis(id: number): Promise<schema.AiProjectAnalysis | undefined>;\n  getUserAiAnalyses(userId: number): Promise<schema.AiProjectAnalysis[]>;\n  createAnalysisRating(rating: schema.InsertAnalysisRating): Promise<schema.AnalysisRating>;\n  getAnalysisRatings(analysisId: number): Promise<schema.AnalysisRating[]>;\n  deleteContactMessage(id: number): Promise<boolean>;\n  \n  // Featured clients\n  getFeaturedClients(): Promise<FeaturedClient[]>;\n  getActiveFeaturedClients(): Promise<FeaturedClient[]>;\n  getFeaturedClient(id: number): Promise<FeaturedClient | undefined>;\n  createFeaturedClient(client: InsertFeaturedClient): Promise<FeaturedClient>;\n  updateFeaturedClient(id: number, updates: Partial<FeaturedClient>): Promise<FeaturedClient | undefined>;\n  deleteFeaturedClient(id: number): Promise<boolean>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  private companyProfiles: Map<number, CompanyProfile>;\n  private projects: Map<number, Project>;\n  private messages: Map<number, Message>;\n  private testimonials: Map<number, Testimonial>;\n  private projectOffers: Map<number, ProjectOffer>;\n  private siteSettings: Map<string, SiteSetting>;\n  private passwordResetTokens: Map<string, {userId: number, email: string, expiresAt: Date}>;\n  private newsletterSubscribers: Map<number, NewsletterSubscriber>;\n  private ndaAgreements: Map<number, NdaAgreement>;\n  private premiumClients: Map<number, PremiumClient>;\n  private notifications: Map<number, Notification>;\n  private personalInformations: Map<number, PersonalInformation>;\n  \n  private userIdCounter: number = 1;\n  private companyProfileIdCounter: number = 1;\n  private projectIdCounter: number = 1;\n  private messageIdCounter: number = 1;\n  private testimonialIdCounter: number = 1;\n  private projectOfferIdCounter: number = 1;\n  private siteSettingsIdCounter: number = 1;\n  private contactMessageIdCounter: number = 1;\n  private aiAnalysisIdCounter: number = 1;\n  private analysisRatingIdCounter: number = 1;\n  private newsletterSubscriberIdCounter: number = 1;\n  private ndaAgreementIdCounter: number = 1;\n  private premiumClientIdCounter: number = 1;\n  private notificationIdCounter: number = 1;\n  private personalInformationIdCounter: number = 1;\n  \n  constructor() {\n    this.users = new Map();\n    this.companyProfiles = new Map();\n    this.projects = new Map();\n    this.messages = new Map();\n    this.testimonials = new Map();\n    this.projectOffers = new Map();\n    this.siteSettings = new Map();\n    this.passwordResetTokens = new Map();\n    this.newsletterSubscribers = new Map();\n    this.ndaAgreements = new Map();\n    this.premiumClients = new Map();\n    this.notifications = new Map();\n    this.personalInformations = new Map();\n    this.contactMessages = new Map();\n    this.aiProjectAnalyses = new Map();\n    this.analysisRatings = new Map();\n    \n    this.seedData();\n    this.seedDefaultSiteSettings();\n  }\n  \n  // User operations\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n  \n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n  \n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.email === email,\n    );\n  }\n  \n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.userIdCounter++;\n    const now = new Date();\n    const user: User = { ...insertUser, id, createdAt: now };\n    this.users.set(id, user);\n    return user;\n  }\n  \n  async getUsers(): Promise<User[]> {\n    return Array.from(this.users.values());\n  }\n\n  async updateUser(id: number, updates: Partial<User>): Promise<User | undefined> {\n    const user = this.users.get(id);\n    if (!user) return undefined;\n    \n    const updatedUser = { ...user, ...updates };\n    this.users.set(id, updatedUser);\n    return updatedUser;\n  }\n\n  async updateUserPassword(id: number, hashedPassword: string): Promise<User | undefined> {\n    const user = this.users.get(id);\n    if (!user) return undefined;\n    \n    const updatedUser = { ...user, password: hashedPassword };\n    this.users.set(id, updatedUser);\n    return updatedUser;\n  }\n  \n  // Password reset operations\n  async createPasswordResetToken(email: string, token: string, expiresAt: Date): Promise<boolean> {\n    try {\n      const user = await this.getUserByEmail(email);\n      if (!user) {\n        return false;\n      }\n      \n      // Store the token with user info\n      this.passwordResetTokens.set(token, {\n        userId: user.id,\n        email: user.email,\n        expiresAt\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Error creating password reset token:', error);\n      return false;\n    }\n  }\n  \n  async getPasswordResetToken(token: string): Promise<{userId: number, email: string, expiresAt: Date} | undefined> {\n    const tokenData = this.passwordResetTokens.get(token);\n    \n    if (!tokenData) {\n      return undefined;\n    }\n    \n    // Check if token has expired\n    if (tokenData.expiresAt < new Date()) {\n      // Expired token, remove it and return undefined\n      this.passwordResetTokens.delete(token);\n      return undefined;\n    }\n    \n    return tokenData;\n  }\n  \n  async deletePasswordResetToken(token: string): Promise<boolean> {\n    return this.passwordResetTokens.delete(token);\n  }\n  \n  // Company profile operations\n  async getCompanyProfile(id: number): Promise<CompanyProfile | undefined> {\n    return this.companyProfiles.get(id);\n  }\n  \n  async getCompanyProfileByUserId(userId: number): Promise<CompanyProfile | undefined> {\n    return Array.from(this.companyProfiles.values()).find(\n      (profile) => profile.userId === userId,\n    );\n  }\n  \n  async createCompanyProfile(profile: InsertCompanyProfile): Promise<CompanyProfile> {\n    const id = this.companyProfileIdCounter++;\n    const companyProfile: CompanyProfile = { \n      ...profile, \n      id, \n      rating: 0,\n      reviewCount: 0 \n    };\n    this.companyProfiles.set(id, companyProfile);\n    return companyProfile;\n  }\n  \n  async updateCompanyProfile(id: number, updates: Partial<CompanyProfile>): Promise<CompanyProfile | undefined> {\n    const profile = this.companyProfiles.get(id);\n    if (!profile) return undefined;\n    \n    const updatedProfile = { ...profile, ...updates };\n    this.companyProfiles.set(id, updatedProfile);\n    return updatedProfile;\n  }\n  \n  async getCompanyProfiles(): Promise<CompanyProfile[]> {\n    return Array.from(this.companyProfiles.values());\n  }\n  \n  async getVerifiedCompanies(): Promise<CompanyProfile[]> {\n    return Array.from(this.companyProfiles.values()).filter(\n      (profile) => profile.verified === true\n    );\n  }\n  \n  async verifyCompany(id: number, verified: boolean): Promise<CompanyProfile | undefined> {\n    const profile = this.companyProfiles.get(id);\n    if (!profile) return undefined;\n    \n    const updatedProfile = { ...profile, verified };\n    this.companyProfiles.set(id, updatedProfile);\n    return updatedProfile;\n  }\n  \n  // Personal information operations\n  async getPersonalInformationByUserId(userId: number): Promise<PersonalInformation | undefined> {\n    return Array.from(this.personalInformations.values()).find(\n      (info) => info.userId === userId,\n    );\n  }\n  \n  async createPersonalInformation(info: InsertPersonalInformation): Promise<PersonalInformation> {\n    const id = this.personalInformationIdCounter++;\n    const now = new Date();\n    const personalInfo: PersonalInformation = { \n      ...info, \n      id,\n      isComplete: true,\n      createdAt: now,\n      updatedAt: now\n    };\n    this.personalInformations.set(id, personalInfo);\n    return personalInfo;\n  }\n  \n  async updatePersonalInformation(userId: number, info: Partial<PersonalInformation>): Promise<PersonalInformation | undefined> {\n    const existingInfo = await this.getPersonalInformationByUserId(userId);\n    if (!existingInfo) return undefined;\n    \n    const updatedInfo = { \n      ...existingInfo, \n      ...info, \n      updatedAt: new Date() \n    };\n    this.personalInformations.set(existingInfo.id, updatedInfo);\n    return updatedInfo;\n  }\n  \n  // Project operations\n  async getProject(id: number): Promise<Project | undefined> {\n    return this.projects.get(id);\n  }\n  \n  async getProjects(): Promise<Project[]> {\n    return Array.from(this.projects.values());\n  }\n  \n  async getProjectsByUserId(userId: number): Promise<Project[]> {\n    return Array.from(this.projects.values()).filter(\n      (project) => project.userId === userId,\n    );\n  }\n  \n  async createProject(project: InsertProject): Promise<Project> {\n    const id = this.projectIdCounter++;\n    const now = new Date();\n    const newProject: Project = { \n      ...project, \n      id, \n      status: \"open\", \n      highlightStatus: undefined,\n      createdAt: now \n    };\n    this.projects.set(id, newProject);\n    return newProject;\n  }\n  \n  async updateProject(id: number, updates: Partial<Project>): Promise<Project | undefined> {\n    const project = this.projects.get(id);\n    if (!project) return undefined;\n    \n    const updatedProject = { ...project, ...updates };\n    this.projects.set(id, updatedProject);\n    return updatedProject;\n  }\n\n  \n  // Message operations\n  async getMessage(id: number): Promise<Message | undefined> {\n    return this.messages.get(id);\n  }\n  \n  async getMessages(userId: number): Promise<Message[]> {\n    return Array.from(this.messages.values()).filter(\n      (message) => message.toUserId === userId || message.fromUserId === userId,\n    );\n  }\n  \n  async getConversation(user1Id: number, user2Id: number, projectId?: number): Promise<Message[]> {\n    return Array.from(this.messages.values())\n      .filter(message => {\n        const usersMatch = (\n          (message.fromUserId === user1Id && message.toUserId === user2Id) ||\n          (message.fromUserId === user2Id && message.toUserId === user1Id)\n        );\n        \n        if (projectId) {\n          return usersMatch && message.projectId === projectId;\n        }\n        \n        return usersMatch;\n      })\n      .sort((a, b) => a.createdAt.getTime() - b.createdAt.getTime());\n  }\n  \n  async createMessage(message: InsertMessage): Promise<Message> {\n    const id = this.messageIdCounter++;\n    const now = new Date();\n    const newMessage: Message = { ...message, id, read: false, createdAt: now };\n    this.messages.set(id, newMessage);\n    return newMessage;\n  }\n  \n  async markMessageAsRead(id: number): Promise<Message | undefined> {\n    const message = this.messages.get(id);\n    if (!message) return undefined;\n    \n    const updatedMessage = { ...message, read: true };\n    this.messages.set(id, updatedMessage);\n    return updatedMessage;\n  }\n  \n  async markAllMessagesAsRead(fromUserId: number, toUserId: number): Promise<number> {\n    // تحديث جميع الرسائل غير المقروءة من مرسل معين إلى مستقبل معين\n    let updatedCount = 0;\n    \n    // الحصول على جميع الرسائل من المرسل إلى المستقبل\n    const messagesToUpdate = Array.from(this.messages.values())\n      .filter(message => message.fromUserId === fromUserId && message.toUserId === toUserId && !message.read);\n    \n    // تحديث كل رسالة\n    for (const message of messagesToUpdate) {\n      const updatedMessage = { ...message, read: true };\n      this.messages.set(message.id, updatedMessage);\n      updatedCount++;\n    }\n    \n    return updatedCount;\n  }\n  \n  async updateMessageDeliveryStatus(id: number, status: 'pending' | 'delivered' | 'failed'): Promise<Message | undefined> {\n    const message = this.messages.get(id);\n    if (!message) return undefined;\n    \n    // إضافة حالة التسليم كخاصية إضافية\n    const updatedMessage = { \n      ...message, \n      deliveryStatus: status,\n      updatedAt: new Date() \n    };\n    \n    this.messages.set(id, updatedMessage);\n    return updatedMessage;\n  }\n  \n  // Testimonial operations\n  async getTestimonial(id: number): Promise<Testimonial | undefined> {\n    return this.testimonials.get(id);\n  }\n  \n  async getTestimonials(): Promise<Testimonial[]> {\n    return Array.from(this.testimonials.values());\n  }\n  \n  async createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial> {\n    const id = this.testimonialIdCounter++;\n    const now = new Date();\n    const newTestimonial: Testimonial = { ...testimonial, id, createdAt: now };\n    this.testimonials.set(id, newTestimonial);\n    return newTestimonial;\n  }\n  \n  // Project Offer operations\n  async getProjectOffer(id: number): Promise<ProjectOffer | undefined> {\n    return this.projectOffers.get(id);\n  }\n  \n  async getProjectOffersByProjectId(projectId: number): Promise<ProjectOffer[]> {\n    return Array.from(this.projectOffers.values()).filter(\n      (offer) => offer.projectId === projectId\n    );\n  }\n  \n  async getProjectOffersByCompanyId(companyId: number): Promise<ProjectOffer[]> {\n    return Array.from(this.projectOffers.values()).filter(\n      (offer) => offer.companyId === companyId\n    );\n  }\n  \n  async getAllProjectOffers(): Promise<ProjectOffer[]> {\n    return Array.from(this.projectOffers.values());\n  }\n  \n  async createProjectOffer(offer: InsertProjectOffer): Promise<ProjectOffer> {\n    const id = this.projectOfferIdCounter++;\n    const now = new Date();\n    const newOffer: ProjectOffer = { \n      ...offer, \n      id, \n      status: 'pending',\n      depositPaid: false,\n      depositAmount: null,\n      depositDate: null,\n      contactRevealed: false,\n      createdAt: now \n    };\n    this.projectOffers.set(id, newOffer);\n    return newOffer;\n  }\n  \n  async updateProjectOfferStatus(id: number, status: string): Promise<ProjectOffer | undefined> {\n    const offer = this.projectOffers.get(id);\n    if (!offer) return undefined;\n    \n    const updatedOffer = { ...offer, status };\n    this.projectOffers.set(id, updatedOffer);\n    return updatedOffer;\n  }\n  \n  async setProjectOfferDepositPaid(id: number, depositAmount: string): Promise<ProjectOffer | undefined> {\n    const offer = this.projectOffers.get(id);\n    if (!offer) return undefined;\n    \n    console.log(`تحديث معلومات دفع العربون للعرض رقم ${id}، المبلغ: ${depositAmount}`);\n    \n    const updatedOffer = { \n      ...offer, \n      depositPaid: true,\n      depositAmount,\n      depositDate: new Date()\n    };\n    this.projectOffers.set(id, updatedOffer);\n    \n    console.log(`تم تحديث حالة دفع العربون للعرض رقم ${id}، الحالة الجديدة:`, updatedOffer.depositPaid);\n    \n    // تخزين حالة الدفع في ذاكرة المتصفح عبر localStorage\n    const companyId = updatedOffer.companyId;\n    console.log(`حفظ معلومات شركة ${companyId} في قائمة الشركات المكشوفة`);\n    \n    return updatedOffer;\n  }\n  \n  async setProjectOfferContactRevealed(id: number): Promise<ProjectOffer | undefined> {\n    const offer = this.projectOffers.get(id);\n    if (!offer) return undefined;\n    \n    console.log(`كشف معلومات التواصل للعرض رقم ${id}`);\n    \n    const updatedOffer = { ...offer, contactRevealed: true };\n    this.projectOffers.set(id, updatedOffer);\n    \n    console.log(`تم تحديث حالة كشف معلومات التواصل للعرض رقم ${id}، الحالة الجديدة:`, updatedOffer.contactRevealed);\n    \n    return updatedOffer;\n  }\n  \n  // Site Settings operations\n  async getSiteSetting(key: string): Promise<SiteSetting | undefined> {\n    return Array.from(this.siteSettings.values()).find(\n      (setting) => setting.key === key\n    );\n  }\n  \n  async setSiteSetting(key: string, value: string): Promise<SiteSetting> {\n    const now = new Date();\n    \n    // البحث عن الإعداد الموجود بناءً على المفتاح\n    let existingId: string | null = null;\n    for (const [id, setting] of this.siteSettings.entries()) {\n      if (setting.key === key) {\n        existingId = id;\n        break;\n      }\n    }\n    \n    if (existingId) {\n      // تحديث الإعداد الموجود\n      const existingSetting = this.siteSettings.get(existingId)!;\n      const updatedSetting: SiteSetting = { \n        ...existingSetting, \n        value, \n        updatedAt: now \n      };\n      this.siteSettings.set(existingId, updatedSetting);\n      console.log(`setSiteSetting: تم تحديث ${key} = ${value}`);\n      return updatedSetting;\n    } else {\n      // إنشاء إعداد جديد\n      const id = this.siteSettingsIdCounter++;\n      const newSetting: SiteSetting = { \n        id, \n        key, \n        value, \n        updatedAt: now \n      };\n      this.siteSettings.set(id.toString(), newSetting);\n      console.log(`setSiteSetting: تم إنشاء ${key} = ${value} مع معرف ${id}`);\n      return newSetting;\n    }\n  }\n  \n  async getAllSiteSettings(): Promise<SiteSetting[]> {\n    const settings = Array.from(this.siteSettings.values());\n    console.log(`getAllSiteSettings: إرجاع ${settings.length} إعدادات`);\n    return settings;\n  }\n\n  // إضافة إعدادات افتراضية للموقع\n  private seedDefaultSiteSettings() {\n    console.log('تحميل الإعدادات الافتراضية للموقع...');\n    const defaultSettings = [\n      { key: 'contact_email', value: 'info@linktech.sa' },\n      { key: 'contact_phone', value: '+966501234567' },\n      { key: 'contact_address', value: 'الرياض، المملكة العربية السعودية' },\n      { key: 'contact_whatsapp', value: '+966501234567' },\n      { key: 'business_hours', value: 'الأحد - الخميس: 9:00 صباحاً - 5:00 مساءً' }\n    ];\n\n    defaultSettings.forEach(setting => {\n      const id = this.siteSettingsIdCounter++;\n      const siteSetting: SiteSetting = {\n        id,\n        key: setting.key,\n        value: setting.value,\n        updatedAt: new Date()\n      };\n      this.siteSettings.set(id.toString(), siteSetting);\n      console.log(`تم إضافة إعداد: ${setting.key} = ${setting.value}`);\n    });\n    console.log(`تم تحميل ${this.siteSettings.size} إعدادات افتراضية`);\n  }\n  \n  // Newsletter Subscriber operations\n  async getNewsletterSubscriberByEmail(email: string): Promise<NewsletterSubscriber | undefined> {\n    return Array.from(this.newsletterSubscribers.values()).find(\n      (subscriber) => subscriber.email === email\n    );\n  }\n  \n  async createNewsletterSubscriber(subscriber: InsertNewsletterSubscriber): Promise<NewsletterSubscriber> {\n    const id = this.newsletterSubscriberIdCounter++;\n    const now = new Date();\n    const newSubscriber: NewsletterSubscriber = { \n      ...subscriber, \n      id, \n      createdAt: now \n    };\n    this.newsletterSubscribers.set(id, newSubscriber);\n    return newSubscriber;\n  }\n  \n  async getNewsletterSubscribers(): Promise<NewsletterSubscriber[]> {\n    return Array.from(this.newsletterSubscribers.values());\n  }\n  \n  async updateNewsletterSubscriber(id: number, updates: Partial<NewsletterSubscriber>): Promise<NewsletterSubscriber | undefined> {\n    const subscriber = this.newsletterSubscribers.get(id);\n    if (!subscriber) return undefined;\n    \n    const updatedSubscriber = { ...subscriber, ...updates };\n    this.newsletterSubscribers.set(id, updatedSubscriber);\n    return updatedSubscriber;\n  }\n  \n  // NDA Agreement operations\n  async getNdaAgreement(id: number): Promise<NdaAgreement | undefined> {\n    return this.ndaAgreements.get(id);\n  }\n  \n  async getNdaAgreementByProjectId(projectId: number): Promise<NdaAgreement | undefined> {\n    return Array.from(this.ndaAgreements.values()).find(\n      (agreement) => agreement.projectId === projectId\n    );\n  }\n  \n  async createNdaAgreement(agreement: InsertNdaAgreement): Promise<NdaAgreement> {\n    const id = this.ndaAgreementIdCounter++;\n    const now = new Date();\n    const newAgreement: NdaAgreement = {\n      ...agreement,\n      id,\n      createdAt: now,\n      status: 'pending',\n      signedAt: null,\n      pdfUrl: null,\n      sadiqEnvelopeId: null,\n      sadiqReferenceNumber: null,\n      sadiqDocumentId: null,\n      envelopeStatus: null\n    };\n    this.ndaAgreements.set(id, newAgreement);\n    \n    // If this NDA is linked to a project, update the project's ndaId\n    if (agreement.projectId) {\n      const project = this.projects.get(agreement.projectId);\n      if (project) {\n        const updatedProject = { ...project, ndaId: id, requiresNda: true };\n        this.projects.set(agreement.projectId, updatedProject);\n      }\n    }\n    \n    return newAgreement;\n  }\n\n  async updateNdaAgreement(id: number, updates: Partial<NdaAgreement>): Promise<NdaAgreement | undefined> {\n    const agreement = this.ndaAgreements.get(id);\n    if (!agreement) return undefined;\n    \n    const updatedAgreement = { ...agreement, ...updates };\n    this.ndaAgreements.set(id, updatedAgreement);\n    return updatedAgreement;\n  }\n  \n  async updateNdaAgreementStatus(id: number, status: string): Promise<NdaAgreement | undefined> {\n    const agreement = this.ndaAgreements.get(id);\n    if (!agreement) return undefined;\n    \n    const updatedAgreement = { ...agreement, status };\n    this.ndaAgreements.set(id, updatedAgreement);\n    return updatedAgreement;\n  }\n\n  // New methods for two-stage NDA workflow\n  async getNdaByProjectAndCompany(projectId: number, companyUserId: number): Promise<NdaAgreement | undefined> {\n    return Array.from(this.ndaAgreements.values()).find(\n      (nda) => nda.projectId === projectId && \n        (nda.companySignatureInfo as any)?.companyUserId === companyUserId\n    );\n  }\n\n  async getNda(id: number): Promise<NdaAgreement | undefined> {\n    return this.ndaAgreements.get(id);\n  }\n\n  async createNda(ndaData: Partial<NdaAgreement>): Promise<NdaAgreement> {\n    const id = this.ndaAgreementIdCounter++;\n    const now = new Date();\n    const newNda: NdaAgreement = {\n      id,\n      projectId: ndaData.projectId!,\n      status: ndaData.status || 'awaiting_entrepreneur',\n      companySignatureInfo: ndaData.companySignatureInfo || null,\n      entrepreneurInfo: ndaData.entrepreneurInfo || null,\n      createdAt: now,\n      signedAt: null,\n      expiresAt: null,\n      pdfUrl: null,\n      sadiqEnvelopeId: null,\n      sadiqReferenceNumber: null,\n      sadiqDocumentId: null,\n      envelopeStatus: null,\n      ...ndaData\n    };\n    this.ndaAgreements.set(id, newNda);\n    return newNda;\n  }\n\n  async updateNda(id: number, updates: Partial<NdaAgreement>): Promise<NdaAgreement | undefined> {\n    const nda = this.ndaAgreements.get(id);\n    if (!nda) return undefined;\n    \n    const updatedNda = { ...nda, ...updates };\n    this.ndaAgreements.set(id, updatedNda);\n    return updatedNda;\n  }\n\n  // Notification methods\n  async createNotification(notification: InsertNotification): Promise<Notification> {\n    const id = this.notificationIdCounter++;\n    const now = new Date();\n    const newNotification: Notification = {\n      ...notification,\n      id,\n      isRead: false,\n      createdAt: now,\n    };\n    this.notifications.set(id, newNotification);\n    return newNotification;\n  }\n\n  async getNotificationsByUserId(userId: number): Promise<Notification[]> {\n    return Array.from(this.notifications.values())\n      .filter(notification => notification.userId === userId)\n      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  }\n\n  async markNotificationAsRead(id: number): Promise<Notification | undefined> {\n    const notification = this.notifications.get(id);\n    if (!notification) return undefined;\n    \n    const updatedNotification = { ...notification, isRead: true };\n    this.notifications.set(id, updatedNotification);\n    return updatedNotification;\n  }\n\n  async markAllNotificationsAsRead(userId: number): Promise<void> {\n    for (const [id, notification] of this.notifications.entries()) {\n      if (notification.userId === userId && !notification.isRead) {\n        const updatedNotification = { ...notification, isRead: true };\n        this.notifications.set(parseInt(id), updatedNotification);\n      }\n    }\n  }\n  \n  async signNdaAgreement(id: number, signatureInfo: any): Promise<NdaAgreement | undefined> {\n    const agreement = this.ndaAgreements.get(id);\n    if (!agreement) return undefined;\n    \n    const now = new Date();\n    const updatedAgreement = { \n      ...agreement, \n      status: 'signed',\n      signedAt: now,\n      companySignatureInfo: signatureInfo\n    };\n    this.ndaAgreements.set(id, updatedAgreement);\n    return updatedAgreement;\n  }\n  \n  async getNdaAgreements(): Promise<NdaAgreement[]> {\n    return Array.from(this.ndaAgreements.values());\n  }\n  \n  async setNdaPdfUrl(id: number, pdfUrl: string): Promise<NdaAgreement | undefined> {\n    const agreement = this.ndaAgreements.get(id);\n    if (!agreement) return undefined;\n    \n    const updatedAgreement = { ...agreement, pdfUrl };\n    this.ndaAgreements.set(id, updatedAgreement);\n    return updatedAgreement;\n  }\n  \n  // وظائف عملاء التميز\n  async getPremiumClients(): Promise<PremiumClient[]> {\n    return Array.from(this.premiumClients.values());\n  }\n  \n  async getPremiumClientById(id: number): Promise<PremiumClient | undefined> {\n    return this.premiumClients.get(id);\n  }\n  \n  async getPremiumClientsByCategory(category: string): Promise<PremiumClient[]> {\n    return Array.from(this.premiumClients.values()).filter(\n      (client) => client.category === category\n    );\n  }\n  \n  async getActivePremiumClients(): Promise<PremiumClient[]> {\n    return Array.from(this.premiumClients.values()).filter(\n      (client) => client.active === true\n    );\n  }\n  \n  async getFeaturedPremiumClients(): Promise<PremiumClient[]> {\n    return Array.from(this.premiumClients.values()).filter(\n      (client) => client.featured === true && client.active === true\n    );\n  }\n  \n  async createPremiumClient(client: InsertPremiumClient): Promise<PremiumClient> {\n    const id = this.premiumClientIdCounter++;\n    const now = new Date();\n    const premiumClient: PremiumClient = { \n      ...client, \n      id, \n      createdAt: now, \n      updatedAt: now\n    };\n    this.premiumClients.set(id, premiumClient);\n    return premiumClient;\n  }\n  \n  async updatePremiumClient(id: number, updates: Partial<InsertPremiumClient>): Promise<PremiumClient | undefined> {\n    const client = this.premiumClients.get(id);\n    if (!client) return undefined;\n    \n    const updatedClient = { \n      ...client, \n      ...updates, \n      updatedAt: new Date() \n    };\n    this.premiumClients.set(id, updatedClient);\n    return updatedClient;\n  }\n  \n  async deletePremiumClient(id: number): Promise<boolean> {\n    return this.premiumClients.delete(id);\n  }\n  \n  // Seed initial data\n  private seedData() {\n    // إضافة بعض عملاء التميز للاختبار\n    const client1: PremiumClient = {\n      id: this.premiumClientIdCounter++,\n      name: \"شركة المستقبل\",\n      description: \"شركة رائدة في مجال تطوير التطبيقات والحلول التقنية المبتكرة\",\n      logo: \"https://placehold.co/400x200/2563eb/ffffff?text=المستقبل\",\n      category: \"تكنولوجيا المعلومات\",\n      website: \"https://example.com\",\n      benefits: [\"تطوير تطبيقات متكاملة\", \"حلول ذكاء اصطناعي\", \"استشارات تقنية\"],\n      featured: true,\n      active: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.premiumClients.set(client1.id, client1);\n\n    const client2: PremiumClient = {\n      id: this.premiumClientIdCounter++,\n      name: \"مؤسسة الإبداع\",\n      description: \"مؤسسة متخصصة في دعم المشاريع الريادية وتطوير حلول الأعمال الرقمية\",\n      logo: \"https://placehold.co/400x200/059669/ffffff?text=الإبداع\",\n      category: \"ريادة الأعمال\",\n      website: \"https://example.org\",\n      benefits: [\"تمويل المشاريع الناشئة\", \"مساحات عمل مشتركة\", \"برامج تدريبية\"],\n      featured: true,\n      active: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.premiumClients.set(client2.id, client2);\n\n    const client3: PremiumClient = {\n      id: this.premiumClientIdCounter++,\n      name: \"شركة التقنية المتقدمة\",\n      description: \"شركة متخصصة في تطوير الحلول التقنية المتقدمة والبنية التحتية السحابية\",\n      logo: \"https://placehold.co/400x200/7c3aed/ffffff?text=التقنية\",\n      category: \"تكنولوجيا المعلومات\",\n      website: null,\n      benefits: [\"خدمات الحوسبة السحابية\", \"إدارة البنية التحتية\", \"حلول أمنية\"],\n      featured: false,\n      active: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.premiumClients.set(client3.id, client3);\n    \n    // إضافة مستخدم مسؤول (admin)\n    const adminUser: User = {\n      id: this.userIdCounter++,\n      username: \"admin\",\n      password: \"admin123\",\n      email: \"admin@linktech.app\",\n      role: \"admin\",\n      name: \"مسؤول النظام\",\n      avatar: \"https://randomuser.me/api/portraits/men/33.jpg\",\n      createdAt: new Date()\n    };\n    this.users.set(adminUser.id, adminUser);\n    \n    // Create some sample users\n    const user1: User = {\n      id: this.userIdCounter++,\n      username: \"ahmed_entrepreneur\",\n      password: \"password123\",\n      email: \"ahmed@example.com\",\n      role: \"entrepreneur\",\n      name: \"أحمد السيد\",\n      avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      createdAt: new Date()\n    };\n    this.users.set(user1.id, user1);\n    \n    const user2: User = {\n      id: this.userIdCounter++,\n      username: \"tech_solutions\",\n      password: \"password123\",\n      email: \"tech@example.com\",\n      role: \"company\",\n      name: \"تك سوليوشنز\",\n      avatar: \"https://randomuser.me/api/portraits/men/2.jpg\",\n      createdAt: new Date()\n    };\n    this.users.set(user2.id, user2);\n    \n    const user3: User = {\n      id: this.userIdCounter++,\n      username: \"digital_hub\",\n      password: \"password123\",\n      email: \"digital@example.com\",\n      role: \"company\",\n      name: \"ديجيتال هب\",\n      avatar: \"https://randomuser.me/api/portraits/women/3.jpg\",\n      createdAt: new Date()\n    };\n    this.users.set(user3.id, user3);\n    \n    const user4: User = {\n      id: this.userIdCounter++,\n      username: \"smart_code\",\n      password: \"password123\",\n      email: \"smart@example.com\",\n      role: \"company\",\n      name: \"سمارت كود\",\n      avatar: \"https://randomuser.me/api/portraits/men/4.jpg\",\n      createdAt: new Date()\n    };\n    this.users.set(user4.id, user4);\n    \n    const user5: User = {\n      id: this.userIdCounter++,\n      username: \"sara_entrepreneur\",\n      password: \"password123\",\n      email: \"sara@example.com\",\n      role: \"entrepreneur\",\n      name: \"سارة العمري\",\n      avatar: \"https://randomuser.me/api/portraits/women/5.jpg\",\n      createdAt: new Date()\n    };\n    this.users.set(user5.id, user5);\n    \n    // Create company profiles\n    const company1: CompanyProfile = {\n      id: this.companyProfileIdCounter++,\n      userId: user2.id,\n      description: \"متخصصون في تطوير تطبيقات الجوال والويب للشركات والمؤسسات، مع خبرة تزيد عن 8 سنوات في مجال البرمجة.\",\n      logo: \"https://randomuser.me/api/portraits/men/2.jpg\",\n      coverPhoto: \"https://images.unsplash.com/photo-1560179707-f14e90ef3623\",\n      website: \"https://techsolutions.example.com\",\n      location: \"الرياض، المملكة العربية السعودية\",\n      skills: [\"تطبيقات الويب\", \"تطبيقات الجوال\", \"الذكاء الاصطناعي\"],\n      rating: 4.7,\n      reviewCount: 48\n    };\n    this.companyProfiles.set(company1.id, company1);\n    \n    const company2: CompanyProfile = {\n      id: this.companyProfileIdCounter++,\n      userId: user3.id,\n      description: \"شركة رائدة في مجال التحول الرقمي وتطوير الحلول المتكاملة للشركات الناشئة والمؤسسات الكبيرة.\",\n      logo: \"https://randomuser.me/api/portraits/women/3.jpg\",\n      coverPhoto: \"https://images.unsplash.com/photo-1522071820081-009f0129c71c\",\n      website: \"https://digitalhub.example.com\",\n      location: \"جدة، المملكة العربية السعودية\",\n      skills: [\"التحول الرقمي\", \"تجارة إلكترونية\", \"برمجة خلفية\"],\n      rating: 4.9,\n      reviewCount: 62\n    };\n    this.companyProfiles.set(company2.id, company2);\n    \n    const company3: CompanyProfile = {\n      id: this.companyProfileIdCounter++,\n      userId: user4.id,\n      description: \"متخصصون في تطوير واجهات المستخدم وتجربة المستخدم، مع تركيز على تصميم تطبيقات سهلة الاستخدام.\",\n      logo: \"https://randomuser.me/api/portraits/men/4.jpg\",\n      coverPhoto: \"https://images.unsplash.com/photo-1556761175-4b46a572b786\",\n      website: \"https://smartcode.example.com\",\n      location: \"الدمام، المملكة العربية السعودية\",\n      skills: [\"تصميم UI/UX\", \"تطوير واجهات\", \"مواقع تفاعلية\"],\n      rating: 4.1,\n      reviewCount: 27\n    };\n    this.companyProfiles.set(company3.id, company3);\n    \n    // Create projects\n    const project1: Project = {\n      id: this.projectIdCounter++,\n      title: \"تطبيق توصيل طلبات للمطاعم\",\n      description: \"نبحث عن شركة برمجة متخصصة لتطوير تطبيق جوّال لتوصيل الطعام من المطاعم المحلية، مع لوحة تحكم للمطاعم ونظام تتبع للسائقين.\",\n      budget: \"50,000 - 80,000 ريال\",\n      duration: \"3-6 أشهر\",\n      skills: [\"تطبيق جوال\", \"iOS\", \"Android\", \"لوحة تحكم\"],\n      userId: user1.id,\n      status: \"open\",\n      highlightStatus: \"عالي الطلب\",\n      createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000) // 5 days ago\n    };\n    this.projects.set(project1.id, project1);\n    \n    const project2: Project = {\n      id: this.projectIdCounter++,\n      title: \"منصة تعليمية تفاعلية\",\n      description: \"تطوير منصة تعليمية على الويب تدعم الدورات التفاعلية، والاختبارات، ومنتدى للطلاب. يجب أن تكون متوافقة مع الأجهزة المختلفة.\",\n      budget: \"70,000 - 120,000 ريال\",\n      duration: \"4-8 أشهر\",\n      skills: [\"تطوير ويب\", \"تصميم UI/UX\", \"React\", \"Node.js\"],\n      userId: user5.id,\n      status: \"open\",\n      highlightStatus: \"جديد\",\n      createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000) // 2 days ago\n    };\n    this.projects.set(project2.id, project2);\n    \n    const project3: Project = {\n      id: this.projectIdCounter++,\n      title: \"نظام إدارة عقارات\",\n      description: \"نظام متكامل لإدارة العقارات يشمل إدارة الممتلكات، والإيجارات، والصيانة، والفواتير، مع تطبيق جوال للمستأجرين والملاك.\",\n      budget: \"100,000 - 150,000 ريال\",\n      duration: \"6-10 أشهر\",\n      skills: [\"نظام إدارة\", \"تطبيق ويب\", \"تطبيق جوال\", \"API\"],\n      userId: user1.id,\n      status: \"open\",\n      highlightStatus: undefined,\n      createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000) // 10 days ago\n    };\n    this.projects.set(project3.id, project3);\n    \n    // Create testimonials\n    const testimonial1: Testimonial = {\n      id: this.testimonialIdCounter++,\n      userId: user1.id,\n      content: \"وجدت الشريك المثالي لتنفيذ مشروعي من خلال المنصة. تواصلت مع عدة شركات مميزة واخترت الأنسب. التطبيق الآن يعمل بكفاءة عالية ولدينا أكثر من 10,000 مستخدم نشط.\",\n      role: \"entrepreneur\",\n      companyName: undefined,\n      userTitle: \"مؤسس تطبيق \\\"طلباتي\\\"\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // 30 days ago\n    };\n    this.testimonials.set(testimonial1.id, testimonial1);\n    \n    const testimonial2: Testimonial = {\n      id: this.testimonialIdCounter++,\n      userId: user5.id,\n      content: \"المنصة ساعدتنا في الوصول لعملاء جدد وتنفيذ مشاريع متنوعة. نظام التواصل سهل وفعال، والدعم الفني ممتاز. حققنا نمواً بنسبة 40% في عدد المشاريع منذ انضمامنا للمنصة.\",\n      role: \"company\",\n      companyName: \"شركة ديجيتال هب\",\n      userTitle: \"مديرة تطوير الأعمال\",\n      rating: 4.5,\n      avatar: \"https://randomuser.me/api/portraits/women/5.jpg\",\n      createdAt: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000) // 45 days ago\n    };\n    this.testimonials.set(testimonial2.id, testimonial2);\n  }\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: number): Promise<User | undefined> {\n    const users = await db.query.users.findMany({\n      where: eq(schema.users.id, id),\n      limit: 1\n    });\n    return users.length > 0 ? users[0] : undefined;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const users = await db.query.users.findMany({\n      where: eq(schema.users.username, username),\n      limit: 1\n    });\n    return users.length > 0 ? users[0] : undefined;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const users = await db.query.users.findMany({\n      where: eq(schema.users.email, email),\n      limit: 1\n    });\n    return users.length > 0 ? users[0] : undefined;\n  }\n\n  async createUser(user: InsertUser): Promise<User> {\n    const [insertedUser] = await db.insert(schema.users)\n      .values(user)\n      .returning();\n    return insertedUser;\n  }\n\n  async getUsers(): Promise<User[]> {\n    return await db.query.users.findMany();\n  }\n  \n  async updateUserPassword(id: number, hashedPassword: string): Promise<User | undefined> {\n    const [updatedUser] = await db.update(schema.users)\n      .set({ password: hashedPassword })\n      .where(eq(schema.users.id, id))\n      .returning();\n    return updatedUser;\n  }\n\n  // Password reset operations\n  async createPasswordResetToken(email: string, token: string, expiresAt: Date): Promise<boolean> {\n    try {\n      const user = await this.getUserByEmail(email);\n      if (!user) {\n        return false;\n      }\n      \n      // First, delete any existing tokens for this user\n      await db.delete(passwordResetTokens)\n        .where(eq(passwordResetTokens.userId, user.id));\n      \n      // Then create the new token\n      await db.insert(passwordResetTokens).values({\n        userId: user.id,\n        email,\n        token,\n        expiresAt\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Error creating password reset token:', error);\n      return false;\n    }\n  }\n  \n  async getPasswordResetToken(token: string): Promise<{ userId: number, email: string, expiresAt: Date } | undefined> {\n    try {\n      const tokens = await db.select()\n        .from(passwordResetTokens)\n        .where(eq(passwordResetTokens.token, token));\n      \n      if (!tokens.length) {\n        return undefined;\n      }\n      \n      const tokenData = tokens[0];\n      \n      // Check if token has expired\n      if (tokenData.expiresAt < new Date()) {\n        // Token expired, delete it\n        await this.deletePasswordResetToken(token);\n        return undefined;\n      }\n      \n      return {\n        userId: tokenData.userId,\n        email: tokenData.email,\n        expiresAt: tokenData.expiresAt\n      };\n    } catch (error) {\n      console.error('Error getting password reset token:', error);\n      return undefined;\n    }\n  }\n  \n  async deletePasswordResetToken(token: string): Promise<boolean> {\n    try {\n      await db.delete(passwordResetTokens)\n        .where(eq(passwordResetTokens.token, token));\n      \n      return true;\n    } catch (error) {\n      console.error('Error deleting password reset token:', error);\n      return false;\n    }\n  }\n\n  // Company profile operations\n  async getCompanyProfile(id: number): Promise<CompanyProfile | undefined> {\n    const profiles = await db.query.companyProfiles.findMany({\n      where: eq(schema.companyProfiles.id, id),\n      limit: 1\n    });\n    return profiles.length > 0 ? profiles[0] : undefined;\n  }\n\n  async getCompanyProfileByUserId(userId: number): Promise<CompanyProfile | undefined> {\n    const profiles = await db.query.companyProfiles.findMany({\n      where: eq(schema.companyProfiles.userId, userId),\n      limit: 1\n    });\n    return profiles.length > 0 ? profiles[0] : undefined;\n  }\n\n  async createCompanyProfile(profile: InsertCompanyProfile): Promise<CompanyProfile> {\n    const [insertedProfile] = await db.insert(schema.companyProfiles)\n      .values({\n        ...profile,\n        rating: 0,\n        reviewCount: 0\n      })\n      .returning();\n    return insertedProfile;\n  }\n\n  async updateCompanyProfile(id: number, updates: Partial<CompanyProfile>): Promise<CompanyProfile | undefined> {\n    try {\n      console.log(`تحديث ملف الشركة في قاعدة البيانات - الهوية: ${id}`);\n      console.log('البيانات المراد تحديثها:', JSON.stringify(updates));\n      \n      // تحقق من وجود الملف قبل التحديث\n      const existingProfile = await this.getCompanyProfile(id);\n      if (!existingProfile) {\n        console.log(`خطأ: لم يتم العثور على ملف الشركة برقم ${id} في قاعدة البيانات`);\n        return undefined;\n      }\n      \n      console.log('بيانات الملف الحالي قبل التحديث:', JSON.stringify(existingProfile));\n      \n      // تنفيذ التحديث\n      const [updatedProfile] = await db.update(schema.companyProfiles)\n        .set(updates)\n        .where(eq(schema.companyProfiles.id, id))\n        .returning();\n      \n      if (!updatedProfile) {\n        console.log(`تحذير: لم يتم العثور على نتائج بعد تحديث الملف برقم ${id}`);\n        return undefined;\n      }\n      \n      console.log('نجاح تحديث ملف الشركة. البيانات المحدثة:', JSON.stringify(updatedProfile));\n      return updatedProfile;\n    } catch (error) {\n      console.error('خطأ في تحديث ملف الشركة في قاعدة البيانات:', error);\n      throw error;\n    }\n  }\n\n  async getCompanyProfiles(): Promise<CompanyProfile[]> {\n    return await db.query.companyProfiles.findMany();\n  }\n  \n  async getVerifiedCompanies(): Promise<CompanyProfile[]> {\n    return await db.query.companyProfiles.findMany({\n      where: eq(schema.companyProfiles.verified, true)\n    });\n  }\n\n  async verifyCompany(\n    id: number, \n    verified: boolean, \n    verificationData: {\n      verifiedBy?: number;\n      verificationNotes?: string;\n      verificationDocuments?: any;\n    } = {}\n  ): Promise<CompanyProfile | undefined> {\n    const updateData: any = { verified };\n    \n    if (verified) {\n      updateData.verificationDate = new Date();\n      if (verificationData.verifiedBy) updateData.verifiedBy = verificationData.verifiedBy;\n      if (verificationData.verificationNotes) updateData.verificationNotes = verificationData.verificationNotes;\n      if (verificationData.verificationDocuments) updateData.verificationDocuments = verificationData.verificationDocuments;\n    } else {\n      // إذا كان إلغاء التوثيق، نحتفظ بالمستندات ولكن نمسح البيانات الأخرى\n      updateData.verificationDate = null;\n      updateData.verifiedBy = null;\n      updateData.verificationNotes = null;\n    }\n    \n    const [updatedProfile] = await db.update(schema.companyProfiles)\n      .set(updateData)\n      .where(eq(schema.companyProfiles.id, id))\n      .returning();\n    return updatedProfile;\n  }\n\n  // Personal information operations\n  async getPersonalInformationByUserId(userId: number): Promise<PersonalInformation | undefined> {\n    const personalInfos = await db.query.personalInformation.findMany({\n      where: eq(personalInformation.userId, userId),\n      limit: 1\n    });\n    return personalInfos.length > 0 ? personalInfos[0] : undefined;\n  }\n\n  async createPersonalInformation(info: InsertPersonalInformation): Promise<PersonalInformation> {\n    const [insertedInfo] = await db.insert(personalInformation)\n      .values(info)\n      .returning();\n    return insertedInfo;\n  }\n\n  async updatePersonalInformation(userId: number, info: Partial<PersonalInformation>): Promise<PersonalInformation | undefined> {\n    const [updatedInfo] = await db.update(personalInformation)\n      .set(info)\n      .where(eq(personalInformation.userId, userId))\n      .returning();\n    return updatedInfo;\n  }\n\n  // Project operations\n  async getProject(id: number): Promise<Project | undefined> {\n    const projects = await db.query.projects.findMany({\n      where: eq(schema.projects.id, id),\n      limit: 1\n    });\n    return projects.length > 0 ? projects[0] : undefined;\n  }\n\n  async getProjects(): Promise<Project[]> {\n    return await db.query.projects.findMany({\n      orderBy: [desc(schema.projects.createdAt)] // Newest projects first\n    });\n  }\n\n  async getProjectsWithUserData(): Promise<(Project & { username?: string; name?: string })[]> {\n    const projects = await db.query.projects.findMany({\n      orderBy: [desc(schema.projects.createdAt)],\n      with: {\n        user: {\n          columns: {\n            username: true,\n            name: true\n          }\n        }\n      }\n    });\n    \n    return projects.map(project => ({\n      ...project,\n      username: project.user?.username,\n      name: project.user?.name,\n      user: undefined // Remove nested user object\n    }));\n  }\n\n  async getProjectsByUserId(userId: number): Promise<Project[]> {\n    return await db.query.projects.findMany({\n      where: eq(schema.projects.userId, userId),\n      orderBy: [desc(schema.projects.createdAt)] // Newest projects first\n    });\n  }\n\n  async createProject(project: InsertProject): Promise<Project> {\n    const [insertedProject] = await db.insert(schema.projects)\n      .values({\n        ...project,\n        status: \"open\",\n      })\n      .returning();\n    return insertedProject;\n  }\n\n  async updateProject(id: number, updates: Partial<Project>): Promise<Project | undefined> {\n    const [updatedProject] = await db.update(schema.projects)\n      .set(updates)\n      .where(eq(schema.projects.id, id))\n      .returning();\n    return updatedProject;\n  }\n\n  async deleteProject(id: number): Promise<boolean> {\n    try {\n      // Check if project has any accepted or completed offers\n      const projectOffers = await db.query.projectOffers.findMany({\n        where: eq(schema.projectOffers.projectId, id)\n      });\n      \n      const hasActiveOffers = projectOffers.some(offer => \n        offer.status === 'accepted' || offer.status === 'completed'\n      );\n      \n      if (hasActiveOffers) {\n        return false; // Cannot delete project with active offers\n      }\n      \n      // Delete all pending offers first  \n      await db.delete(schema.projectOffers)\n        .where(and(\n          eq(schema.projectOffers.projectId, id),\n          eq(schema.projectOffers.status, 'pending')\n        ));\n      \n      // Delete the project\n      await db.delete(schema.projects)\n        .where(eq(schema.projects.id, id));\n      \n      return true;\n    } catch (error) {\n      console.error('Error deleting project:', error);\n      return false;\n    }\n  }\n\n  // Message operations\n  async getMessage(id: number): Promise<Message | undefined> {\n    const messages = await db.query.messages.findMany({\n      where: eq(schema.messages.id, id),\n      limit: 1\n    });\n    return messages.length > 0 ? messages[0] : undefined;\n  }\n\n  async getMessages(userId: number): Promise<Message[]> {\n    const messages = await db.query.messages.findMany({\n      where: or(\n        eq(schema.messages.fromUserId, userId),\n        eq(schema.messages.toUserId, userId)\n      ),\n      with: {\n        fromUser: true,\n        toUser: true,\n        project: true\n      },\n      orderBy: [desc(schema.messages.createdAt)]\n    });\n    \n    console.log(`استرجاع ${messages.length} رسالة للمستخدم ${userId}`);\n    return messages;\n  }\n\n  async getConversation(user1Id: number, user2Id: number, projectId?: number): Promise<Message[]> {\n    let whereClause;\n    if (projectId) {\n      whereClause = and(\n        or(\n          and(\n            eq(schema.messages.fromUserId, user1Id),\n            eq(schema.messages.toUserId, user2Id)\n          ),\n          and(\n            eq(schema.messages.fromUserId, user2Id),\n            eq(schema.messages.toUserId, user1Id)\n          )\n        ),\n        eq(schema.messages.projectId, projectId)\n      );\n    } else {\n      whereClause = or(\n        and(\n          eq(schema.messages.fromUserId, user1Id),\n          eq(schema.messages.toUserId, user2Id)\n        ),\n        and(\n          eq(schema.messages.fromUserId, user2Id),\n          eq(schema.messages.toUserId, user1Id)\n        )\n      );\n    }\n\n    const messages = await db.query.messages.findMany({\n      where: whereClause,\n      with: {\n        fromUser: true,\n        toUser: true,\n        project: true\n      },\n      orderBy: asc(schema.messages.createdAt)\n    });\n    \n    console.log(`استرجاع ${messages.length} رسالة في المحادثة بين ${user1Id} و ${user2Id}${projectId ? ` للمشروع ${projectId}` : ''}`);\n    return messages;\n  }\n\n  async createMessage(message: InsertMessage): Promise<Message> {\n    const [insertedMessage] = await db.insert(schema.messages)\n      .values({\n        ...message,\n        read: false\n      })\n      .returning();\n    \n    // إضافة معلومات المرسل والمستقبل\n    const messageWithDetails = await db.query.messages.findFirst({\n      where: eq(schema.messages.id, insertedMessage.id),\n      with: {\n        fromUser: true,\n        toUser: true,\n        project: true\n      }\n    });\n    \n    console.log(`تم إنشاء رسالة جديدة: ${insertedMessage.id}`);\n    return messageWithDetails || insertedMessage;\n  }\n\n  async markMessageAsRead(id: number): Promise<Message | undefined> {\n    const [updatedMessage] = await db.update(schema.messages)\n      .set({ read: true })\n      .where(eq(schema.messages.id, id))\n      .returning();\n    \n    if (updatedMessage) {\n      // إضافة معلومات المرسل والمستقبل\n      const messageWithDetails = await db.query.messages.findFirst({\n        where: eq(schema.messages.id, updatedMessage.id),\n        with: {\n          fromUser: true,\n          toUser: true,\n          project: true\n        }\n      });\n      \n      console.log(`تم تحديد الرسالة ${id} كمقروءة`);\n      return messageWithDetails || updatedMessage;\n    }\n    \n    return undefined;\n  }\n\n  // Testimonial operations\n  async getTestimonial(id: number): Promise<Testimonial | undefined> {\n    const testimonials = await db.query.testimonials.findMany({\n      where: eq(schema.testimonials.id, id),\n      limit: 1\n    });\n    return testimonials.length > 0 ? testimonials[0] : undefined;\n  }\n\n  async getTestimonials(): Promise<Testimonial[]> {\n    return await db.query.testimonials.findMany();\n  }\n\n  async createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial> {\n    const [insertedTestimonial] = await db.insert(schema.testimonials)\n      .values(testimonial)\n      .returning();\n    return insertedTestimonial;\n  }\n  \n  // Project Offer operations\n  async getProjectOffer(id: number): Promise<ProjectOffer | undefined> {\n    const offers = await db.query.projectOffers.findMany({\n      where: eq(schema.projectOffers.id, id),\n      limit: 1\n    });\n    return offers.length > 0 ? offers[0] : undefined;\n  }\n  \n  async getProjectOffersByProjectId(projectId: number): Promise<ProjectOffer[]> {\n    return await db.query.projectOffers.findMany({\n      where: eq(schema.projectOffers.projectId, projectId)\n    });\n  }\n  \n  async getProjectOffersByCompanyId(companyId: number): Promise<ProjectOffer[]> {\n    return await db.query.projectOffers.findMany({\n      where: eq(schema.projectOffers.companyId, companyId)\n    });\n  }\n  \n  async getAllProjectOffers(): Promise<ProjectOffer[]> {\n    return await db.query.projectOffers.findMany();\n  }\n  \n  async createProjectOffer(offer: InsertProjectOffer): Promise<ProjectOffer> {\n    const [insertedOffer] = await db.insert(schema.projectOffers)\n      .values({\n        ...offer,\n        status: 'pending',\n        depositPaid: false,\n        contactRevealed: false\n      })\n      .returning();\n    return insertedOffer;\n  }\n  \n  async updateProjectOfferStatus(id: number, status: string): Promise<ProjectOffer | undefined> {\n    const [updatedOffer] = await db.update(schema.projectOffers)\n      .set({ status })\n      .where(eq(schema.projectOffers.id, id))\n      .returning();\n    return updatedOffer;\n  }\n  \n  async setProjectOfferDepositPaid(id: number, depositAmount: string): Promise<ProjectOffer | undefined> {\n    const now = new Date();\n    const [updatedOffer] = await db.update(schema.projectOffers)\n      .set({ \n        depositPaid: true, \n        depositAmount,\n        depositDate: now\n      })\n      .where(eq(schema.projectOffers.id, id))\n      .returning();\n    return updatedOffer;\n  }\n  \n  async setProjectOfferContactRevealed(id: number): Promise<ProjectOffer | undefined> {\n    const [updatedOffer] = await db.update(schema.projectOffers)\n      .set({ contactRevealed: true })\n      .where(eq(schema.projectOffers.id, id))\n      .returning();\n    return updatedOffer;\n  }\n  \n  // Site Settings operations\n  async getSiteSetting(key: string): Promise<SiteSetting | undefined> {\n    const settings = await db.query.siteSettings.findMany({\n      where: eq(schema.siteSettings.key, key),\n      limit: 1\n    });\n    return settings.length > 0 ? settings[0] : undefined;\n  }\n\n  async setSiteSetting(key: string, value: string, category?: string, description?: string, updatedBy?: number): Promise<SiteSetting> {\n    const existingSetting = await this.getSiteSetting(key);\n\n    if (existingSetting) {\n      const [updatedSetting] = await db.update(schema.siteSettings)\n        .set({ \n          value, \n          updatedAt: new Date(),\n          ...(category && { category }),\n          ...(description && { description }),\n          ...(updatedBy && { updatedBy })\n        })\n        .where(eq(schema.siteSettings.key, key))\n        .returning();\n      return updatedSetting;\n    } else {\n      const [newSetting] = await db.insert(schema.siteSettings)\n        .values({ \n          key, \n          value,\n          category: category || 'general',\n          description: description || '',\n          updatedBy: updatedBy || 1\n        })\n        .returning();\n      return newSetting;\n    }\n  }\n\n  async getAllSiteSettings(): Promise<SiteSetting[]> {\n    return await db.query.siteSettings.findMany();\n  }\n  \n  // Newsletter Subscriber operations\n  async getNewsletterSubscriberByEmail(email: string): Promise<NewsletterSubscriber | undefined> {\n    const subscribers = await db.query.newsletterSubscribers.findMany({\n      where: eq(schema.newsletterSubscribers.email, email),\n      limit: 1\n    });\n    return subscribers.length > 0 ? subscribers[0] : undefined;\n  }\n  \n  async createNewsletterSubscriber(subscriber: InsertNewsletterSubscriber): Promise<NewsletterSubscriber> {\n    const [insertedSubscriber] = await db.insert(schema.newsletterSubscribers)\n      .values(subscriber)\n      .returning();\n    return insertedSubscriber;\n  }\n  \n  async getNewsletterSubscribers(): Promise<NewsletterSubscriber[]> {\n    return await db.query.newsletterSubscribers.findMany();\n  }\n  \n  async updateNewsletterSubscriber(id: number, updates: Partial<NewsletterSubscriber>): Promise<NewsletterSubscriber | undefined> {\n    const [updatedSubscriber] = await db.update(schema.newsletterSubscribers)\n      .set(updates)\n      .where(eq(schema.newsletterSubscribers.id, id))\n      .returning();\n    return updatedSubscriber;\n  }\n  \n  // NDA Agreement operations\n  async getNdaAgreement(id: number): Promise<NdaAgreement | undefined> {\n    const agreements = await db.query.ndaAgreements.findMany({\n      where: eq(schema.ndaAgreements.id, id),\n      limit: 1\n    });\n    return agreements.length > 0 ? agreements[0] : undefined;\n  }\n  \n  async getNdaAgreementByProjectId(projectId: number): Promise<NdaAgreement | undefined> {\n    const agreements = await db.query.ndaAgreements.findMany({\n      where: eq(schema.ndaAgreements.projectId, projectId),\n      limit: 1\n    });\n    return agreements.length > 0 ? agreements[0] : undefined;\n  }\n  \n  async createNdaAgreement(agreement: InsertNdaAgreement): Promise<NdaAgreement> {\n    // 1. Create the NDA record\n    const [newAgreement] = await db.insert(schema.ndaAgreements)\n      .values({\n        ...agreement,\n        status: 'pending',\n        signedAt: null,\n        pdfUrl: null\n      })\n      .returning();\n    \n    // 2. Update the project if needed to set ndaId and requiresNda\n    if (agreement.projectId) {\n      await db.update(schema.projects)\n        .set({\n          ndaId: newAgreement.id,\n          requiresNda: true\n        })\n        .where(eq(schema.projects.id, agreement.projectId));\n    }\n    \n    return newAgreement;\n  }\n\n  async updateNdaAgreement(id: number, updates: Partial<NdaAgreement>): Promise<NdaAgreement | undefined> {\n    const [updatedAgreement] = await db.update(schema.ndaAgreements)\n      .set(updates)\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedAgreement;\n  }\n  \n  async updateNdaAgreementStatus(id: number, status: string): Promise<NdaAgreement | undefined> {\n    const [updatedAgreement] = await db.update(schema.ndaAgreements)\n      .set({ status })\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedAgreement;\n  }\n  \n  async signNdaAgreement(id: number, signatureInfo: any): Promise<NdaAgreement | undefined> {\n    const now = new Date();\n    const [updatedAgreement] = await db.update(schema.ndaAgreements)\n      .set({\n        status: 'signed',\n        signedAt: now,\n        companySignatureInfo: signatureInfo\n      })\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedAgreement;\n  }\n  \n  async getNdaAgreements(): Promise<NdaAgreement[]> {\n    return await db.query.ndaAgreements.findMany();\n  }\n  \n  async setNdaPdfUrl(id: number, pdfUrl: string): Promise<NdaAgreement | undefined> {\n    const [updatedAgreement] = await db.update(schema.ndaAgreements)\n      .set({ pdfUrl })\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedAgreement;\n  }\n\n  // عمليات عملاء التميز\n  async getPremiumClients(): Promise<PremiumClient[]> {\n    return await db.query.premiumClients.findMany();\n  }\n  \n  async getPremiumClientById(id: number): Promise<PremiumClient | undefined> {\n    return await db.query.premiumClients.findFirst({\n      where: eq(schema.premiumClients.id, id)\n    });\n  }\n  \n  async getPremiumClientsByCategory(category: string): Promise<PremiumClient[]> {\n    return await db.query.premiumClients.findMany({\n      where: eq(schema.premiumClients.category, category)\n    });\n  }\n  \n  async getActivePremiumClients(): Promise<PremiumClient[]> {\n    return await db.query.premiumClients.findMany({\n      where: eq(schema.premiumClients.active, true)\n    });\n  }\n  \n  async getFeaturedPremiumClients(): Promise<PremiumClient[]> {\n    return await db.query.premiumClients.findMany({\n      where: and(\n        eq(schema.premiumClients.featured, true),\n        eq(schema.premiumClients.active, true)\n      )\n    });\n  }\n  \n  async createPremiumClient(client: InsertPremiumClient): Promise<PremiumClient> {\n    const [newClient] = await db.insert(schema.premiumClients)\n      .values(client)\n      .returning();\n    return newClient;\n  }\n  \n  async updatePremiumClient(id: number, updates: Partial<InsertPremiumClient>): Promise<PremiumClient | undefined> {\n    const [updatedClient] = await db.update(schema.premiumClients)\n      .set(updates)\n      .where(eq(schema.premiumClients.id, id))\n      .returning();\n    return updatedClient;\n  }\n  \n  async deletePremiumClient(id: number): Promise<boolean> {\n    const result = await db.delete(schema.premiumClients)\n      .where(eq(schema.premiumClients.id, id));\n    return result.rowCount > 0;\n  }\n\n  // عمليات رسائل الاتصال\n  async getContactMessages(): Promise<ContactMessage[]> {\n    return await db.select().from(schema.contactMessages).orderBy(desc(schema.contactMessages.createdAt));\n  }\n\n  async getContactMessageById(id: number): Promise<ContactMessage | undefined> {\n    const [message] = await db.select().from(schema.contactMessages).where(eq(schema.contactMessages.id, id));\n    return message || undefined;\n  }\n\n  async createContactMessage(message: InsertContactMessage): Promise<ContactMessage> {\n    const [result] = await db.insert(schema.contactMessages).values(message).returning();\n    return result;\n  }\n\n  async updateContactMessageStatus(id: number, status: string): Promise<ContactMessage | undefined> {\n    const [result] = await db.update(schema.contactMessages)\n      .set({ status, updatedAt: new Date() })\n      .where(eq(schema.contactMessages.id, id))\n      .returning();\n    return result || undefined;\n  }\n\n  async addNoteToContactMessage(id: number, note: string): Promise<ContactMessage | undefined> {\n    const [result] = await db.update(schema.contactMessages)\n      .set({ notes: note, updatedAt: new Date() })\n      .where(eq(schema.contactMessages.id, id))\n      .returning();\n    return result || undefined;\n  }\n\n  async replyToContactMessage(id: number, replyMessage: string): Promise<ContactMessage | undefined> {\n    const [result] = await db.update(schema.contactMessages)\n      .set({ \n        replyMessage: replyMessage, \n        repliedAt: new Date(), \n        status: \"replied\",\n        updatedAt: new Date() \n      })\n      .where(eq(schema.contactMessages.id, id))\n      .returning();\n    return result || undefined;\n  }\n\n  async deleteContactMessage(id: number): Promise<boolean> {\n    const result = await db.delete(schema.contactMessages).where(eq(schema.contactMessages.id, id));\n    return result.rowCount ? result.rowCount > 0 : false;\n  }\n\n  // عمليات المدونة\n  async getBlogCategories() {\n    return await db.query.blogCategories.findMany();\n  }\n  \n  async getBlogCategory(id: number) {\n    const categories = await db.query.blogCategories.findMany({\n      where: eq(schema.blogCategories.id, id),\n      limit: 1\n    });\n    return categories.length > 0 ? categories[0] : undefined;\n  }\n  \n  async getBlogCategoryBySlug(slug: string) {\n    const categories = await db.query.blogCategories.findMany({\n      where: eq(schema.blogCategories.slug, slug),\n      limit: 1\n    });\n    return categories.length > 0 ? categories[0] : undefined;\n  }\n  \n  async createBlogCategory(category: any) {\n    const [newCategory] = await db.insert(schema.blogCategories)\n      .values({\n        ...category,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newCategory;\n  }\n  \n  async updateBlogCategory(id: number, category: any) {\n    const [updatedCategory] = await db.update(schema.blogCategories)\n      .set({\n        ...category,\n        updatedAt: new Date()\n      })\n      .where(eq(schema.blogCategories.id, id))\n      .returning();\n    return updatedCategory;\n  }\n  \n  async deleteBlogCategory(id: number): Promise<boolean> {\n    try {\n      await db.delete(schema.blogCategories)\n        .where(eq(schema.blogCategories.id, id));\n      return true;\n    } catch (error) {\n      console.error('Error deleting blog category:', error);\n      return false;\n    }\n  }\n  \n  async getBlogPosts(options?: { categoryId?: number, limit?: number, offset?: number }) {\n    let query = db.select().from(schema.blogPosts);\n    \n    if (options?.categoryId) {\n      query = query.where(eq(schema.blogPosts.categoryId, options.categoryId));\n    }\n    \n    query = query.orderBy(desc(schema.blogPosts.createdAt));\n    \n    if (options?.limit) {\n      query = query.limit(options.limit);\n    }\n    \n    if (options?.offset) {\n      query = query.offset(options.offset);\n    }\n    \n    return await query;\n  }\n  \n  async getPublishedBlogPosts() {\n    return await db.query.blogPosts.findMany({\n      where: and(\n        eq(schema.blogPosts.published, true),\n        eq(schema.blogPosts.status, \"published\")\n      )\n    });\n  }\n  \n  async getBlogPost(id: number) {\n    const posts = await db.query.blogPosts.findMany({\n      where: eq(schema.blogPosts.id, id),\n      limit: 1\n    });\n    return posts.length > 0 ? posts[0] : undefined;\n  }\n  \n  async getBlogPostBySlug(slug: string) {\n    const posts = await db.query.blogPosts.findMany({\n      where: eq(schema.blogPosts.slug, slug),\n      limit: 1\n    });\n    return posts.length > 0 ? posts[0] : undefined;\n  }\n  \n  async createBlogPost(post: any) {\n    const [newPost] = await db.insert(schema.blogPosts)\n      .values({\n        ...post,\n        publishedAt: post.status === 'published' ? new Date() : null,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newPost;\n  }\n  \n  async updateBlogPost(id: number, post: any) {\n    // If changing status to published and it wasn't published before, set publishedAt\n    let updateData = { ...post, updatedAt: new Date() };\n    \n    if (post.status === 'published' && post.published) {\n      const currentPost = await this.getBlogPost(id);\n      if (currentPost && (!currentPost.publishedAt || currentPost.status !== 'published')) {\n        updateData.publishedAt = new Date();\n      }\n    }\n    \n    const [updatedPost] = await db.update(schema.blogPosts)\n      .set(updateData)\n      .where(eq(schema.blogPosts.id, id))\n      .returning();\n    return updatedPost;\n  }\n  \n  async deleteBlogPost(id: number): Promise<boolean> {\n    try {\n      await db.delete(schema.blogPosts)\n        .where(eq(schema.blogPosts.id, id));\n      return true;\n    } catch (error) {\n      console.error('Error deleting blog post:', error);\n      return false;\n    }\n  }\n  \n  async incrementBlogPostViewCount(id: number): Promise<boolean> {\n    try {\n      await db.update(schema.blogPosts)\n        .set({ \n          views: sql`${schema.blogPosts.views} + 1`,\n          updatedAt: new Date()\n        })\n        .where(eq(schema.blogPosts.id, id));\n      return true;\n    } catch (error) {\n      console.error('Error incrementing blog post view count:', error);\n      return false;\n    }\n  }\n  \n  async getBlogCommentsByPost(postId: number) {\n    return await db.select()\n      .from(schema.blogComments)\n      .where(eq(schema.blogComments.postId, postId))\n      .orderBy(asc(schema.blogComments.createdAt));\n  }\n  \n  async getBlogComment(id: number) {\n    const comments = await db.select()\n      .from(schema.blogComments)\n      .where(eq(schema.blogComments.id, id))\n      .limit(1);\n    return comments.length > 0 ? comments[0] : undefined;\n  }\n  \n  async createBlogComment(comment: any) {\n    const [newComment] = await db.insert(schema.blogComments)\n      .values({\n        ...comment,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })\n      .returning();\n    return newComment;\n  }\n  \n  async updateBlogCommentStatus(id: number, status: string) {\n    const [updatedComment] = await db.update(schema.blogComments)\n      .set({ status, updatedAt: new Date() })\n      .where(eq(schema.blogComments.id, id))\n      .returning();\n    return updatedComment;\n  }\n\n\n  async getContactStats() {\n    try {\n      const stats = await db.select({\n        totalMessages: sql`COUNT(*)`,\n        newMessages: sql`COUNT(CASE WHEN status = 'new' THEN 1 END)`,\n        readMessages: sql`COUNT(CASE WHEN status = 'read' THEN 1 END)`, \n        repliedMessages: sql`COUNT(CASE WHEN status = 'replied' THEN 1 END)`,\n        thisWeek: sql`COUNT(CASE WHEN created_at >= NOW() - INTERVAL '7 days' THEN 1 END)`,\n        thisMonth: sql`COUNT(CASE WHEN created_at >= NOW() - INTERVAL '30 days' THEN 1 END)`\n      }).from(schema.contactMessages);\n\n      const result = stats[0];\n      \n      return {\n        totalMessages: Number(result.totalMessages) || 0,\n        newMessages: Number(result.newMessages) || 0,\n        readMessages: Number(result.readMessages) || 0,\n        repliedMessages: Number(result.repliedMessages) || 0,\n        thisWeek: Number(result.thisWeek) || 0,\n        thisMonth: Number(result.thisMonth) || 0,\n        responseRate: Number(result.totalMessages) > 0 \n          ? Math.round((Number(result.repliedMessages) / Number(result.totalMessages)) * 100)\n          : 0\n      };\n    } catch (error) {\n      console.error('Error getting contact stats:', error);\n      return {\n        totalMessages: 0,\n        newMessages: 0,\n        readMessages: 0,\n        repliedMessages: 0,\n        thisWeek: 0,\n        thisMonth: 0,\n        responseRate: 0\n      };\n    }\n  }\n  \n  async deleteBlogComment(id: number): Promise<boolean> {\n    try {\n      await db.delete(schema.blogComments)\n        .where(eq(schema.blogComments.id, id));\n      return true;\n    } catch (error) {\n      console.error('Error deleting blog comment:', error);\n      return false;\n    }\n  }\n  \n  // أساليب وظيفية مطلوبة\n  async markAllMessagesAsRead(fromUserId: number, toUserId: number): Promise<number> {\n    const result = await db.update(schema.messages)\n      .set({ read: true })\n      .where(and(\n        eq(schema.messages.fromUserId, fromUserId),\n        eq(schema.messages.toUserId, toUserId),\n        eq(schema.messages.read, false)\n      ));\n    return result.rowCount || 0;\n  }\n  \n  async updateMessageDeliveryStatus(id: number, status: 'pending' | 'delivered' | 'failed'): Promise<Message | undefined> {\n    // تحديث حالة توصيل الرسالة في قاعدة البيانات\n    // هذه دالة وهمية لأن schema.messages لا يحتوي على حقل deliveryStatus\n    // في تطبيق حقيقي، سنضيف هذا الحقل إلى نموذج الرسائل\n    return await this.getMessage(id);\n  }\n\n  // دوال مساعد الذكاء الاصطناعي\n  async createAiProjectAnalysis(analysis: schema.InsertAiProjectAnalysis): Promise<schema.AiProjectAnalysis> {\n    const [newAnalysis] = await db.insert(schema.aiProjectAnalysis)\n      .values(analysis)\n      .returning();\n    return newAnalysis;\n  }\n\n  async getAiProjectAnalysis(id: number): Promise<schema.AiProjectAnalysis | undefined> {\n    const analysis = await db.select()\n      .from(schema.aiProjectAnalysis)\n      .where(eq(schema.aiProjectAnalysis.id, id))\n      .limit(1);\n    return analysis[0];\n  }\n\n  async getUserAiAnalyses(userId: number): Promise<schema.AiProjectAnalysis[]> {\n    return await db.select()\n      .from(schema.aiProjectAnalysis)\n      .where(eq(schema.aiProjectAnalysis.userId, userId))\n      .orderBy(desc(schema.aiProjectAnalysis.createdAt));\n  }\n\n  async createAnalysisRating(rating: schema.InsertAnalysisRating): Promise<schema.AnalysisRating> {\n    const [newRating] = await db.insert(schema.analysisRatings)\n      .values(rating)\n      .returning();\n    return newRating;\n  }\n\n  async getAnalysisRatings(analysisId: number): Promise<schema.AnalysisRating[]> {\n    return await db.select()\n      .from(schema.analysisRatings)\n      .where(eq(schema.analysisRatings.analysisId, analysisId))\n      .orderBy(desc(schema.analysisRatings.createdAt));\n  }\n\n  // Site settings methods\n  async getAllSiteSettings(): Promise<SiteSetting[]> {\n    return await db.select().from(siteSettings);\n  }\n\n  async getSiteSettingsByCategory(category: string): Promise<SiteSetting[]> {\n    return await db.select().from(siteSettings).where(eq(siteSettings.category, category));\n  }\n\n  // Featured clients operations\n  async getFeaturedClients(): Promise<FeaturedClient[]> {\n    return await db.select().from(featuredClients).orderBy(asc(featuredClients.order));\n  }\n\n  async getActiveFeaturedClients(): Promise<FeaturedClient[]> {\n    return await db.select()\n      .from(featuredClients)\n      .where(eq(featuredClients.active, true))\n      .orderBy(asc(featuredClients.order));\n  }\n\n  async getFeaturedClient(id: number): Promise<FeaturedClient | undefined> {\n    const clients = await db.select()\n      .from(featuredClients)\n      .where(eq(featuredClients.id, id))\n      .limit(1);\n    return clients[0];\n  }\n\n  async createFeaturedClient(client: InsertFeaturedClient): Promise<FeaturedClient> {\n    const [newClient] = await db.insert(featuredClients)\n      .values(client)\n      .returning();\n    return newClient;\n  }\n\n  async updateFeaturedClient(id: number, updates: Partial<FeaturedClient>): Promise<FeaturedClient | undefined> {\n    const [updatedClient] = await db.update(featuredClients)\n      .set({ ...updates, updatedAt: new Date() })\n      .where(eq(featuredClients.id, id))\n      .returning();\n    return updatedClient;\n  }\n\n  async deleteFeaturedClient(id: number): Promise<boolean> {\n    try {\n      await db.delete(featuredClients)\n        .where(eq(featuredClients.id, id));\n      return true;\n    } catch (error) {\n      console.error('Error deleting featured client:', error);\n      return false;\n    }\n  }\n\n  // NDA Agreement operations for DatabaseStorage\n  async getNdaAgreement(id: number): Promise<NdaAgreement | undefined> {\n    const ndas = await db.select().from(schema.ndaAgreements)\n      .where(eq(schema.ndaAgreements.id, id))\n      .limit(1);\n    return ndas[0];\n  }\n\n  async getNdaAgreementByProjectId(projectId: number): Promise<NdaAgreement | undefined> {\n    const ndas = await db.select().from(schema.ndaAgreements)\n      .where(eq(schema.ndaAgreements.projectId, projectId))\n      .limit(1);\n    return ndas[0];\n  }\n\n  async getNdaByProjectAndCompany(projectId: number, companyUserId: number): Promise<NdaAgreement | undefined> {\n    const ndas = await db.select().from(schema.ndaAgreements)\n      .where(eq(schema.ndaAgreements.projectId, projectId));\n    \n    // Since companySignatureInfo is JSON, we need to filter in application layer\n    return ndas.find(nda => {\n      const companyInfo = nda.companySignatureInfo as any;\n      return companyInfo?.companyUserId === companyUserId;\n    });\n  }\n\n  async createNdaAgreement(agreement: InsertNdaAgreement): Promise<NdaAgreement> {\n    const [newNda] = await db.insert(schema.ndaAgreements)\n      .values(agreement)\n      .returning();\n    return newNda;\n  }\n\n  async updateNdaAgreement(id: number, updates: Partial<NdaAgreement>): Promise<NdaAgreement | undefined> {\n    const [updatedNda] = await db.update(schema.ndaAgreements)\n      .set(updates)\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedNda;\n  }\n\n  async updateNdaAgreementStatus(id: number, status: string): Promise<NdaAgreement | undefined> {\n    const [updatedNda] = await db.update(schema.ndaAgreements)\n      .set({ status })\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedNda;\n  }\n\n  async signNdaAgreement(id: number, signatureInfo: any): Promise<NdaAgreement | undefined> {\n    const [updatedNda] = await db.update(schema.ndaAgreements)\n      .set({ \n        status: 'signed',\n        signedAt: new Date(),\n        companySignatureInfo: signatureInfo\n      })\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedNda;\n  }\n\n  async getNdaAgreements(): Promise<NdaAgreement[]> {\n    return await db.select().from(schema.ndaAgreements);\n  }\n\n  async setNdaPdfUrl(id: number, pdfUrl: string): Promise<NdaAgreement | undefined> {\n    const [updatedNda] = await db.update(schema.ndaAgreements)\n      .set({ pdfUrl })\n      .where(eq(schema.ndaAgreements.id, id))\n      .returning();\n    return updatedNda;\n  }\n\n  // For compatibility with two-stage workflow\n  async createNda(ndaData: Partial<NdaAgreement>): Promise<NdaAgreement> {\n    const [newNda] = await db.insert(schema.ndaAgreements)\n      .values({\n        projectId: ndaData.projectId!,\n        status: ndaData.status || 'awaiting_entrepreneur',\n        companySignatureInfo: ndaData.companySignatureInfo || null,\n        entrepreneurInfo: ndaData.entrepreneurInfo || null,\n        pdfUrl: null,\n        sadiqEnvelopeId: null,\n        sadiqReferenceNumber: null,\n        sadiqDocumentId: null,\n        envelopeStatus: null,\n        signedAt: null,\n        expiresAt: null,\n        ...ndaData\n      })\n      .returning();\n    return newNda;\n  }\n\n  async getNda(id: number): Promise<NdaAgreement | undefined> {\n    return await this.getNdaAgreement(id);\n  }\n\n  async updateNda(id: number, updates: Partial<NdaAgreement>): Promise<NdaAgreement | undefined> {\n    return await this.updateNdaAgreement(id, updates);\n  }\n\n  // Notification operations for DatabaseStorage\n  async createNotification(notification: InsertNotification): Promise<Notification> {\n    const [newNotification] = await db.insert(schema.notifications)\n      .values(notification)\n      .returning();\n    return newNotification;\n  }\n\n  async getNotificationsByUserId(userId: number): Promise<Notification[]> {\n    return await db.select().from(schema.notifications)\n      .where(eq(schema.notifications.userId, userId))\n      .orderBy(desc(schema.notifications.createdAt));\n  }\n\n  async markNotificationAsRead(id: number): Promise<Notification | undefined> {\n    const [updatedNotification] = await db.update(schema.notifications)\n      .set({ isRead: true })\n      .where(eq(schema.notifications.id, id))\n      .returning();\n    return updatedNotification;\n  }\n\n  async markAllNotificationsAsRead(userId: number): Promise<void> {\n    await db.update(schema.notifications)\n      .set({ isRead: true })\n      .where(and(\n        eq(schema.notifications.userId, userId),\n        eq(schema.notifications.isRead, false)\n      ));\n  }\n\n}\n\n// Change from MemStorage to DatabaseStorage\nexport const storage = new DatabaseStorage();\n","size_bytes":92348},"server/types.d.ts":{"content":"// إعلانات النماذج لتجنب أخطاء TypeScript\ndeclare module 'fs-extra';\ndeclare module 'arabic-reshaper';\ndeclare module 'bidi-js';","size_bytes":152},"server/users-test.ts":{"content":"import { storage } from './storage';\n\n// سكريبت اختبار للتحقق من أدوار المستخدمين في قاعدة البيانات\nasync function checkUsersRoles() {\n  try {\n    console.log('جاري التحقق من أدوار المستخدمين في قاعدة البيانات...');\n    \n    // الحصول على جميع المستخدمين\n    const users = await storage.getUsers();\n    console.log(`تم العثور على ${users.length} مستخدم في قاعدة البيانات`);\n    \n    // عرض معلومات المستخدمين\n    for (const user of users) {\n      console.log(`المستخدم #${user.id}: ${user.username} - الدور: ${user.role} - الاسم: ${user.name}`);\n    }\n    \n    // التحقق من المستخدمين بدور \"entrepreneur\"\n    const entrepreneurs = users.filter(user => user.role === 'entrepreneur');\n    console.log(`عدد رواد الأعمال: ${entrepreneurs.length}`);\n    \n    // التحقق من المستخدمين بدور \"company\"\n    const companies = users.filter(user => user.role === 'company');\n    console.log(`عدد الشركات: ${companies.length}`);\n    \n    // التحقق من المستخدمين بدور \"admin\"\n    const admins = users.filter(user => user.role === 'admin');\n    console.log(`عدد المسؤولين: ${admins.length}`);\n    \n    // التحقق من المشاريع\n    const projects = await storage.getProjects();\n    console.log(`عدد المشاريع الإجمالي: ${projects.length}`);\n    \n    // رؤية من أنشأ كل مشروع\n    for (const project of projects) {\n      const projectUser = await storage.getUser(project.userId);\n      console.log(`المشروع #${project.id}: \"${project.title}\" - أنشأه المستخدم: ${projectUser?.username} (${projectUser?.role})`);\n    }\n    \n    // فحص المشاريع المنشأة من قبل رواد الأعمال\n    let entrepreneurProjects = 0;\n    for (const project of projects) {\n      const projectUser = await storage.getUser(project.userId);\n      if (projectUser?.role === 'entrepreneur') {\n        entrepreneurProjects++;\n      }\n    }\n    console.log(`عدد المشاريع المنشأة من رواد الأعمال: ${entrepreneurProjects}`);\n    \n  } catch (error) {\n    console.error('حدث خطأ أثناء فحص المستخدمين:', error);\n  }\n}\n\n// تنفيذ الاختبار\ncheckUsersRoles();","size_bytes":2450},"server/visitTracking.ts":{"content":"import { Request } from 'express';\nimport { db } from './db';\nimport { visitStats, dailyStats } from '../shared/schema';\nimport { eq, sql, desc, and, gte } from 'drizzle-orm';\n\ninterface VisitData {\n  pageUrl: string;\n  pageTitle?: string;\n  userAgent?: string;\n  referrer?: string;\n  userId?: number;\n  sessionId?: string;\n}\n\n/**\n * تسجيل زيارة جديدة\n */\nexport async function trackVisit(req: Request, visitData: VisitData): Promise<void> {\n  try {\n    const today = new Date().toISOString().split('T')[0];\n    const userAgent = req.get('User-Agent') || visitData.userAgent || '';\n    const ipAddress = getClientIP(req);\n    \n    // استخراج معلومات المتصفح والجهاز\n    const deviceInfo = parseUserAgent(userAgent);\n    \n    // تسجيل الزيارة التفصيلية\n    await db.insert(visitStats).values({\n      date: today,\n      pageUrl: visitData.pageUrl,\n      pageTitle: visitData.pageTitle,\n      userAgent: userAgent,\n      ipAddress: ipAddress,\n      referrer: visitData.referrer || req.get('Referer'),\n      sessionId: visitData.sessionId,\n      userId: visitData.userId,\n      deviceType: deviceInfo.deviceType,\n      browserName: deviceInfo.browserName,\n      isUniqueVisitor: await isUniqueVisitor(ipAddress, visitData.sessionId),\n    });\n\n    // تحديث الإحصائيات اليومية\n    await updateDailyStats(today, visitData.pageUrl, deviceInfo);\n    \n  } catch (error) {\n    console.error('خطأ في تسجيل الزيارة:', error);\n  }\n}\n\n/**\n * الحصول على عنوان IP الحقيقي للعميل\n */\nfunction getClientIP(req: Request): string {\n  return (\n    (req.headers['x-forwarded-for'] as string)?.split(',')[0] ||\n    req.headers['x-real-ip'] as string ||\n    req.socket.remoteAddress ||\n    'unknown'\n  );\n}\n\n/**\n * تحليل User Agent لاستخراج معلومات المتصفح والجهاز\n */\nfunction parseUserAgent(userAgent: string): { deviceType: string; browserName: string } {\n  const ua = userAgent.toLowerCase();\n  \n  let deviceType = 'desktop';\n  if (ua.includes('mobile') || ua.includes('android') || ua.includes('iphone')) {\n    deviceType = 'mobile';\n  } else if (ua.includes('tablet') || ua.includes('ipad')) {\n    deviceType = 'tablet';\n  }\n  \n  let browserName = 'unknown';\n  if (ua.includes('chrome') && !ua.includes('edg')) {\n    browserName = 'Chrome';\n  } else if (ua.includes('firefox')) {\n    browserName = 'Firefox';\n  } else if (ua.includes('safari') && !ua.includes('chrome')) {\n    browserName = 'Safari';\n  } else if (ua.includes('edg')) {\n    browserName = 'Edge';\n  } else if (ua.includes('opera')) {\n    browserName = 'Opera';\n  }\n  \n  return { deviceType, browserName };\n}\n\n/**\n * التحقق من كون الزائر جديد أم لا\n */\nasync function isUniqueVisitor(ipAddress: string, sessionId?: string): Promise<boolean> {\n  try {\n    const today = new Date().toISOString().split('T')[0];\n    const existing = await db\n      .select()\n      .from(visitStats)\n      .where(\n        and(\n          eq(visitStats.date, today),\n          eq(visitStats.ipAddress, ipAddress)\n        )\n      )\n      .limit(1);\n    \n    return existing.length === 0;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * تحديث الإحصائيات اليومية المجمعة\n */\nasync function updateDailyStats(\n  date: string, \n  pageUrl: string, \n  deviceInfo: { deviceType: string; browserName: string }\n): Promise<void> {\n  try {\n    // البحث عن الإحصائية اليومية الموجودة\n    const existing = await db\n      .select()\n      .from(dailyStats)\n      .where(eq(dailyStats.date, date))\n      .limit(1);\n\n    if (existing.length > 0) {\n      // تحديث الإحصائية الموجودة\n      const current = existing[0];\n      \n      // تحديث إحصائيات الصفحات\n      const topPages = (current.topPages as any[]) || [];\n      const pageIndex = topPages.findIndex((p: any) => p.url === pageUrl);\n      if (pageIndex >= 0) {\n        topPages[pageIndex].views += 1;\n      } else {\n        topPages.push({ url: pageUrl, views: 1 });\n      }\n      topPages.sort((a: any, b: any) => b.views - a.views);\n      \n      // تحديث إحصائيات الأجهزة\n      const deviceStats = (current.deviceStats as any) || { desktop: 0, mobile: 0, tablet: 0 };\n      deviceStats[deviceInfo.deviceType] = (deviceStats[deviceInfo.deviceType] || 0) + 1;\n      \n      // تحديث إحصائيات المتصفحات\n      const browserStats = (current.browserStats as any) || {};\n      browserStats[deviceInfo.browserName] = (browserStats[deviceInfo.browserName] || 0) + 1;\n\n      await db\n        .update(dailyStats)\n        .set({\n          totalVisits: current.totalVisits + 1,\n          pageViews: current.pageViews + 1,\n          topPages: topPages.slice(0, 10),\n          deviceStats: deviceStats,\n          browserStats: browserStats,\n          updatedAt: new Date(),\n        })\n        .where(eq(dailyStats.date, date));\n    } else {\n      // إنشاء إحصائية يومية جديدة\n      await db.insert(dailyStats).values({\n        date: date,\n        totalVisits: 1,\n        pageViews: 1,\n        uniqueVisitors: 1,\n        topPages: [{ url: pageUrl, views: 1 }],\n        deviceStats: { [deviceInfo.deviceType]: 1 },\n        browserStats: { [deviceInfo.browserName]: 1 },\n      });\n    }\n  } catch (error) {\n    console.error('خطأ في تحديث الإحصائيات اليومية:', error);\n  }\n}\n\n/**\n * الحصول على إحصائيات الزيارات لفترة محددة\n */\nexport async function getVisitStats(days: number = 7): Promise<{\n  totalVisits: number;\n  uniqueVisitors: number;\n  pageViews: number;\n  avgTimeSpent: number;\n  topPages: Array<{ url: string; views: number }>;\n  deviceStats: Record<string, number>;\n  browserStats: Record<string, number>;\n  dailyStats: Array<{\n    date: string;\n    visits: number;\n    uniqueVisitors: number;\n  }>;\n}> {\n  try {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n    const startDateStr = startDate.toISOString().split('T')[0];\n\n    // الحصول على الإحصائيات اليومية\n    const dailyData = await db\n      .select()\n      .from(dailyStats)\n      .where(gte(dailyStats.date, startDateStr))\n      .orderBy(desc(dailyStats.date));\n\n    // حساب الإجماليات\n    const totals = dailyData.reduce(\n      (acc, day) => ({\n        totalVisits: acc.totalVisits + (day.totalVisits || 0),\n        uniqueVisitors: acc.uniqueVisitors + (day.uniqueVisitors || 0),\n        pageViews: acc.pageViews + (day.pageViews || 0),\n        avgTimeSpent: acc.avgTimeSpent + (day.avgTimeSpent || 0),\n      }),\n      { totalVisits: 0, uniqueVisitors: 0, pageViews: 0, avgTimeSpent: 0 }\n    );\n\n    // جمع أهم الصفحات\n    const allPages: Record<string, number> = {};\n    const allDevices: Record<string, number> = {};\n    const allBrowsers: Record<string, number> = {};\n\n    dailyData.forEach(day => {\n      // معالجة أهم الصفحات\n      const pages = (day.topPages as any[]) || [];\n      pages.forEach((page: any) => {\n        allPages[page.url] = (allPages[page.url] || 0) + page.views;\n      });\n\n      // معالجة إحصائيات الأجهزة\n      const devices = (day.deviceStats as any) || {};\n      Object.entries(devices).forEach(([device, count]) => {\n        allDevices[device] = (allDevices[device] || 0) + (count as number);\n      });\n\n      // معالجة إحصائيات المتصفحات\n      const browsers = (day.browserStats as any) || {};\n      Object.entries(browsers).forEach(([browser, count]) => {\n        allBrowsers[browser] = (allBrowsers[browser] || 0) + (count as number);\n      });\n    });\n\n    // ترتيب أهم الصفحات\n    const topPagesArray = Object.entries(allPages)\n      .map(([url, views]) => ({ url, views }))\n      .sort((a, b) => b.views - a.views)\n      .slice(0, 10);\n\n    return {\n      totalVisits: totals.totalVisits,\n      uniqueVisitors: totals.uniqueVisitors,\n      pageViews: totals.pageViews,\n      avgTimeSpent: dailyData.length > 0 ? Math.round(totals.avgTimeSpent / dailyData.length) : 0,\n      topPages: topPagesArray,\n      deviceStats: allDevices,\n      browserStats: allBrowsers,\n      dailyStats: dailyData.map(day => ({\n        date: day.date,\n        visits: day.totalVisits || 0,\n        uniqueVisitors: day.uniqueVisitors || 0,\n      })),\n    };\n  } catch (error) {\n    console.error('خطأ في الحصول على إحصائيات الزيارات:', error);\n    return {\n      totalVisits: 0,\n      uniqueVisitors: 0,\n      pageViews: 0,\n      avgTimeSpent: 0,\n      topPages: [],\n      deviceStats: {},\n      browserStats: {},\n      dailyStats: [],\n    };\n  }\n}\n\n/**\n * الحصول على إحصائيات سريعة للوحة التحكم\n */\nexport async function getQuickStats(): Promise<{\n  todayVisits: number;\n  yesterdayVisits: number;\n  thisWeekVisits: number;\n  thisMonthVisits: number;\n  growthRate: number;\n}> {\n  try {\n    const today = new Date().toISOString().split('T')[0];\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    const yesterdayStr = yesterday.toISOString().split('T')[0];\n\n    const weekAgo = new Date();\n    weekAgo.setDate(weekAgo.getDate() - 7);\n    const weekAgoStr = weekAgo.toISOString().split('T')[0];\n\n    const monthAgo = new Date();\n    monthAgo.setDate(monthAgo.getDate() - 30);\n    const monthAgoStr = monthAgo.toISOString().split('T')[0];\n\n    // الحصول على إحصائيات اليوم\n    const todayStats = await db\n      .select()\n      .from(dailyStats)\n      .where(eq(dailyStats.date, today))\n      .limit(1);\n\n    // الحصول على إحصائيات الأمس\n    const yesterdayStats = await db\n      .select()\n      .from(dailyStats)\n      .where(eq(dailyStats.date, yesterdayStr))\n      .limit(1);\n\n    // الحصول على إحصائيات الأسبوع\n    const weekStats = await db\n      .select({\n        totalVisits: sql<number>`sum(${dailyStats.totalVisits})`,\n      })\n      .from(dailyStats)\n      .where(gte(dailyStats.date, weekAgoStr));\n\n    // الحصول على إحصائيات الشهر\n    const monthStats = await db\n      .select({\n        totalVisits: sql<number>`sum(${dailyStats.totalVisits})`,\n      })\n      .from(dailyStats)\n      .where(gte(dailyStats.date, monthAgoStr));\n\n    const todayVisits = todayStats[0]?.totalVisits || 0;\n    const yesterdayVisits = yesterdayStats[0]?.totalVisits || 0;\n    const thisWeekVisits = weekStats[0]?.totalVisits || 0;\n    const thisMonthVisits = monthStats[0]?.totalVisits || 0;\n\n    // حساب معدل النمو (مقارنة اليوم بالأمس)\n    const growthRate = yesterdayVisits > 0 \n      ? Math.round(((todayVisits - yesterdayVisits) / yesterdayVisits) * 100)\n      : 0;\n\n    return {\n      todayVisits,\n      yesterdayVisits,\n      thisWeekVisits,\n      thisMonthVisits,\n      growthRate,\n    };\n  } catch (error) {\n    console.error('خطأ في الحصول على الإحصائيات السريعة:', error);\n    return {\n      todayVisits: 0,\n      yesterdayVisits: 0,\n      thisWeekVisits: 0,\n      thisMonthVisits: 0,\n      growthRate: 0,\n    };\n  }\n}","size_bytes":11268},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean, timestamp, jsonb, varchar, real } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\nimport { relations } from \"drizzle-orm\";\n\n// Type definitions\nexport interface ProjectAttachment {\n  id: string;          // Unique identifier for the attachment\n  name: string;        // Original filename\n  url: string;         // URL to access the file\n  type: string;        // MIME type (e.g., \"image/jpeg\", \"application/pdf\")\n  size: number;        // File size in bytes\n  uploadedAt: string;  // ISO date string\n}\n\n// User roles enumeration\nexport const UserRole = {\n  ENTREPRENEUR: \"entrepreneur\",\n  COMPANY: \"company\",\n} as const;\n\n// User schema\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  role: text(\"role\").notNull(),\n  name: text(\"name\").notNull(),\n  avatar: text(\"avatar\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Company profile schema\nexport const companyProfiles = pgTable(\"company_profiles\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  description: text(\"description\").notNull(),\n  logo: text(\"logo\"),\n  coverPhoto: text(\"cover_photo\"),\n  website: text(\"website\"),\n  location: text(\"location\"),\n  skills: text(\"skills\").array(),\n  rating: integer(\"rating\"),\n  reviewCount: integer(\"review_count\").default(0),\n  verified: boolean(\"verified\").default(false), // حقل للتوثيق\n  verificationDate: timestamp(\"verification_date\"), // تاريخ التوثيق\n  verifiedBy: integer(\"verified_by\"), // معرف المسؤول الذي قام بالتوثيق\n  verificationDocuments: jsonb(\"verification_documents\"), // مستندات التحقق\n  verificationNotes: text(\"verification_notes\"), // ملاحظات المراجع عن التوثيق\n  legalName: text(\"legal_name\"), // الاسم القانوني للشركة\n  commercialRegistration: text(\"commercial_registration\"), // رقم السجل التجاري\n  vatRegistration: text(\"vat_registration\"), // رقم التسجيل الضريبي\n  // معلومات شخصية لتوقيع اتفاقيات عدم الإفصاح\n  fullName: text(\"full_name\"), // الاسم الكامل للمفوض بالتوقيع\n  nationalId: text(\"national_id\"), // رقم الهوية الوطنية\n  phone: text(\"phone\"), // رقم الجوال\n  birthDate: text(\"birth_date\"), // تاريخ الميلاد\n  address: text(\"address\"), // العنوان الوطني\n});\n\n// Project schema\nexport const projects = pgTable(\"projects\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  budget: text(\"budget\").notNull(),\n  duration: text(\"duration\").notNull(),\n  skills: text(\"skills\").array(),\n  status: text(\"status\").notNull().default(\"open\"),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  highlightStatus: text(\"highlight_status\"), // For \"high demand\", \"new\", etc.\n  requiresNda: boolean(\"requires_nda\").default(false), // Indicates if NDA is required\n  ndaId: integer(\"nda_id\"), // Reference to NDA document if required\n  attachments: jsonb(\"attachments\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Offer schema\nexport const projectOffers = pgTable(\"project_offers\", {\n  id: serial(\"id\").primaryKey(),\n  projectId: integer(\"project_id\").notNull().references(() => projects.id),\n  companyId: integer(\"company_id\").notNull().references(() => companyProfiles.id), \n  amount: text(\"amount\").notNull(),\n  duration: text(\"duration\").notNull(),\n  description: text(\"description\").notNull(),\n  status: text(\"status\").default(\"pending\").notNull(), // pending, accepted, rejected, completed\n  depositPaid: boolean(\"deposit_paid\").default(false),\n  depositAmount: text(\"deposit_amount\"),\n  depositDate: timestamp(\"deposit_date\"),\n  contactRevealed: boolean(\"contact_revealed\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Message schema\nexport const messages = pgTable(\"messages\", {\n  id: serial(\"id\").primaryKey(),\n  content: text(\"content\").notNull(),\n  fromUserId: integer(\"from_user_id\").notNull().references(() => users.id),\n  toUserId: integer(\"to_user_id\").notNull().references(() => users.id),\n  projectId: integer(\"project_id\").references(() => projects.id),\n  read: boolean(\"read\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Testimonial schema\nexport const testimonials = pgTable(\"testimonials\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  content: text(\"content\").notNull(),\n  role: text(\"role\").notNull(), // \"entrepreneur\" or \"company\"\n  companyName: text(\"company_name\"),\n  userTitle: text(\"user_title\"),\n  rating: integer(\"rating\").notNull(),\n  avatar: text(\"avatar\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({ id: true, createdAt: true });\n\nexport const insertCompanyProfileSchema = createInsertSchema(companyProfiles).omit({ \n  id: true, \n  rating: true, \n  reviewCount: true \n});\n\nexport const insertProjectSchema = createInsertSchema(projects).omit({ \n  id: true, \n  status: true, \n  highlightStatus: true, \n  createdAt: true \n}).extend({\n  attachments: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    url: z.string(),\n    type: z.string(),\n    size: z.number(),\n    uploadedAt: z.string()\n  })).optional()\n});\n\nexport const insertMessageSchema = createInsertSchema(messages).omit({ \n  id: true, \n  read: true, \n  createdAt: true \n});\n\nexport const insertTestimonialSchema = createInsertSchema(testimonials).omit({ \n  id: true, \n  createdAt: true \n});\n\nexport const insertProjectOfferSchema = createInsertSchema(projectOffers).omit({\n  id: true,\n  status: true,\n  depositPaid: true,\n  depositAmount: true,\n  depositDate: true,\n  contactRevealed: true,\n  createdAt: true\n});\n\n// Gamification related schemas\nexport const userAchievements = pgTable(\"user_achievements\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  pointsTotal: integer(\"points_total\").default(0).notNull(),\n  level: integer(\"level\").default(1).notNull(),\n  projectsPosted: integer(\"projects_posted\").default(0),\n  projectsCompleted: integer(\"projects_completed\").default(0),\n  offersReceived: integer(\"offers_received\").default(0),\n  offersAccepted: integer(\"offers_accepted\").default(0),\n  responseRate: integer(\"response_rate\").default(0),\n  responseTime: integer(\"response_time_minutes\"),\n  badges: text(\"badges\").array().default([]),\n  streak: integer(\"streak\").default(0),\n  lastActive: timestamp(\"last_active\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const badgeDefinitions = pgTable(\"badge_definitions\", {\n  id: serial(\"id\").primaryKey(),\n  code: text(\"code\").notNull().unique(),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  icon: text(\"icon\").notNull(),\n  requiredPoints: integer(\"required_points\"),\n  requiredLevel: integer(\"required_level\"),\n  requiredProjects: integer(\"required_projects\"),\n  requiredOffers: integer(\"required_offers\"),\n  category: text(\"category\").notNull(), // \"project\", \"engagement\", \"special\", etc.\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const userActivities = pgTable(\"user_activities\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  activityType: text(\"activity_type\").notNull(), // \"project_post\", \"offer_submit\", etc.\n  referenceId: integer(\"reference_id\"), // Optional ID reference to relevant entity\n  pointsEarned: integer(\"points_earned\").default(0),\n  description: text(\"description\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Notifications schema\nexport const notifications = pgTable(\"notifications\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  type: text(\"type\").notNull(), // \"nda_request\", \"nda_completed\", \"proposal\", \"message\", \"system\", etc.\n  title: text(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  isRead: boolean(\"is_read\").notNull().default(false),\n  actionUrl: text(\"action_url\"), // Optional URL for the action button\n  metadata: jsonb(\"metadata\"), // Additional data like projectId, userId, etc.\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserAchievementSchema = createInsertSchema(userAchievements).omit({ \n  id: true, \n  updatedAt: true \n});\n\nexport const insertNotificationSchema = createInsertSchema(notifications).omit({ \n  id: true, \n  isRead: true,\n  createdAt: true \n});\n\nexport const insertBadgeDefinitionSchema = createInsertSchema(badgeDefinitions).omit({ \n  id: true, \n  createdAt: true \n});\n\nexport const insertUserActivitySchema = createInsertSchema(userActivities).omit({ \n  id: true, \n  createdAt: true \n});\n\n// Relation definitions\nexport const usersRelations = relations(users, ({ one, many }) => ({\n  companyProfile: one(companyProfiles, {\n    fields: [users.id],\n    references: [companyProfiles.userId],\n  }),\n  projects: many(projects),\n  testimonials: many(testimonials),\n  sentMessages: many(messages, { relationName: \"sentMessages\" }),\n  receivedMessages: many(messages, { relationName: \"receivedMessages\" }),\n}));\n\nexport const companyProfilesRelations = relations(companyProfiles, ({ one }) => ({\n  user: one(users, {\n    fields: [companyProfiles.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const projectsRelations = relations(projects, ({ one, many }) => ({\n  user: one(users, {\n    fields: [projects.userId],\n    references: [users.id],\n  }),\n  messages: many(messages),\n  offers: many(projectOffers),\n  ndaAgreement: one(ndaAgreements, {\n    fields: [projects.id],\n    references: [ndaAgreements.projectId],\n  }),\n}));\n\nexport const projectOffersRelations = relations(projectOffers, ({ one }) => ({\n  project: one(projects, {\n    fields: [projectOffers.projectId],\n    references: [projects.id],\n  }),\n  company: one(companyProfiles, {\n    fields: [projectOffers.companyId],\n    references: [companyProfiles.id],\n  }),\n}));\n\nexport const messagesRelations = relations(messages, ({ one }) => ({\n  fromUser: one(users, {\n    fields: [messages.fromUserId],\n    references: [users.id],\n    relationName: \"sentMessages\",\n  }),\n  toUser: one(users, {\n    fields: [messages.toUserId],\n    references: [users.id],\n    relationName: \"receivedMessages\",\n  }),\n  project: one(projects, {\n    fields: [messages.projectId],\n    references: [projects.id],\n  }),\n}));\n\nexport const testimonialsRelations = relations(testimonials, ({ one }) => ({\n  user: one(users, {\n    fields: [testimonials.userId],\n    references: [users.id],\n  }),\n}));\n\n// Add relations for new gamification tables\nexport const userAchievementsRelations = relations(userAchievements, ({ one }) => ({\n  user: one(users, {\n    fields: [userAchievements.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const userActivitiesRelations = relations(userActivities, ({ one }) => ({\n  user: one(users, {\n    fields: [userActivities.userId],\n    references: [users.id],\n  }),\n}));\n\n// Update user relations to include achievements and activities\nexport const usersRelationsUpdate = relations(users, ({ one, many }) => ({\n  // Existing relations from usersRelations...\n  achievements: one(userAchievements, {\n    fields: [users.id],\n    references: [userAchievements.userId],\n  }),\n  activities: many(userActivities),\n}));\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\n\nexport type CompanyProfile = typeof companyProfiles.$inferSelect;\nexport type InsertCompanyProfile = z.infer<typeof insertCompanyProfileSchema>;\n\nexport type Project = typeof projects.$inferSelect;\nexport type InsertProject = z.infer<typeof insertProjectSchema>;\n\nexport type Message = typeof messages.$inferSelect;\nexport type InsertMessage = z.infer<typeof insertMessageSchema>;\n\nexport type Testimonial = typeof testimonials.$inferSelect;\nexport type InsertTestimonial = z.infer<typeof insertTestimonialSchema>;\n\nexport type ProjectOffer = typeof projectOffers.$inferSelect;\nexport type InsertProjectOffer = z.infer<typeof insertProjectOfferSchema>;\n\n// Gamification types\nexport type UserAchievement = typeof userAchievements.$inferSelect;\nexport type InsertUserAchievement = z.infer<typeof insertUserAchievementSchema>;\n\nexport type BadgeDefinition = typeof badgeDefinitions.$inferSelect;\nexport type InsertBadgeDefinition = z.infer<typeof insertBadgeDefinitionSchema>;\n\nexport type UserActivity = typeof userActivities.$inferSelect;\nexport type InsertUserActivity = z.infer<typeof insertUserActivitySchema>;\n\n// Export notification types\nexport type Notification = typeof notifications.$inferSelect;\nexport type InsertNotification = z.infer<typeof insertNotificationSchema>;\n\n// Site Settings schema - removed duplicate, using the one defined later\n\n// Password Reset Tokens schema\nexport const passwordResetTokens = pgTable(\"password_reset_tokens\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id),\n  token: varchar(\"token\", { length: 64 }).notNull().unique(),\n  email: text(\"email\").notNull(),\n  expiresAt: timestamp(\"expires_at\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertPasswordResetTokenSchema = createInsertSchema(passwordResetTokens).omit({ \n  id: true, \n  createdAt: true \n});\n\nexport type PasswordResetToken = typeof passwordResetTokens.$inferSelect;\nexport type InsertPasswordResetToken = z.infer<typeof insertPasswordResetTokenSchema>;\n\nexport const passwordResetTokensRelations = relations(passwordResetTokens, ({ one }) => ({\n  user: one(users, {\n    fields: [passwordResetTokens.userId],\n    references: [users.id],\n  }),\n}));\n\n// Newsletter subscribers schema\nexport const newsletterSubscribers = pgTable(\"newsletter_subscribers\", {\n  id: serial(\"id\").primaryKey(),\n  email: text(\"email\").notNull().unique(),\n  name: text(\"name\"),\n  subscribed: boolean(\"subscribed\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// NDA Agreements schema\nexport const ndaAgreements = pgTable(\"nda_agreements\", {\n  id: serial(\"id\").primaryKey(),\n  projectId: integer(\"project_id\").notNull().references(() => projects.id),\n  pdfUrl: text(\"pdf_url\"), // URL or path to the generated PDF\n  status: text(\"status\").notNull().default(\"awaiting_entrepreneur\"), // awaiting_entrepreneur, ready_for_sadiq, invitation_sent, signed, expired\n  companySignatureInfo: jsonb(\"company_signature_info\"), // Company signer details, IP, browser, timestamp\n  entrepreneurInfo: jsonb(\"entrepreneur_info\"), // Entrepreneur details for Sadiq integration\n  signedAt: timestamp(\"signed_at\"), // When the company signed\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  expiresAt: timestamp(\"expires_at\"), // Optional expiration date\n  // Sadiq integration fields\n  sadiqEnvelopeId: text(\"sadiq_envelope_id\"), // Sadiq envelope ID\n  sadiqReferenceNumber: text(\"sadiq_reference_number\"), // Sadiq reference number\n  sadiqDocumentId: text(\"sadiq_document_id\"), // Sadiq document ID\n  envelopeStatus: text(\"envelope_status\"), // Sadiq envelope status (invitation_sent, in_progress, completed, etc.)\n});\n\nexport const insertNewsletterSubscriberSchema = createInsertSchema(newsletterSubscribers).omit({ \n  id: true, \n  createdAt: true \n});\n\nexport const insertNdaAgreementSchema = createInsertSchema(ndaAgreements).omit({\n  id: true,\n  status: true,\n  createdAt: true,\n  signedAt: true\n});\n\nexport type NewsletterSubscriber = typeof newsletterSubscribers.$inferSelect;\nexport type InsertNewsletterSubscriber = z.infer<typeof insertNewsletterSubscriberSchema>;\n\nexport type NdaAgreement = typeof ndaAgreements.$inferSelect;\nexport type InsertNdaAgreement = z.infer<typeof insertNdaAgreementSchema>;\n\nexport const ndaAgreementsRelations = relations(ndaAgreements, ({ one }) => ({\n  project: one(projects, {\n    fields: [ndaAgreements.projectId],\n    references: [projects.id],\n  }),\n}));\n\n// Personal information schema (required for NDA agreements)\nexport const personalInformation = pgTable(\"personal_information\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull().references(() => users.id).unique(),\n  fullName: text(\"full_name\").notNull(),\n  idNumber: text(\"id_number\").notNull(), // National ID (هوية وطنية)\n  mobileNumber: text(\"mobile_number\").notNull(),\n  dateOfBirth: text(\"date_of_birth\").notNull(),\n  nationalAddress: text(\"national_address\").notNull(), // العنوان الوطني\n  isComplete: boolean(\"is_complete\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const insertPersonalInformationSchema = createInsertSchema(personalInformation).omit({ \n  id: true, \n  isComplete: true,\n  createdAt: true,\n  updatedAt: true \n});\n\nexport type PersonalInformation = typeof personalInformation.$inferSelect;\nexport type InsertPersonalInformation = z.infer<typeof insertPersonalInformationSchema>;\n\nexport const personalInformationRelations = relations(personalInformation, ({ one }) => ({\n  user: one(users, {\n    fields: [personalInformation.userId],\n    references: [users.id],\n  }),\n}));\n\n// Add personal info to user relations\nexport const usersPersonalInfoRelation = relations(users, ({ one }) => ({\n  personalInfo: one(personalInformation, {\n    fields: [users.id],\n    references: [personalInformation.userId],\n  }),\n}));\n\n// العملاء المميزون - Featured Clients\nexport const featuredClients = pgTable(\"featured_clients\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  logo: text(\"logo\").notNull(), // URL to the logo image\n  website: text(\"website\"),\n  description: text(\"description\"),\n  category: text(\"category\"), // نوع العميل (تقني، طبي، تجاري، إلخ)\n  order: integer(\"order\").default(0), // ترتيب العرض\n  active: boolean(\"active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const insertFeaturedClientSchema = createInsertSchema(featuredClients).omit({ \n  id: true,\n  createdAt: true,\n  updatedAt: true \n});\n\nexport type FeaturedClient = typeof featuredClients.$inferSelect;\nexport type InsertFeaturedClient = z.infer<typeof insertFeaturedClientSchema>;\n\n// مخطط نظام المدونة\n\n// فئات المدونة\nexport const blogCategories = pgTable(\"blog_categories\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull().unique(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  image: text(\"image\"),\n  parentId: integer(\"parent_id\"),\n  order: integer(\"order\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// المقالات\nexport const blogPosts = pgTable(\"blog_posts\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  excerpt: text(\"excerpt\"),\n  content: text(\"content\").notNull(),\n  status: text(\"status\").notNull().default(\"draft\"), // draft, published, archived\n  featuredImage: text(\"featured_image\"),\n  authorId: integer(\"author_id\").notNull().references(() => users.id),\n  categoryId: integer(\"category_id\").references(() => blogCategories.id),\n  tags: text(\"tags\").array(),\n  metaTitle: text(\"meta_title\"),\n  metaDescription: text(\"meta_description\"),\n  metaKeywords: text(\"meta_keywords\"),\n  published: boolean(\"published\").default(false),\n  views: integer(\"views\").default(0),\n  publishedAt: timestamp(\"published_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// تعليقات المدونة\nexport const blogComments = pgTable(\"blog_comments\", {\n  id: serial(\"id\").primaryKey(),\n  postId: integer(\"post_id\").notNull().references(() => blogPosts.id),\n  userId: integer(\"user_id\").references(() => users.id),\n  parentId: integer(\"parent_id\").references(() => blogComments.id),\n  authorName: text(\"author_name\"),\n  authorEmail: text(\"author_email\"),\n  content: text(\"content\").notNull(),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, approved, spam\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// مخططات Insert لنظام المدونة\nexport const insertBlogCategorySchema = createInsertSchema(blogCategories).omit({ \n  id: true,\n  createdAt: true,\n  updatedAt: true \n});\n\nexport const insertBlogPostSchema = createInsertSchema(blogPosts).omit({ \n  id: true,\n  views: true,\n  createdAt: true,\n  updatedAt: true \n});\n\nexport const insertBlogCommentSchema = createInsertSchema(blogComments).omit({ \n  id: true,\n  createdAt: true,\n  updatedAt: true \n});\n\n// تم نقل نموذج عملاء التميز إلى الجزء الأسفل من الملف\n\n// العلاقات لنظام المدونة\nexport const blogCategoriesRelations = relations(blogCategories, ({ one, many }) => ({\n  parent: one(blogCategories, {\n    fields: [blogCategories.parentId],\n    references: [blogCategories.id],\n    relationName: \"parentCategory\",\n  }),\n  children: many(blogCategories, {\n    relationName: \"parentCategory\",\n  }),\n  posts: many(blogPosts),\n}));\n\nexport const blogPostsRelations = relations(blogPosts, ({ one, many }) => ({\n  author: one(users, {\n    fields: [blogPosts.authorId],\n    references: [users.id],\n  }),\n  category: one(blogCategories, {\n    fields: [blogPosts.categoryId],\n    references: [blogCategories.id],\n  }),\n  comments: many(blogComments),\n}));\n\nexport const blogCommentsRelations = relations(blogComments, ({ one, many }) => ({\n  post: one(blogPosts, {\n    fields: [blogComments.postId],\n    references: [blogPosts.id],\n  }),\n  user: one(users, {\n    fields: [blogComments.userId],\n    references: [users.id],\n  }),\n  parent: one(blogComments, {\n    fields: [blogComments.parentId],\n    references: [blogComments.id],\n    relationName: \"parentComment\",\n  }),\n  replies: many(blogComments, {\n    relationName: \"parentComment\",\n  }),\n}));\n\n// تحديث علاقات المستخدم لإضافة المقالات\nexport const usersBlogRelations = relations(users, ({ many }) => ({\n  blogPosts: many(blogPosts),\n  blogComments: many(blogComments),\n}));\n\n// نموذج عملاء التميز - الجهات والشركاء المميزين\nexport const premiumClients = pgTable(\"premium_clients\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  logo: text(\"logo\").notNull(),\n  description: text(\"description\").notNull(),\n  website: text(\"website\"),\n  category: text(\"category\").notNull(), // حكومي، جمعية خيرية، شركة كبرى، إلخ\n  benefits: text(\"benefits\").array(), // المزايا الخاصة المقدمة\n  featured: boolean(\"featured\").default(false), // هل يتم عرضه في الصفحة الرئيسية\n  active: boolean(\"active\").default(true), // نشط أو غير نشط\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const insertPremiumClientSchema = createInsertSchema(premiumClients).omit({ \n  id: true, \n  createdAt: true,\n  updatedAt: true\n});\n\nexport type PremiumClient = typeof premiumClients.$inferSelect;\nexport type InsertPremiumClient = z.infer<typeof insertPremiumClientSchema>;\n\n// أنواع البيانات لنظام المدونة\nexport type BlogCategory = typeof blogCategories.$inferSelect;\nexport type InsertBlogCategory = z.infer<typeof insertBlogCategorySchema>;\n\nexport type BlogPost = typeof blogPosts.$inferSelect;\nexport type InsertBlogPost = z.infer<typeof insertBlogPostSchema>;\n\nexport type BlogComment = typeof blogComments.$inferSelect;\nexport type InsertBlogComment = z.infer<typeof insertBlogCommentSchema>;\n\n// جدول رسائل نموذج الاتصال\nexport const contactMessages = pgTable(\"contact_messages\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  subject: text(\"subject\").default(\"استفسار عام\"),\n  message: text(\"message\").notNull(),\n  status: text(\"status\").notNull().default(\"new\"), // new, read, replied, archived\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n  notes: text(\"admin_notes\"),\n  replyMessage: text(\"reply_message\"),\n  repliedAt: timestamp(\"replied_at\"),\n});\n\nexport const insertContactMessageSchema = createInsertSchema(contactMessages).omit({ \n  id: true, \n  status: true,\n  createdAt: true,\n  updatedAt: true,\n  notes: true,\n  replyMessage: true,\n  repliedAt: true \n});\n\nexport type ContactMessage = typeof contactMessages.$inferSelect;\nexport type InsertContactMessage = z.infer<typeof insertContactMessageSchema>;\n\n// جدول إحصائيات الزيارات\nexport const visitStats = pgTable(\"visit_stats\", {\n  id: serial(\"id\").primaryKey(),\n  date: text(\"date\").notNull(), // تاريخ بصيغة YYYY-MM-DD\n  pageUrl: text(\"page_url\").notNull(), // المسار المزار\n  pageTitle: text(\"page_title\"), // عنوان الصفحة\n  userAgent: text(\"user_agent\"), // معلومات المتصفح\n  ipAddress: text(\"ip_address\"), // عنوان IP (مجهول)\n  referrer: text(\"referrer\"), // الموقع المرجع\n  sessionId: text(\"session_id\"), // معرف الجلسة\n  userId: integer(\"user_id\").references(() => users.id), // المستخدم المسجل (اختياري)\n  country: text(\"country\"), // البلد\n  city: text(\"city\"), // المدينة\n  deviceType: text(\"device_type\"), // نوع الجهاز (desktop, mobile, tablet)\n  browserName: text(\"browser_name\"), // اسم المتصفح\n  isUniqueVisitor: boolean(\"is_unique_visitor\").default(false), // زائر جديد\n  timeSpent: integer(\"time_spent\"), // الوقت المقضي بالثواني\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// جدول إحصائيات يومية مجمعة\nexport const dailyStats = pgTable(\"daily_stats\", {\n  id: serial(\"id\").primaryKey(),\n  date: text(\"date\").notNull().unique(), // تاريخ بصيغة YYYY-MM-DD\n  totalVisits: integer(\"total_visits\").default(0), // إجمالي الزيارات\n  uniqueVisitors: integer(\"unique_visitors\").default(0), // الزوار الفريدون\n  pageViews: integer(\"page_views\").default(0), // مشاهدات الصفحات\n  avgTimeSpent: integer(\"avg_time_spent\").default(0), // متوسط الوقت المقضي\n  bounceRate: integer(\"bounce_rate\").default(0), // معدل الارتداد (%)\n  topPages: jsonb(\"top_pages\"), // أهم الصفحات [{url, views}]\n  topReferrers: jsonb(\"top_referrers\"), // أهم المراجع [{referrer, visits}]\n  deviceStats: jsonb(\"device_stats\"), // إحصائيات الأجهزة {desktop, mobile, tablet}\n  browserStats: jsonb(\"browser_stats\"), // إحصائيات المتصفحات\n  countryStats: jsonb(\"country_stats\"), // إحصائيات البلدان\n  newUsers: integer(\"new_users\").default(0), // المستخدمون الجدد\n  returningUsers: integer(\"returning_users\").default(0), // المستخدمون العائدون\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const insertVisitStatsSchema = createInsertSchema(visitStats).omit({ \n  id: true, \n  createdAt: true \n});\n\nexport const insertDailyStatsSchema = createInsertSchema(dailyStats).omit({ \n  id: true, \n  createdAt: true,\n  updatedAt: true \n});\n\nexport type VisitStats = typeof visitStats.$inferSelect;\nexport type InsertVisitStats = z.infer<typeof insertVisitStatsSchema>;\n\nexport type DailyStats = typeof dailyStats.$inferSelect;\nexport type InsertDailyStats = z.infer<typeof insertDailyStatsSchema>;\n\n// جداول مساعد الذكاء الاصطناعي للمشاريع\nexport const aiProjectAnalysis = pgTable(\"ai_project_analysis\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").references(() => users.id).notNull(),\n  sessionId: text(\"session_id\").notNull(),\n  projectIdea: text(\"project_idea\").notNull(),\n  projectType: text(\"project_type\"), // web, mobile, desktop, ai, etc\n  businessSize: text(\"business_size\"), // individual, small, medium, enterprise\n  expectedUsers: integer(\"expected_users\"),\n  budget: text(\"budget\"), // low, medium, high, custom\n  timeline: text(\"timeline\"), // urgent, normal, flexible\n  technicalComplexity: text(\"technical_complexity\"), // simple, medium, complex\n  integrationNeeds: text(\"integration_needs\").array(),\n  securityRequirements: text(\"security_requirements\"), // basic, standard, high\n  analysisResult: text(\"analysis_result\").notNull(), // JSON string containing AI analysis\n  estimatedCost: text(\"estimated_cost\"),\n  recommendedTechnologies: text(\"recommended_technologies\").array(),\n  projectPhases: text(\"project_phases\"), // JSON string\n  riskAssessment: text(\"risk_assessment\"),\n  status: text(\"status\").notNull().default(\"draft\"), // draft, completed, archived\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const insertAiProjectAnalysisSchema = createInsertSchema(aiProjectAnalysis).omit({ \n  id: true, \n  createdAt: true,\n  updatedAt: true\n});\n\nexport type AiProjectAnalysis = typeof aiProjectAnalysis.$inferSelect;\nexport type InsertAiProjectAnalysis = z.infer<typeof insertAiProjectAnalysisSchema>;\n\n// جدول قوالب المشاريع المحددة مسبقاً\nexport const projectTemplates = pgTable(\"project_templates\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  category: text(\"category\").notNull(), // web, mobile, ai, etc\n  description: text(\"description\").notNull(),\n  basePrice: integer(\"base_price\"), // السعر الأساسي بالريال\n  complexityMultiplier: real(\"complexity_multiplier\").default(1.0),\n  estimatedDays: integer(\"estimated_days\"),\n  requiredSkills: text(\"required_skills\").array(),\n  features: text(\"features\").array(),\n  technicalSpecs: text(\"technical_specs\"), // JSON string\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const insertProjectTemplateSchema = createInsertSchema(projectTemplates).omit({ \n  id: true, \n  createdAt: true,\n  updatedAt: true\n});\n\nexport type ProjectTemplate = typeof projectTemplates.$inferSelect;\nexport type InsertProjectTemplate = z.infer<typeof insertProjectTemplateSchema>;\n\n// جدول إعدادات الموقع\nexport const siteSettings = pgTable(\"site_settings\", {\n  id: serial(\"id\").primaryKey(),\n  key: text(\"key\").notNull().unique(),\n  value: text(\"value\").notNull(),\n  description: text(\"description\"),\n  category: text(\"category\").default(\"general\"),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n  updatedBy: integer(\"updated_by\").references(() => users.id),\n});\n\nexport const insertSiteSettingSchema = createInsertSchema(siteSettings).omit({ \n  id: true, \n  updatedAt: true\n});\n\nexport type SiteSetting = typeof siteSettings.$inferSelect;\nexport type InsertSiteSetting = z.infer<typeof insertSiteSettingSchema>;\n\n// جدول تقييم المستخدمين لدقة التوصيات\nexport const analysisRatings = pgTable(\"analysis_ratings\", {\n  id: serial(\"id\").primaryKey(),\n  analysisId: integer(\"analysis_id\").references(() => aiProjectAnalysis.id).notNull(),\n  userId: integer(\"user_id\").references(() => users.id).notNull(),\n  accuracyRating: integer(\"accuracy_rating\"), // 1-5\n  usefulnessRating: integer(\"usefulness_rating\"), // 1-5\n  priceAccuracy: integer(\"price_accuracy\"), // 1-5\n  feedback: text(\"feedback\"),\n  actualProjectCost: integer(\"actual_project_cost\"), // التكلفة الفعلية إذا تم تنفيذ المشروع\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertAnalysisRatingSchema = createInsertSchema(analysisRatings).omit({ \n  id: true, \n  createdAt: true\n});\n\nexport type AnalysisRating = typeof analysisRatings.$inferSelect;\nexport type InsertAnalysisRating = z.infer<typeof insertAnalysisRatingSchema>;\n","size_bytes":32861},"client/src/App.tsx":{"content":"import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useLocation } from \"wouter\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { apiRequest } from \"./lib/queryClient\";\n\n// Layout\nimport Header from \"@/components/layout/Header\";\nimport ModernHeader from \"@/components/layout/ModernHeader\";\nimport Footer from \"@/components/layout/Footer\";\nimport ScrollToTop from \"@/components/layout/ScrollToTop\";\n\n// Pages\nimport Home from \"@/pages/home\";\nimport Projects from \"@/pages/projects\";\nimport ProjectDetails from \"@/pages/projects/[id]\";\nimport TrendingProjects from \"@/pages/projects/trending\";\nimport CompanyDetails from \"@/pages/companies/[id]\";\nimport ForCompanies from \"@/pages/for-companies\";\nimport Register from \"@/pages/auth/register\";\nimport Login from \"@/pages/auth/login\";\nimport ForgotPassword from \"@/pages/auth/forgot-password\";\nimport ResetPassword from \"@/pages/auth/reset-password\";\nimport EntrepreneurDashboard from \"@/pages/dashboard/entrepreneur\";\nimport CompanyDashboard from \"@/pages/dashboard/company\";\nimport AdminDashboard from \"@/pages/dashboard/admin\";\n// Removed AdminLogin import as it's now integrated with the main login page\nimport Messages from \"@/pages/messages\";\nimport Notifications from \"@/pages/notifications\";\nimport NotFound from \"@/pages/not-found\";\nimport Redirect from \"@/pages/redirect\";\nimport UserProfile from \"@/pages/users/UserProfile\";\nimport HowItWorks from \"@/pages/how-it-works\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\nimport Terms from \"@/pages/terms\";\nimport Privacy from \"@/pages/privacy\";\nimport Sitemap from \"@/pages/sitemap\";\nimport TestNdaPage from \"@/pages/test-nda-page\";\nimport PersonalInfo from \"@/pages/personal-info\";\nimport PremiumClients from \"@/pages/premium-clients\";\nimport AiAssistant from \"@/pages/ai-assistant\";\nimport CompaniesLanding from \"@/pages/companies-landing\";\nimport TestSadiq from \"@/pages/test-sadiq\";\nimport NdaCompletePage from \"@/pages/nda-complete\";\n\n// استيراد صفحات المدونة وصفحات إدارة المدونة\nimport BlogIndexPage from \"@/pages/blog/index\";\nimport BlogPostPage from \"@/pages/blog/[slug]\";\nimport BlogManagement from \"@/pages/admin/blog-management\";\nimport PremiumClientsManagement from \"@/pages/admin/premium-clients-management\";\nimport FeaturedClientsManagement from \"@/pages/admin/featured-clients-management\";\n\nimport SiteSettings from \"@/pages/admin/site-settings\";\nimport ContactMessagesPage from \"@/pages/admin/contact-messages\";\nimport { ProtectedRoute } from \"@/components/auth/ProtectedRoute\";\n\nexport type User = {\n  id: number;\n  username: string;\n  email: string;\n  role: string;\n  name: string;\n  avatar?: string;\n};\n\nexport interface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isCompany: boolean;\n  isEntrepreneur: boolean;\n  isAdmin: boolean;\n  logout: () => void;\n  login: (userData: User) => void;\n}\n\n// Auth context\nexport const useAuth = (): AuthContextType => {\n  const [user, setUser] = useState<User | null>(null);\n  const [location, navigate] = useLocation();\n  \n  // Check if user is logged in with retry logic for sessions\n  const { data, isLoading, error, refetch } = useQuery<{user: User}>({\n    queryKey: ['/api/auth/user'],\n    retry: 3, // محاولة 3 مرات للتأكد من استلام الكوكيز\n    staleTime: 0,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true,\n    retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 3000), // تأخير متزايد\n  });\n  \n  // Update user when data changes with localStorage backup\n  useEffect(() => {\n    console.log(\"Auth data received:\", data);\n    if (data && data.user) {\n      setUser(data.user);\n      // حفظ بيانات المستخدم في localStorage كنسخة احتياطية\n      localStorage.setItem('user_session', JSON.stringify(data.user));\n    } else if (error || (data === undefined && !isLoading)) {\n      // إعادة ضبط حالة المستخدم عند وجود خطأ أو عدم وجود بيانات\n      setUser(null);\n      localStorage.removeItem('user_session');\n    }\n  }, [data, error, isLoading]);\n\n  // تنظيف token في حالة فشل المصادقة\n  useEffect(() => {\n    if (error && error instanceof Error && error.message.includes('401')) {\n      localStorage.removeItem('auth_token');\n      console.log('تم حذف token منتهي الصلاحية من localStorage');\n    }\n  }, [error]);\n\n  // Logout mutation\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"POST\", \"/api/auth/logout\", {});\n      if (!response.ok) {\n        throw new Error(\"Failed to logout\");\n      }\n      return true;\n    },\n    onSuccess: () => {\n      console.log(\"تم تسجيل الخروج بنجاح\");\n      // حذف JWT token من localStorage\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user_session');\n      console.log(\"تم حذف JWT token من localStorage\");\n      queryClient.invalidateQueries({queryKey: ['/api/auth/user']});\n      setUser(null);\n      navigate(\"/\");\n    }\n  });\n\n  return {\n    user,\n    isAuthenticated: !!user,\n    isCompany: user?.role === \"company\",\n    isEntrepreneur: user?.role === \"entrepreneur\",\n    isAdmin: user?.role === \"admin\",\n    logout: () => logoutMutation.mutate(),\n    login: (userData: User) => {\n      setUser(userData);\n      // إبطال الاستعلامات وإعادة تحميلها للتأكد من التزامن\n      queryClient.invalidateQueries({queryKey: ['/api/auth/user']});\n    },\n  };\n};\n\nfunction App() {\n  const auth = useAuth();\n  const [location] = useLocation();\n\n  // Skip layout for auth pages\n  const isAuthPage = location.startsWith(\"/auth\");\n\n  return (\n    <TooltipProvider delayDuration={0}>\n      <ScrollToTop />\n      {!isAuthPage && (\n        location === \"/\" ? <ModernHeader auth={auth} /> : <Header auth={auth} />\n      )}\n      <main dir=\"rtl\" lang=\"ar\" className=\"min-h-screen\">\n        <Switch>\n          <Route path=\"/\" component={() => <Home auth={auth} />} />\n          <Route path=\"/projects\" component={() => <Projects auth={auth} />} />\n          <Route path=\"/projects/trending\" component={TrendingProjects} />\n          <Route path=\"/projects/:id\" component={ProjectDetails} />\n          <Route path=\"/companies/:id\" component={CompanyDetails} />\n\n          {/* مساعد الذكاء الاصطناعي للمشاريع */}\n          <ProtectedRoute \n            path=\"/ai-assistant\" \n            component={AiAssistant} \n            requiredRole=\"entrepreneur\" \n          />\n\n          <Route path=\"/for-companies\">\n            {auth.isAuthenticated && auth.isCompany ? (\n              <ForCompanies auth={auth} />\n            ) : (\n              <NotFound />\n            )}\n          </Route>\n          {/* Main auth route redirects to login */}\n          <Route path=\"/auth\" component={() => \n            <Redirect to=\"/auth/login\" />\n          } />\n          <Route path=\"/auth/register\" component={() => <Register auth={auth} />} />\n          <Route path=\"/auth/login\" component={() => <Login auth={auth} />} />\n          <Route path=\"/auth/forgot-password\" component={ForgotPassword} />\n          <Route path=\"/auth/reset-password/:token\" component={ResetPassword} />\n          <Route path=\"/redirect\" component={Redirect} />\n          {/* Removed separate admin login route */}\n          \n          {/* Protected routes - using ProtectedRoute component */}\n          {/* Dashboard redirect based on user role */}\n          <Route path=\"/dashboard\">\n            {auth.isAuthenticated ? (\n              auth.isEntrepreneur ? (\n                <Redirect to=\"/dashboard/entrepreneur\" />\n              ) : auth.isCompany ? (\n                <Redirect to=\"/dashboard/company\" />\n              ) : auth.isAdmin ? (\n                <Redirect to=\"/dashboard/admin\" />\n              ) : (\n                <NotFound />\n              )\n            ) : (\n              <Redirect to=\"/auth/login\" />\n            )}\n          </Route>\n          <ProtectedRoute \n            path=\"/dashboard/entrepreneur\" \n            component={EntrepreneurDashboard} \n            requiredRole=\"entrepreneur\" \n          />\n          <ProtectedRoute \n            path=\"/dashboard/company\" \n            component={CompanyDashboard} \n            requiredRole=\"company\" \n          />\n          {/* صفحة المسؤول مع تحقق - باستخدام ProtectedRoute */}\n          <ProtectedRoute path=\"/dashboard/admin\" component={AdminDashboard} requiredRole=\"admin\" />\n          {/* صفحة المسؤول المبسطة للوصول المباشر - تحويل مباشر إلى لوحة المسؤول الكاملة */}\n          <ProtectedRoute path=\"/admin\" component={AdminDashboard} requiredRole=\"admin\" />\n          {/* نهاية التعديل المؤقت */}\n          {/* صفحة الرسائل: تدعم المسار الأساسي والمسار مع معلمة userId - باستخدام ProtectedRoute */}\n          <ProtectedRoute path=\"/messages\" component={Messages} />\n          <ProtectedRoute path=\"/messages/:userId\" component={Messages} />\n          \n          {/* صفحة الإشعارات */}\n          <ProtectedRoute path=\"/notifications\" component={Notifications} />\n          \n          {/* صفحة إكمال اتفاقية عدم الإفصاح */}\n          <ProtectedRoute path=\"/nda/:ndaId/complete\" component={NdaCompletePage} />\n          \n          {/* مسار صفحة المستخدم */}\n          <Route path=\"/users/:id\" component={UserProfile} />\n          \n          {/* صفحات المساعدة والدعم */}\n          <Route path=\"/help-center\" component={() => (\n            <div className=\"container mx-auto py-8 px-4 md:px-6\">\n              <h1 className=\"text-3xl font-bold mb-6\">مركز المساعدة</h1>\n              <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n                <h2 className=\"text-xl font-semibold mb-4\">الأسئلة الشائعة</h2>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h3 className=\"font-medium text-primary\">كيف يمكنني التسجيل في المنصة؟</h3>\n                    <p className=\"text-gray-600 mt-1\">يمكنك التسجيل بالنقر على زر \"إنشاء حساب\" في الصفحة الرئيسية واختيار نوع الحساب (رائد أعمال أو شركة تطوير).</p>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-primary\">كيف يمكنني إضافة مشروع جديد؟</h3>\n                    <p className=\"text-gray-600 mt-1\">بعد تسجيل الدخول كرائد أعمال، يمكنك النقر على \"إضافة مشروع\" في لوحة التحكم الخاصة بك وملء النموذج المطلوب.</p>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-primary\">ما هي آلية الدفع في المنصة؟</h3>\n                    <p className=\"text-gray-600 mt-1\">تعتمد المنصة نظام العربون بنسبة 2.5% من قيمة المشروع، والذي يمثل عمولة المنصة. بعد دفع العربون، تكون المعاملات المالية مباشرة بين الأطراف.</p>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-primary\">كيف يتم ضمان جودة المشاريع المنفذة؟</h3>\n                    <p className=\"text-gray-600 mt-1\">تعتمد المنصة نظام تقييم للشركات بعد انتهاء المشاريع، مما يساعد رواد الأعمال على اختيار الشركات ذات السمعة الجيدة.</p>\n                  </div>\n                </div>\n                \n                <h2 className=\"text-xl font-semibold mt-8 mb-4\">موارد إضافية</h2>\n                <ul className=\"list-disc list-inside space-y-2 text-gray-600\">\n                  <li>دليل استخدام المنصة لرواد الأعمال</li>\n                  <li>دليل استخدام المنصة للشركات</li>\n                  <li>أفضل الممارسات لإضافة مشروع ناجح</li>\n                  <li>نصائح لاختيار شركة التطوير المناسبة</li>\n                </ul>\n              </div>\n            </div>\n          )} />\n          \n          {/* الصفحات الإعلامية والمساعدة */}\n          <Route path=\"/how-it-works\" component={HowItWorks} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/sitemap\" component={Sitemap} />\n          \n          <Route path=\"/terms\" component={Terms} />\n          \n          <Route path=\"/privacy\" component={Privacy} />\n          \n          {/* صفحة اختبار PDF */}\n          <Route path=\"/test-nda\" component={TestNdaPage} />\n          \n          {/* صفحة البيانات الشخصية */}\n          <ProtectedRoute \n            path=\"/personal-info\" \n            component={PersonalInfo} \n            requiredRole=\"company\" \n          />\n          \n          {/* صفحات المدونة */}\n          <Route path=\"/blog\" component={BlogIndexPage} />\n          <Route path=\"/blog/:slug\" component={BlogPostPage} />\n          \n          {/* صفحات إدارة المسؤول */}\n          <ProtectedRoute path=\"/admin/blog-management\" component={BlogManagement} requiredRole=\"admin\" />\n          <ProtectedRoute path=\"/admin/premium-clients-management\" component={PremiumClientsManagement} requiredRole=\"admin\" />\n          <ProtectedRoute path=\"/admin/featured-clients-management\" component={FeaturedClientsManagement} requiredRole=\"admin\" />\n\n          <ProtectedRoute path=\"/admin/site-settings\" component={SiteSettings} requiredRole=\"admin\" />\n          <ProtectedRoute path=\"/admin/contact-messages\" component={ContactMessagesPage} requiredRole=\"admin\" />\n          \n          {/* صفحة عملاء التميز */}\n          <Route path=\"/premium-clients\" component={PremiumClients} />\n          \n          {/* صفحة هبوط للشركات */}\n          <Route path=\"/companies-landing\" component={CompaniesLanding} />\n          \n          {/* صفحة اختبار تكامل صادق */}\n          <Route path=\"/test-sadiq\" component={TestSadiq} />\n          \n          {/* Fallback to 404 */}\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      {!isAuthPage && <Footer />}\n    </TooltipProvider>\n  );\n}\n\nexport default App;\n","size_bytes":14848},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&family=IBM+Plex+Sans+Arabic:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* ===== تأثيرات التفاعل والحركة ===== */\n@layer components {\n  /* تأثيرات البطاقات */\n  .hover-card-lift {\n    @apply transition-all duration-300 ease-in-out hover:shadow-lg hover:-translate-y-1;\n  }\n  \n  /* تأثيرات الأزرار */\n  .hover-button-scale {\n    @apply transition-transform duration-150 ease-in-out active:scale-95 hover:scale-105;\n  }\n  \n  /* تأثيرات للنص الفائق */\n  .link-underline {\n    @apply relative after:absolute after:bg-primary after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:origin-bottom-right after:transition-all after:duration-300 hover:after:origin-bottom-left hover:after:w-full;\n  }\n  \n  /* تأثيرات الشارات */\n  .badge-pulse {\n    @apply transition-all duration-300 hover:bg-primary/10 hover:text-primary;\n  }\n  \n  /* تأثير الاهتزاز اللطيف */\n  .subtle-shake {\n    animation: subtle-shake 0.5s cubic-bezier(.36,.07,.19,.97) both;\n    transform: translate3d(0, 0, 0);\n    backface-visibility: hidden;\n    perspective: 1000px;\n  }\n  \n  @keyframes subtle-shake {\n    10%, 90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n    \n    20%, 80% {\n      transform: translate3d(1px, 0, 0);\n    }\n    \n    30%, 50%, 70% {\n      transform: translate3d(-2px, 0, 0);\n    }\n    \n    40%, 60% {\n      transform: translate3d(2px, 0, 0);\n    }\n  }\n  \n  /* تأثير النبض */\n  .pulse-effect {\n    animation: pulse 1.5s infinite;\n  }\n  \n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 rgba(var(--color-primary), 0.7);\n    }\n    70% {\n      box-shadow: 0 0 0 10px rgba(var(--color-primary), 0);\n    }\n    100% {\n      box-shadow: 0 0 0 0 rgba(var(--color-primary), 0);\n    }\n  }\n  \n  /* تأثير العائم */\n  .float-animation, .floating-button {\n    animation: float 3s ease-in-out infinite;\n  }\n  \n  /* تأثير التلاشي عند الدخول */\n  .fade-in-animation {\n    opacity: 0;\n    animation: fadeIn 0.6s ease-in forwards;\n  }\n  \n  .fade-in {\n    animation: fadeIn 0.5s ease-in-out;\n  }\n  \n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  /* تأثير العناصر المتلاشية عند التمرير */\n  .fade-out-on-scroll {\n    transition: opacity 0.4s ease-out, transform 0.4s ease-out;\n  }\n\n  /* نمط تضبيب النص */\n  .blur-text {\n    color: rgba(0, 0, 0, 0.7);\n    position: relative;\n  }\n  \n  /* تعريف keyframes للتأثير العائم يوجد في الأعلى */\n  \n  /* تأثير تغيير الألوان التدريجي */\n  .shimmer {\n    background: linear-gradient(90deg, \n      rgba(255, 255, 255, 0.1) 0%, \n      rgba(255, 255, 255, 0.2) 50%, \n      rgba(255, 255, 255, 0.1) 100%\n    );\n    background-size: 200% 100%;\n    animation: shimmer 2s infinite;\n  }\n  \n  @keyframes shimmer {\n    0% { background-position: 200% 0; }\n    100% { background-position: -200% 0; }\n  }\n  \n  /* تأثير فقاعات خلفية متحركة */\n  .animate-blob {\n    animation: blob 7s infinite;\n  }\n  \n  .animation-delay-2000 {\n    animation-delay: 2s;\n  }\n  \n  .animation-delay-4000 {\n    animation-delay: 4s;\n  }\n  \n  @keyframes blob {\n    0% {\n      transform: translate(0px, 0px) scale(1);\n    }\n    33% {\n      transform: translate(30px, -50px) scale(1.1);\n    }\n    66% {\n      transform: translate(-20px, 20px) scale(0.9);\n    }\n    100% {\n      transform: translate(0px, 0px) scale(1);\n    }\n  }\n}\n\n:root {\n  --background: 0 0% 100%;\n  --foreground: 20 14.3% 4.1%;\n  --muted: 60 4.8% 95.9%;\n  --muted-foreground: 25 5.3% 44.7%;\n  --popover: 0 0% 100%;\n  --popover-foreground: 20 14.3% 4.1%;\n  --card: 0 0% 100%;\n  --card-foreground: 20 14.3% 4.1%;\n  --border: 20 5.9% 90%;\n  --input: 20 5.9% 90%;\n  --primary: 207 90% 54%;\n  --primary-foreground: 211 100% 99%;\n  --secondary: 60 4.8% 95.9%;\n  --secondary-foreground: 24 9.8% 10%;\n  --accent: 37 92% 50%;\n  --accent-foreground: 24 9.8% 10%;\n  --destructive: 0 84.2% 60.2%;\n  --destructive-foreground: 60 9.1% 97.8%;\n  --ring: 20 14.3% 4.1%;\n  --radius: 0.5rem;\n  \n  /* For secondary-color - green */\n  --secondary-color: 160 84% 39%;\n  --secondary-color-light: 160 84% 75%;\n  --secondary-color-dark: 161 94% 30%;\n  \n  /* Chart colors */\n  --chart-1: 207 90% 54%;\n  --chart-2: 37 92% 50%;\n  --chart-3: 160 84% 39%;\n  --chart-4: 340 82% 52%;\n  --chart-5: 262 83% 58%;\n  \n  /* Sidebar colors */\n  --sidebar-background: 0 0% 100%;\n  --sidebar-foreground: 20 14.3% 4.1%;\n  --sidebar-primary: 207 90% 54%;\n  --sidebar-primary-foreground: 211 100% 99%;\n  --sidebar-accent: 60 4.8% 95.9%;\n  --sidebar-accent-foreground: 24 9.8% 10%;\n  --sidebar-border: 20 5.9% 90%;\n  --sidebar-ring: 20 14.3% 4.1%;\n}\n\n.dark {\n  --background: 240 10% 3.9%;\n  --foreground: 0 0% 98%;\n  --muted: 240 3.7% 15.9%;\n  --muted-foreground: 240 5% 64.9%;\n  --popover: 240 10% 3.9%;\n  --popover-foreground: 0 0% 98%;\n  --card: 240 10% 3.9%;\n  --card-foreground: 0 0% 98%;\n  --border: 240 3.7% 15.9%;\n  --input: 240 3.7% 15.9%;\n  --primary: 207 90% 54%;\n  --primary-foreground: 211 100% 99%;\n  --secondary: 240 3.7% 15.9%;\n  --secondary-foreground: 0 0% 98%;\n  --accent: 37 92% 50%;\n  --accent-foreground: 0 0% 98%;\n  --destructive: 0 62.8% 30.6%;\n  --destructive-foreground: 0 0% 98%;\n  --ring: 240 4.9% 83.9%;\n  --radius: 0.5rem;\n  \n  /* For secondary-color - green in dark mode */\n  --secondary-color: 160 84% 39%;\n  --secondary-color-light: 160 84% 30%;\n  --secondary-color-dark: 161 94% 45%;\n  \n  /* Sidebar colors - dark mode */\n  --sidebar-background: 240 10% 3.9%;\n  --sidebar-foreground: 0 0% 98%;\n  --sidebar-primary: 207 90% 54%;\n  --sidebar-primary-foreground: 211 100% 99%;\n  --sidebar-accent: 240 3.7% 15.9%;\n  --sidebar-accent-foreground: 0 0% 98%;\n  --sidebar-border: 240 3.7% 15.9%;\n  --sidebar-ring: 240 4.9% 83.9%;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  html, body {\n    direction: rtl;\n    text-align: right;\n  }\n\n  body {\n    @apply bg-background text-foreground;\n    font-feature-settings: \"rlig\" 1, \"calt\" 1;\n    font-family: \"IBM Plex Sans Arabic\", sans-serif;\n  }\n  \n  h1, h2, h3, h4, h5, h6 {\n    font-family: \"Tajawal\", sans-serif;\n  }\n\n  /* RTL overrides for input elements */\n  input, textarea {\n    text-align: right;\n  }\n}\n\n/* RTL adjustments for ShadCN components */\n.rtl-flip {\n  transform: scaleX(-1);\n}\n\n.space-x-reverse > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-x-reverse: 1;\n}\n\n/* Force RTL for some UI components */\n.right-to-left {\n  direction: rtl;\n  text-align: right;\n}\n\n.left-to-right {\n  direction: ltr;\n  text-align: left;\n}\n\n/* RTL support for shadcn components */\n:is(.flex, .inline-flex) > :not([hidden]) ~ :not([hidden]) {\n  margin-right: var(--tw-space-x-reverse);\n  margin-left: calc(var(--tw-space-x) * (1 - var(--tw-space-x-reverse)));\n}\n\n/* تحسين قراءة النص الأبيض على خلفيات فاتحة */\n.text-shadow {\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n.text-shadow-sm {\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\n}\n.text-shadow-lg {\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n","size_bytes":7327},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { queryClient } from \"./lib/queryClient\";\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n    <Toaster />\n  </QueryClientProvider>\n);\n","size_bytes":410},"server/routes/sadiq.ts":{"content":"import { Router, Request, Response } from 'express';\nimport { generateProjectNdaPdf } from '../generateNDA';\nimport jwt from 'jsonwebtoken';\nimport { storage } from '../storage';\n\n// JWT middleware للمصادقة (نسخة محدثة متطابقة مع النظام الرئيسي)\nconst authenticateToken = async (req: any, res: Response, next: any) => {\n  try {\n    console.log('JWT Middleware: POST /api/sadiq/generate-nda');\n    const authHeader = req.headers['authorization'];\n    console.log('Authorization header:', authHeader ? authHeader.substring(0, 50) + '...' : 'undefined');\n    \n    const token = authHeader && authHeader.split(' ')[1];\n    console.log('Extracted token:', token ? 'Present' : 'Missing');\n\n    if (!token) {\n      console.log('No token found');\n      return res.status(401).json({ \n        error: 'Access token required',\n        message: 'رمز الوصول مطلوب' \n      });\n    }\n\n    try {\n      const decoded: any = jwt.verify(token, 'linktech-jwt-secret-2024');\n      console.log('Token verification result: Valid');\n      console.log('Decoded token userId:', decoded.userId);\n      \n      const user = await storage.getUser(decoded.userId);\n      console.log('User lookup result:', user ? `Found user ${user.username}` : 'User not found');\n      \n      if (!user) {\n        return res.status(401).json({ \n          error: 'User not found',\n          message: 'المستخدم غير موجود' \n        });\n      }\n\n      console.log(`Set req.user to: ${user.username} (${user.role})`);\n      req.user = user;\n      next();\n    } catch (jwtError) {\n      console.log('Token verification result: Invalid');\n      console.error('JWT verification error:', jwtError);\n      return res.status(403).json({ \n        error: 'Invalid token',\n        message: 'رمز وصول غير صالح' \n      });\n    }\n  } catch (error) {\n    console.error('Authentication middleware error:', error);\n    return res.status(500).json({ \n      error: 'Internal server error',\n      message: 'خطأ في المصادقة' \n    });\n  }\n};\n\nconst router = Router();\n\n// Sadiq API Authentication\nrouter.post('/authenticate', async (req: Request, res: Response) => {\n  try {\n    console.log('محاولة المصادقة مع واجهة برمجة تطبيقات صادق...');\n    \n    // Sadiq authentication endpoint\n    const authUrl = 'https://sandbox-api.sadq-sa.com/Authentication/Authority/Token';\n    \n    // Prepare form data for authentication\n    const formData = new URLSearchParams();\n    formData.append('grant_type', 'integration');\n    formData.append('accountId', '98AA5961-3917-4595-A14B-ED5E99BDEBE4');\n    formData.append('accountSecret', 'DcQ8FhLKTZC1QoTZXFJRMKqVMLoilUr6');\n    formData.append('username', 'mj266501@gmail.com');\n    formData.append('password', '11223344@Mm');\n\n    const response = await fetch(authUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic SW50ZWdyYXRpb25jbGllbnQ6ZHZuY3h6dmNkc3NoYmJ6YXZyd2lkc2JkdmRnZmRoc2JjdmJkZ2Y='\n      },\n      body: formData\n    });\n\n    if (!response.ok) {\n      console.error('خطأ في استجابة صادق:', response.status, response.statusText);\n      const errorText = await response.text();\n      console.error('تفاصيل الخطأ:', errorText);\n      return res.status(response.status).json({ \n        error: 'Authentication failed',\n        details: errorText \n      });\n    }\n\n    const authResult = await response.json();\n    console.log('تم الحصول على رمز الوصول من صادق بنجاح');\n    \n    res.json(authResult);\n  } catch (error) {\n    console.error('خطأ في المصادقة مع صادق:', error);\n    res.status(500).json({ \n      error: 'Internal server error',\n      message: 'فشل في الاتصال مع واجهة برمجة تطبيقات صادق' \n    });\n  }\n});\n\n// Send invitation through Sadiq API\nrouter.post('/send-invitation', async (req: Request, res: Response) => {\n  try {\n    const { accessToken, invitationData } = req.body;\n    \n    if (!accessToken) {\n      return res.status(400).json({ \n        error: 'Access token required',\n        message: 'رمز الوصول مطلوب لإرسال الدعوة' \n      });\n    }\n\n    console.log('إرسال دعوة التوقيع عبر صادق...');\n    console.log('بيانات الدعوة:', JSON.stringify(invitationData, null, 2));\n\n    const invitationUrl = 'https://sandbox-api.sadq-sa.com/IntegrationService/Invitation/Send-Invitation';\n\n    const response = await fetch(invitationUrl, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(invitationData)\n    });\n\n    if (!response.ok) {\n      console.error('خطأ في إرسال الدعوة:', response.status, response.statusText);\n      const errorText = await response.text();\n      console.error('تفاصيل خطأ الدعوة:', errorText);\n      return res.status(response.status).json({ \n        error: 'Invitation failed',\n        details: errorText \n      });\n    }\n\n    const invitationResult = await response.json();\n    console.log('تم إرسال دعوة التوقيع بنجاح عبر صادق');\n    \n    res.json(invitationResult);\n  } catch (error) {\n    console.error('خطأ في إرسال دعوة التوقيع:', error);\n    res.status(500).json({ \n      error: 'Internal server error',\n      message: 'فشل في إرسال دعوة التوقيع عبر صادق' \n    });\n  }\n});\n\n// إنشاء اتفاقية عدم الإفصاح للتنزيل المحلي\nrouter.post('/generate-nda', authenticateToken, async (req: Request, res: Response) => {\n  try {\n    console.log('إنشاء اتفاقية عدم الإفصاح للتنزيل...');\n    console.log('Request body:', JSON.stringify(req.body, null, 2));\n    \n    const { projectData, companyData } = req.body;\n    \n    if (!projectData || !companyData) {\n      console.log('Missing required data - projectData:', !!projectData, 'companyData:', !!companyData);\n      return res.status(400).json({\n        error: 'Missing required data',\n        message: 'بيانات المشروع والشركة مطلوبة'\n      });\n    }\n\n    console.log('Starting PDF generation with:', {\n      projectTitle: projectData.title,\n      companyName: companyData.name\n    });\n\n    // إنشاء ملف PDF مع أسماء افتراضية (للتحميل المحلي فقط)\n    const defaultPartialNames = {\n      entrepreneur: '[Project Owner]',\n      companyRep: '[Company Representative]'\n    };\n    const pdfBuffer = await generateProjectNdaPdf(projectData, companyData, defaultPartialNames);\n    \n    console.log('PDF generation completed, buffer size:', pdfBuffer.length);\n    \n    if (pdfBuffer.length < 100) {\n      console.error('PDF buffer too small, likely an error occurred');\n      return res.status(500).json({\n        error: 'PDF generation failed',\n        message: 'فشل في إنشاء ملف PDF - حجم غير صحيح'\n      });\n    }\n    \n    // إعداد headers للتنزيل\n    const filename = `NDA-${projectData.title.replace(/\\s+/g, '-')}-${Date.now()}.pdf`;\n    \n    res.setHeader('Content-Type', 'application/pdf');\n    res.setHeader('Content-Disposition', `attachment; filename=\"${filename}\"`);\n    res.setHeader('Content-Length', pdfBuffer.length);\n    \n    console.log(`✅ تم إنشاء ملف PDF بنجاح: ${filename}, الحجم: ${pdfBuffer.length} بايت`);\n    \n    // إرسال الملف\n    res.send(pdfBuffer);\n    \n  } catch (error: any) {\n    console.error('❌ خطأ في إنشاء اتفاقية عدم الإفصاح:', error);\n    console.error('Error stack:', error.stack);\n    res.status(500).json({\n      error: 'Internal server error',\n      message: 'فشل في إنشاء اتفاقية عدم الإفصاح',\n      details: error.message\n    });\n  }\n});\n\n// Generate and upload NDA document to Sadiq\nrouter.post('/generate-and-upload-nda', authenticateToken, async (req: Request, res: Response) => {\n  try {\n    const { accessToken, projectData, companyData } = req.body;\n    \n    if (!accessToken) {\n      return res.status(400).json({ \n        error: 'Access token required',\n        message: 'رمز الوصول مطلوب لرفع الوثيقة' \n      });\n    }\n\n    console.log('إنشاء ورفع اتفاقية عدم الإفصاح إلى صادق...');\n    \n    // Generate NDA document with placeholder data if not provided\n    const defaultProject = {\n      id: Date.now(),\n      title: projectData?.title || 'مشروع تطوير البرمجيات',\n      description: projectData?.description || 'مشروع لتطوير تطبيق أو نظام برمجي حسب المتطلبات المحددة'\n    };\n    \n    const defaultCompany = {\n      name: companyData?.name || '[اسم الشركة]',\n      location: companyData?.location || '[موقع الشركة]'\n    };\n\n    // إنشاء ملف PDF مع أسماء افتراضية مخفية جزئياً\n    const defaultPartialNames = {\n      entrepreneur: '[Proj*** Own***]',\n      companyRep: '[Com*** Rep***]'\n    };\n    const pdfBuffer = await generateProjectNdaPdf(defaultProject, defaultCompany, defaultPartialNames);\n    \n    // Convert to base64\n    const documentBase64 = pdfBuffer.toString('base64');\n    const documentName = `NDA-${defaultProject.id}-${Date.now().toString().substring(0, 8)}.pdf`;\n    \n    console.log('تم إنشاء الـ PDF وتحويله إلى base64، حجم الملف:', pdfBuffer.length, 'بايت');\n\n    // Upload document to Sadiq\n    const uploadUrl = 'https://sandbox-api.sadq-sa.com/IntegrationService/Document/Upload';\n    \n    const uploadPayload = {\n      name: documentName,\n      content: documentBase64,\n      contentType: 'application/pdf'\n    };\n\n    console.log('رفع الوثيقة إلى صادق...', documentName);\n\n    const uploadResponse = await fetch(uploadUrl, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(uploadPayload)\n    });\n\n    if (!uploadResponse.ok) {\n      console.error('خطأ في رفع الوثيقة:', uploadResponse.status, uploadResponse.statusText);\n      const errorText = await uploadResponse.text();\n      console.error('تفاصيل خطأ الرفع:', errorText);\n      return res.status(uploadResponse.status).json({ \n        error: 'Document upload failed',\n        details: errorText \n      });\n    }\n\n    const uploadResult = await uploadResponse.json();\n    console.log('تم رفع الوثيقة بنجاح، معرف الوثيقة:', uploadResult.id);\n    \n    // Return document ID and signature field information\n    res.json({\n      documentId: uploadResult.id,\n      documentName,\n      signatureFields: [\n        {\n          name: 'الطرف الأول (صاحب المشروع)',\n          placeholder: '[اسم رائد الأعمال]',\n          position: 'entrepreneur'\n        },\n        {\n          name: 'الطرف الثاني (الشركة)', \n          placeholder: '[اسم ممثل الشركة]',\n          position: 'company'\n        }\n      ],\n      uploadResult\n    });\n  } catch (error) {\n    console.error('خطأ في إنشاء ورفع اتفاقية عدم الإفصاح:', error);\n    res.status(500).json({ \n      error: 'Internal server error',\n      message: 'فشل في إنشاء ورفع اتفاقية عدم الإفصاح' \n    });\n  }\n});\n\n// Upload document to Sadiq (fallback for custom documents)\nrouter.post('/upload-document', async (req: Request, res: Response) => {\n  try {\n    const { accessToken, documentBase64, documentName } = req.body;\n    \n    if (!accessToken || !documentBase64) {\n      return res.status(400).json({ \n        error: 'Access token and document required',\n        message: 'رمز الوصول والوثيقة مطلوبان' \n      });\n    }\n\n    console.log('رفع وثيقة مخصصة إلى صادق...');\n    \n    const uploadUrl = 'https://sandbox-api.sadq-sa.com/IntegrationService/Document/Upload';\n    \n    const uploadPayload = {\n      name: documentName || `document-${Date.now()}.pdf`,\n      content: documentBase64,\n      contentType: 'application/pdf'\n    };\n\n    const uploadResponse = await fetch(uploadUrl, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(uploadPayload)\n    });\n\n    if (!uploadResponse.ok) {\n      console.error('خطأ في رفع الوثيقة:', uploadResponse.status, uploadResponse.statusText);\n      const errorText = await uploadResponse.text();\n      console.error('تفاصيل خطأ الرفع:', errorText);\n      return res.status(uploadResponse.status).json({ \n        error: 'Document upload failed',\n        details: errorText \n      });\n    }\n\n    const uploadResult = await uploadResponse.json();\n    console.log('تم رفع الوثيقة المخصصة بنجاح، معرف الوثيقة:', uploadResult.id);\n    \n    res.json(uploadResult);\n  } catch (error) {\n    console.error('خطأ في رفع الوثيقة:', error);\n    res.status(500).json({ \n      error: 'Internal server error',\n      message: 'فشل في رفع الوثيقة' \n    });\n  }\n});\n\n// Helper function to hide partial names\nfunction hidePartialName(name: string): string {\n  if (!name || name.length < 2) return name;\n  \n  const words = name.trim().split(' ');\n  return words.map(word => {\n    if (word.length <= 2) return word;\n    const visibleLength = Math.ceil(word.length / 2);\n    const hiddenLength = word.length - visibleLength;\n    return word.substring(0, visibleLength) + '*'.repeat(hiddenLength);\n  }).join(' ');\n}\n\n// NEW WORKFLOW: Generate NDA as base64 for bulk upload\nrouter.post('/generate-nda-base64', authenticateToken, async (req: Request, res: Response) => {\n  try {\n    console.log('إنشاء اتفاقية عدم الإفصاح كـ base64...');\n    console.log('Request body:', JSON.stringify(req.body, null, 2));\n    \n    const { projectData, companyData, entrepreneurName, companyRepName } = req.body;\n    \n    if (!projectData?.title || !companyData?.name || !entrepreneurName || !companyRepName) {\n      return res.status(400).json({\n        error: 'Missing required data',\n        message: 'بيانات المشروع والشركة وأسماء الأطراف مطلوبة'\n      });\n    }\n\n    console.log('Starting PDF generation with signing parties:', { \n      projectTitle: projectData.title, \n      companyName: companyData.name,\n      entrepreneurName,\n      companyRepName\n    });\n\n    // إنشاء ملف PDF باستخدام المكتبة المحسنة مع الأسماء المخفية جزئياً\n    const partialNames = {\n      entrepreneur: hidePartialName(entrepreneurName),\n      companyRep: hidePartialName(companyRepName)\n    };\n    const pdfBuffer = await generateProjectNdaPdf(projectData, companyData, partialNames);\n    console.log('PDF generation completed, buffer size:', pdfBuffer.length);\n\n    // تحويل إلى base64\n    const base64String = pdfBuffer.toString('base64');\n    console.log('Base64 conversion completed, length:', base64String.length);\n\n    // إنشاء اسم ملف فريد\n    const timestamp = Date.now();\n    const filename = `NDA-${projectData.title.replace(/\\s+/g, '-')}-${timestamp}.pdf`;\n    \n    console.log(`✅ تم إنشاء ملف PDF كـ base64 بنجاح: ${filename}`);\n\n    // إرسال النتيجة مع base64 وأسماء الأطراف (مخفية جزئياً)\n    res.json({\n      success: true,\n      base64: base64String,\n      filename,\n      fileSize: pdfBuffer.length,\n      signingParties: {\n        entrepreneur: hidePartialName(entrepreneurName),\n        companyRep: hidePartialName(companyRepName)\n      },\n      originalNames: {\n        entrepreneur: entrepreneurName,\n        companyRep: companyRepName\n      }\n    });\n\n  } catch (error: any) {\n    console.error('خطأ في إنشاء اتفاقية عدم الإفصاح:', error);\n    res.status(500).json({\n      error: 'PDF generation failed',\n      message: 'فشل في إنشاء ملف اتفاقية عدم الإفصاح',\n      details: error.message\n    });\n  }\n});\n\n// CORRECTED WORKFLOW: Bulk Initiate Envelope (Upload + Get Document ID in one step)\nrouter.post('/bulk-initiate-envelope', authenticateToken, async (req: Request, res: Response) => {\n  try {\n    console.log('إنشاء مظروف صادق مع رفع الوثيقة...');\n    const { accessToken, base64, filename } = req.body;\n    \n    if (!accessToken || !base64 || !filename) {\n      return res.status(400).json({\n        error: 'Missing required data',\n        message: 'رمز الوصول والملف والاسم مطلوبة'\n      });\n    }\n\n    const bulkInitiateUrl = 'https://sandbox-api.sadq-sa.com/IntegrationService/Document/Bulk/Initiate-envelope-Base64';\n    \n    const payload = {\n      webhookId: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n      referenceNumber: `linktech-contract-${Date.now()}`,\n      files: [\n        {\n          file: base64,\n          fileName: filename,\n          password: \"\"\n        }\n      ]\n    };\n\n    console.log('Initiating envelope with Sadiq...');\n\n    const response = await fetch(bulkInitiateUrl, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      console.error('خطأ في إنشاء المظروف:', response.status, response.statusText);\n      const errorText = await response.text();\n      console.error('تفاصيل خطأ المظروف:', errorText);\n      return res.status(response.status).json({ \n        error: 'Bulk envelope initiate failed',\n        details: errorText \n      });\n    }\n\n    const result = await response.json();\n    console.log('تم إنشاء المظروف بنجاح:', result);\n    \n    // Extract document ID from the response\n    const documentId = result.data?.bulkFileResponse?.[0]?.documentId;\n    \n    if (!documentId) {\n      console.error('No document ID found in response:', result);\n      return res.status(500).json({\n        error: 'No document ID received',\n        message: 'لم يتم الحصول على معرف الوثيقة من صادق'\n      });\n    }\n\n    console.log(`✅ تم الحصول على معرف الوثيقة من المظروف: ${documentId}`);\n\n    const referenceNumber = result.data?.bulkFileResponse?.[0]?.referenceNumber || payload.referenceNumber;\n    \n    res.json({\n      success: true,\n      documentId,\n      envelopeId: result.data?.envelopeId,\n      referenceNumber: referenceNumber,\n      statusCheckUrl: referenceNumber ? `/api/sadiq/envelope-status/${referenceNumber}` : null,\n      fullResponse: result\n    });\n\n  } catch (error: any) {\n    console.error('خطأ في إنشاء المظروف:', error);\n    res.status(500).json({\n      error: 'Envelope initiate failed',\n      message: 'فشل في إنشاء مظروف صادق',\n      details: error.message\n    });\n  }\n});\n\n// NEW WORKFLOW: Send invitations using the updated format\nrouter.post('/send-invitations', authenticateToken, async (req: Request, res: Response) => {\n  try {\n    console.log('إرسال دعوات التوقيع عبر صادق...');\n    const { accessToken, documentId, entrepreneurEmail, companyEmail, invitationMessage } = req.body;\n    \n    if (!accessToken || !documentId || !entrepreneurEmail || !companyEmail) {\n      return res.status(400).json({\n        error: 'Missing required data',\n        message: 'رمز الوصول ومعرف الوثيقة وعناوين البريد الإلكتروني مطلوبة'\n      });\n    }\n\n    const invitationUrl = 'https://sandbox-api.sadq-sa.com/IntegrationService/Invitation/Send-Invitation';\n    \n    const invitationPayload = {\n      documentId,\n      destinations: [\n        {\n          destinationName: \"Project Owner\",\n          destinationEmail: entrepreneurEmail,\n          destinationPhoneNumber: \"\",\n          nationalId: \"\",\n          signeOrder: 0,\n          ConsentOnly: true,\n          signatories: [],\n          availableTo: \"2029-08-29\",\n          authenticationType: 0,\n          InvitationLanguage: 1,\n          RedirectUrl: \"\",\n          AllowUserToAddDestination: false\n        },\n        {\n          destinationName: \"Company Representative\",\n          destinationEmail: companyEmail,\n          destinationPhoneNumber: \"\",\n          nationalId: \"\",\n          signeOrder: 1,\n          ConsentOnly: true,\n          signatories: [\n            {\n              signatureHigh: 80,\n              signatureWidth: 160,\n              pageNumber: 1,\n              text: \"\",\n              type: \"Signature\",\n              positionX: 70,\n              positionY: 500\n            }\n          ],\n          availableTo: \"2024-10-15T00:00:00Z\",\n          authenticationType: 0,\n          InvitationLanguage: 1,\n          RedirectUrl: \"\",\n          AllowUserToAddDestination: false\n        }\n      ],\n      invitationMessage: invitationMessage || \"Dear User, please sign the document attached below\",\n      invitationSubject: \"NDA Signature Request - LinkTech Platform\"\n    };\n\n    console.log('Sending invitation with payload ready...');\n\n    const response = await fetch(invitationUrl, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(invitationPayload)\n    });\n\n    if (!response.ok) {\n      console.error('خطأ في إرسال الدعوة:', response.status, response.statusText);\n      const errorText = await response.text();\n      console.error('تفاصيل خطأ الدعوة:', errorText);\n      return res.status(response.status).json({ \n        error: 'Invitation failed',\n        details: errorText \n      });\n    }\n\n    const invitationResult = await response.json();\n    console.log('تم إرسال دعوة التوقيع بنجاح عبر صادق');\n    \n    res.json({\n      success: true,\n      result: invitationResult\n    });\n\n  } catch (error: any) {\n    console.error('خطأ في إرسال دعوة التوقيع:', error);\n    res.status(500).json({ \n      error: 'Internal server error',\n      message: 'فشل في إرسال دعوة التوقيع عبر صادق',\n      details: error.message\n    });\n  }\n});\n\n// تتبع حالة المظروف باستخدام رقم المرجع\nrouter.get('/envelope-status/:referenceNumber', authenticateToken, async (req: Request, res: Response) => {\n  try {\n    const { referenceNumber } = req.params;\n    const { accessToken } = req.query;\n\n    if (!accessToken) {\n      return res.status(400).json({\n        error: 'Access token required',\n        message: 'رمز الوصول مطلوب لتتبع حالة المظروف'\n      });\n    }\n\n    console.log(`فحص حالة المظروف برقم المرجع: ${referenceNumber}`);\n\n    const statusUrl = `https://sandbox-api.sadq-sa.com/IntegrationService/Document/envelope-status/referenceNumber/${referenceNumber}`;\n\n    const response = await fetch(statusUrl, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n\n    if (!response.ok) {\n      console.error('خطأ في تتبع حالة المظروف:', response.status, response.statusText);\n      const errorText = await response.text();\n      console.error('تفاصيل خطأ تتبع الحالة:', errorText);\n      return res.status(response.status).json({ \n        error: 'Status check failed',\n        details: errorText,\n        message: 'فشل في تتبع حالة المظروف'\n      });\n    }\n\n    const statusResult = await response.json();\n    console.log('حالة المظروف الحالية:', JSON.stringify(statusResult, null, 2));\n\n    // معالجة الاستجابة من صادق وتحسينها\n    const envelopeData = statusResult.data;\n    const signatories = envelopeData?.signatories || [];\n    const documents = envelopeData?.documents || [];\n    \n    // حساب إحصائيات التوقيع\n    const signedCount = signatories.filter((s: any) => s.status === 'SIGNED').length;\n    const pendingCount = signatories.filter((s: any) => s.status === 'PENDING').length;\n    const totalSignatories = signatories.length;\n    \n    // تحديد الحالة العامة\n    const isComplete = envelopeData?.status === 'completed' || envelopeData?.status === 'Completed';\n    const isInProgress = envelopeData?.status === 'In-progress';\n    const isPending = pendingCount > 0;\n    \n    const processedStatus = {\n      referenceNumber,\n      envelopeId: envelopeData?.id,\n      status: envelopeData?.status || 'Unknown',\n      createDate: envelopeData?.createDate,\n      lastUpdated: new Date().toISOString(),\n      \n      // إحصائيات التوقيع\n      signedCount,\n      pendingCount,\n      totalSignatories,\n      completionPercentage: totalSignatories > 0 ? Math.round((signedCount / totalSignatories) * 100) : 0,\n      \n      // معلومات الموقعين\n      signatories: signatories.map((signer: any) => ({\n        id: signer.id,\n        name: signer.fullName,\n        nameAr: signer.fullNameAr,\n        email: signer.email,\n        status: signer.status,\n        signOrder: signer.signOrder,\n        phoneNumber: signer.phoneNumber\n      })),\n      \n      // معلومات الوثائق\n      documents: documents.map((doc: any) => ({\n        id: doc.id,\n        fileName: doc.fileName,\n        uploadDate: doc.uploadDate,\n        sizeInKB: doc.sizeInKB,\n        isSigned: doc.isSigned\n      })),\n      \n      // حالات منطقية\n      isComplete,\n      isInProgress,\n      isPending,\n      \n      rawResponse: statusResult\n    };\n\n    res.json(processedStatus);\n\n  } catch (error: any) {\n    console.error('خطأ في تتبع حالة المظروف:', error);\n    res.status(500).json({\n      error: 'Status check failed',\n      message: 'فشل في تتبع حالة المظروف',\n      details: error.message\n    });\n  }\n});\n\n// إنشاء webhook لتلقي تحديثات حالة المظروف من صادق\nrouter.post('/webhook/envelope-status', async (req: Request, res: Response) => {\n  try {\n    console.log('تلقي تحديث حالة المظروف من صادق:', JSON.stringify(req.body, null, 2));\n    \n    const { referenceNumber, status, envelopeId, signingProgress } = req.body;\n    \n    // يمكن إضافة منطق لحفظ حالة المظروف في قاعدة البيانات هنا\n    console.log(`تحديث حالة المظروف ${referenceNumber}: ${status}`);\n    \n    // إرسال إشعار للمستخدمين إذا اكتمل التوقيع\n    if (status === 'completed' || status === 'signed') {\n      console.log(`✅ تم إكمال التوقيع للمظروف ${referenceNumber}`);\n      // يمكن إضافة إرسال إشعارات هنا\n    }\n    \n    res.json({ \n      success: true, \n      message: 'تم تلقي تحديث الحالة بنجاح',\n      processed: true \n    });\n    \n  } catch (error: any) {\n    console.error('خطأ في معالجة webhook حالة المظروف:', error);\n    res.status(500).json({\n      error: 'Webhook processing failed',\n      message: 'فشل في معالجة تحديث حالة المظروف'\n    });\n  }\n});\n\n// تحميل الوثيقة من صادق\nrouter.get('/download-document/:documentId', async (req: Request, res: Response) => {\n  try {\n    const { documentId } = req.params;\n    const accessToken = req.query.accessToken as string;\n\n    if (!accessToken) {\n      return res.status(400).json({ error: 'Access token is required' });\n    }\n\n    console.log(`تحميل الوثيقة برقم المعرف: ${documentId}`);\n\n    const response = await fetch(`https://sandbox-api.sadq-sa.com/IntegrationService/Document/DownloadBase64/${documentId}`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const downloadResult = await response.json();\n    console.log('نتيجة تحميل الوثيقة:', JSON.stringify(downloadResult, null, 2));\n\n    if (downloadResult.errorCode !== 0) {\n      return res.status(400).json({ \n        error: 'فشل في تحميل الوثيقة', \n        message: downloadResult.message \n      });\n    }\n\n    const documentData = downloadResult.data;\n    \n    // إرسال الوثيقة كاستجابة مباشرة للتحميل\n    const fileBuffer = Buffer.from(documentData.file, 'base64');\n    \n    res.setHeader('Content-Type', documentData.contentType || 'application/pdf');\n    res.setHeader('Content-Disposition', `attachment; filename=\"${documentData.fileName}\"`);\n    res.setHeader('Content-Length', fileBuffer.length);\n    \n    res.send(fileBuffer);\n\n  } catch (error) {\n    console.error('خطأ في تحميل الوثيقة:', error);\n    res.status(500).json({ \n      error: 'فشل في تحميل الوثيقة', \n      details: error instanceof Error ? error.message : 'Unknown error' \n    });\n  }\n});\n\nexport default router;","size_bytes":29771},"server/routes/sitemap.ts":{"content":"import { Request, Response, Router } from \"express\";\nimport { storage } from \"../storage\";\nimport { pingSitemapToSearchEngines } from \"../analytics\";\n\nconst router = Router();\n\n/**\n * وظيفة لتوليد خريطة موقع XML ديناميكية\n * \n * تنشئ هذه الوظيفة ملف XML يحتوي على روابط صفحات الموقع الأساسية،\n * بالإضافة إلى روابط ديناميكية للمشاريع والشركات الموثقة\n * \n * ملاحظة: تم استبعاد صفحات المشاريع الفردية بناءً على طلب العميل \n * لأنها تحتوي على معلومات حساسة\n */\nasync function generateSitemap(req: Request, res: Response) {\n  try {\n    // الحصول على مسار الموقع من الطلب\n    const baseUrl = process.env.WEBSITE_URL || `${req.protocol}://${req.get('host')}`;\n    \n    // تاريخ التحديث\n    const date = new Date().toISOString();\n\n    // الصفحات الثابتة\n    const staticPages = [\n      { url: '', priority: '1.0', changefreq: 'daily' },\n      { url: 'about', priority: '0.8', changefreq: 'monthly' },\n      { url: 'contact', priority: '0.8', changefreq: 'monthly' },\n      { url: 'how-it-works', priority: '0.8', changefreq: 'monthly' },\n      { url: 'for-companies', priority: '0.8', changefreq: 'monthly' },\n      { url: 'faq', priority: '0.8', changefreq: 'monthly' },\n      { url: 'terms', priority: '0.5', changefreq: 'monthly' },\n      { url: 'privacy', priority: '0.5', changefreq: 'monthly' },\n      { url: 'blog', priority: '0.9', changefreq: 'daily' },\n    ];\n    \n    // صفحات الخدمات\n    const servicePages = [\n      { url: 'services', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/software-company-saudi', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/custom-app-development', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/ecommerce-development', priority: '0.9', changefreq: 'weekly' },\n      { url: 'services/software-development', priority: '0.9', changefreq: 'weekly' },\n    ];\n    \n    // جلب الشركات الموثقة من قاعدة البيانات\n    const companies = await storage.getVerifiedCompanies();\n    \n    // بداية ملف XML\n    let xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n    xml += '<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\\n';\n    \n    // إضافة الصفحات الثابتة\n    staticPages.forEach((page: { url: string; priority: string; changefreq: string }) => {\n      xml += `  <url>\\n`;\n      xml += `    <loc>${baseUrl}/${page.url}</loc>\\n`;\n      xml += `    <lastmod>${date}</lastmod>\\n`;\n      xml += `    <changefreq>${page.changefreq}</changefreq>\\n`;\n      xml += `    <priority>${page.priority}</priority>\\n`;\n      xml += `  </url>\\n`;\n    });\n    \n    // إضافة صفحات الخدمات\n    servicePages.forEach((page: { url: string; priority: string; changefreq: string }) => {\n      xml += `  <url>\\n`;\n      xml += `    <loc>${baseUrl}/${page.url}</loc>\\n`;\n      xml += `    <lastmod>${date}</lastmod>\\n`;\n      xml += `    <changefreq>${page.changefreq}</changefreq>\\n`;\n      xml += `    <priority>${page.priority}</priority>\\n`;\n      xml += `  </url>\\n`;\n    });\n    \n    // إضافة صفحات الشركات الموثقة\n    companies.forEach((company: any) => {\n      xml += `  <url>\\n`;\n      xml += `    <loc>${baseUrl}/companies/${company.id}</loc>\\n`;\n      xml += `    <lastmod>${date}</lastmod>\\n`;\n      xml += `    <changefreq>weekly</changefreq>\\n`;\n      xml += `    <priority>0.7</priority>\\n`;\n      xml += `  </url>\\n`;\n    });\n    \n    // جلب فئات المدونة وإضافتها إلى السايت ماب\n    try {\n      const blogCategories = await storage.getBlogCategories();\n      blogCategories.forEach((category) => {\n        xml += `  <url>\\n`;\n        xml += `    <loc>${baseUrl}/blog/category/${category.slug}</loc>\\n`;\n        xml += `    <lastmod>${category.updatedAt?.toISOString() || date}</lastmod>\\n`;\n        xml += `    <changefreq>weekly</changefreq>\\n`;\n        xml += `    <priority>0.6</priority>\\n`;\n        xml += `  </url>\\n`;\n      });\n    } catch (error) {\n      console.error('Error fetching blog categories:', error);\n    }\n    \n    // جلب مقالات المدونة المنشورة وإضافتها إلى السايت ماب\n    try {\n      const blogPosts = await storage.getPublishedBlogPosts();\n      blogPosts.forEach((post) => {\n        xml += `  <url>\\n`;\n        xml += `    <loc>${baseUrl}/blog/${post.slug}</loc>\\n`;\n        xml += `    <lastmod>${post.updatedAt?.toISOString() || date}</lastmod>\\n`;\n        xml += `    <changefreq>weekly</changefreq>\\n`;\n        xml += `    <priority>0.8</priority>\\n`;\n        xml += `  </url>\\n`;\n      });\n    } catch (error) {\n      console.error('Error fetching blog posts:', error);\n    }\n    \n    // نهاية ملف XML\n    xml += '</urlset>';\n    \n    // إرسال الرد\n    res.header('Content-Type', 'application/xml');\n    res.send(xml);\n  } catch (error) {\n    console.error('Error generating sitemap:', error);\n    res.status(500).send('Error generating sitemap');\n  }\n}\n\n/**\n * وظيفة لتوليد ملف robots.txt\n * \n * تنشئ هذه الوظيفة ملف robots.txt الذي يحدد قواعد الزحف لمحركات البحث\n */\nfunction generateRobotsTxt(req: Request, res: Response) {\n  try {\n    const baseUrl = process.env.WEBSITE_URL || `${req.protocol}://${req.get('host')}`;\n    \n    let robotsTxt = 'User-agent: *\\n';\n    robotsTxt += 'Allow: /\\n';\n    robotsTxt += 'Disallow: /api/\\n';\n    robotsTxt += 'Disallow: /dashboard/\\n';\n    robotsTxt += 'Disallow: /admin/\\n';\n    robotsTxt += 'Disallow: /projects/*\\n'; // حسب طلب العميل، منع فهرسة صفحات المشاريع لأنها تحتوي على معلومات حساسة\n    robotsTxt += `Sitemap: ${baseUrl}/sitemap.xml\\n`;\n    \n    res.header('Content-Type', 'text/plain');\n    res.send(robotsTxt);\n  } catch (error) {\n    console.error('Error generating robots.txt:', error);\n    res.status(500).send('Error generating robots.txt');\n  }\n}\n\n/**\n * إرسال إشعار تحديث خريطة الموقع إلى محركات البحث\n * \n * تستخدم هذه الوظيفة لإخطار محركات البحث عند تحديث المحتوى على الموقع\n */\nasync function pingSitemap(req: Request, res: Response) {\n  try {\n    const baseUrl = process.env.WEBSITE_URL || `${req.protocol}://${req.get('host')}`;\n    const sitemapUrl = `${baseUrl}/sitemap.xml`;\n    \n    const results = await pingSitemapToSearchEngines(sitemapUrl);\n    \n    res.json({\n      success: true,\n      message: 'تم إرسال إشعار تحديث خريطة الموقع بنجاح',\n      results\n    });\n  } catch (error) {\n    console.error('Error pinging sitemap:', error);\n    res.status(500).json({\n      success: false,\n      message: 'حدث خطأ أثناء إرسال إشعار تحديث خريطة الموقع',\n      error: error.message\n    });\n  }\n}\n\n// تسجيل المسارات\nrouter.get('/sitemap.xml', generateSitemap);\nrouter.get('/robots.txt', generateRobotsTxt);\nrouter.post('/api/sitemap/ping', pingSitemap);\n\nexport default router;","size_bytes":7316},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/interfaces/messageTypes.ts":{"content":"export interface Message {\n  id: number;\n  content: string;\n  fromUserId: number;\n  toUserId: number;\n  projectId: number | null;\n  read: boolean;\n  createdAt: string;\n  // حالة توصيل الرسالة: \n  // processing = جاري المعالجة، \n  // sent = تم الإرسال للخادم، \n  // delivered = تم التوصيل للمستلم، \n  // failed = فشل التوصيل\n  deliveryStatus?: 'processing' | 'sent' | 'delivered' | 'failed';\n  fromUser?: {\n    name: string;\n    avatar: string | null;\n  };\n  toUser?: {\n    name: string;\n    avatar: string | null;\n  };\n}\n\nexport interface Conversation {\n  otherUserId: number;\n  otherUserName: string;\n  otherUserAvatar: string | null;\n  lastMessage: string;\n  lastMessageTime: string;\n  unreadCount: number;\n}\n\n// أنواع بيانات الرسائل والأخطاء للـ WebSocket\nexport interface WebSocketMessage {\n  type: string;\n  message?: Message;\n  error?: ContentError;\n  messageId?: number;\n  tempMessageId?: string;\n  deliveryStatus?: 'processing' | 'sent' | 'delivered' | 'failed';\n  reason?: string;\n}\n\nexport interface ContentError {\n  message: string;\n  violations?: string[];\n}\n\n// أنواع مخالفات المحتوى\nexport type ContentViolationType = 'رقم_هاتف' | 'بريد_إلكتروني' | 'حساب_تواصل_اجتماعي' | 'رابط_خارجي';","size_bytes":1363},"client/src/lib/dateFormatter.ts":{"content":"import moment from 'moment';\nimport 'moment-hijri';\n\n// إضافة دعم للتاريخ الهجري إلى moment.js\ndeclare module 'moment' {\n  interface Moment {\n    format(format?: string): string;\n    iYear(): number;\n    iMonth(): number;\n    iDate(): number;\n    iDayOfYear(): number;\n    iWeek(): number;\n    iWeekday(): number;\n    iDayOfYear(): number;\n    toISOString(): string;\n    fromNow(): string;\n  }\n}\n\n// أسماء الشهور العربية\nconst arabicMonths = [\n  'يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو',\n  'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'\n];\n\nconst hijriMonths = [\n  'محرم', 'صفر', 'ربيع الأول', 'ربيع الثاني', 'جمادى الأولى', 'جمادى الآخرة',\n  'رجب', 'شعبان', 'رمضان', 'شوال', 'ذو القعدة', 'ذو الحجة'\n];\n\n/**\n * تحويل التاريخ ليعرض بصيغة جميلة باللغة العربية\n * @param date التاريخ بأي صيغة يقبلها moment\n * @returns نص التاريخ بصيغة مقروءة\n */\nexport function formatDate(date: string | Date): string {\n  try {\n    const momentDate = moment(date);\n    \n    // التأكد من صحة التاريخ\n    if (!momentDate.isValid()) {\n      return 'تاريخ غير صحيح';\n    }\n    \n    // التاريخ الميلادي\n    const gregorianDay = momentDate.date();\n    const gregorianMonth = arabicMonths[momentDate.month()];\n    const gregorianYear = momentDate.year();\n    \n    // التاريخ الهجري\n    const hijriMoment = (momentDate as any);\n    const hijriDay = hijriMoment.iDate ? hijriMoment.iDate() : hijriMoment.format('iD');\n    const hijriMonthIndex = hijriMoment.iMonth ? hijriMoment.iMonth() : parseInt(hijriMoment.format('iM')) - 1;\n    const hijriMonth = hijriMonths[hijriMonthIndex] || hijriMoment.format('iMMMM');\n    const hijriYear = hijriMoment.iYear ? hijriMoment.iYear() : hijriMoment.format('iYYYY');\n    \n    return `${gregorianDay} ${gregorianMonth} ${gregorianYear}م / ${hijriDay} ${hijriMonth} ${hijriYear}هـ`;\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    // في حالة الخطأ، نعرض التاريخ الميلادي فقط\n    try {\n      const momentDate = moment(date);\n      if (!momentDate.isValid()) {\n        return 'تاريخ غير صحيح';\n      }\n      const gregorianDay = momentDate.date();\n      const gregorianMonth = arabicMonths[momentDate.month()];\n      const gregorianYear = momentDate.year();\n      return `${gregorianDay} ${gregorianMonth} ${gregorianYear}م`;\n    } catch {\n      return 'تاريخ غير متاح';\n    }\n  }\n}\n\n/**\n * تنسيق التاريخ ليعرض \"منذ كذا\" باللغة العربية\n * مثلا: منذ 3 أيام، منذ 5 ساعات، الخ\n * @param date التاريخ المراد تنسيقه\n * @returns النص الذي يمثل المدة منذ التاريخ\n */\nexport function formatTimeAgo(date: string | Date): string {\n  moment.locale('ar');\n  return moment(date).fromNow();\n}\n\n/**\n * الحصول على تاريخ بصيغة مختصرة\n * @param date التاريخ المراد تنسيقه\n * @returns التاريخ بصيغة مختصرة (يوم-شهر-سنة)\n */\nexport function formatShortDate(date: string | Date): string {\n  const momentDate = moment(date);\n  return momentDate.format('YYYY/MM/DD');\n}","size_bytes":3466},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  console.log(`API Request: ${method} ${url}`, data ? data : '(no data)');\n  \n  try {\n    const headers: HeadersInit = data ? { \"Content-Type\": \"application/json\" } : {};\n    \n    // أضافة JWT token إذا كان متوفراً\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n    \n    const res = await fetch(url, {\n      method,\n      headers,\n      body: data ? JSON.stringify(data) : undefined,\n      credentials: \"include\",\n    });\n    \n    if (!res.ok) {\n      console.error(`API Error: ${method} ${url} returned ${res.status} ${res.statusText}`);\n      try {\n        const errorText = await res.text();\n        console.error('Error response:', errorText);\n        throw new Error(`${res.status}: ${errorText || res.statusText}`);\n      } catch (e) {\n        // Re-throw the error\n        throw e;\n      }\n    } else {\n      console.log(`API Success: ${method} ${url} - Status: ${res.status}`);\n    }\n    \n    return res;\n  } catch (error) {\n    console.error(`API Request failed: ${method} ${url}`, error);\n    throw error;\n  }\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const headers: HeadersInit = {};\n    \n    // أضافة JWT token إذا كان متوفراً\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n    \n    const res = await fetch(queryKey[0] as string, {\n      credentials: \"include\",\n      headers,\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      retry: (failureCount, error) => {\n        // Don't retry on 401 Unauthorized or 403 Forbidden\n        if (error instanceof Error) {\n          if (error.message.startsWith('401:') || error.message.startsWith('403:')) {\n            return false;\n          }\n        }\n        return failureCount < 2; // retry twice on other errors\n      },\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":2841},"client/src/lib/utils.ts":{"content":"import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// Format date to Arabic readable format\nexport function formatDate(date: Date | string): string {\n  if (!date) return \"\";\n  \n  const d = typeof date === \"string\" ? new Date(date) : date;\n  \n  return new Intl.DateTimeFormat('ar-SA', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(d);\n}\n\n// Truncate text with ellipsis\nexport function truncateText(text: string, maxLength: number): string {\n  if (!text || text.length <= maxLength) return text;\n  return text.slice(0, maxLength) + '...';\n}\n\n// Get initials from name\nexport function getInitials(name: string): string {\n  if (!name) return \"\";\n  \n  const parts = name.split(\" \");\n  if (parts.length === 1) return parts[0].charAt(0).toUpperCase();\n  return (parts[0].charAt(0) + parts[parts.length - 1].charAt(0)).toUpperCase();\n}\n\n// Generate a random color based on string (for avatar backgrounds, etc.)\nexport function stringToColor(str: string): string {\n  if (!str) return \"#CCCCCC\";\n  \n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  \n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    const value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).slice(-2);\n  }\n  \n  return color;\n}\n\n// Convert skills array to comma separated string\nexport function skillsToString(skills: string[] | undefined): string {\n  if (!skills || !skills.length) return \"\";\n  return skills.join(\"، \");\n}\n\n// Simple email validation\nexport function isValidEmail(email: string): boolean {\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n}\n","size_bytes":1757},"client/src/pages/about.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Users, Target, Shield, Sparkles, Code, Gem, ArrowLeft } from \"lucide-react\";\nimport SEO from \"@/components/seo/SEO\";\nimport { WebpageStructuredData, BreadcrumbStructuredData } from \"@/components/seo/StructuredData\";\nimport { LazyImage } from \"@/components/ui/lazy-image\";\n\nconst AboutPage = () => {\n  return (\n    <>\n      <SEO\n        title=\"من نحن | لينكتك\"\n        description=\"تعرف على قصة لينكتك ورؤيتنا ورسالتنا في ربط أصحاب المشاريع مع الشركات التقنية في المملكة العربية السعودية\"\n        keywords=\"من نحن, لينكتك, رؤيتنا, قيمنا, منصة تقنية, ربط رواد الأعمال, ربط الشركات التقنية, المشاريع التقنية\"\n      >\n        <WebpageStructuredData\n          name=\"من نحن | لينكتك\"\n          description=\"تعرف على قصة لينكتك ورؤيتنا ورسالتنا في ربط أصحاب المشاريع مع الشركات التقنية\"\n          url=\"https://linktech.app/about\"\n        />\n        <BreadcrumbStructuredData\n          items={[\n            { name: \"الرئيسية\", url: \"https://linktech.app/\" },\n            { name: \"من نحن\", url: \"https://linktech.app/about\" }\n          ]}\n        />\n      </SEO>\n\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"mb-6\">\n          <Link href=\"/\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n            <ArrowLeft className=\"ml-1 h-4 w-4 rtl-flip\" />\n            العودة إلى الرئيسية\n          </Link>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          <nav className=\"flex text-sm text-neutral-600 mb-6\" aria-label=\"التنقل التسلسلي\">\n            <ol className=\"flex rtl space-x-2 space-x-reverse\">\n              <li><Link href=\"/\" className=\"hover:text-primary hover:underline\">الرئيسية</Link></li>\n              <li className=\"before:content-['/'] before:mx-2 font-semibold\">من نحن</li>\n            </ol>\n          </nav>\n\n          <h1 className=\"text-3xl md:text-4xl font-bold text-center mb-4\">من نحن</h1>\n          <p className=\"text-neutral-600 text-center mb-12 text-lg\">\n            نقوم ببناء جسر التواصل بين أصحاب الأفكار والشركات التقنية\n          </p>\n          \n          {/* القصة */}\n          <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8 mb-12\">\n            <div className=\"flex items-center gap-4 mb-6\">\n              <div className=\"bg-primary/10 p-3 rounded-full\">\n                <Sparkles className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h2 className=\"text-2xl font-bold\">قصتنا</h2>\n            </div>\n            \n            <div className=\"space-y-4 text-neutral-700\">\n              <p>\n                بدأت قصة لينكتك من ملاحظة فجوة كبيرة في سوق التقنية السعودي - حيث يواجه أصحاب الأفكار والمشاريع صعوبة في العثور على شركات تطوير موثوقة تناسب احتياجاتهم، بينما تكافح شركات التطوير للوصول إلى العملاء المناسبين.\n              </p>\n              <p>\n                تأسست منصتنا في عام 2023 على يد مجموعة من المتخصصين في مجال التقنية ممن عانوا شخصياً من هذه التحديات، وقرروا إيجاد حل يمكّن رواد الأعمال من تحويل أفكارهم إلى واقع، ويساعد الشركات التقنية على النمو وتوسيع قاعدة عملائها.\n              </p>\n              <p>\n                اليوم، نفخر بأن لينكتك أصبحت المنصة الرائدة في المملكة العربية السعودية التي تجمع بين أصحاب المشاريع والشركات التقنية من خلال نظام توافق ذكي وآمن.\n              </p>\n            </div>\n          </div>\n          \n          {/* الرؤية والرسالة */}\n          <div className=\"grid md:grid-cols-2 gap-8 mb-12\">\n            <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8\">\n              <div className=\"flex items-center gap-4 mb-6\">\n                <div className=\"bg-primary/10 p-3 rounded-full\">\n                  <Target className=\"h-6 w-6 text-primary\" />\n                </div>\n                <h2 className=\"text-2xl font-bold\">رؤيتنا</h2>\n              </div>\n              \n              <p className=\"text-neutral-700\">\n                أن نصبح المنصة الأولى في الشرق الأوسط التي تمكّن الابتكار التقني من خلال ربط سلس بين أصحاب الأفكار الإبداعية والشركات التقنية المتخصصة، مما يساهم في تسريع التحول الرقمي وتحقيق رؤية المملكة 2030.\n              </p>\n            </div>\n            \n            <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8\">\n              <div className=\"flex items-center gap-4 mb-6\">\n                <div className=\"bg-primary/10 p-3 rounded-full\">\n                  <Gem className=\"h-6 w-6 text-primary\" />\n                </div>\n                <h2 className=\"text-2xl font-bold\">رسالتنا</h2>\n              </div>\n              \n              <p className=\"text-neutral-700\">\n                توفير منصة آمنة وفعالة تسهل التعاون بين رواد الأعمال وشركات التطوير التقني، من خلال أدوات متطورة للتواصل والتوفيق الذكي، مما يضمن تحقيق نتائج ناجحة للجميع وتعزيز الاقتصاد الرقمي السعودي.\n              </p>\n            </div>\n          </div>\n          \n          {/* قيمنا */}\n          <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8 mb-12\">\n            <div className=\"flex items-center gap-4 mb-8\">\n              <div className=\"bg-primary/10 p-3 rounded-full\">\n                <Shield className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h2 className=\"text-2xl font-bold\">قيمنا</h2>\n            </div>\n            \n            <div className=\"grid md:grid-cols-2 gap-8\">\n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">الثقة والشفافية</h3>\n                <p className=\"text-neutral-700\">\n                  نحن نعمل بكل شفافية ونبني الثقة من خلال توفير معلومات دقيقة وصادقة لجميع الأطراف.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">التميز والابتكار</h3>\n                <p className=\"text-neutral-700\">\n                  نسعى دائماً إلى التميز في كل ما نقدمه، ونشجع الابتكار في مختلف مراحل العمل.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">سهولة الاستخدام</h3>\n                <p className=\"text-neutral-700\">\n                  نصمم منصتنا لتكون سهلة الاستخدام ومفهومة للجميع، مما يتيح تجربة مستخدم سلسة.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">الأمان والحماية</h3>\n                <p className=\"text-neutral-700\">\n                  نضع أمان البيانات وحماية خصوصية المستخدمين على رأس أولوياتنا.\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          {/* فريقنا */}\n          <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8 mb-12\">\n            <div className=\"flex items-center gap-4 mb-8\">\n              <div className=\"bg-primary/10 p-3 rounded-full\">\n                <Users className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h2 className=\"text-2xl font-bold\">فريقنا</h2>\n            </div>\n            \n            <p className=\"text-neutral-700 mb-8\">\n              يضم فريق لينكتك نخبة من المتخصصين في مجالات تطوير البرمجيات، وتجربة المستخدم، والذكاء الاصطناعي، وريادة الأعمال. نحن نجمع بين الخبرة العميقة والشغف بتمكين الابتكار التقني في المملكة العربية السعودية.\n            </p>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 text-center\">\n              <div>\n                <div className=\"rounded-full h-24 w-24 mx-auto mb-4 overflow-hidden\">\n                  <LazyImage\n                    src={`https://ui-avatars.com/api/?name=أحمد+الغامدي&background=eefffc&color=0e8a65&size=96`}\n                    alt=\"أحمد الغامدي\"\n                    className=\"w-full h-full object-cover\"\n                    loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full\"\n                  />\n                </div>\n                <h3 className=\"font-bold\">أحمد الغامدي</h3>\n                <p className=\"text-neutral-600 text-sm\">المؤسس والرئيس التنفيذي</p>\n              </div>\n              \n              <div>\n                <div className=\"rounded-full h-24 w-24 mx-auto mb-4 overflow-hidden\">\n                  <LazyImage\n                    src={`https://ui-avatars.com/api/?name=سارة+العتيبي&background=eefffc&color=0e8a65&size=96`}\n                    alt=\"سارة العتيبي\"\n                    className=\"w-full h-full object-cover\"\n                    loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full\"\n                  />\n                </div>\n                <h3 className=\"font-bold\">سارة العتيبي</h3>\n                <p className=\"text-neutral-600 text-sm\">مديرة العمليات</p>\n              </div>\n              \n              <div>\n                <div className=\"rounded-full h-24 w-24 mx-auto mb-4 overflow-hidden\">\n                  <LazyImage\n                    src={`https://ui-avatars.com/api/?name=فهد+الشمري&background=eefffc&color=0e8a65&size=96`}\n                    alt=\"فهد الشمري\"\n                    className=\"w-full h-full object-cover\"\n                    loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full\"\n                  />\n                </div>\n                <h3 className=\"font-bold\">فهد الشمري</h3>\n                <p className=\"text-neutral-600 text-sm\">مدير تقني</p>\n              </div>\n              \n              <div>\n                <div className=\"rounded-full h-24 w-24 mx-auto mb-4 overflow-hidden\">\n                  <LazyImage\n                    src={`https://ui-avatars.com/api/?name=نورة+القحطاني&background=eefffc&color=0e8a65&size=96`}\n                    alt=\"نورة القحطاني\"\n                    className=\"w-full h-full object-cover\"\n                    loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full\"\n                  />\n                </div>\n                <h3 className=\"font-bold\">نورة القحطاني</h3>\n                <p className=\"text-neutral-600 text-sm\">مديرة تسويق</p>\n              </div>\n            </div>\n          </div>\n          \n          {/* التكنولوجيا */}\n          <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8 mb-12\">\n            <div className=\"flex items-center gap-4 mb-6\">\n              <div className=\"bg-primary/10 p-3 rounded-full\">\n                <Code className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h2 className=\"text-2xl font-bold\">التكنولوجيا</h2>\n            </div>\n            \n            <p className=\"text-neutral-700 mb-8\">\n              نستخدم أحدث التقنيات لبناء منصة موثوقة وآمنة وسريعة. تعتمد منصتنا على:\n            </p>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n              <div className=\"bg-neutral-50 p-4 rounded-lg text-center\">\n                <h3 className=\"font-bold mb-2\">خوارزميات توافق ذكية</h3>\n                <p className=\"text-neutral-600 text-sm\">لمطابقة المشاريع مع الشركات المناسبة</p>\n              </div>\n              \n              <div className=\"bg-neutral-50 p-4 rounded-lg text-center\">\n                <h3 className=\"font-bold mb-2\">تشفير عالي المستوى</h3>\n                <p className=\"text-neutral-600 text-sm\">لحماية بيانات المستخدمين والمحادثات</p>\n              </div>\n              \n              <div className=\"bg-neutral-50 p-4 rounded-lg text-center\">\n                <h3 className=\"font-bold mb-2\">واجهة سهلة الاستخدام</h3>\n                <p className=\"text-neutral-600 text-sm\">مصممة للتجربة السلسة على جميع الأجهزة</p>\n              </div>\n            </div>\n          </div>\n          \n          {/* دعوة للانضمام */}\n          <div className=\"bg-gradient-to-r from-primary/90 to-primary/70 text-white rounded-xl shadow-md p-6 md:p-8\">\n            <div className=\"text-center max-w-3xl mx-auto\">\n              <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">انضم إلينا اليوم</h2>\n              <p className=\"mb-8 text-white/80\">\n                سواء كنت صاحب مشروع تبحث عن شركة مناسبة، أو شركة تطوير تبحث عن مشاريع جديدة، انضم إلينا اليوم واكتشف كيف يمكن للينكتك مساعدتك في تحقيق أهدافك.\n              </p>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button asChild size=\"lg\" variant=\"secondary\">\n                  <Link href=\"/auth/register\">\n                    إنشاء حساب\n                  </Link>\n                </Button>\n                \n                <Button asChild size=\"lg\" variant=\"outline\" className=\"bg-white/10 border-white/20 hover:bg-white/20\">\n                  <Link href=\"/contact\">\n                    تواصل معنا\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AboutPage;","size_bytes":14878},"client/src/pages/admin.tsx":{"content":"import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Users, Briefcase, Building2, BarChart3, TrendingUp } from \"lucide-react\";\nimport { QuickVisitStats } from \"@/components/analytics/VisitStatsCard\";\nimport { \n  VisitChart, \n  TopPagesChart, \n  DeviceStatsChart, \n  BrowserStatsChart \n} from \"@/components/analytics/VisitChart\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\n// صفحة مسؤول بسيطة بدون تصاريح ومباشرة\nconst AdminSimplePage = () => {\n  const [, navigate] = useLocation();\n\n  // جلب الإحصائيات السريعة للزيارات\n  const { data: quickStats, isLoading: quickStatsLoading } = useQuery({\n    queryKey: ['/api/admin/quick-stats'],\n    queryFn: async () => {\n      const response = await fetch('/api/admin/quick-stats', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('فشل في جلب الإحصائيات السريعة');\n      }\n      return response.json();\n    },\n    retry: false\n  });\n\n  // جلب إحصائيات الزيارات التفصيلية\n  const { data: visitStats, isLoading: visitStatsLoading } = useQuery({\n    queryKey: ['/api/admin/visit-stats'],\n    queryFn: async () => {\n      const response = await fetch('/api/admin/visit-stats?days=7', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('فشل في جلب إحصائيات الزيارات');\n      }\n      return response.json();\n    },\n    retry: false\n  });\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-6\">\n      <Helmet>\n        <title>لوحة المسؤول | لينكتك</title>\n      </Helmet>\n      \n      <div className=\"flex flex-col space-y-4\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <h1 className=\"text-3xl font-bold\">لوحة المسؤول المبسطة</h1>\n          <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n            <Button onClick={() => navigate(\"/\")} variant=\"outline\">\n              العودة للرئيسية\n            </Button>\n          </div>\n        </div>\n        \n        {/* إحصائيات الزيارات السريعة */}\n        {quickStatsLoading ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <Card key={i}>\n                <CardHeader className=\"pb-2\">\n                  <Skeleton className=\"h-4 w-20\" />\n                </CardHeader>\n                <CardContent>\n                  <Skeleton className=\"h-8 w-16 mb-2\" />\n                  <Skeleton className=\"h-3 w-24\" />\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        ) : quickStats ? (\n          <QuickVisitStats stats={quickStats} />\n        ) : (\n          <div className=\"mb-6\">\n            <Card className=\"border-yellow-200 bg-yellow-50\">\n              <CardContent className=\"pt-6\">\n                <div className=\"flex items-center\">\n                  <BarChart3 className=\"h-5 w-5 text-yellow-600 ml-2\" />\n                  <span className=\"text-yellow-800\">\n                    لا توجد بيانات زيارات متاحة حالياً. قم بتسجيل الدخول كمسؤول لعرض الإحصائيات.\n                  </span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-lg font-medium\">المستخدمون</CardTitle>\n              <Users className=\"h-5 w-5 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-3xl font-bold\">7</div>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                3 رواد أعمال, 3 شركات, 1 مسؤول\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-lg font-medium\">المشاريع</CardTitle>\n              <Briefcase className=\"h-5 w-5 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-3xl font-bold\">5</div>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                3 نشطة, 2 مغلقة\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-lg font-medium\">الشركات</CardTitle>\n              <Building2 className=\"h-5 w-5 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-3xl font-bold\">3</div>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                2 موثقة, 1 غير موثقة\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* الرسوم البيانية التفصيلية للزيارات */}\n        {visitStatsLoading ? (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <Card key={i}>\n                <CardHeader>\n                  <Skeleton className=\"h-5 w-32\" />\n                </CardHeader>\n                <CardContent>\n                  <Skeleton className=\"h-[300px] w-full\" />\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        ) : visitStats ? (\n          <div className=\"space-y-6 mb-6\">\n            {/* الرسم البياني للزيارات اليومية */}\n            <VisitChart data={visitStats.dailyStats} />\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* أكثر الصفحات زيارة */}\n              <TopPagesChart data={visitStats.topPages} />\n              \n              {/* توزيع الأجهزة */}\n              <DeviceStatsChart data={visitStats.deviceStats} />\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* المتصفحات الأكثر استخداماً */}\n              <BrowserStatsChart data={visitStats.browserStats} />\n              \n              {/* معلومات إضافية */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-lg font-semibold flex items-center\">\n                    <TrendingUp className=\"ml-2 h-5 w-5 text-blue-600\" />\n                    ملخص الإحصائيات\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">\n                        {visitStats.totalVisits.toLocaleString('ar-SA')}\n                      </div>\n                      <div className=\"text-sm text-blue-700\">إجمالي الزيارات</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">\n                        {visitStats.uniqueVisitors.toLocaleString('ar-SA')}\n                      </div>\n                      <div className=\"text-sm text-green-700\">زوار فريدون</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-purple-600\">\n                        {visitStats.pageViews.toLocaleString('ar-SA')}\n                      </div>\n                      <div className=\"text-sm text-purple-700\">مشاهدات الصفحات</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-orange-600\">\n                        {Math.round(visitStats.avgTimeSpent / 60)}\n                      </div>\n                      <div className=\"text-sm text-orange-700\">دقائق متوسط البقاء</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        ) : null}\n\n        <Card className=\"mt-4\">\n          <CardHeader>\n            <CardTitle>معلومات هامة</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-sm text-neutral-700 mb-4\">\n              تم إنشاء هذه الصفحة المبسطة للتحقق من مشكلة التوجيه فقط. الصفحة الكاملة للمسؤول متاحة في المسار:\n            </p>\n            <div className=\"flex justify-center\">\n              <Button \n                onClick={() => navigate(\"/dashboard/admin\")}\n                className=\"w-full max-w-md\"\n              >\n                الذهاب إلى لوحة المسؤول الكاملة\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminSimplePage;","size_bytes":9764},"client/src/pages/ai-assistant.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Helmet } from \"react-helmet\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  Brain, \n  Lightbulb, \n  TrendingUp, \n  Clock, \n  DollarSign, \n  Users, \n  Shield, \n  Layers,\n  ArrowRight,\n  CheckCircle,\n  AlertTriangle,\n  FileText,\n  Download\n} from \"lucide-react\";\n\ninterface AnalysisResult {\n  id?: number;\n  projectType: string;\n  technicalComplexity: string;\n  recommendedTechnologies: string[];\n  estimatedCostRange: {\n    min: number;\n    max: number;\n    currency: string;\n  };\n  estimatedDuration: {\n    development: number;\n    testing: number;\n    deployment: number;\n  };\n  projectPhases: Array<{\n    name: string;\n    description: string;\n    duration: number;\n    cost: number;\n  }>;\n  features: Array<{\n    name: string;\n    priority: string;\n    complexity: string;\n  }>;\n  riskAssessment: {\n    technicalRisks: string[];\n    timelineRisks: string[];\n    budgetRisks: string[];\n    mitigationStrategies: string[];\n  };\n  scalabilityConsiderations: string[];\n  maintenanceRequirements: {\n    frequency: string;\n    estimatedMonthlyCost: number;\n    requiredSkills: string[];\n  };\n}\n\ninterface PreviousAnalysis {\n  id: number;\n  projectIdea: string;\n  createdAt: string;\n  status: string;\n  estimatedCost: string;\n  analysisResult: string;\n}\n\ninterface AiAssistantPageProps {\n  auth: {\n    user: any;\n    isAuthenticated: boolean;\n    isEntrepreneur: boolean;\n  };\n}\n\nconst AiAssistantPage = ({ auth }: AiAssistantPageProps) => {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);\n  const [showPreviousAnalyses, setShowPreviousAnalyses] = useState(false);\n  \n  const [formData, setFormData] = useState({\n    projectIdea: \"\",\n    businessSize: \"\",\n    expectedUsers: \"\",\n    budget: \"\",\n    timeline: \"\",\n    integrationNeeds: [] as string[],\n    securityRequirements: \"\",\n    specificRequirements: \"\"\n  });\n\n  // استعلام للحصول على التحليلات السابقة\n  const { data: previousAnalyses, isLoading: loadingPrevious } = useQuery<PreviousAnalysis[]>({\n    queryKey: ['/api/ai/my-analyses'],\n    enabled: showPreviousAnalyses,\n    queryFn: async () => {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('/api/ai/my-analyses', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch previous analyses');\n      }\n      return response.json();\n    }\n  });\n\n  const analyzeProjectMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('/api/ai/analyze-project', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to analyze project');\n      }\n      \n      return response.json();\n    },\n    onSuccess: (result: AnalysisResult) => {\n      setAnalysisResult(result);\n      setCurrentStep(3);\n      toast({\n        title: \"تم التحليل بنجاح\",\n        description: \"تم تحليل مشروعك وإنشاء التوصيات\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"خطأ في التحليل\",\n        description: error.message || \"حدث خطأ أثناء تحليل المشروع\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const addIntegrationNeed = (need: string) => {\n    if (need && !formData.integrationNeeds.includes(need)) {\n      setFormData(prev => ({\n        ...prev,\n        integrationNeeds: [...prev.integrationNeeds, need]\n      }));\n    }\n  };\n\n  const removeIntegrationNeed = (need: string) => {\n    setFormData(prev => ({\n      ...prev,\n      integrationNeeds: prev.integrationNeeds.filter(n => n !== need)\n    }));\n  };\n\n  const handleAnalyze = () => {\n    if (!formData.projectIdea.trim()) {\n      toast({\n        title: \"فكرة المشروع مطلوبة\",\n        description: \"يرجى إدخال وصف لفكرة مشروعك\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    const analysisData = {\n      ...formData,\n      expectedUsers: formData.expectedUsers ? parseInt(formData.expectedUsers) : undefined\n    };\n\n    analyzeProjectMutation.mutate(analysisData);\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'essential': return 'bg-red-100 text-red-800';\n      case 'important': return 'bg-yellow-100 text-yellow-800';\n      case 'nice-to-have': return 'bg-green-100 text-green-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getComplexityColor = (complexity: string) => {\n    switch (complexity) {\n      case 'simple': return 'bg-green-100 text-green-800';\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\n      case 'complex': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n      <Helmet>\n        <title>مساعد الذكاء الاصطناعي للمشاريع | لينكتك</title>\n        <meta name=\"description\" content=\"احصل على تحليل تقني مفصل وتوصيات دقيقة لمشروعك باستخدام الذكاء الاصطناعي\" />\n      </Helmet>\n\n      <div className=\"container mx-auto px-4 max-w-6xl\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <Brain className=\"h-12 w-12 text-blue-600 ml-3\" />\n            <h1 className=\"text-4xl font-bold text-gray-900\">مساعد الذكاء الاصطناعي</h1>\n          </div>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            احصل على تحليل تقني مفصل وتوصيات دقيقة لمشروعك مع تقدير التكلفة والوقت المطلوب\n          </p>\n        </div>\n\n        {/* أزرار التنقل */}\n        <div className=\"flex gap-4 mb-6 max-w-md mx-auto\">\n          <Button \n            variant={!showPreviousAnalyses ? \"default\" : \"outline\"} \n            onClick={() => setShowPreviousAnalyses(false)}\n            className=\"flex-1\"\n          >\n            تحليل جديد\n          </Button>\n          <Button \n            variant={showPreviousAnalyses ? \"default\" : \"outline\"} \n            onClick={() => setShowPreviousAnalyses(true)}\n            className=\"flex-1\"\n          >\n            تحليلاتي السابقة\n          </Button>\n        </div>\n\n        {/* عرض التحليلات السابقة */}\n        {showPreviousAnalyses ? (\n          <Card className=\"max-w-4xl mx-auto\">\n            <CardHeader>\n              <CardTitle>تحليلاتي السابقة</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {loadingPrevious ? (\n                <p className=\"text-center py-8\">جارٍ تحميل التحليلات...</p>\n              ) : previousAnalyses && previousAnalyses.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {previousAnalyses.map((analysis: PreviousAnalysis) => (\n                    <div key={analysis.id} className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"flex-1 cursor-pointer\" onClick={() => {\n                           try {\n                             const parsedResult = JSON.parse(analysis.analysisResult);\n                             setAnalysisResult({ ...parsedResult, id: analysis.id });\n                             setCurrentStep(3);\n                             setShowPreviousAnalyses(false);\n                           } catch (error) {\n                             toast({\n                               title: \"خطأ\",\n                               description: \"فشل في تحميل التحليل\",\n                               variant: \"destructive\"\n                             });\n                           }\n                         }}>\n                          <h3 className=\"font-semibold text-lg mb-2\">{analysis.projectIdea.substring(0, 100)}...</h3>\n                          <p className=\"text-gray-600 text-sm mb-2\">\n                            تاريخ التحليل: {new Date(analysis.createdAt).toLocaleDateString('ar-SA')}\n                          </p>\n                          <div className=\"flex gap-2\">\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              {analysis.estimatedCost}\n                            </Badge>\n                            <Badge variant={analysis.status === 'completed' ? 'default' : 'secondary'} className=\"text-xs\">\n                              {analysis.status === 'completed' ? 'مكتمل' : 'قيد المعالجة'}\n                            </Badge>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={async (e) => {\n                              e.stopPropagation();\n                              try {\n                                console.log('بدء تحميل التقرير للتحليل رقم:', analysis.id);\n                                \n                                // استخدام fetch مع JWT token\n                                const token = localStorage.getItem('auth_token');\n                                const response = await fetch(`/api/ai/analysis/${analysis.id}/report?download=1`, {\n                                  headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                  },\n                                });\n                                \n                                if (!response.ok) {\n                                  throw new Error(`خطأ في تحميل التقرير: ${response.statusText}`);\n                                }\n                                \n                                // تحويل الاستجابة إلى blob\n                                const blob = await response.blob();\n                                \n                                // إنشاء رابط تحميل\n                                const url = window.URL.createObjectURL(blob);\n                                const a = document.createElement('a');\n                                a.style.display = 'none';\n                                a.href = url;\n                                a.download = `project-analysis-${analysis.id}.txt`;\n                                document.body.appendChild(a);\n                                a.click();\n                                \n                                // تنظيف الذاكرة\n                                window.URL.revokeObjectURL(url);\n                                document.body.removeChild(a);\n                                \n                                toast({\n                                  title: \"تم التحميل بنجاح\",\n                                  description: \"تم تحميل التقرير المفصل\",\n                                });\n                              } catch (error) {\n                                console.error('خطأ في تحميل التقرير:', error);\n                                toast({\n                                  title: \"خطأ في التحميل\",\n                                  description: error instanceof Error ? error.message : \"حدث خطأ أثناء تحميل التقرير\",\n                                  variant: \"destructive\"\n                                });\n                              }\n                            }}\n                          >\n                            <Download className=\"h-4 w-4 ml-1\" />\n                            تحميل\n                          </Button>\n                          <ArrowRight className=\"h-5 w-5 text-gray-400\" />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <Brain className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n                  <p className=\"text-gray-500 text-lg\">لا توجد تحليلات سابقة</p>\n                  <p className=\"text-gray-400 text-sm mt-2\">ابدأ بتحليل مشروعك الأول</p>\n                  <Button \n                    onClick={() => setShowPreviousAnalyses(false)} \n                    className=\"mt-4\"\n                  >\n                    تحليل مشروع جديد\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        ) : (\n          <>\n            {/* Progress Steps */}\n            <div className=\"flex items-center justify-center mb-8\">\n              <div className=\"flex items-center space-x-4 rtl:space-x-reverse\">\n                <div className={`flex items-center justify-center w-10 h-10 rounded-full ${currentStep >= 1 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'}`}>\n                  1\n                </div>\n                <div className={`h-1 w-16 ${currentStep >= 2 ? 'bg-blue-600' : 'bg-gray-200'}`} />\n                <div className={`flex items-center justify-center w-10 h-10 rounded-full ${currentStep >= 2 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'}`}>\n                  2\n                </div>\n                <div className={`h-1 w-16 ${currentStep >= 3 ? 'bg-blue-600' : 'bg-gray-200'}`} />\n                <div className={`flex items-center justify-center w-10 h-10 rounded-full ${currentStep >= 3 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'}`}>\n                  3\n                </div>\n              </div>\n            </div>\n\n        {/* Step 1: Project Idea */}\n        {currentStep === 1 && (\n          <Card className=\"max-w-4xl mx-auto\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-2xl\">\n                <Lightbulb className=\"h-6 w-6 text-yellow-500 ml-3\" />\n                أخبرنا عن فكرة مشروعك\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div>\n                <Label htmlFor=\"projectIdea\" className=\"text-lg font-semibold\">\n                  وصف فكرة المشروع <span className=\"text-red-500\">*</span>\n                </Label>\n                <Textarea\n                  id=\"projectIdea\"\n                  placeholder=\"اشرح فكرة مشروعك بالتفصيل. مثال: أريد تطبيق توصيل طعام يربط بين المطاعم والعملاء، يتضمن نظام طلبات وتتبع المندوبين ونظام دفع إلكتروني...\"\n                  value={formData.projectIdea}\n                  onChange={(e) => handleInputChange('projectIdea', e.target.value)}\n                  className=\"min-h-32 text-lg\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label htmlFor=\"businessSize\" className=\"text-lg font-semibold\">حجم العمل</Label>\n                  <Select onValueChange={(value) => handleInputChange('businessSize', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"اختر حجم عملك\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"individual\">فردي</SelectItem>\n                      <SelectItem value=\"small\">شركة صغيرة (2-10 موظفين)</SelectItem>\n                      <SelectItem value=\"medium\">شركة متوسطة (11-50 موظف)</SelectItem>\n                      <SelectItem value=\"enterprise\">مؤسسة كبيرة (50+ موظف)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"expectedUsers\" className=\"text-lg font-semibold\">عدد المستخدمين المتوقع</Label>\n                  <Input\n                    id=\"expectedUsers\"\n                    type=\"number\"\n                    placeholder=\"مثال: 1000\"\n                    value={formData.expectedUsers}\n                    onChange={(e) => handleInputChange('expectedUsers', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <Button onClick={() => setCurrentStep(2)} size=\"lg\" className=\"px-8\">\n                  التالي\n                  <ArrowRight className=\"h-4 w-4 mr-2\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Step 2: Requirements */}\n        {currentStep === 2 && (\n          <Card className=\"max-w-4xl mx-auto\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-2xl\">\n                <Layers className=\"h-6 w-6 text-blue-500 ml-3\" />\n                متطلبات المشروع\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label className=\"text-lg font-semibold flex items-center\">\n                    <DollarSign className=\"h-4 w-4 ml-2\" />\n                    نطاق الميزانية\n                  </Label>\n                  <Select onValueChange={(value) => handleInputChange('budget', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"اختر نطاق ميزانيتك\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"low\">منخفضة (أقل من 20,000 ريال)</SelectItem>\n                      <SelectItem value=\"medium\">متوسطة (20,000 - 50,000 ريال)</SelectItem>\n                      <SelectItem value=\"high\">عالية (أكثر من 50,000 ريال)</SelectItem>\n                      <SelectItem value=\"custom\">مخصصة (سنحددها بناءً على المتطلبات)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label className=\"text-lg font-semibold flex items-center\">\n                    <Clock className=\"h-4 w-4 ml-2\" />\n                    الجدولة الزمنية\n                  </Label>\n                  <Select onValueChange={(value) => handleInputChange('timeline', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"اختر الإطار الزمني المطلوب\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"urgent\">عاجل (أسرع وقت ممكن)</SelectItem>\n                      <SelectItem value=\"normal\">عادي (وقت كافي للجودة)</SelectItem>\n                      <SelectItem value=\"flexible\">مرن (لا يوجد ضغط زمني)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label className=\"text-lg font-semibold flex items-center\">\n                    <Shield className=\"h-4 w-4 ml-2\" />\n                    متطلبات الأمان\n                  </Label>\n                  <Select onValueChange={(value) => handleInputChange('securityRequirements', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"اختر مستوى الأمان المطلوب\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"basic\">أساسي (تشفير عادي)</SelectItem>\n                      <SelectItem value=\"standard\">معياري (حماية متوسطة)</SelectItem>\n                      <SelectItem value=\"high\">عالي (حماية قصوى)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <Label className=\"text-lg font-semibold\">متطلبات إضافية أو تفاصيل خاصة</Label>\n                <Textarea\n                  placeholder=\"أي متطلبات خاصة، ميزات محددة، أو تفاصيل إضافية تريد إضافتها...\"\n                  value={formData.specificRequirements}\n                  onChange={(e) => handleInputChange('specificRequirements', e.target.value)}\n                  className=\"min-h-24\"\n                />\n              </div>\n\n              <div className=\"flex justify-between\">\n                <Button variant=\"outline\" onClick={() => setCurrentStep(1)}>\n                  السابق\n                </Button>\n                <Button \n                  onClick={handleAnalyze} \n                  size=\"lg\" \n                  className=\"px-8\"\n                  disabled={analyzeProjectMutation.isPending}\n                >\n                  {analyzeProjectMutation.isPending ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white ml-2\" />\n                      جاري التحليل...\n                    </>\n                  ) : (\n                    <>\n                      تحليل المشروع\n                      <Brain className=\"h-4 w-4 mr-2\" />\n                    </>\n                  )}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Step 3: Analysis Results */}\n        {currentStep === 3 && analysisResult && (\n          <div className=\"space-y-6\">\n            {/* نظرة عامة */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center text-2xl\">\n                  <TrendingUp className=\"h-6 w-6 text-green-500 ml-3\" />\n                  نتائج التحليل\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                    <h3 className=\"font-semibold text-lg text-blue-900\">نوع المشروع</h3>\n                    <p className=\"text-2xl font-bold text-blue-600\">{analysisResult.projectType}</p>\n                  </div>\n                  <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n                    <h3 className=\"font-semibold text-lg text-yellow-900\">التعقيد التقني</h3>\n                    <Badge className={getComplexityColor(analysisResult.technicalComplexity)}>\n                      {analysisResult.technicalComplexity}\n                    </Badge>\n                  </div>\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                    <h3 className=\"font-semibold text-lg text-green-900\">التكلفة المتوقعة</h3>\n                    <p className=\"text-xl font-bold text-green-600\">\n                      {analysisResult.estimatedCostRange.min.toLocaleString('ar-SA')} - {analysisResult.estimatedCostRange.max.toLocaleString('ar-SA')} ريال\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* التقنيات الموصى بها */}\n            <Card>\n              <CardHeader>\n                <CardTitle>التقنيات الموصى بها</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex flex-wrap gap-2\">\n                  {analysisResult.recommendedTechnologies.map((tech, index) => (\n                    <Badge key={index} variant=\"outline\" className=\"text-sm\">\n                      {tech}\n                    </Badge>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* مراحل المشروع */}\n            <Card>\n              <CardHeader>\n                <CardTitle>مراحل المشروع</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {analysisResult.projectPhases.map((phase, index) => (\n                    <div key={index} className=\"border rounded-lg p-4\">\n                      <div className=\"flex justify-between items-start mb-2\">\n                        <h3 className=\"font-semibold text-lg\">{phase.name}</h3>\n                        <Badge variant=\"outline\">{phase.duration} أسبوع</Badge>\n                      </div>\n                      <p className=\"text-gray-600 mb-2\">{phase.description}</p>\n                      <p className=\"font-semibold text-green-600\">\n                        {phase.cost.toLocaleString('ar-SA')} ريال\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* الميزات */}\n            <Card>\n              <CardHeader>\n                <CardTitle>الميزات المقترحة</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {analysisResult.features.map((feature, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <span className=\"font-medium\">{feature.name}</span>\n                      <div className=\"flex gap-2\">\n                        <Badge className={getPriorityColor(feature.priority)}>\n                          {feature.priority}\n                        </Badge>\n                        <Badge className={getComplexityColor(feature.complexity)}>\n                          {feature.complexity}\n                        </Badge>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* تقييم المخاطر */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <AlertTriangle className=\"h-5 w-5 text-yellow-500 ml-2\" />\n                  تقييم المخاطر\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h3 className=\"font-semibold mb-3 text-red-600\">المخاطر التقنية</h3>\n                    <ul className=\"space-y-1\">\n                      {analysisResult.riskAssessment.technicalRisks.map((risk, index) => (\n                        <li key={index} className=\"text-sm text-gray-600\">• {risk}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold mb-3 text-blue-600\">استراتيجيات التخفيف</h3>\n                    <ul className=\"space-y-1\">\n                      {analysisResult.riskAssessment.mitigationStrategies.map((strategy, index) => (\n                        <li key={index} className=\"text-sm text-gray-600\">• {strategy}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* متطلبات الصيانة */}\n            <Card>\n              <CardHeader>\n                <CardTitle>متطلبات الصيانة</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                    <h4 className=\"font-semibold\">التكرار</h4>\n                    <p>{analysisResult.maintenanceRequirements.frequency}</p>\n                  </div>\n                  <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                    <h4 className=\"font-semibold\">التكلفة الشهرية</h4>\n                    <p>{analysisResult.maintenanceRequirements.estimatedMonthlyCost.toLocaleString('ar-SA')} ريال</p>\n                  </div>\n                  <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                    <h4 className=\"font-semibold\">المهارات المطلوبة</h4>\n                    <p>{analysisResult.maintenanceRequirements.requiredSkills.join(', ')}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* الإجراءات */}\n            <Card>\n              <CardHeader>\n                <CardTitle>الخطوات التالية</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <Button onClick={() => navigate('/projects/create')} className=\"h-16\">\n                    <FileText className=\"h-5 w-5 ml-2\" />\n                    نشر المشروع للشركات\n                  </Button>\n                  <Button \n                    variant=\"outline\" \n                    className=\"h-16\"\n                    onClick={async () => {\n                      if (!analysisResult?.id) return;\n                      \n                      try {\n                        console.log('بدء تحميل التقرير للتحليل رقم:', analysisResult.id);\n                        \n                        // استخدام fetch مع JWT token\n                        const token = localStorage.getItem('auth_token');\n                        const response = await fetch(`/api/ai/analysis/${analysisResult.id}/report?download=1`, {\n                          headers: {\n                            'Authorization': `Bearer ${token}`,\n                          },\n                        });\n                        \n                        if (!response.ok) {\n                          throw new Error(`خطأ في تحميل التقرير: ${response.statusText}`);\n                        }\n                        \n                        // تحويل الاستجابة إلى blob\n                        const blob = await response.blob();\n                        \n                        // إنشاء رابط تحميل\n                        const url = window.URL.createObjectURL(blob);\n                        const a = document.createElement('a');\n                        a.style.display = 'none';\n                        a.href = url;\n                        a.download = `project-analysis-${analysisResult.id}.txt`;\n                        document.body.appendChild(a);\n                        a.click();\n                        \n                        // تنظيف الذاكرة\n                        window.URL.revokeObjectURL(url);\n                        document.body.removeChild(a);\n                        \n                        toast({\n                          title: \"تم التحميل بنجاح\",\n                          description: \"تم تحميل التقرير المفصل\",\n                        });\n                      } catch (error) {\n                        console.error('خطأ في تحميل التقرير:', error);\n                        toast({\n                          title: \"خطأ في التحميل\",\n                          description: error instanceof Error ? error.message : \"حدث خطأ أثناء تحميل التقرير\",\n                          variant: \"destructive\"\n                        });\n                      }\n                    }}\n                  >\n                    <Download className=\"h-5 w-5 ml-2\" />\n                    تحميل التقرير المفصل\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            <div className=\"text-center\">\n              <Button \n                variant=\"outline\" \n                onClick={() => {\n                  setCurrentStep(1);\n                  setAnalysisResult(null);\n                  setFormData({\n                    projectIdea: \"\",\n                    businessSize: \"\",\n                    expectedUsers: \"\",\n                    budget: \"\",\n                    timeline: \"\",\n                    integrationNeeds: [],\n                    securityRequirements: \"\",\n                    specificRequirements: \"\"\n                  });\n                }}\n              >\n                تحليل مشروع جديد\n              </Button>\n            </div>\n          </div>\n        )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AiAssistantPage;","size_bytes":34165},"client/src/pages/companies-landing.tsx":{"content":"import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Building2, \n  Code, \n  Shield, \n  Clock, \n  Users, \n  Trophy,\n  CheckCircle,\n  ArrowLeft,\n  Star,\n  Globe,\n  Smartphone,\n  Database,\n  Cloud,\n  Zap,\n  Target,\n  HeadphonesIcon,\n  Award\n} from 'lucide-react';\nimport { Link } from 'wouter';\n\nconst CompaniesLanding = () => {\n  const services = [\n    {\n      icon: <Globe className=\"h-8 w-8 text-blue-500\" />,\n      title: \"تطوير المواقع الإلكترونية\",\n      description: \"مواقع متجاوبة وسريعة باستخدام أحدث التقنيات\",\n      features: [\"تصميم متجاوب\", \"سرعة عالية\", \"SEO محسن\", \"لوحة تحكم\"]\n    },\n    {\n      icon: <Smartphone className=\"h-8 w-8 text-green-500\" />,\n      title: \"تطبيقات الهاتف المحمول\",\n      description: \"تطبيقات iOS و Android بجودة عالية وأداء ممتاز\",\n      features: [\"نظامين iOS/Android\", \"واجهة سهلة\", \"أمان عالي\", \"تحديثات دورية\"]\n    },\n    {\n      icon: <Database className=\"h-8 w-8 text-purple-500\" />,\n      title: \"أنظمة إدارة البيانات\",\n      description: \"حلول ذكية لإدارة وتحليل البيانات بكفاءة\",\n      features: [\"قواعد بيانات متقدمة\", \"تحليلات ذكية\", \"تقارير تفصيلية\", \"نسخ احتياطي\"]\n    },\n    {\n      icon: <Cloud className=\"h-8 w-8 text-orange-500\" />,\n      title: \"الحلول السحابية\",\n      description: \"بنية تحتية سحابية آمنة وقابلة للتوسع\",\n      features: [\"استضافة سحابية\", \"حماية متقدمة\", \"نسخ احتياطي\", \"دعم فني 24/7\"]\n    }\n  ];\n\n  const benefits = [\n    {\n      icon: <Shield className=\"h-6 w-6 text-green-500\" />,\n      title: \"أمان وموثوقية\",\n      description: \"جميع الشركات معتمدة ومراجعة بعناية\"\n    },\n    {\n      icon: <Clock className=\"h-6 w-6 text-blue-500\" />,\n      title: \"توفير الوقت\",\n      description: \"عملية سريعة ومباشرة للعثور على الشركة المناسبة\"\n    },\n    {\n      icon: <Trophy className=\"h-6 w-6 text-purple-500\" />,\n      title: \"جودة عالية\",\n      description: \"شركات ذات خبرة مثبتة ومشاريع ناجحة\"\n    },\n    {\n      icon: <HeadphonesIcon className=\"h-6 w-6 text-orange-500\" />,\n      title: \"دعم متكامل\",\n      description: \"مساعدة في كل مرحلة من مراحل المشروع\"\n    }\n  ];\n\n  const testimonials = [\n    {\n      name: \"شركة الرياض للتجارة\",\n      role: \"مدير التقنية\",\n      content: \"وجدنا الشريك التقني المثالي لتطوير منصتنا الإلكترونية. النتائج فاقت توقعاتنا.\",\n      rating: 5\n    },\n    {\n      name: \"مؤسسة النخبة الطبية\",\n      role: \"المدير التنفيذي\",\n      content: \"تطبيق إدارة المرضى الذي طوروه لنا وفر علينا الكثير من الوقت والجهد.\",\n      rating: 5\n    },\n    {\n      name: \"معهد التعليم المتقدم\",\n      role: \"مدير التطوير\",\n      content: \"منصة التعلم الإلكتروني التي حصلنا عليها من هنا غيرت طريقة عملنا بالكامل.\",\n      rating: 5\n    }\n  ];\n\n  const stats = [\n    { number: \"500+\", label: \"شركة معتمدة\" },\n    { number: \"2000+\", label: \"مشروع منجز\" },\n    { number: \"98%\", label: \"رضا العملاء\" },\n    { number: \"24/7\", label: \"دعم فني\" }\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>خدمات البرمجة للشركات والمؤسسات - لينكتك</title>\n        <meta name=\"description\" content=\"احصل على أفضل خدمات تطوير البرمجيات لشركتك من شركات متخصصة ومعتمدة. تطوير مواقع، تطبيقات، أنظمة إدارة وحلول تقنية متكاملة.\" />\n        <meta name=\"keywords\" content=\"خدمات برمجة للشركات, تطوير مواقع للشركات, تطبيقات الشركات, أنظمة إدارة, حلول تقنية\" />\n      </Helmet>\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-blue-900 via-blue-800 to-purple-900 text-white py-20 relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black/20\"></div>\n        <div className=\"absolute inset-0 opacity-10\">\n          <div className=\"absolute top-10 right-10 w-32 h-32 bg-white rounded-full blur-3xl\"></div>\n          <div className=\"absolute bottom-10 left-10 w-40 h-40 bg-blue-300 rounded-full blur-3xl\"></div>\n        </div>\n        \n        <div className=\"container mx-auto px-4 relative\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <Badge className=\"mb-6 bg-white/20 text-white border-white/30\">\n              للشركات والمؤسسات\n            </Badge>\n            <h1 className=\"text-5xl md:text-6xl font-bold mb-6 leading-tight\">\n              حلول برمجية متكاملة\n              <br />\n              <span className=\"text-blue-300\">لنمو أعمالك</span>\n            </h1>\n            <p className=\"text-xl md:text-2xl mb-8 text-blue-100 leading-relaxed\">\n              احصل على أفضل الحلول التقنية من شركات البرمجة المعتمدة. \n              من تطوير المواقع إلى التطبيقات والأنظمة المتقدمة.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/auth/register\">\n                <Button size=\"lg\" className=\"bg-white text-blue-900 hover:bg-blue-50 px-8 py-4 text-lg\">\n                  ابدأ مشروعك الآن\n                  <ArrowLeft className=\"h-5 w-5 mr-2\" />\n                </Button>\n              </Link>\n              <Link href=\"/projects\">\n                <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10 px-8 py-4 text-lg\">\n                  تصفح المشاريع\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {stats.map((stat, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"text-4xl md:text-5xl font-bold text-blue-600 mb-2\">\n                  {stat.number}\n                </div>\n                <div className=\"text-gray-600 font-medium\">{stat.label}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">\n              خدماتنا التقنية\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              نوفر لك مجموعة شاملة من الخدمات التقنية لتلبية جميع احتياجات شركتك الرقمية\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {services.map((service, index) => (\n              <Card key={index} className=\"border-0 shadow-lg hover:shadow-xl transition-all duration-300 bg-white\">\n                <CardHeader className=\"text-center pb-4\">\n                  <div className=\"w-16 h-16 bg-gray-50 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    {service.icon}\n                  </div>\n                  <CardTitle className=\"text-xl font-bold text-gray-900\">\n                    {service.title}\n                  </CardTitle>\n                  <CardDescription className=\"text-gray-600\">\n                    {service.description}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {service.features.map((feature, idx) => (\n                      <li key={idx} className=\"flex items-center gap-2 text-sm text-gray-700\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 flex-shrink-0\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">\n              لماذا تختار منصتنا؟\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              نوفر لك بيئة آمنة وموثوقة للعثور على أفضل شركات البرمجة\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {benefits.map((benefit, index) => (\n              <div key={index} className=\"text-center bg-white p-8 rounded-xl shadow-sm\">\n                <div className=\"w-12 h-12 bg-gray-50 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  {benefit.icon}\n                </div>\n                <h3 className=\"font-bold text-gray-900 mb-3\">{benefit.title}</h3>\n                <p className=\"text-gray-600 text-sm\">{benefit.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">\n              كيف نعمل معك؟\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              عملية بسيطة ومباشرة من الفكرة إلى التنفيذ\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-4 gap-8\">\n            {[\n              {\n                step: \"1\",\n                title: \"اشرح مشروعك\",\n                description: \"صف احتياجاتك وأهدافك بوضوح\"\n              },\n              {\n                step: \"2\", \n                title: \"احصل على عروض\",\n                description: \"تلقى عروض من أفضل الشركات المختصة\"\n              },\n              {\n                step: \"3\",\n                title: \"اختر الشريك\",\n                description: \"قارن واختر الشركة الأنسب لمشروعك\"\n              },\n              {\n                step: \"4\",\n                title: \"ابدأ التنفيذ\",\n                description: \"راقب التقدم واحصل على النتائج\"\n              }\n            ].map((item, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold text-2xl mx-auto mb-6\">\n                  {item.step}\n                </div>\n                <h3 className=\"font-bold text-gray-900 mb-3 text-lg\">{item.title}</h3>\n                <p className=\"text-gray-600\">{item.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">\n              ما يقوله عملاؤنا\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              آراء الشركات التي وثقت بنا واختارت خدماتنا\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {testimonials.map((testimonial, index) => (\n              <Card key={index} className=\"border-0 shadow-lg bg-white\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex mb-4\">\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <Star key={i} className=\"h-5 w-5 text-yellow-400 fill-current\" />\n                    ))}\n                  </div>\n                  <p className=\"text-gray-700 mb-6 leading-relaxed\">\n                    \"{testimonial.content}\"\n                  </p>\n                  <div>\n                    <div className=\"font-bold text-gray-900\">{testimonial.name}</div>\n                    <div className=\"text-gray-600 text-sm\">{testimonial.role}</div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n            جاهز لبدء مشروعك التقني؟\n          </h2>\n          <p className=\"text-xl mb-8 text-blue-100 max-w-2xl mx-auto\">\n            انضم إلى مئات الشركات التي وثقت بنا لتطوير حلولها التقنية\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/auth/register\">\n              <Button size=\"lg\" className=\"bg-white text-blue-600 hover:bg-blue-50 px-8 py-4 text-lg\">\n                ابدأ الآن مجاناً\n                <ArrowLeft className=\"h-5 w-5 mr-2\" />\n              </Button>\n            </Link>\n            <Link href=\"/projects\">\n              <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10 px-8 py-4 text-lg\">\n                تصفح الشركات\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default CompaniesLanding;","size_bytes":14738},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage\n} from \"@/components/ui/form\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Mail, Phone, MapPin, Send, Loader2, ArrowLeft, MessageCircle, Clock } from \"lucide-react\";\nimport SEO from \"@/components/seo/SEO\";\nimport { WebpageStructuredData, BreadcrumbStructuredData } from \"@/components/seo/StructuredData\";\nimport { Link } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nimport { insertContactMessageSchema } from \"@shared/schema\";\n\n// نموذج التحقق مع امتداد لإضافة الموضوع (subject)\nconst contactFormSchema = insertContactMessageSchema.extend({\n  subject: z.string().min(1, { message: \"يرجى اختيار موضوع\" }),\n});\n\ntype ContactFormValues = z.infer<typeof contactFormSchema>;\n\nconst ContactPage = () => {\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // جلب معلومات التواصل من الإعدادات\n  const { data: contactInfo, isLoading: isLoadingContactInfo, refetch: refetchContactInfo } = useQuery({\n    queryKey: ['/api/contact-info'],\n    queryFn: async () => {\n      console.log('جلب معلومات التواصل...');\n      const response = await fetch('/api/contact-info');\n      if (!response.ok) {\n        throw new Error('فشل في جلب معلومات التواصل');\n      }\n      const data = await response.json();\n      console.log('معلومات التواصل المستلمة:', data);\n      return data;\n    },\n    retry: 1,\n    refetchOnWindowFocus: false, // منع التحديث التلقائي\n    staleTime: 1000 * 60 * 5, // البيانات تبقى صالحة لمدة 5 دقائق\n    refetchOnMount: true, // تحديث عند تحميل الصفحة\n    refetchInterval: false // إيقاف التحديث التلقائي\n  });\n  \n  const form = useForm<ContactFormValues>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      subject: \"\",\n      message: \"\",\n    },\n  });\n  \n  const onSubmit = async (data: ContactFormValues) => {\n    setIsSubmitting(true);\n    \n    // إعداد بيانات الرسالة للإرسال إلى API\n    const contactData = {\n      name: data.name,\n      email: data.email,\n      phone: data.phone || null,\n      message: data.message,\n      // تخزين الموضوع كجزء من الرسالة\n      messageDetails: {\n        subject: data.subject\n      }\n    };\n    \n    try {\n      // إرسال البيانات إلى نقطة نهاية API\n      const response = await fetch('/api/contact-messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(contactData),\n      });\n      \n      const result = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(result.message || 'حدث خطأ أثناء إرسال الرسالة');\n      }\n      \n      toast({\n        title: \"تم إرسال رسالتك بنجاح\",\n        description: \"سنقوم بالرد عليك في أقرب وقت ممكن.\",\n      });\n      \n      form.reset();\n    } catch (error) {\n      console.error('خطأ في إرسال نموذج الاتصال:', error);\n      toast({\n        title: \"حدث خطأ أثناء إرسال الرسالة\",\n        description: error instanceof Error ? error.message : \"يرجى المحاولة مرة أخرى لاحقاً.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <>\n      <SEO\n        title=\"تواصل معنا | لينكتك\"\n        description=\"تواصل مع فريق لينكتك للاستفسارات والدعم الفني وأي أسئلة متعلقة بمنصتنا\"\n        keywords=\"تواصل معنا, دعم فني, اتصل بنا, لينكتك, المساعدة, استفسارات\"\n      >\n        <WebpageStructuredData\n          name=\"تواصل معنا | لينكتك\"\n          description=\"تواصل مع فريق لينكتك للاستفسارات والدعم الفني وأي أسئلة متعلقة بمنصتنا\"\n          url=\"https://linktech.app/contact\"\n        />\n        <BreadcrumbStructuredData\n          items={[\n            { name: \"الرئيسية\", url: \"https://linktech.app/\" },\n            { name: \"تواصل معنا\", url: \"https://linktech.app/contact\" }\n          ]}\n        />\n      </SEO>\n\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"mb-6\">\n          <Link href=\"/\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n            <ArrowLeft className=\"ml-1 h-4 w-4 rtl-flip\" />\n            العودة إلى الرئيسية\n          </Link>\n        </div>\n        \n        <div className=\"max-w-5xl mx-auto\">\n          <nav className=\"flex text-sm text-neutral-600 mb-6\" aria-label=\"التنقل التسلسلي\">\n            <ol className=\"flex rtl space-x-2 space-x-reverse\">\n              <li><Link href=\"/\" className=\"hover:text-primary hover:underline\">الرئيسية</Link></li>\n              <li className=\"before:content-['/'] before:mx-2 font-semibold\">تواصل معنا</li>\n            </ol>\n          </nav>\n          \n          <h1 className=\"text-3xl md:text-4xl font-bold text-center mb-4\">تواصل معنا</h1>\n          <p className=\"text-neutral-600 text-center mb-12 text-lg\">\n            نحن هنا للإجابة على جميع استفساراتك ومساعدتك في أي وقت\n          </p>\n          \n          <div className=\"grid md:grid-cols-5 gap-8 mb-12\">\n            {/* معلومات التواصل */}\n            <div className=\"md:col-span-2 bg-white rounded-xl shadow-md p-6 md:p-8\">\n              <h2 className=\"text-2xl font-bold mb-6\">معلومات التواصل</h2>\n              \n              {isLoadingContactInfo ? (\n                <div className=\"space-y-6\">\n                  <div className=\"animate-pulse\">\n                    <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-3/4\"></div>\n                  </div>\n                  <div className=\"animate-pulse\">\n                    <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                  </div>\n                  <div className=\"animate-pulse\">\n                    <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"bg-primary/10 p-3 rounded-full\">\n                      <Mail className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-bold text-lg\">البريد الإلكتروني</h3>\n                      <p className=\"text-neutral-600\">\n                        {contactInfo?.contact_email || 'info@linktech.app'}\n                      </p>\n                      {contactInfo?.support_email && (\n                        <p className=\"text-neutral-600\">{contactInfo.support_email}</p>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"bg-primary/10 p-3 rounded-full\">\n                      <Phone className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-bold text-lg\">الهاتف</h3>\n                      <p className=\"text-neutral-600\" dir=\"ltr\">\n                        {contactInfo?.contact_phone || '+966 53 123 4567'}\n                      </p>\n                      {contactInfo?.secondary_phone && (\n                        <p className=\"text-neutral-600\" dir=\"ltr\">{contactInfo.secondary_phone}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  {contactInfo?.contact_whatsapp && (\n                    <div className=\"flex items-start gap-4\">\n                      <div className=\"bg-green-100 p-3 rounded-full\">\n                        <MessageCircle className=\"h-6 w-6 text-green-600\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-bold text-lg\">واتساب</h3>\n                        <p className=\"text-neutral-600\" dir=\"ltr\">\n                          {contactInfo.contact_whatsapp}\n                        </p>\n                        <p className=\"text-sm text-neutral-500\">للتواصل السريع</p>\n                      </div>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"bg-primary/10 p-3 rounded-full\">\n                      <MapPin className=\"h-6 w-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-bold text-lg\">العنوان</h3>\n                      <p className=\"text-neutral-600\">\n                        {contactInfo?.contact_address || \n                         'واحة المعرفة، طريق الملك عبدالعزيز، جدة، المملكة العربية السعودية'\n                        }\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"mt-10\">\n                <h3 className=\"font-bold text-lg mb-4\">ساعات العمل</h3>\n                <div className=\"space-y-2 text-neutral-600\">\n                  {contactInfo?.business_hours ? (\n                    <p>{contactInfo.business_hours}</p>\n                  ) : (\n                    <>\n                      <p>الأحد - الخميس: 9:00 صباحاً - 5:00 مساءً</p>\n                      <p>الجمعة - السبت: مغلق</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            \n            {/* نموذج التواصل */}\n            <div className=\"md:col-span-3 bg-white rounded-xl shadow-md p-6 md:p-8\">\n              <h2 className=\"text-2xl font-bold mb-6\">أرسل لنا رسالة</h2>\n              \n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>الاسم الكامل</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"أدخل اسمك الكامل\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>البريد الإلكتروني</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"أدخل بريدك الإلكتروني\" type=\"email\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  \n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"phone\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>رقم الهاتف (اختياري)</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"+966 5X XXX XXXX\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"subject\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>الموضوع</FormLabel>\n                          <Select \n                            onValueChange={field.onChange} \n                            defaultValue={field.value}\n                          >\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"اختر موضوع الرسالة\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"general\">استفسار عام</SelectItem>\n                              <SelectItem value=\"technical\">الدعم الفني</SelectItem>\n                              <SelectItem value=\"billing\">الفواتير والمدفوعات</SelectItem>\n                              <SelectItem value=\"partnership\">الشراكات</SelectItem>\n                              <SelectItem value=\"feedback\">اقتراحات وملاحظات</SelectItem>\n                              <SelectItem value=\"other\">أخرى</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>الرسالة</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"اكتب رسالتك هنا...\" \n                            rows={6}\n                            {...field} \n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <Button \n                    type=\"submit\" \n                    className=\"w-full\" \n                    size=\"lg\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                        جاري الإرسال...\n                      </>\n                    ) : (\n                      <>\n                        <Send className=\"ml-2 h-4 w-4\" />\n                        إرسال الرسالة\n                      </>\n                    )}\n                  </Button>\n                </form>\n              </Form>\n            </div>\n          </div>\n          \n          {/* خريطة أو معلومات إضافية */}\n          <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8 text-center\">\n            <h2 className=\"text-2xl font-bold mb-6\">الأسئلة الشائعة</h2>\n            \n            <div className=\"grid md:grid-cols-2 gap-6 text-right\">\n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">كيف يمكنني إنشاء حساب؟</h3>\n                <p className=\"text-neutral-600\">\n                  يمكنك إنشاء حساب بسهولة من خلال الضغط على \"إنشاء حساب\" في القائمة العلوية واتباع الخطوات البسيطة.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">كم تبلغ رسوم استخدام المنصة؟</h3>\n                <p className=\"text-neutral-600\">\n                  المنصة مجانية للتسجيل والبحث عن المشاريع. يتم خصم عمولة 2.5% فقط عند قبول أحد العروض وبدء المشروع.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">كيف يتم التواصل مع الشركات؟</h3>\n                <p className=\"text-neutral-600\">\n                  يتم التواصل من خلال نظام المراسلة المدمج في المنصة. عند قبول العرض، يمكنك الحصول على معلومات التواصل المباشرة.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-bold text-lg mb-2 text-primary\">كيف يمكنني الحصول على الدعم الفني؟</h3>\n                <p className=\"text-neutral-600\">\n                  يمكنك التواصل معنا من خلال نموذج التواصل في هذه الصفحة، أو مراسلتنا مباشرة على البريد الإلكتروني support@linktech.app.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContactPage;","size_bytes":18290},"client/src/pages/faq.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { ChevronDown, ChevronUp, Search, ArrowLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport SEO from \"@/components/seo/SEO\";\nimport { WebpageStructuredData, BreadcrumbStructuredData, FAQStructuredData } from \"@/components/seo/StructuredData\";\n\n// تعريف نوع البيانات للأسئلة الشائعة\ntype FAQCategory = {\n  id: string;\n  title: string;\n  questions: {\n    id: string;\n    question: string;\n    answer: string;\n  }[];\n};\n\n// مكون السؤال الفردي مع إمكانية التوسعة\nconst FAQItem = ({ \n  question, \n  answer, \n  isOpen, \n  toggleOpen \n}: { \n  question: string; \n  answer: string; \n  isOpen: boolean; \n  toggleOpen: () => void \n}) => {\n  return (\n    <div className=\"border-b border-neutral-200 last:border-0\">\n      <button\n        onClick={toggleOpen}\n        className=\"flex items-center justify-between w-full py-4 text-right text-lg font-medium hover:text-primary\"\n      >\n        <span>{question}</span>\n        {isOpen ? (\n          <ChevronUp className=\"h-5 w-5 flex-shrink-0\" />\n        ) : (\n          <ChevronDown className=\"h-5 w-5 flex-shrink-0\" />\n        )}\n      </button>\n      <div\n        className={`overflow-hidden transition-all duration-300 ${\n          isOpen ? \"max-h-96 mb-4\" : \"max-h-0\"\n        }`}\n      >\n        <div className=\"text-neutral-600 text-base\" dangerouslySetInnerHTML={{ __html: answer }} />\n      </div>\n    </div>\n  );\n};\n\nconst FAQPage = () => {\n  // بيانات الأسئلة الشائعة مجمعة حسب الفئات\n  const faqData: FAQCategory[] = [\n    {\n      id: \"general\",\n      title: \"أسئلة عامة\",\n      questions: [\n        {\n          id: \"what-is-linktech\",\n          question: \"ما هي منصة لينكتك؟\",\n          answer: \"لينكتك هي منصة تربط بين رواد الأعمال وشركات البرمجة لتنفيذ المشاريع التقنية بكفاءة وسهولة. توفر المنصة بيئة آمنة للتواصل والتعاقد، مع ضمان جودة العمل وحماية حقوق جميع الأطراف.\"\n        },\n        {\n          id: \"how-to-register\",\n          question: \"كيف يمكنني التسجيل في المنصة؟\",\n          answer: \"التسجيل في منصة لينكتك سهل ومجاني. ما عليك سوى النقر على زر 'إنشاء حساب' في الصفحة الرئيسية، ثم اختيار نوع الحساب (رائد أعمال أو شركة برمجة)، وإدخال بياناتك الأساسية، والموافقة على شروط الاستخدام.\"\n        },\n        {\n          id: \"account-types\",\n          question: \"ما هي أنواع الحسابات المتاحة؟\",\n          answer: \"تتوفر نوعان من الحسابات في منصة لينكتك:<br><br>1. <strong>حساب رائد أعمال:</strong> مخصص لأصحاب الأفكار والمشاريع التقنية الذين يبحثون عن شركات لتنفيذ مشاريعهم.<br><br>2. <strong>حساب شركة برمجة:</strong> مخصص للشركات المتخصصة في تطوير البرمجيات والتي ترغب في الحصول على مشاريع وعملاء جدد.\"\n        },\n        {\n          id: \"service-costs\",\n          question: \"هل استخدام المنصة مجاني؟\",\n          answer: \"التسجيل في المنصة وإنشاء حساب مجاني تماماً. تقوم المنصة بتحصيل عمولة بنسبة 2.5% فقط عند إتمام التعاقد بين رائد الأعمال والشركة. لا توجد أي رسوم خفية أو تكاليف إضافية.\"\n        },\n      ]\n    },\n    {\n      id: \"entrepreneur\",\n      title: \"أسئلة رواد الأعمال\",\n      questions: [\n        {\n          id: \"post-project\",\n          question: \"كيف يمكنني نشر مشروعي على المنصة؟\",\n          answer: \"بعد تسجيل الدخول كرائد أعمال، انتقل إلى لوحة التحكم واختر 'إضافة مشروع جديد'. قم بتعبئة نموذج المشروع بالتفاصيل المطلوبة مثل العنوان والوصف والميزانية والمهارات المطلوبة. بعد المراجعة السريعة، سيتم نشر مشروعك ليظهر للشركات المتخصصة.\"\n        },\n        {\n          id: \"project-visibility\",\n          question: \"من يمكنه رؤية تفاصيل مشروعي؟\",\n          answer: \"تفاصيل مشروعك تظهر للشركات المسجلة في المنصة، ولكن معلومات الاتصال الخاصة بك تبقى سرية. يمكن للشركات التواصل معك فقط من خلال نظام المراسلة داخل المنصة حتى تقبل أحد العروض وتتم عملية الدفع.\"\n        },\n        {\n          id: \"choosing-company\",\n          question: \"كيف أختار الشركة المناسبة لمشروعي؟\",\n          answer: \"بعد نشر مشروعك، ستتلقى عروضاً من الشركات المهتمة. يمكنك مقارنة العروض بناءً على السعر، المدة الزمنية، تقييمات الشركة، وملفها التعريفي. يمكنك أيضاً التواصل مع الشركات عبر نظام المراسلة لمناقشة التفاصيل قبل اختيار الشركة المناسبة.\"\n        },\n        {\n          id: \"project-payment\",\n          question: \"كيف تتم عملية الدفع؟\",\n          answer: \"عند اختيار إحدى الشركات، تقوم بدفع 2.5% من قيمة المشروع كعربون من خلال بوابات الدفع المتوفرة في المنصة. يتم الاحتفاظ بهذا المبلغ لدينا كضمان حتى اكتمال المشروع. بعد ذلك، يمكنك التواصل المباشر مع الشركة والاتفاق على طريقة دفع باقي المبلغ.\"\n        },\n        {\n          id: \"project-disputes\",\n          question: \"ماذا لو لم أكن راضياً عن نتائج المشروع؟\",\n          answer: \"توفر المنصة نظام لحل النزاعات. في حال وجود خلاف مع الشركة المنفذة، يمكنك تقديم شكوى مفصلة، وسيقوم فريق لينكتك بالتوسط لإيجاد حل يرضي الطرفين. في حالات عدم التزام الشركة بشروط التعاقد، يمكن استرداد العربون المدفوع.\"\n        },\n      ]\n    },\n    {\n      id: \"companies\",\n      title: \"أسئلة الشركات\",\n      questions: [\n        {\n          id: \"company-profile\",\n          question: \"كيف يمكنني إنشاء ملف تعريفي مميز لشركتي؟\",\n          answer: \"بعد التسجيل كشركة، انتقل إلى صفحة الملف الشخصي وقم بإضافة المعلومات التالية:<br><br>- شعار الشركة وصورة الغلاف<br>- وصف تفصيلي عن الشركة وخبراتها<br>- مجالات التخصص والمهارات التقنية<br>- نماذج من الأعمال السابقة<br>- معلومات التواصل<br><br>كلما كان ملفك التعريفي مكتملاً وواضحاً، زادت فرصك في الظهور في نتائج البحث وجذب المزيد من المشاريع.\"\n        },\n        {\n          id: \"finding-projects\",\n          question: \"كيف يمكنني العثور على مشاريع تناسب تخصص شركتي؟\",\n          answer: \"يمكنك البحث عن المشاريع من خلال:<br><br>1. تصفح قائمة المشاريع في لوحة التحكم<br>2. استخدام فلاتر البحث للعثور على مشاريع تناسب تخصصاتك<br>3. الاشتراك في إشعارات المشاريع الجديدة التي تتناسب مع مهاراتك<br>4. مراجعة المشاريع الموصى بها من قبل النظام بناءً على ملفك التعريفي\"\n        },\n        {\n          id: \"submitting-offers\",\n          question: \"كيف أقدم عرض سعر على مشروع؟\",\n          answer: \"لتقديم عرض على مشروع، انتقل إلى صفحة تفاصيل المشروع واضغط على زر 'تقديم عرض'. قم بملء نموذج العرض متضمناً السعر المقترح، المدة الزمنية، ووصف لكيفية تنفيذك للمشروع. حاول تقديم عرض تنافسي ومفصل يوضح قيمتك المضافة للمشروع.\"\n        },\n        {\n          id: \"company-verification\",\n          question: \"كيف يمكنني توثيق شركتي على المنصة؟\",\n          answer: \"لتوثيق شركتك، انتقل إلى إعدادات الحساب واختر 'طلب توثيق'. ستحتاج إلى تقديم المستندات التالية:<br><br>- السجل التجاري ساري المفعول<br>- شهادة ضريبة القيمة المضافة (إن وجدت)<br>- ما يثبت ملكية الموقع الإلكتروني للشركة<br><br>بعد مراجعة المستندات، ستحصل شركتك على علامة التوثيق التي تزيد من مصداقيتك على المنصة.\"\n        },\n        {\n          id: \"commission-calculation\",\n          question: \"كيف يتم احتساب عمولة المنصة؟\",\n          answer: \"تبلغ عمولة المنصة 2.5% من قيمة المشروع، يتم خصمها من العربون المدفوع عند قبول العرض. مثال: إذا كانت قيمة المشروع 10,000 ريال، فإن العربون سيكون 250 ريال، وهو ما يمثل عمولة المنصة.\"\n        },\n      ]\n    },\n    {\n      id: \"technical\",\n      title: \"أسئلة تقنية\",\n      questions: [\n        {\n          id: \"account-security\",\n          question: \"كيف تضمن المنصة أمان بياناتي؟\",\n          answer: \"نحن نطبق أعلى معايير الأمان لحماية بياناتك:<br><br>- تشفير SSL لجميع الاتصالات<br>- تشفير البيانات الحساسة في قواعد البيانات<br>- إجراءات المصادقة الثنائية<br>- مراقبة مستمرة للنشاطات المشبوهة<br>- تحديثات دورية لأنظمة الحماية\"\n        },\n        {\n          id: \"data-privacy\",\n          question: \"كيف تتعامل المنصة مع خصوصية البيانات؟\",\n          answer: \"نلتزم بحماية خصوصية بياناتك الشخصية وفقاً لسياسة الخصوصية الخاصة بنا. لا نشارك بياناتك مع أي طرف ثالث دون موافقتك، ونستخدم البيانات فقط للأغراض المحددة في سياسة الخصوصية. يمكنك الاطلاع على السياسة الكاملة في صفحة <a href='/privacy' class='text-primary hover:underline'>سياسة الخصوصية</a>.\"\n        },\n        {\n          id: \"supported-browsers\",\n          question: \"ما هي المتصفحات المدعومة؟\",\n          answer: \"المنصة متوافقة مع جميع المتصفحات الحديثة، بما في ذلك:<br><br>- Google Chrome (الإصدار 60 وما فوق)<br>- Mozilla Firefox (الإصدار 55 وما فوق)<br>- Safari (الإصدار 10 وما فوق)<br>- Microsoft Edge (الإصدار 80 وما فوق)<br><br>للحصول على أفضل تجربة، نوصي باستخدام أحدث إصدار من المتصفحات المذكورة.\"\n        },\n        {\n          id: \"mobile-app\",\n          question: \"هل هناك تطبيق للهواتف الذكية؟\",\n          answer: \"نعم، نوفر تطبيقات للهواتف الذكية على نظامي iOS وAndroid. يمكنك تحميل التطبيق من متجر التطبيقات الخاص بجهازك. يتيح لك التطبيق متابعة مشاريعك، والتواصل مع العملاء أو الشركات، وتلقي إشعارات فورية بالمستجدات.\"\n        },\n      ]\n    },\n    {\n      id: \"support\",\n      title: \"الدعم والمساعدة\",\n      questions: [\n        {\n          id: \"contact-support\",\n          question: \"كيف يمكنني التواصل مع فريق الدعم؟\",\n          answer: \"يمكنك التواصل مع فريق دعم لينكتك من خلال:<br><br>- البريد الإلكتروني: support@linktech.app<br>- نموذج الاتصال في صفحة <a href='/contact' class='text-primary hover:underline'>اتصل بنا</a><br>- الدردشة المباشرة في الموقع (متاحة من الساعة 9 صباحاً حتى 9 مساءً)<br>- الاتصال المباشر: +966 53 123 4567 (من الأحد إلى الخميس، 9 صباحاً - 5 مساءً)\"\n        },\n        {\n          id: \"response-time\",\n          question: \"ما هو وقت الاستجابة المتوقع للدعم الفني؟\",\n          answer: \"نسعى لتقديم دعم سريع وفعال. وقت الاستجابة المتوقع:<br><br>- الدردشة المباشرة: فوري خلال ساعات العمل<br>- البريد الإلكتروني: خلال 24 ساعة عمل<br>- نموذج الاتصال: خلال 24-48 ساعة عمل<br><br>في الحالات الطارئة، يمكنك تحديد أولوية طلبك كـ 'عاجل' للحصول على استجابة أسرع.\"\n        },\n        {\n          id: \"tutorials\",\n          question: \"هل توجد شروحات لاستخدام المنصة؟\",\n          answer: \"نعم، نوفر مجموعة من الأدلة والشروحات لمساعدتك على استخدام المنصة بكفاءة:<br><br>- دليل المستخدم الشامل<br>- مكتبة فيديوهات توضيحية<br>- مدونة مع نصائح وإرشادات<br>- أسئلة شائعة مفصلة<br><br>يمكنك الوصول إلى هذه الموارد من خلال قسم 'مركز المساعدة' في القائمة الرئيسية.\"\n        },\n      ]\n    },\n  ];\n\n  // حالة للبحث وتتبع الأسئلة المفتوحة\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [openQuestionIds, setOpenQuestionIds] = useState<string[]>([]);\n\n  // تبديل حالة سؤال (مفتوح/مغلق)\n  const toggleQuestion = (questionId: string) => {\n    setOpenQuestionIds((prevIds) =>\n      prevIds.includes(questionId)\n        ? prevIds.filter((id) => id !== questionId)\n        : [...prevIds, questionId]\n    );\n  };\n\n  // فلترة الأسئلة حسب البحث\n  const filteredFAQs = searchQuery\n    ? faqData.map((category) => ({\n        ...category,\n        questions: category.questions.filter(\n          (q) =>\n            q.question.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            q.answer.toLowerCase().includes(searchQuery.toLowerCase())\n        ),\n      })).filter((category) => category.questions.length > 0)\n    : faqData;\n\n  // إعداد هيكل البيانات للـ Schema.org FAQ Page\n  const faqStructuredData = {\n    questions: faqData.flatMap(category => \n      category.questions.map(q => ({\n        question: q.question,\n        answer: q.answer.replace(/<\\/?[^>]+(>|$)/g, \"\"), // إزالة وسوم HTML للحصول على نص بسيط\n      }))\n    )\n  };\n\n  return (\n    <>\n      <SEO\n        title=\"الأسئلة الشائعة | لينكتك\"\n        description=\"تعرف على إجابات الأسئلة الشائعة حول منصة لينكتك لربط رواد الأعمال بشركات البرمجة. معلومات حول التسجيل، إنشاء المشاريع، تقديم العروض، وآلية عمل المنصة.\"\n        keywords=\"أسئلة شائعة, لينكتك, مساعدة, دعم فني, إرشادات, شرح, منصة برمجة, رواد أعمال, شركات تقنية\"\n      >\n        <WebpageStructuredData\n          name=\"الأسئلة الشائعة | لينكتك\"\n          description=\"تعرف على إجابات الأسئلة الشائعة حول منصة لينكتك لربط رواد الأعمال بشركات البرمجة\"\n          url=\"https://linktech.app/faq\"\n        />\n        <BreadcrumbStructuredData\n          items={[\n            { name: \"الرئيسية\", url: \"https://linktech.app/\" },\n            { name: \"الأسئلة الشائعة\", url: \"https://linktech.app/faq\" }\n          ]}\n        />\n        <FAQStructuredData questions={faqStructuredData.questions} />\n      </SEO>\n\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"mb-6\">\n          <Link href=\"/\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n            <ArrowLeft className=\"ml-1 h-4 w-4 rtl-flip\" />\n            العودة إلى الرئيسية\n          </Link>\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto\">\n          <nav className=\"flex text-sm text-neutral-600 mb-6\" aria-label=\"التنقل التسلسلي\">\n            <ol className=\"flex rtl space-x-2 space-x-reverse\">\n              <li><Link href=\"/\" className=\"hover:text-primary hover:underline\">الرئيسية</Link></li>\n              <li className=\"before:content-['/'] before:mx-2 font-semibold\">الأسئلة الشائعة</li>\n            </ol>\n          </nav>\n\n          <h1 className=\"text-3xl md:text-4xl font-bold text-center mb-4\">الأسئلة الشائعة</h1>\n          <p className=\"text-neutral-600 text-center mb-8\">\n            تعرف على إجابات الأسئلة الأكثر شيوعاً حول منصة لينكتك وكيفية استخدامها\n          </p>\n\n          {/* مربع البحث */}\n          <div className=\"relative mb-10\">\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n              <Search className=\"h-5 w-5 text-neutral-400\" />\n            </div>\n            <Input\n              type=\"text\"\n              placeholder=\"ابحث في الأسئلة الشائعة...\"\n              className=\"pr-10 text-right\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n          </div>\n\n          {/* إذا لم تكن هناك نتائج للبحث */}\n          {filteredFAQs.length === 0 && (\n            <div className=\"text-center py-10\">\n              <p className=\"text-lg text-neutral-600 mb-4\">لا توجد نتائج مطابقة لـ \"{searchQuery}\"</p>\n              <Button\n                variant=\"outline\"\n                onClick={() => setSearchQuery(\"\")}\n              >\n                مسح البحث\n              </Button>\n            </div>\n          )}\n\n          {/* عرض الأسئلة حسب الفئات */}\n          <div className=\"space-y-10\">\n            {filteredFAQs.map((category) => (\n              <div key={category.id}>\n                <h2 className=\"text-2xl font-bold mb-6 border-b border-neutral-200 pb-2\">\n                  {category.title}\n                </h2>\n                <div className=\"space-y-2\">\n                  {category.questions.map((item) => (\n                    <FAQItem\n                      key={item.id}\n                      question={item.question}\n                      answer={item.answer}\n                      isOpen={openQuestionIds.includes(item.id)}\n                      toggleOpen={() => toggleQuestion(item.id)}\n                    />\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* قسم التواصل للمزيد من المساعدة */}\n          <div className=\"mt-16 bg-neutral-50 p-6 md:p-8 rounded-xl text-center\">\n            <h2 className=\"text-2xl font-bold mb-3\">لم تجد إجابة لسؤالك؟</h2>\n            <p className=\"text-neutral-600 mb-6\">\n              فريق الدعم الفني جاهز للإجابة على جميع استفساراتك\n            </p>\n            <Button asChild>\n              <Link href=\"/contact\">\n                تواصل معنا\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FAQPage;","size_bytes":20541},"client/src/pages/for-companies.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport { ArrowLeft, BriefcaseIcon, BuildingIcon, GraduationCapIcon, LockIcon, WalletIcon } from \"lucide-react\";\nimport { AuthContextType } from \"../App\";\n\ninterface ForCompaniesProps {\n  auth: AuthContextType;\n}\n\nexport default function ForCompanies({ auth }: ForCompaniesProps) {\n  const [_, navigate] = useLocation();\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Helmet>\n        <title>للشركات - منصة لينكتك</title>\n      </Helmet>\n\n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <Button\n          variant=\"ghost\"\n          className=\"mb-6 flex items-center gap-2\"\n          onClick={() => navigate(\"/\")}\n        >\n          <ArrowLeft className=\"h-4 w-4\" />\n          <span>العودة للرئيسية</span>\n        </Button>\n\n        <div className=\"mb-12 text-center\">\n          <h1 className=\"text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary to-purple-600 bg-clip-text text-transparent\">\n            انضم إلى شبكة شركات البرمجة في لينكتك\n          </h1>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            اكتشف كيف يمكن لمنصتنا أن تساعد شركتك على الوصول لمشاريع جديدة وفرص أعمال حقيقية\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-12\">\n          <Card className=\"shadow-md hover:shadow-lg transition-shadow border-t-4 border-t-primary\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <BuildingIcon className=\"h-5 w-5 text-primary\" />\n                <span>كيف تعمل المنصة</span>\n              </CardTitle>\n              <CardDescription>\n                دليل شامل لآلية عمل منصة لينكتك للشركات\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-primary\">١. التسجيل وإنشاء ملف الشركة</h3>\n                <p className=\"text-muted-foreground\">\n                  سجل في المنصة كشركة وأنشئ ملفك التعريفي مع إضافة كافة التفاصيل والمهارات التقنية للشركة. يبقى ملف شركتك مخفياً عن الزوار والمستخدمين العاديين.\n                </p>\n              </div>\n              \n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-primary\">٢. تصفح المشاريع المتاحة</h3>\n                <p className=\"text-muted-foreground\">\n                  استعرض المشاريع المتاحة واختر ما يناسب خبرات شركتك وقدراتها التقنية. يمكنك استخدام محرك التوصيات الذكي للوصول للمشاريع الأكثر ملاءمة.\n                </p>\n              </div>\n              \n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-primary\">٣. تقديم عروض على المشاريع</h3>\n                <p className=\"text-muted-foreground\">\n                  قدم عرضك المالي والزمني على المشاريع التي تهمك. يظهر عرضك للعميل مع تعمية معلومات شركتك (ستظهر مبهمة).\n                </p>\n              </div>\n              \n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-primary\">٤. التواصل والاتفاق النهائي</h3>\n                <p className=\"text-muted-foreground\">\n                  عند قبول عرضك ودفع العميل للعربون، تُكشف معلومات التواصل لكلا الطرفين لبدء التواصل المباشر والاتفاق النهائي.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"shadow-md hover:shadow-lg transition-shadow border-t-4 border-t-purple-600\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <WalletIcon className=\"h-5 w-5 text-purple-600\" />\n                <span>نظام العمولات والمدفوعات</span>\n              </CardTitle>\n              <CardDescription>\n                تفاصيل نظام العمولات والمدفوعات في منصة لينكتك\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-purple-600\">عربون ١٠٪ من قيمة المشروع</h3>\n                <p className=\"text-muted-foreground\">\n                  عند قبول عرضك، يدفع العميل عربوناً بقيمة ١٠٪ من إجمالي قيمة المشروع. هذا العربون ضمان لجدية العميل ومؤشر على الالتزام بالتعاقد.\n                </p>\n              </div>\n              \n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-purple-600\">خصم العربون من قيمة المشروع</h3>\n                <p className=\"text-muted-foreground\">\n                  يتم خصم قيمة العربون المدفوع من القيمة الإجمالية للمشروع. فمثلاً، إذا كانت قيمة المشروع ١٠٠٠٠ ريال ودفع العميل عربوناً بقيمة ١٠٠٠ ريال، فإن المبلغ المتبقي للدفع هو ٩٠٠٠ ريال.\n                </p>\n              </div>\n              \n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-purple-600\">عمولة المنصة</h3>\n                <p className=\"text-muted-foreground\">\n                  تعتبر قيمة العربون المدفوع هي عمولة المنصة. لا توجد رسوم إضافية على الشركات أو العملاء بعد ذلك. التعاقد والدفعات اللاحقة تتم مباشرة بين الطرفين.\n                </p>\n              </div>\n              \n              <div className=\"bg-muted p-4 rounded-lg\">\n                <h3 className=\"font-semibold mb-2 text-purple-600\">سياسة إلغاء المشاريع</h3>\n                <p className=\"text-muted-foreground\">\n                  في حالة إلغاء المشروع من قبل العميل بعد دفع العربون ولأسباب غير متعلقة بالشركة، تحتفظ المنصة بالعربون. وفي حال إلغاء المشروع من قبل الشركة، يُرد العربون للعميل.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"mb-12\">\n          <Card className=\"shadow-md\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <LockIcon className=\"h-5 w-5 text-green-600\" />\n                <span>حماية خصوصية الشركات</span>\n              </CardTitle>\n              <CardDescription>\n                كيف نحمي هوية شركتك وبياناتك في منصة لينكتك\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"bg-muted p-4 rounded-lg\">\n                  <h3 className=\"font-semibold mb-2 text-green-600\">عدم ظهور الشركات للزوار</h3>\n                  <p className=\"text-muted-foreground\">\n                    لا يستطيع الزوار أو المستخدمين العاديين رؤية قائمة الشركات المسجلة في المنصة. ملفات الشركات مخفية بالكامل.\n                  </p>\n                </div>\n                \n                <div className=\"bg-muted p-4 rounded-lg\">\n                  <h3 className=\"font-semibold mb-2 text-green-600\">تعمية بيانات الشركة</h3>\n                  <p className=\"text-muted-foreground\">\n                    عند تقديم عرض على مشروع، تظهر بيانات شركتك مبهمة للعميل (بدون اسم وتفاصيل). تظهر فقط التقييمات وسنوات الخبرة.\n                  </p>\n                </div>\n                \n                <div className=\"bg-muted p-4 rounded-lg\">\n                  <h3 className=\"font-semibold mb-2 text-green-600\">كشف البيانات فقط بعد دفع العربون</h3>\n                  <p className=\"text-muted-foreground\">\n                    تظهر بيانات التواصل الخاصة بالشركة للعميل فقط بعد موافقته على العرض ودفع العربون، مما يضمن جدية التعامل.\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"mb-12\">\n          <h2 className=\"text-2xl font-bold mb-6 text-center\">الأسئلة الشائعة للشركات</h2>\n          <Accordion type=\"single\" collapsible className=\"w-full max-w-3xl mx-auto\">\n            <AccordionItem value=\"item-1\">\n              <AccordionTrigger>كيف تضمن المنصة جدية العملاء؟</AccordionTrigger>\n              <AccordionContent>\n                تضمن المنصة جدية العملاء من خلال نظام العربون الذي يتطلب من العميل دفع 2.5% من قيمة المشروع قبل الكشف عن معلومات التواصل. يشير هذا الالتزام المالي إلى جدية العميل واهتمامه بالمضي قدماً في المشروع.\n              </AccordionContent>\n            </AccordionItem>\n            \n            <AccordionItem value=\"item-2\">\n              <AccordionTrigger>هل يمكنني رفض مشروع بعد قبول العرض من قبل العميل؟</AccordionTrigger>\n              <AccordionContent>\n                نعم، يمكنك رفض المشروع حتى بعد قبول العرض، لكن يجب أن يكون ذلك قبل بدء العمل الفعلي. في هذه الحالة، سيتم رد العربون للعميل، وقد يؤثر ذلك على تقييم شركتك في المنصة.\n              </AccordionContent>\n            </AccordionItem>\n            \n            <AccordionItem value=\"item-3\">\n              <AccordionTrigger>ما هي آلية الدفع بعد دفع العربون؟</AccordionTrigger>\n              <AccordionContent>\n                بعد دفع العربون وكشف بيانات التواصل، تتم جميع المعاملات المالية اللاحقة مباشرة بين شركتك والعميل دون تدخل المنصة. يمكنكما الاتفاق على جدول زمني للدفعات وطريقة الدفع المناسبة لكما.\n              </AccordionContent>\n            </AccordionItem>\n            \n            <AccordionItem value=\"item-4\">\n              <AccordionTrigger>هل هناك حد أقصى لعدد العروض التي يمكنني تقديمها؟</AccordionTrigger>\n              <AccordionContent>\n                لا، يمكنك تقديم عروض على أي عدد من المشاريع المتاحة في المنصة. ومع ذلك، ننصح بالتركيز على المشاريع التي تتناسب مع خبرات شركتك لزيادة فرص قبول عروضك.\n              </AccordionContent>\n            </AccordionItem>\n            \n            <AccordionItem value=\"item-5\">\n              <AccordionTrigger>كيف يتم تقييم الشركات في المنصة؟</AccordionTrigger>\n              <AccordionContent>\n                يتم تقييم الشركات بناءً على تقييمات العملاء بعد انتهاء المشاريع. التقييمات تشمل جودة العمل، الالتزام بالمواعيد، والتواصل الفعال. التقييمات الإيجابية تزيد من فرص ظهور عروضك في المشاريع المستقبلية.\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        </div>\n\n        <div className=\"text-center\">\n          {auth.isAuthenticated ? (\n            <Button \n              onClick={() => navigate(\"/projects\")}\n              className=\"bg-gradient-to-r from-primary to-purple-600 hover:from-primary/90 hover:to-purple-600/90 text-white\"\n              size=\"lg\"\n            >\n              <BriefcaseIcon className=\"h-5 w-5 ml-2\" />\n              تصفح المشاريع المتاحة\n            </Button>\n          ) : (\n            <Button \n              onClick={() => navigate(\"/auth/register\")}\n              className=\"bg-gradient-to-r from-primary to-purple-600 hover:from-primary/90 hover:to-purple-600/90 text-white\"\n              size=\"lg\"\n            >\n              <GraduationCapIcon className=\"h-5 w-5 ml-2\" />\n              سجل الآن كشركة برمجة\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":13829},"client/src/pages/home.tsx":{"content":"\nimport HeroSection from \"@/components/home/HeroSection\";\nimport HowItWorks from \"@/components/home/HowItWorks\";\nimport FeaturedProjects from \"@/components/home/FeaturedProjects\";\nimport CompanyPromotionSection from \"@/components/home/TopCompanies\";\nimport Testimonials from \"@/components/home/Testimonials\";\nimport CTASection from \"@/components/home/CTASection\";\nimport OfficialCompaniesSection from \"@/components/home/OfficialCompaniesSection\";\nimport AIAssistantSection from \"@/components/home/AIAssistantSection\";\nimport FeaturedClients from \"@/components/home/FeaturedClients\";\nimport { TrendingProjects } from \"@/components/recommendations\";\nimport SEO from \"@/components/seo/SEO\";\nimport { OrganizationStructuredData, WebpageStructuredData } from \"@/components/seo/StructuredData\";\n\n\ntype HomeProps = {\n  auth: {\n    isAuthenticated: boolean;\n    isCompany: boolean;\n    isEntrepreneur: boolean;\n  };\n};\n\nconst Home = ({ auth }: HomeProps) => {\n  return (\n    <>\n      <SEO \n        title=\"منصة ربط شركات البرمجة ورواد الأعمال\"\n        description=\"منصة تربط بين رواد الأعمال وشركات البرمجة لتنفيذ المشاريع التقنية بكفاءة وسهولة. ابحث عن أفضل الشركات التقنية لتنفيذ مشروعك بكل أمان.\"\n        keywords=\"منصة برمجة, شركات تطوير برمجيات, مشاريع تقنية, تطوير مواقع, تطوير تطبيقات, رواد أعمال, ربط شركات البرمجة, تقنية, برمجة, تطوير\"\n        ogType=\"website\"\n        ogImage=\"https://linktech.app/images/linktech-social-card.png\"\n      >\n        <OrganizationStructuredData \n          name=\"لينكتك\"\n          url=\"https://linktech.app\"\n          logo=\"https://linktech.app/images/logo.svg\"\n          description=\"منصة تربط بين رواد الأعمال وشركات البرمجة لتنفيذ المشاريع التقنية بكفاءة وسهولة\"\n        />\n        <WebpageStructuredData\n          name=\"لينكتك - منصة ربط شركات البرمجة ورواد الأعمال\"\n          description=\"منصة تربط بين رواد الأعمال وشركات البرمجة لتنفيذ المشاريع التقنية بكفاءة وسهولة. ابحث عن أفضل الشركات التقنية لتنفيذ مشروعك بكل أمان.\"\n          url=\"https://linktech.app\"\n        />\n      </SEO>\n      \n      <HeroSection auth={auth} />\n      <FeaturedClients />\n      <OfficialCompaniesSection />\n      <AIAssistantSection auth={auth} />\n      <HowItWorks />\n      <div className=\"container mx-auto px-4 py-10\">\n        <TrendingProjects limit={3} />\n      </div>\n      <FeaturedProjects />\n      <CompanyPromotionSection />\n      <Testimonials />\n      <CTASection auth={auth} />\n    </>\n  );\n};\n\nexport default Home;\n","size_bytes":2906},"client/src/pages/how-it-works.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { CheckCircle2, ArrowLeft, ArrowRight } from \"lucide-react\";\n\nconst HowItWorksPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>كيف يعمل موقعنا | لينكتك</title>\n        <meta name=\"description\" content=\"تعرف على كيفية عمل منصتنا وكيف يمكن أن تساعد في ربط أصحاب المشاريع التقنية مع الشركات المتخصصة\" />\n      </Helmet>\n\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h1 className=\"text-3xl md:text-4xl font-bold text-center mb-8\">كيف يعمل لينكتك</h1>\n          \n          <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-6 text-primary\">الخطوات البسيطة للتواصل والإنجاز</h2>\n            \n            <div className=\"space-y-10 my-10\">\n              {/* الخطوة 1 */}\n              <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n                <div className=\"bg-primary/10 rounded-full p-4 flex items-center justify-center\">\n                  <span className=\"text-2xl font-bold text-primary\">1</span>\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-xl font-bold mb-2\">تسجيل وإنشاء حساب</h3>\n                  <p className=\"text-neutral-600 leading-relaxed\">\n                    قم بإنشاء حساب جديد كرائد أعمال أو شركة تطوير، وأكمل ملفك الشخصي بالمعلومات والمهارات المطلوبة لتعزيز فرص التوافق الناجح.\n                  </p>\n                </div>\n              </div>\n              \n              {/* الخطوة 2 */}\n              <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n                <div className=\"bg-primary/10 rounded-full p-4 flex items-center justify-center\">\n                  <span className=\"text-2xl font-bold text-primary\">2</span>\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-xl font-bold mb-2\">نشر مشروعك أو استعراض المشاريع</h3>\n                  <p className=\"text-neutral-600 leading-relaxed\">\n                    كصاحب فكرة أو مشروع، قم بإنشاء ونشر مشروعك مع وصف تفصيلي واضح للمتطلبات والميزانية.\n                    كشركة تطوير، استعرض المشاريع المتاحة التي تتناسب مع خبراتك واهتماماتك.\n                  </p>\n                </div>\n              </div>\n              \n              {/* الخطوة 3 */}\n              <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n                <div className=\"bg-primary/10 rounded-full p-4 flex items-center justify-center\">\n                  <span className=\"text-2xl font-bold text-primary\">3</span>\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-xl font-bold mb-2\">تقديم العروض والتواصل</h3>\n                  <p className=\"text-neutral-600 leading-relaxed\">\n                    تقوم الشركات المهتمة بتقديم عروضها للمشروع مع تحديد التكلفة والمدة والمميزات.\n                    يمكن لأصحاب المشاريع التواصل مع الشركات عبر نظام المراسلة المدمج في المنصة.\n                  </p>\n                </div>\n              </div>\n              \n              {/* الخطوة 4 */}\n              <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n                <div className=\"bg-primary/10 rounded-full p-4 flex items-center justify-center\">\n                  <span className=\"text-2xl font-bold text-primary\">4</span>\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-xl font-bold mb-2\">قبول العرض وبدء العمل</h3>\n                  <p className=\"text-neutral-600 leading-relaxed\">\n                    عند اختيار العرض المناسب، يقوم صاحب المشروع بدفع عربون 10٪ من قيمة المشروع، ليتم الكشف عن بيانات التواصل المباشرة للشركة،\n                    ويمكن للطرفين البدء في التعاون وتنفيذ المشروع خارج المنصة.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-xl shadow-md p-6 md:p-8 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-6 text-primary\">مميزات لينكتك</h2>\n            \n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"flex items-start gap-4\">\n                <CheckCircle2 className=\"h-6 w-6 text-primary mt-1 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"font-bold text-lg mb-1\">توافق ذكي</h3>\n                  <p className=\"text-neutral-600\">نظام توصيات مدعوم بالذكاء الاصطناعي يربط المشاريع بالشركات الأكثر ملاءمة.</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start gap-4\">\n                <CheckCircle2 className=\"h-6 w-6 text-primary mt-1 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"font-bold text-lg mb-1\">تواصل آمن</h3>\n                  <p className=\"text-neutral-600\">نظام مراسلة مدمج مع خصوصية عالية وحماية لمعلومات الأطراف.</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start gap-4\">\n                <CheckCircle2 className=\"h-6 w-6 text-primary mt-1 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"font-bold text-lg mb-1\">شفافية كاملة</h3>\n                  <p className=\"text-neutral-600\">عرض واضح للتكاليف والمدد الزمنية بدون رسوم خفية.</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start gap-4\">\n                <CheckCircle2 className=\"h-6 w-6 text-primary mt-1 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"font-bold text-lg mb-1\">دعم مستمر</h3>\n                  <p className=\"text-neutral-600\">فريق دعم متخصص لحل جميع المشكلات ومساعدة الأطراف.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-gradient-to-r from-primary/90 to-primary/70 text-white rounded-xl shadow-md p-6 md:p-8\">\n            <div className=\"max-w-3xl mx-auto text-center\">\n              <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">ابدأ رحلتك الآن</h2>\n              <p className=\"mb-8 text-white/80\">\n                سواء كنت صاحب مشروع تقني طموح أو شركة تطوير متخصصة، انضم إلينا اليوم واستفد من ميزات منصة لينكتك لتحقيق أهدافك.\n              </p>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button asChild size=\"lg\" variant=\"secondary\" className=\"group\">\n                  <Link href=\"/auth/register\" className=\"flex items-center\">\n                    إنشاء حساب جديد\n                    <ArrowLeft className=\"mr-2 h-5 w-5 transition-transform group-hover:-translate-x-1\" />\n                  </Link>\n                </Button>\n                \n                <Button asChild size=\"lg\" variant=\"outline\" className=\"group bg-white/10 border-white/20 hover:bg-white/20\">\n                  <Link href=\"/projects\" className=\"flex items-center\">\n                    استعراض المشاريع\n                    <ArrowRight className=\"mr-2 h-5 w-5 transition-transform group-hover:translate-x-1\" />\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HowItWorksPage;","size_bytes":8455},"client/src/pages/messages.tsx":{"content":"import React, { useState, useEffect, useMemo } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useLocation, Link } from 'wouter';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Badge } from '@/components/ui/badge';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  Send, \n  Search, \n  MessageCircle, \n  Clock, \n  CheckCircle,\n  AlertTriangle,\n  Loader2,\n  ArrowLeft\n} from 'lucide-react';\n\n// تعريف الأنواع\ninterface Message {\n  id: number;\n  content: string;\n  fromUserId: number;\n  toUserId: number;\n  projectId?: number;\n  read: boolean;\n  createdAt: string;\n  fromUser?: {\n    name: string;\n    avatar?: string;\n  };\n  toUser?: {\n    name: string;\n    avatar?: string;\n  };\n  project?: {\n    id: number;\n    title: string;\n  };\n}\n\ninterface Conversation {\n  id: number;\n  otherUserId: number;\n  otherUser: {\n    name: string;\n    avatar?: string;\n  };\n  lastMessage: Message;\n  unreadCount: number;\n  projectId?: number;\n  project?: {\n    id: number;\n    title: string;\n  };\n}\n\nconst formatDate = (date: Date): string => {\n  const now = new Date();\n  const diffMs = now.getTime() - date.getTime();\n  const diffMinutes = Math.floor(diffMs / (1000 * 60));\n  const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n  const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n\n  if (diffMinutes < 1) return 'الآن';\n  if (diffMinutes < 60) return `منذ ${diffMinutes} دقيقة`;\n  if (diffHours < 24) return `منذ ${diffHours} ساعة`;\n  if (diffDays < 7) return `منذ ${diffDays} يوم`;\n  \n  return date.toLocaleDateString('ar-SA', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\ninterface User {\n  id: number;\n  username: string;\n  name?: string;\n  email?: string;\n  avatar?: string;\n  role?: string;\n}\n\ninterface MessageProps {\n  auth: {\n    user: User;\n    isAuthenticated: boolean;\n  };\n}\n\nconst getInitials = (name: string): string => {\n  return name\n    .split(' ')\n    .map(part => part.charAt(0))\n    .join('')\n    .toUpperCase()\n    .substring(0, 2);\n};\n\nconst Messages: React.FC<MessageProps> = ({ auth }) => {\n  // التحقق من وجود المستخدم أولاً\n  if (!auth || !auth.user) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <Card className=\"w-96\">\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <h2 className=\"text-2xl font-bold mb-4\">يجب تسجيل الدخول</h2>\n              <p className=\"mb-4\">يرجى تسجيل الدخول للوصول إلى الرسائل الخاصة بك.</p>\n              <Button onClick={() => window.location.href = '/auth/login'}>\n                تسجيل الدخول\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // استخلاص معاملات URL لبدء محادثة جديدة\n  const [, params] = useLocation();\n  const urlParams = new URLSearchParams(window.location.search);\n  const userIdFromUrl = urlParams.get('userId') ? parseInt(urlParams.get('userId') || '0') : null;\n  const projectIdFromUrl = urlParams.get('projectId') ? parseInt(urlParams.get('projectId') || '0') : null;\n  \n  const [selectedConversation, setSelectedConversation] = useState<number | null>(userIdFromUrl);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [projectId, setProjectId] = useState<number | null>(projectIdFromUrl);\n  const { toast } = useToast();\n  const [localMessages, setLocalMessages] = useState<Message[]>([]);\n  \n  const queryClient = useQueryClient();\n\n  // جلب جميع الرسائل للمستخدم الحالي\n  const { data: messagesData, isLoading: messagesLoading, error: messagesError, refetch: refetchMessages } = useQuery({\n    queryKey: ['/api/messages'],\n    enabled: auth.isAuthenticated && !!auth.user?.id,\n    refetchInterval: 5000, // تحديث كل 5 ثوان\n    retry: 2,\n    retryDelay: 1000,\n  });\n\n  // جلب بيانات المستخدم المحدد إذا كان متوفراً في URL\n  const { data: targetUserData } = useQuery({\n    queryKey: ['/api/users', userIdFromUrl],\n    enabled: !!userIdFromUrl && auth.isAuthenticated,\n    retry: 1,\n  });\n\n  // جلب بيانات المشروع المحدد إذا كان متوفراً في URL\n  const { data: targetProjectData } = useQuery({\n    queryKey: ['/api/projects', projectIdFromUrl],\n    enabled: !!projectIdFromUrl && auth.isAuthenticated,\n    retry: 1,\n  });\n\n  // جلب المحادثة المحددة\n  const { data: conversationData, isLoading: conversationLoading, error: conversationError, refetch: refetchConversation } = useQuery<Message[]>({\n    queryKey: ['/api/messages/conversation', selectedConversation, projectId],\n    queryFn: async () => {\n      if (!selectedConversation) return [];\n      \n      const url = `/api/messages/conversation/${selectedConversation}${projectId ? `?projectId=${projectId}` : ''}`;\n      const response = await fetch(url, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`,\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch conversation: ${response.status}`);\n      }\n      \n      return response.json();\n    },\n    enabled: !!selectedConversation && auth.isAuthenticated,\n    refetchInterval: 3000, // تحديث كل 3 ثوان\n    retry: 2,\n    retryDelay: 1000,\n  });\n\n  // إرسال رسالة\n  const sendMessageMutation = useMutation({\n    mutationFn: async ({ content, toUserId, projectId }: { content: string; toUserId: number; projectId?: number | null }) => {\n      const response = await apiRequest('POST', '/api/messages', {\n        content,\n        toUserId,\n        projectId\n      });\n      return response.json();\n    },\n    onSuccess: (newMessage) => {\n      setNewMessage('');\n      \n      // إزالة الرسالة المؤقتة وإضافة الرسالة الحقيقية\n      setLocalMessages(prev => prev.filter(msg => \n        !(msg.id > 1000000000000) // إزالة الرسائل المؤقتة بناءً على الوقت\n      ));\n      \n      // تحديث البيانات\n      queryClient.invalidateQueries({ queryKey: ['/api/messages'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/messages/conversation', selectedConversation, projectId] });\n      \n      toast({\n        title: \"تم إرسال الرسالة\",\n        description: \"تم إرسال رسالتك بنجاح\",\n      });\n    },\n    onError: (error: any) => {\n      console.error('خطأ في إرسال الرسالة:', error);\n      \n      // إزالة الرسالة المؤقتة في حالة الخطأ\n      setLocalMessages(prev => prev.filter(msg => \n        !(msg.id > 1000000000000)\n      ));\n      \n      if (error?.violations?.includes('معلومات_اتصال_محظورة')) {\n        toast({\n          title: \"محتوى غير مسموح\",\n          description: \"لا يمكن مشاركة معلومات الاتصال مثل أرقام الهواتف أو الإيميلات في الرسائل\",\n          variant: \"destructive\",\n        });\n      } else {\n        toast({\n          title: \"فشل إرسال الرسالة\",\n          description: error?.message || \"حدث خطأ أثناء إرسال رسالتك، يرجى المحاولة مرة أخرى\",\n          variant: \"destructive\",\n        });\n      }\n    }\n  });\n\n  // تحويل الرسائل إلى محادثات\n  const conversations: Conversation[] = useMemo(() => {\n    if (!messagesData || !Array.isArray(messagesData) || messagesData.length === 0) {\n      return [];\n    }\n\n    const conversationsMap = new Map<string, Conversation>();\n    \n    messagesData.forEach((message: Message) => {\n      const otherUserId = message.fromUserId === auth.user.id ? message.toUserId : message.fromUserId;\n      const otherUser = message.fromUserId === auth.user.id ? message.toUser : message.fromUser;\n      \n      if (!otherUser || !otherUserId) return;\n      \n      const conversationKey = `${Math.min(auth.user.id, otherUserId)}-${Math.max(auth.user.id, otherUserId)}-${message.projectId || 'no-project'}`;\n      \n      if (!conversationsMap.has(conversationKey)) {\n        conversationsMap.set(conversationKey, {\n          id: otherUserId,\n          otherUserId,\n          otherUser,\n          lastMessage: message,\n          unreadCount: message.toUserId === auth.user.id && !message.read ? 1 : 0,\n          projectId: message.projectId,\n          project: message.project\n        });\n      } else {\n        const existingConversation = conversationsMap.get(conversationKey)!;\n        if (new Date(message.createdAt) > new Date(existingConversation.lastMessage.createdAt)) {\n          conversationsMap.set(conversationKey, {\n            ...existingConversation,\n            lastMessage: message,\n            unreadCount: existingConversation.unreadCount + (message.toUserId === auth.user.id && !message.read ? 1 : 0)\n          });\n        } else {\n          conversationsMap.set(conversationKey, {\n            ...existingConversation,\n            unreadCount: existingConversation.unreadCount + (message.toUserId === auth.user.id && !message.read ? 1 : 0)\n          });\n        }\n      }\n    });\n    \n    return Array.from(conversationsMap.values())\n      .sort((a, b) => new Date(b.lastMessage.createdAt).getTime() - new Date(a.lastMessage.createdAt).getTime());\n  }, [messagesData, auth.user]);\n\n  // عرض رسالة خطأ إذا فشل تحميل الرسائل\n  if (messagesError) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <Card className=\"w-96\">\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <AlertTriangle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n              <h2 className=\"text-2xl font-bold mb-4\">مشكلة في الاتصال</h2>\n              <p className=\"mb-4 text-red-600\">{messagesError.message}</p>\n              <Button onClick={() => refetchMessages()}>\n                إعادة المحاولة\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (messagesLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <Loader2 className=\"w-8 h-8 animate-spin\" />\n        <span className=\"mr-2\">جاري تحميل المحادثات...</span>\n      </div>\n    );\n  }\n\n  const sendMessage = () => {\n    if (!newMessage.trim() || !selectedConversation || sendMessageMutation.isPending) return;\n    \n    // إضافة رسالة مؤقتة للعرض المباشر\n    const tempMessage: Message = {\n      id: Date.now() as any,\n      content: newMessage,\n      fromUserId: auth.user.id,\n      toUserId: selectedConversation,\n      projectId: projectId,\n      read: false,\n      createdAt: new Date().toISOString(),\n      fromUser: {\n        name: auth.user.name || auth.user.username,\n        avatar: auth.user.avatar || null\n      }\n    };\n    \n    setLocalMessages(prev => [...prev, tempMessage]);\n    \n    sendMessageMutation.mutate({\n      content: newMessage,\n      toUserId: selectedConversation,\n      projectId: projectId\n    });\n  };\n\n  // تصفية المحادثات حسب البحث\n  const filteredConversations = conversations.filter(conversation =>\n    conversation.otherUser?.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    conversation.project?.title?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"container mx-auto p-4 h-screen flex flex-col\">\n      <Helmet>\n        <title>الرسائل | لينكتك</title>\n      </Helmet>\n      \n      <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg flex items-center gap-2 text-blue-800\">\n        <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\n        <div>\n          <p className=\"font-medium\">نظام المحادثات المحسن</p>\n          <p className=\"text-sm\">يتم تحديث الرسائل تلقائياً كل 3 ثوان لضمان أفضل أداء واستقرار.</p>\n        </div>\n      </div>\n      \n      <div className=\"flex-grow flex gap-4 overflow-hidden\">\n        {/* قائمة المحادثات */}\n        <Card className={`md:w-1/3 h-full overflow-hidden flex flex-col ${selectedConversation ? 'hidden md:flex' : 'flex'}`}>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg md:text-xl\">المحادثات</CardTitle>\n            <div className=\"relative\">\n              <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"ابحث في المحادثات...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pr-10\"\n              />\n            </div>\n          </CardHeader>\n          <CardContent className=\"flex-grow overflow-y-auto p-0\">\n            {/* زر بدء محادثة جديدة */}\n            <div className=\"p-3 border-b bg-gradient-to-r from-blue-50 to-indigo-50\">\n              <Link href=\"/projects\">\n                <Button \n                  className=\"w-full flex items-center justify-center gap-2\"\n                  variant=\"outline\"\n                >\n                  <MessageCircle className=\"h-4 w-4\" />\n                  تصفح المشاريع للتواصل\n                </Button>\n              </Link>\n              <p className=\"text-xs text-muted-foreground text-center mt-2\">\n                تفضل بزيارة صفحة المشاريع لبدء محادثة مع أصحاب المشاريع أو الشركات\n              </p>\n            </div>\n            \n            {filteredConversations.length > 0 ? (\n              filteredConversations.map((conversation) => (\n                <div \n                  key={`${conversation.otherUserId}-${conversation.projectId || 'no-project'}`}\n                  className={`p-3 border-b cursor-pointer hover:bg-accent transition-colors ${\n                    selectedConversation === conversation.otherUserId ? 'bg-accent' : ''\n                  }`}\n                  onClick={() => setSelectedConversation(conversation.otherUserId)}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <Avatar className=\"h-10 w-10\">\n                      <AvatarImage src={conversation.otherUser?.avatar || undefined} alt=\"صورة المستخدم\" />\n                      <AvatarFallback>\n                        {getInitials(conversation.otherUser?.name || \"مستخدم\")}\n                      </AvatarFallback>\n                    </Avatar>\n                    <div className=\"flex-grow min-w-0\">\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"font-medium truncate\">{conversation.otherUser?.name || \"مستخدم\"}</h3>\n                        <div className=\"flex items-center gap-1\">\n                          {conversation.unreadCount > 0 && (\n                            <Badge variant=\"destructive\" className=\"text-xs\">\n                              {conversation.unreadCount}\n                            </Badge>\n                          )}\n                          <div className=\"h-2 w-2 bg-green-500 rounded-full animate-pulse hidden md:block\" title=\"النظام متصل\"></div>\n                        </div>\n                      </div>\n                      {conversation.project?.title && (\n                        <p className=\"text-xs text-muted-foreground truncate\">\n                          مشروع: {conversation.project.title}\n                        </p>\n                      )}\n                      <p className=\"text-sm text-muted-foreground truncate\">\n                        {conversation.lastMessage.content}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {formatDate(new Date(conversation.lastMessage.createdAt))}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"h-full flex flex-col items-center justify-center text-center p-4\">\n                <MessageCircle className=\"w-12 h-12 text-muted-foreground mb-4\" />\n                <p className=\"text-muted-foreground mb-2 md:mb-4 text-sm md:text-base\">ليس لديك أي محادثات حالية</p>\n                <p className=\"text-xs md:text-sm text-muted-foreground\">\n                  يمكنك بدء محادثة من صفحة تفاصيل أي مشروع تهتم به\n                </p>\n                <Button \n                  className=\"mt-4\"\n                  onClick={() => window.location.href = '/projects'}\n                >\n                  تصفح المشاريع\n                </Button>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* منطقة المحادثة */}\n        <Card className={`md:w-2/3 h-full overflow-hidden flex flex-col ${!selectedConversation ? 'hidden md:flex' : 'flex'}`}>\n          {selectedConversation ? (\n            <>\n              <CardHeader className=\"pb-2 md:pb-3 border-b\">\n                <div className=\"flex items-center gap-2 md:gap-3\">\n                  <Button \n                    variant=\"ghost\" \n                    size=\"icon\" \n                    className=\"md:hidden\" \n                    onClick={() => setSelectedConversation(null)}\n                  >\n                    <ArrowLeft className=\"h-4 w-4\" />\n                  </Button>\n\n                  <Avatar className=\"h-8 w-8 md:h-10 md:w-10\">\n                    <AvatarImage src={\n                      conversations.find(c => c.otherUserId === selectedConversation)?.otherUser?.avatar || \n                      targetUserData?.avatar || \n                      undefined\n                    } alt=\"صورة المستخدم\" />\n                    <AvatarFallback>\n                      {getInitials(\n                        conversations.find(c => c.otherUserId === selectedConversation)?.otherUser?.name || \n                        targetUserData?.name || \n                        \"مستخدم\"\n                      )}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div className=\"flex-grow\">\n                    <CardTitle className=\"text-base md:text-lg truncate\">\n                      {conversations.find(c => c.otherUserId === selectedConversation)?.otherUser?.name || \n                       targetUserData?.name || \n                       \"مستخدم\"}\n                    </CardTitle>\n                    {(conversations.find(c => c.otherUserId === selectedConversation)?.project?.title || targetProjectData?.title) && (\n                      <p className=\"text-xs md:text-sm text-muted-foreground truncate\">\n                        مشروع: {conversations.find(c => c.otherUserId === selectedConversation)?.project?.title || targetProjectData?.title}\n                      </p>\n                    )}\n                  </div>\n                  \n                  {/* مؤشر حالة الاتصال */}\n                  <div className=\"flex items-center text-xs gap-1 text-muted-foreground\">\n                    <div className=\"h-2 w-2 rounded-full bg-green-500 animate-pulse\"></div>\n                    <span className=\"hidden md:inline\">متصل</span>\n                  </div>\n                </div>\n              </CardHeader>\n              \n              <CardContent \n                className=\"flex-grow overflow-y-auto p-2 md:p-4 space-y-2 md:space-y-4\"\n                ref={(el) => {\n                  if (el && !conversationLoading && \n                      ((conversationData && Array.isArray(conversationData) && conversationData.length > 0) || localMessages.length > 0)) {\n                    setTimeout(() => {\n                      el.scrollTo({ top: el.scrollHeight, behavior: 'smooth' });\n                    }, 100);\n                  }\n                }}\n              >\n                {conversationError ? (\n                  <div className=\"flex justify-center items-center py-8\">\n                    <div className=\"text-center\">\n                      <AlertTriangle className=\"w-8 h-8 text-red-500 mx-auto mb-2\" />\n                      <p className=\"text-red-600 mb-2\">خطأ في تحميل المحادثة</p>\n                      <Button size=\"sm\" onClick={() => refetchConversation()}>\n                        إعادة المحاولة\n                      </Button>\n                    </div>\n                  </div>\n                ) : conversationLoading ? (\n                  <div className=\"flex justify-center py-8\">\n                    <Loader2 className=\"w-6 h-6 animate-spin\" />\n                    <span className=\"mr-2\">جاري تحميل الرسائل...</span>\n                  </div>\n                ) : (\n                  // عرض رسالة ترحيب إذا لم تكن هناك رسائل سابقة\n                  [...(Array.isArray(conversationData) ? conversationData : []), ...localMessages].length === 0 ? (\n                    <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                      <MessageCircle className=\"w-12 h-12 text-muted-foreground mb-4\" />\n                      <h3 className=\"font-medium text-lg mb-2\">محادثة جديدة</h3>\n                      <p className=\"text-muted-foreground mb-4\">\n                        {targetProjectData ? `بدء محادثة حول مشروع \"${targetProjectData.title}\"` : 'بدء محادثة جديدة'}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        اكتب رسالتك الأولى في الأسفل للبدء\n                      </p>\n                    </div>\n                  ) : (\n                    [...(Array.isArray(conversationData) ? conversationData : []), ...localMessages]\n                      .filter((message, index, array) => \n                        array.findIndex(m => m.id === message.id) === index\n                      )\n                      .sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime())\n                      .map((message, index) => (\n                    <div \n                      key={`message-${message.id}-${index}`}\n                      className={`flex ${message.fromUserId === auth.user.id ? 'justify-end' : 'justify-start'} mb-2 md:mb-3`}\n                    >\n                      <div className={`max-w-xs md:max-w-md lg:max-w-lg px-3 md:px-4 py-2 md:py-3 rounded-lg ${\n                        message.fromUserId === auth.user.id \n                          ? 'bg-primary text-primary-foreground ml-2 md:ml-4' \n                          : 'bg-muted mr-2 md:mr-4'\n                      }`}>\n                        <p className=\"text-sm md:text-base break-words whitespace-pre-wrap\">{message.content}</p>\n                        <div className=\"flex justify-between items-center mt-1 md:mt-2\">\n                          <p className=\"text-xs opacity-70\">\n                            {formatDate(new Date(message.createdAt))}\n                          </p>\n                          {message.fromUserId === auth.user.id && (\n                            <div className=\"text-xs opacity-70\">\n                              {message.read ? '✓✓' : '✓'}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                      ))\n                  )\n                )}\n              </CardContent>\n              \n              <div className=\"p-3 md:p-4 border-t\">\n                <div className=\"flex gap-2\">\n                  <Input\n                    placeholder=\"اكتب رسالتك...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        sendMessage();\n                      }\n                    }}\n                    disabled={sendMessageMutation.isPending}\n                    className=\"flex-grow\"\n                  />\n                  <Button \n                    onClick={sendMessage}\n                    disabled={!newMessage.trim() || sendMessageMutation.isPending}\n                    size=\"icon\"\n                  >\n                    {sendMessageMutation.isPending ? (\n                      <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    ) : (\n                      <Send className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                </div>\n                \n                <div className=\"mt-2 p-2 bg-amber-50 border border-amber-200 rounded text-xs md:text-sm text-amber-800\">\n                  <p className=\"flex items-center gap-1\">\n                    <AlertTriangle className=\"w-3 h-3 md:w-4 md:h-4 flex-shrink-0\" />\n                    <span>لا يمكن مشاركة معلومات الاتصال في الرسائل. ستتمكن من التواصل المباشر بعد قبول العرض ودفع العمولة.</span>\n                  </p>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"h-full flex flex-col items-center justify-center text-center p-4\">\n              <MessageCircle className=\"w-16 h-16 text-muted-foreground mb-4\" />\n              <h3 className=\"text-lg font-medium mb-2\">اختر محادثة لبدء المراسلة</h3>\n              <p className=\"text-muted-foreground\">\n                اختر محادثة من القائمة الجانبية لعرض الرسائل والرد عليها\n              </p>\n            </div>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;","size_bytes":26596},"client/src/pages/not-found.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertCircle, Home } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2 items-center\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600 mb-6\">\n            الصفحة المطلوبة غير موجودة أو قد تكون محذوفة.\n          </p>\n          \n          <Link href=\"/\">\n            <Button className=\"w-full\">\n              <Home className=\"h-4 w-4 ml-2\" />\n              العودة للصفحة الرئيسية\n            </Button>\n          </Link>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":1059},"client/src/pages/notifications.tsx":{"content":"import React from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { queryClient } from '@/lib/queryClient';\nimport { Helmet } from 'react-helmet';\nimport { Bell, Check, X, Clock, MessageCircle, FileText, Users } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { format } from 'date-fns';\nimport { ar } from 'date-fns/locale';\n\ninterface Notification {\n  id: number;\n  type: 'message' | 'project' | 'proposal' | 'payment' | 'system';\n  title: string;\n  content: string;\n  isRead: boolean;\n  createdAt: string;\n  actionUrl?: string;\n  metadata?: {\n    projectId?: number;\n    userId?: number;\n    amount?: number;\n  };\n}\n\nconst getNotificationIcon = (type: string) => {\n  switch (type) {\n    case 'message':\n      return <MessageCircle className=\"h-5 w-5 text-blue-500\" />;\n    case 'project':\n      return <FileText className=\"h-5 w-5 text-green-500\" />;\n    case 'proposal':\n      return <Users className=\"h-5 w-5 text-purple-500\" />;\n    case 'payment':\n      return <Clock className=\"h-5 w-5 text-orange-500\" />;\n    default:\n      return <Bell className=\"h-5 w-5 text-gray-500\" />;\n  }\n};\n\nconst getNotificationTypeLabel = (type: string) => {\n  switch (type) {\n    case 'message':\n      return 'رسالة جديدة';\n    case 'project':\n      return 'مشروع';\n    case 'proposal':\n      return 'عرض';\n    case 'payment':\n      return 'دفع';\n    default:\n      return 'إشعار';\n  }\n};\n\nconst NotificationItem: React.FC<{ notification: Notification; onMarkAsRead: (id: number) => void }> = ({ \n  notification, \n  onMarkAsRead \n}) => {\n  const formattedDate = format(new Date(notification.createdAt), 'PPP', { locale: ar });\n  const formattedTime = format(new Date(notification.createdAt), 'p', { locale: ar });\n\n  return (\n    <Card className={`transition-all duration-200 ${notification.isRead ? 'bg-gray-50' : 'bg-white border-r-4 border-r-primary'}`}>\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-center gap-3\">\n            {getNotificationIcon(notification.type)}\n            <div>\n              <CardTitle className=\"text-base\">{notification.title}</CardTitle>\n              <div className=\"flex items-center gap-2 mt-1\">\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  {getNotificationTypeLabel(notification.type)}\n                </Badge>\n                {!notification.isRead && (\n                  <Badge variant=\"default\" className=\"text-xs\">\n                    جديد\n                  </Badge>\n                )}\n              </div>\n            </div>\n          </div>\n          {!notification.isRead && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onMarkAsRead(notification.id)}\n              className=\"h-8 w-8 p-0\"\n            >\n              <Check className=\"h-4 w-4\" />\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <CardDescription className=\"text-sm leading-relaxed mb-3\">\n          {notification.content}\n        </CardDescription>\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <span>{formattedDate} في {formattedTime}</span>\n          {notification.actionUrl && (\n            <Button \n              variant=\"link\" \n              size=\"sm\" \n              className=\"h-auto p-0 text-xs\"\n              onClick={() => window.location.href = notification.actionUrl!}\n            >\n              عرض التفاصيل\n            </Button>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Notifications: React.FC = () => {\n  const { data: notifications = [], isLoading, error } = useQuery<Notification[]>({\n    queryKey: ['/api/notifications'],\n    retry: false,\n  });\n\n  const unreadCount = notifications.filter(n => !n.isRead).length;\n\n  const markAsReadMutation = useMutation({\n    mutationFn: async (notificationId: number) => {\n      const response = await fetch(`/api/notifications/${notificationId}/read`, {\n        method: 'POST',\n        credentials: 'include',\n      });\n      if (!response.ok) throw new Error('Failed to mark notification as read');\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/notifications'] });\n    },\n  });\n\n  const markAllAsReadMutation = useMutation({\n    mutationFn: async () => {\n      const response = await fetch('/api/notifications/mark-all-read', {\n        method: 'POST',\n        credentials: 'include',\n      });\n      if (!response.ok) throw new Error('Failed to mark all notifications as read');\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/notifications'] });\n    },\n  });\n\n  const handleMarkAsRead = (notificationId: number) => {\n    markAsReadMutation.mutate(notificationId);\n  };\n\n  const handleMarkAllAsRead = () => {\n    markAllAsReadMutation.mutate();\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <div className=\"animate-pulse space-y-4\">\n          {[1, 2, 3, 4, 5].map((i) => (\n            <div key={i} className=\"h-24 bg-gray-200 rounded-lg\"></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <div className=\"text-center py-12\">\n          <X className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">خطأ في تحميل الإشعارات</h2>\n          <p className=\"text-gray-600\">حدث خطأ أثناء تحميل إشعاراتك. يرجى المحاولة مرة أخرى.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>الإشعارات - لينكتك</title>\n        <meta name=\"description\" content=\"إشعارات وتنبيهات المنصة\" />\n      </Helmet>\n\n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-8\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">الإشعارات</h1>\n              <p className=\"text-gray-600\">\n                {unreadCount > 0 \n                  ? `لديك ${unreadCount} إشعار غير مقروء` \n                  : 'جميع الإشعارات مقروءة'\n                }\n              </p>\n            </div>\n            {unreadCount > 0 && (\n              <Button \n                onClick={handleMarkAllAsRead}\n                variant=\"outline\"\n                className=\"gap-2\"\n              >\n                <Check className=\"h-4 w-4\" />\n                تعيين الكل كمقروء\n              </Button>\n            )}\n          </div>\n\n          {/* Notifications List */}\n          {notifications.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Bell className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">لا توجد إشعارات</h2>\n              <p className=\"text-gray-600\">ستظهر إشعاراتك هنا عند وصولها.</p>\n            </div>\n          ) : (\n            <ScrollArea className=\"h-[600px]\">\n              <div className=\"space-y-4\">\n                {notifications.map((notification) => (\n                  <NotificationItem\n                    key={notification.id}\n                    notification={notification}\n                    onMarkAsRead={handleMarkAsRead}\n                  />\n                ))}\n              </div>\n            </ScrollArea>\n          )}\n\n          {/* Notification Settings */}\n          <Separator className=\"my-8\" />\n          <div className=\"bg-gray-50 p-6 rounded-lg\">\n            <h3 className=\"text-lg font-semibold mb-4\">إعدادات الإشعارات</h3>\n            <p className=\"text-gray-600 mb-4\">\n              يمكنك تخصيص أنواع الإشعارات التي تريد استلامها من خلال إعدادات حسابك.\n            </p>\n            <Button variant=\"outline\">\n              إدارة الإعدادات\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Notifications;","size_bytes":8742},"client/src/pages/personal-info.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Helmet } from \"react-helmet\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n// استخدام مكون المصادقة من التطبيق\nimport { useAuth } from \"../App\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { \n  Info, \n  CheckCircle, \n  ArrowRight,\n  UserCheck,\n  Loader2\n} from \"lucide-react\";\n\n// نموذج البيانات الشخصية\nconst personalInfoSchema = z.object({\n  fullName: z.string().min(3, \"الاسم الكامل مطلوب (3 أحرف على الأقل)\"),\n  nationalId: z.string().min(10, \"رقم الهوية الوطنية مطلوب (10 أرقام على الأقل)\"),\n  phone: z.string().min(10, \"رقم الجوال مطلوب (10 أرقام على الأقل)\"),\n  birthDate: z.string().min(1, \"تاريخ الميلاد مطلوب\"),\n  address: z.string().min(10, \"العنوان الوطني مطلوب (10 أحرف على الأقل)\"),\n});\n\ntype PersonalInfoFormValues = z.infer<typeof personalInfoSchema>;\n\nconst PersonalInfoPage = () => {\n  const [location, navigate] = useLocation();\n  const { toast } = useToast();\n  const auth = useAuth();\n  const [successfulSubmit, setSuccessfulSubmit] = useState(false);\n  const [returnUrl, setReturnUrl] = useState<string | null>(null);\n  \n  // قراءة معلمة returnUrl من عنوان URL\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const returnUrlParam = searchParams.get('returnUrl');\n    if (returnUrlParam) {\n      setReturnUrl(returnUrlParam);\n    }\n  }, []);\n  \n  // استعلام عن ملف الشركة\n  const {\n    data: profile,\n    isLoading: isLoadingProfile,\n    refetch: refetchProfile\n  } = useQuery<any>({\n    queryKey: [`/api/companies/user/${auth.user?.id}`],\n    enabled: !!auth.user?.id,\n    staleTime: 0, // دائماً اعتبر البيانات قديمة لضمان التحديث عند الطلب\n  });\n  \n  // نموذج البيانات الشخصية\n  const form = useForm<PersonalInfoFormValues>({\n    resolver: zodResolver(personalInfoSchema),\n    defaultValues: {\n      fullName: \"\",\n      nationalId: \"\",\n      phone: \"\",\n      birthDate: \"\",\n      address: \"\",\n    },\n  });\n  \n  // ضبط قيم النموذج إذا تم تحميل البيانات الشخصية\n  useEffect(() => {\n    if (profile) {\n      form.setValue(\"fullName\", profile.fullName || \"\");\n      form.setValue(\"nationalId\", profile.nationalId || \"\");\n      form.setValue(\"phone\", profile.phone || \"\");\n      form.setValue(\"birthDate\", profile.birthDate || \"\");\n      form.setValue(\"address\", profile.address || \"\");\n    }\n  }, [profile, form]);\n  \n  // تحديث البيانات الشخصية\n  const updatePersonalInfoMutation = useMutation({\n    mutationFn: async (data: PersonalInfoFormValues) => {\n      if (!profile?.id) throw new Error(\"Profile ID is missing\");\n      \n      console.log('Sending personal info update to server:', JSON.stringify(data));\n      \n      // نستخدم نفس نقطة النهاية لتحديث ملف الشركة ولكن نضيف البيانات الشخصية\n      const response = await apiRequest(\"PATCH\", `/api/companies/${profile.id}`, data);\n      const result = await response.json();\n      console.log('Server response:', JSON.stringify(result));\n      return result;\n    },\n    onSuccess: async (data) => {\n      console.log('تم استلام بيانات شخصية محدثة من الخادم:', JSON.stringify(data));\n      \n      // تحديث البيانات في الكاش\n      queryClient.setQueryData([`/api/companies/user/${auth.user?.id}`], (oldData: any) => {\n        return { ...oldData, ...data };\n      });\n      \n      // إعادة تحميل البيانات\n      await refetchProfile();\n      \n      toast({\n        title: \"تم تحديث البيانات الشخصية بنجاح\",\n        description: \"تم تحديث بياناتك الشخصية المطلوبة لاتفاقيات عدم الإفصاح بنجاح.\",\n      });\n      \n      // تعيين حالة النجاح\n      setSuccessfulSubmit(true);\n      \n      // انتظار ثم توجيه المستخدم إلى الصفحة التي جاء منها (إذا كانت موجودة) أو إلى لوحة التحكم\n      setTimeout(() => {\n        if (returnUrl) {\n          navigate(returnUrl);\n        } else {\n          navigate(\"/dashboard/company\");\n        }\n      }, 2000);\n    },\n    onError: (error) => {\n      toast({\n        title: \"حدث خطأ\",\n        description: \"لم نتمكن من تحديث البيانات الشخصية، يرجى المحاولة مرة أخرى.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: PersonalInfoFormValues) => {\n    updatePersonalInfoMutation.mutate(data);\n  };\n  \n  // لن نقوم بإعادة التوجيه هنا لأن ProtectedRoute يتعامل مع التحقق من الصلاحيات\n  // هذا يمنع حدوث إعادة توجيه مزدوجة تسبب مشاكل\n  \n  if (isLoadingProfile) {\n    return (\n      <div className=\"min-h-screen flex flex-col items-center justify-center\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"mt-4 text-neutral-600\">جاري تحميل البيانات...</p>\n      </div>\n    );\n  }\n  \n  // لا نحتاج إلى هذا التحقق هنا، حيث أن التحقق من الوصول يتم في ProtectedRoute\n  \n  return (\n    <>\n      <Helmet>\n        <title>استكمال البيانات الشخصية | لينكتك</title>\n        <meta name=\"description\" content=\"استكمال البيانات الشخصية المطلوبة لاتفاقيات عدم الإفصاح\" />\n      </Helmet>\n      \n      <div className=\"container mx-auto px-4 py-8 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold font-heading mb-2\">البيانات الشخصية</h1>\n          <p className=\"text-neutral-600\">استكمال البيانات الشخصية المطلوبة لاتفاقيات عدم الإفصاح</p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>استكمال البيانات الشخصية</CardTitle>\n                <CardDescription>هذه البيانات مطلوبة لتوقيع اتفاقيات عدم الإفصاح والمشاركة في المشاريع التي تتطلب ذلك</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {successfulSubmit ? (\n                  <div className=\"py-8 text-center\">\n                    <div className=\"inline-flex h-16 w-16 items-center justify-center rounded-full bg-green-100 mb-4\">\n                      <CheckCircle className=\"h-8 w-8 text-green-600\" />\n                    </div>\n                    <h3 className=\"text-xl font-semibold mb-2\">تم استكمال البيانات بنجاح!</h3>\n                    <p className=\"text-neutral-600 mb-6\">\n                      تم تحديث بياناتك الشخصية بنجاح، يمكنك الآن توقيع اتفاقيات عدم الإفصاح والمشاركة في المشاريع.\n                    </p>\n                    <Button \n                      onClick={() => {\n                        if (returnUrl) {\n                          navigate(returnUrl);\n                        } else {\n                          navigate(\"/dashboard/company\");\n                        }\n                      }}\n                      className=\"gap-2\"\n                    >\n                      {returnUrl ? \"العودة إلى صفحة المشروع\" : \"العودة إلى لوحة التحكم\"}\n                      <ArrowRight className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                ) : (\n                  <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n                        <h3 className=\"font-semibold text-blue-800 mb-2 flex items-center\">\n                          <Info className=\"h-5 w-5 ml-2 text-blue-600\" />\n                          البيانات الشخصية المطلوبة لاتفاقيات عدم الإفصاح\n                        </h3>\n                        <p className=\"text-blue-700 text-sm mb-0\">\n                          هذه البيانات تستخدم فقط في توقيع اتفاقيات عدم الإفصاح ولن يتم مشاركتها مع أي طرف ثالث.\n                        </p>\n                      </div>\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"fullName\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>الاسم الكامل</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"أدخل اسمك الكامل كما في الهوية\" \n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"nationalId\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>رقم الهوية الوطنية</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"أدخل رقم الهوية الوطنية\" \n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"phone\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>رقم الجوال</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"أدخل رقم الجوال (مثال: 05xxxxxxxx)\" \n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"birthDate\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>تاريخ الميلاد</FormLabel>\n                            <FormControl>\n                              <Input \n                                type=\"date\" \n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"address\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>العنوان الوطني</FormLabel>\n                            <FormControl>\n                              <Textarea \n                                placeholder=\"أدخل العنوان الوطني بالتفصيل\" \n                                className=\"min-h-[80px]\"\n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <div className=\"flex justify-end\">\n                        <Button \n                          type=\"submit\"\n                          disabled={updatePersonalInfoMutation.isPending}\n                          className=\"gap-2\"\n                        >\n                          {updatePersonalInfoMutation.isPending && (\n                            <Loader2 className=\"h-4 w-4 animate-spin\" />\n                          )}\n                          حفظ البيانات الشخصية\n                        </Button>\n                      </div>\n                    </form>\n                  </Form>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n          \n          <div>\n            <Card>\n              <CardHeader>\n                <CardTitle>معلومات مهمة</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"bg-primary/10 p-2 rounded-full\">\n                    <UserCheck className=\"h-5 w-5 text-primary\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold mb-1\">الخصوصية والأمان</h3>\n                    <p className=\"text-sm text-neutral-600\">\n                      نحرص على خصوصية بياناتك الشخصية ولن يتم مشاركتها إلا في اتفاقيات عدم الإفصاح الرسمية.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <div className=\"bg-primary/10 p-2 rounded-full\">\n                    <Info className=\"h-5 w-5 text-primary\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold mb-1\">لماذا نحتاج هذه البيانات؟</h3>\n                    <p className=\"text-sm text-neutral-600\">\n                      هذه البيانات ضرورية لإكمال اتفاقيات عدم الإفصاح والتي تعتبر متطلباً قانونياً للمشاركة في بعض المشاريع.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <div className=\"bg-primary/10 p-2 rounded-full\">\n                    <CheckCircle className=\"h-5 w-5 text-primary\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold mb-1\">التحقق من البيانات</h3>\n                    <p className=\"text-sm text-neutral-600\">\n                      يرجى التأكد من صحة ودقة البيانات المدخلة، حيث ستستخدم في وثائق قانونية رسمية.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PersonalInfoPage;","size_bytes":16221},"client/src/pages/premium-clients.tsx":{"content":"import React from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Loader2 } from \"lucide-react\";\nimport { Helmet } from \"react-helmet\";\n\n// كمبوننت لعرض عميل مميز واحد\nconst PremiumClientCard = ({ client }: { client: any }) => {\n  return (\n    <div className=\"bg-white dark:bg-gray-800 shadow-lg rounded-lg overflow-hidden hover:shadow-xl transition-shadow duration-300\">\n      <div className=\"p-6\">\n        <div className=\"mb-4 flex justify-center items-center h-32\">\n          {client.logo && (\n            <img \n              src={client.logo.startsWith('http') ? client.logo : `https://${client.logo.replace(/^\\/+/, '')}`}\n              alt={client.name} \n              className=\"h-24 w-auto max-w-full object-contain\"\n              onError={(e) => {\n                // في حالة فشل تحميل الصورة، عرض الحرف الأول من اسم العميل\n                (e.target as HTMLImageElement).style.display = 'none';\n                (e.target as HTMLImageElement).parentElement?.classList.add('flex', 'justify-center', 'items-center', 'bg-gray-200', 'rounded-full', 'h-24', 'w-24');\n                if ((e.target as HTMLImageElement).parentElement) {\n                  (e.target as HTMLImageElement).parentElement.innerHTML = `<span class=\"text-4xl font-bold text-primary\">${client.name.charAt(0)}</span>`;\n                }\n              }}\n            />\n          )}\n        </div>\n        <div className={`mb-2 flex justify-center items-center ${client.featured ? 'visible' : 'hidden'}`}>\n          <span className=\"bg-gradient-to-r from-amber-400 to-amber-600 text-white text-xs px-2 py-1 rounded-full\">\n            عميل مميز\n          </span>\n        </div>\n        <h3 className=\"text-xl font-bold text-primary text-center mb-2\">{client.name}</h3>\n        <div className=\"mb-2 text-sm text-center text-gray-500 dark:text-gray-400\">\n          {client.category && <span className=\"inline-block px-2\">{client.category}</span>}\n        </div>\n        <p className=\"text-gray-600 dark:text-gray-300 text-center mb-4\">{client.description}</p>\n        \n        {client.benefits && client.benefits.length > 0 && (\n          <div className=\"mt-4 border-t pt-4 border-gray-100 dark:border-gray-700\">\n            <ul className=\"text-sm text-gray-600 dark:text-gray-300 space-y-1\">\n              {client.benefits.map((benefit: string, index: number) => (\n                <li key={index} className=\"flex items-start\">\n                  <span className=\"text-green-500 ml-2\">✓</span>\n                  <span>{benefit}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        \n        {client.website && (\n          <div className=\"text-center mt-4\">\n            <a \n              href={client.website} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\" \n              className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n            >\n              زيارة الموقع\n            </a>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst PremiumClients = () => {\n  // جلب بيانات العملاء المميزين من API\n  const { data: clients, isLoading, error } = useQuery({\n    queryKey: ['/api/premium-clients'],\n    staleTime: 60000 // تخزين البيانات لمدة دقيقة\n  });\n\n  return (\n    <div className=\"container mx-auto py-12 px-4 md:px-6\">\n      <Helmet>\n        <title>عملاء التميز | لينكتك</title>\n        <meta name=\"description\" content=\"تعرف على عملاء التميز والمشاريع المميزة في منصة لينكتك\" />\n      </Helmet>\n      \n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-bold text-primary mb-4\">عملاء التميز</h1>\n        <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n          نفتخر بخدمة نخبة من العملاء المميزين والمؤسسات الرائدة التي تثق بمنصة لينكتك لتنفيذ مشاريعها التقنية\n        </p>\n      </div>\n      \n      {isLoading ? (\n        <div className=\"flex justify-center py-20\">\n          <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        </div>\n      ) : error ? (\n        <div className=\"text-center py-12 text-red-500\">\n          <p>عذراً، حدث خطأ أثناء تحميل بيانات العملاء المميزين</p>\n        </div>\n      ) : clients && clients.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {clients.map((client: any) => (\n            <PremiumClientCard key={client.id} client={client} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n          <h3 className=\"text-xl font-medium mb-2\">لا يوجد عملاء مميزين حالياً</h3>\n          <p className=\"text-gray-500 dark:text-gray-400\">\n            سيتم إضافة عملائنا المميزين قريباً، يرجى العودة لاحقاً\n          </p>\n        </div>\n      )}\n      \n      <div className=\"mt-16 bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900 dark:to-purple-900 p-8 rounded-lg shadow-md\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold mb-4\">هل ترغب بالانضمام إلى قائمة عملاء التميز؟</h2>\n          <p className=\"mb-6 max-w-2xl mx-auto\">\n            إذا كنت تملك مشروعاً مميزاً أو مؤسسة رائدة وترغب بالانضمام إلى عملاء التميز في منصة لينكتك، نرحب بالتواصل معنا\n          </p>\n          <a \n            href=\"/contact\" \n            className=\"inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n          >\n            تواصل معنا\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PremiumClients;","size_bytes":6359},"client/src/pages/privacy.tsx":{"content":"import { Helmet } from \"react-helmet\";\n\nexport default function Privacy() {\n  return (\n    <div className=\"container mx-auto py-8 px-4 md:px-6\">\n      <Helmet>\n        <title>سياسة الخصوصية - لينكتك</title>\n      </Helmet>\n      <h1 className=\"text-3xl font-bold mb-6\">سياسة الخصوصية</h1>\n      <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n        <div className=\"prose prose-lg max-w-none\">\n          <p>تصف سياسة الخصوصية هذه كيفية جمع واستخدام المعلومات الشخصية التي تقدمها عند استخدام منصة لينكتك.</p>\n          \n          <h2>1. المعلومات التي نجمعها</h2>\n          <p>قد نقوم بجمع المعلومات التالية:</p>\n          <ul>\n            <li>معلومات التسجيل مثل الاسم والبريد الإلكتروني ورقم الهاتف.</li>\n            <li>معلومات الملف الشخصي مثل المهارات والخبرات والصور.</li>\n            <li>معلومات المشاريع والعروض المقدمة عليها.</li>\n            <li>سجلات المعاملات والمراسلات بين المستخدمين.</li>\n            <li>معلومات تقنية مثل عنوان IP ومعلومات الجهاز والمتصفح.</li>\n          </ul>\n          \n          <h2>2. كيفية استخدام المعلومات</h2>\n          <p>نستخدم المعلومات التي نجمعها لـ:</p>\n          <ul>\n            <li>توفير وتحسين وتطوير خدماتنا.</li>\n            <li>تسهيل التواصل بين المستخدمين.</li>\n            <li>معالجة المدفوعات والعمولات.</li>\n            <li>منع الاحتيال وحماية أمن المنصة.</li>\n            <li>إرسال إشعارات وتحديثات متعلقة بالخدمة.</li>\n          </ul>\n          \n          <h2>3. مشاركة المعلومات</h2>\n          <p>نشارك معلوماتك في الحالات التالية:</p>\n          <ul>\n            <li>مع المستخدمين الآخرين كجزء من عملية التوفيق بين المشاريع والشركات.</li>\n            <li>مع مقدمي الخدمات الذين يساعدوننا في تشغيل المنصة.</li>\n            <li>عند الامتثال للالتزامات القانونية أو حماية حقوقنا.</li>\n          </ul>\n          \n          <h2>4. أمن المعلومات</h2>\n          <p>نتخذ إجراءات أمنية معقولة لحماية معلوماتك الشخصية من الفقدان والوصول غير المصرح به.</p>\n          \n          <h2>5. حقوقك</h2>\n          <p>يمكنك الوصول إلى معلوماتك الشخصية وتصحيحها وتحديثها من خلال إعدادات حسابك. يمكنك أيضًا طلب حذف حسابك، مع مراعاة التزاماتنا القانونية.</p>\n          \n          <h2>6. التغييرات على سياسة الخصوصية</h2>\n          <p>قد نقوم بتحديث سياسة الخصوصية هذه من وقت لآخر. سنقوم بإخطارك بأي تغييرات جوهرية من خلال المنصة.</p>\n          \n          <h2>7. الاتصال بنا</h2>\n          <p>إذا كانت لديك أي أسئلة أو مخاوف بشأن سياسة الخصوصية الخاصة بنا، يرجى التواصل معنا عبر البريد الإلكتروني: privacy@linktech.app</p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":3633},"client/src/pages/projects.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport ProjectCard from \"@/components/projects/ProjectCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue \n} from \"@/components/ui/select\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Search, PlusCircle } from \"lucide-react\";\nimport SEO from \"@/components/seo/SEO\";\nimport { WebpageStructuredData, BreadcrumbStructuredData } from \"@/components/seo/StructuredData\";\nimport { useAuth } from \"@/App\";\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  name?: string;\n  createdAt?: string; // Make createdAt optional\n};\n\ntype ProjectsProps = {\n  auth?: {\n    isAuthenticated: boolean;\n    isEntrepreneur: boolean;\n  };\n};\n\nconst ProjectSkeleton = () => (\n  <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n    <div className=\"p-6\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <Skeleton className=\"h-6 w-2/3\" />\n        <Skeleton className=\"h-6 w-1/6 rounded-full\" />\n      </div>\n      <Skeleton className=\"h-16 w-full mb-4\" />\n      <div className=\"flex flex-wrap gap-2 mb-4\">\n        <Skeleton className=\"h-6 w-20 rounded\" />\n        <Skeleton className=\"h-6 w-16 rounded\" />\n        <Skeleton className=\"h-6 w-24 rounded\" />\n      </div>\n      <div className=\"flex justify-between items-center text-sm border-t border-neutral-200 pt-4\">\n        <Skeleton className=\"h-5 w-1/3\" />\n        <Skeleton className=\"h-5 w-1/4\" />\n      </div>\n    </div>\n    <div className=\"bg-neutral-50 px-6 py-3 border-t border-neutral-200\">\n      <Skeleton className=\"h-5 w-28\" />\n    </div>\n  </div>\n);\n\nconst Projects = ({ auth: authProp }: ProjectsProps = {}) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedSkill, setSelectedSkill] = useState<string>(\"\");\n  const [sortBy, setSortBy] = useState<string>(\"newest\");\n  \n  // Use the auth hook directly for reliable state\n  const auth = useAuth();\n\n  const { data: projects, isLoading, error, refetch } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n    // Query is always enabled, we handle auth in the UI rendering\n    enabled: true\n  });\n  \n  // إعادة جلب البيانات عند تغير حالة المصادقة\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      console.log('إعادة جلب المشاريع بعد تغير حالة المصادقة');\n      refetch();\n    }\n  }, [auth.isAuthenticated, refetch]);\n\n  // Filter and sort projects\n  const filteredProjects = projects\n    ? projects.filter((project: Project) => {\n        const matchesSearch = project.title.toLowerCase().includes(searchQuery.toLowerCase()) || \n                             project.description.toLowerCase().includes(searchQuery.toLowerCase());\n        \n        const matchesSkill = selectedSkill === \"_all\" || selectedSkill === \"\"\n          ? true\n          : (project.skills || []).some((skill: string) => skill.toLowerCase() === selectedSkill.toLowerCase());\n        \n        return matchesSearch && matchesSkill;\n      })\n    : [];\n\n  // Sort projects\n  const sortedProjects = [...filteredProjects].sort((a, b) => {\n    if (sortBy === \"newest\") {\n      // Safely handle createdAt that might not exist in the type but exists in the data\n      const aDate = a.createdAt ? new Date(a.createdAt as string).getTime() : 0;\n      const bDate = b.createdAt ? new Date(b.createdAt as string).getTime() : 0;\n      return bDate - aDate;\n    } else if (sortBy === \"oldest\") {\n      const aDate = a.createdAt ? new Date(a.createdAt as string).getTime() : 0;\n      const bDate = b.createdAt ? new Date(b.createdAt as string).getTime() : 0;\n      return aDate - bDate;\n    } else if (sortBy === \"budget-high\") {\n      const aBudget = parseInt(a.budget.replace(/[^0-9]/g, ''));\n      const bBudget = parseInt(b.budget.replace(/[^0-9]/g, ''));\n      return bBudget - aBudget;\n    } else if (sortBy === \"budget-low\") {\n      const aBudget = parseInt(a.budget.replace(/[^0-9]/g, ''));\n      const bBudget = parseInt(b.budget.replace(/[^0-9]/g, ''));\n      return aBudget - bBudget;\n    }\n    return 0;\n  });\n\n  // Extract unique skills from all projects (filter out empty strings)\n  const allSkills = projects\n    ? Array.from(new Set(projects.flatMap((project: Project) => project.skills || []).filter(skill => skill && skill.trim() !== \"\")))\n    : [];\n\n  return (\n    <>\n      <SEO \n        title={auth.isEntrepreneur ? \"مشاريعي | لينكتك\" : \"المشاريع | لينكتك\"}\n        description={auth.isEntrepreneur \n          ? \"إدارة ومتابعة مشاريعك الخاصة وحالة العروض المقدمة عليها في منصة لينكتك.\"\n          : \"استعرض أحدث المشاريع التقنية المتاحة للتنفيذ من قبل شركات البرمجة والمطورين المحترفين في المملكة العربية السعودية. فرص متنوعة للشركات من مختلف التخصصات التقنية.\"\n        }\n        keywords=\"مشاريع برمجية, مشاريع تقنية, تطوير مواقع, تطوير تطبيقات, برمجة تطبيقات, برمجة مواقع, مطورين, شركات برمجة\"\n        ogType=\"website\"\n      >\n        <WebpageStructuredData\n          name=\"قائمة المشاريع التقنية | لينكتك\"\n          description=\"استعرض أحدث المشاريع التقنية المتاحة للتنفيذ من قبل شركات البرمجة والمطورين المحترفين\"\n          url=\"https://linktech.app/projects\"\n        />\n        <BreadcrumbStructuredData\n          items={[\n            { name: \"الرئيسية\", url: \"https://linktech.app/\" },\n            { name: \"المشاريع\", url: \"https://linktech.app/projects\" }\n          ]}\n        />\n      </SEO>\n\n      <div className=\"container mx-auto px-4 py-8 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-6 sm:mb-8\">\n          <h1 className=\"text-2xl sm:text-3xl font-bold font-heading mb-1 sm:mb-2\">\n            {auth.isEntrepreneur ? 'مشاريعي' : 'المشاريع'}\n          </h1>\n          <p className=\"text-neutral-600 text-sm sm:text-base\">\n            {auth.isEntrepreneur \n              ? 'إدارة ومتابعة مشاريعك الخاصة وحالة العروض المقدمة عليها'\n              : 'استعرض أحدث المشاريع التقنية المتاحة للتنفيذ من قبل شركات البرمجة'\n            }\n          </p>\n        </div>\n\n        {auth.isAuthenticated ? (\n          <>\n            {/* Filters and Controls */}\n            <div className=\"bg-white p-3 sm:p-4 md:p-6 rounded-xl shadow-sm border border-neutral-200 mb-4 sm:mb-6\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-3 sm:gap-4\">\n                <div className=\"sm:col-span-2\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute right-3 top-1/2 -translate-y-1/2 h-4 w-4 text-neutral-500\" />\n                    <Input\n                      placeholder=\"البحث عن مشروع...\"\n                      className=\"pl-3 pr-9 text-sm\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <Select value={selectedSkill} onValueChange={setSelectedSkill}>\n                    <SelectTrigger className=\"text-xs sm:text-sm h-9 sm:h-10\">\n                      <SelectValue placeholder=\"التصنيف\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"_all\">جميع التصنيفات</SelectItem>\n                      {allSkills.map((skill: string, index: number) => (\n                        <SelectItem key={index} value={skill}>{skill}</SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Select value={sortBy} onValueChange={setSortBy}>\n                    <SelectTrigger className=\"text-xs sm:text-sm h-9 sm:h-10\">\n                      <SelectValue placeholder=\"الترتيب\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"newest\">الأحدث</SelectItem>\n                      <SelectItem value=\"oldest\">الأقدم</SelectItem>\n                      <SelectItem value=\"budget-high\">الميزانية (الأعلى)</SelectItem>\n                      <SelectItem value=\"budget-low\">الميزانية (الأقل)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n              \n              {auth.isAuthenticated && auth.isEntrepreneur && (\n                <div className=\"mt-4 pt-4 border-t border-neutral-200 flex justify-center sm:justify-start\">\n                  <Link href=\"/dashboard/entrepreneur?action=create-project\">\n                    <Button className=\"w-full sm:w-auto text-sm sm:text-base\">\n                      <PlusCircle className=\"ml-2 h-3 w-3 sm:h-4 sm:w-4 transition-transform duration-200 group-hover:scale-110\" />\n                      إضافة مشروع جديد\n                    </Button>\n                  </Link>\n                </div>\n              )}\n            </div>\n\n            {/* Projects Grid */}\n            {isLoading ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6\">\n                <ProjectSkeleton />\n                <ProjectSkeleton />\n                <ProjectSkeleton />\n                <div className=\"hidden sm:block\">\n                  <ProjectSkeleton />\n                </div>\n                <div className=\"hidden sm:block\">\n                  <ProjectSkeleton />\n                </div>\n                <div className=\"hidden sm:block\">\n                  <ProjectSkeleton />\n                </div>\n              </div>\n            ) : error ? (\n              <div className=\"bg-white p-4 sm:p-6 md:p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n                <p className=\"text-neutral-600 text-sm sm:text-base\">حدث خطأ أثناء تحميل المشاريع. حاول مرة أخرى لاحقاً.</p>\n                <Button \n                  onClick={() => window.location.reload()} \n                  variant=\"outline\" \n                  className=\"mt-3 sm:mt-4 text-xs sm:text-sm\"\n                >\n                  إعادة المحاولة\n                </Button>\n              </div>\n            ) : sortedProjects.length > 0 ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6\">\n                {sortedProjects.map((project) => (\n                  <ProjectCard key={project.id} project={project} />\n                ))}\n              </div>\n            ) : (\n              <div className=\"bg-white p-4 sm:p-6 md:p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n                <p className=\"text-neutral-600 text-sm sm:text-base mb-1 sm:mb-2\">\n                  {auth.isEntrepreneur \n                    ? 'لم تقم بإنشاء أي مشاريع بعد.'\n                    : 'لا توجد مشاريع متطابقة مع معايير البحث.'\n                  }\n                </p>\n                <p className=\"text-neutral-500 text-xs sm:text-sm mb-3 sm:mb-4\">\n                  {auth.isEntrepreneur \n                    ? 'ابدأ بإضافة مشروعك الأول واربطه مع أفضل شركات البرمجة.'\n                    : 'حاول تغيير معايير البحث أو التصفية.'\n                  }\n                </p>\n                <Button \n                  onClick={() => {\n                    setSearchQuery(\"\");\n                    setSelectedSkill(\"\");\n                    setSortBy(\"newest\");\n                  }} \n                  variant=\"outline\"\n                  className=\"text-xs sm:text-sm\"\n                >\n                  إعادة ضبط عوامل التصفية\n                </Button>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"bg-white p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n            <h2 className=\"text-xl font-bold mb-4\">هذه الصفحة متاحة فقط للمستخدمين المسجلين</h2>\n            <p className=\"text-neutral-600 mb-6\">لحماية خصوصية المشاريع، يمكن مشاهدة تفاصيل المشاريع المتاحة فقط للمستخدمين المسجلين.</p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Link href=\"/auth/login\">\n                <Button className=\"w-full sm:w-auto\">تسجيل الدخول</Button>\n              </Link>\n              <Link href=\"/auth/register\">\n                <Button variant=\"outline\" className=\"w-full sm:w-auto\">إنشاء حساب جديد</Button>\n              </Link>\n            </div>\n            <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n              <h3 className=\"font-semibold text-primary mb-2\">لماذا يجب عليك التسجيل؟</h3>\n              <ul className=\"text-sm text-neutral-700 text-right list-disc list-inside space-y-1\">\n                <li>الاطلاع على تفاصيل جميع المشاريع المتاحة</li>\n                <li>التواصل مع أصحاب المشاريع</li>\n                <li>تقديم عروض على المشاريع التي تناسب خبراتك</li>\n                <li>متابعة حالة العروض المقدمة منك</li>\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Projects;\n","size_bytes":14254},"client/src/pages/redirect.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Loader2 } from \"lucide-react\";\n\ntype Props = {\n  to?: string;\n};\n\n// صفحة وسيطة للتوجيه المباشر\nexport default function Redirect({ to }: Props) {\n  // استخدام useLocation للتنقل\n  const [_, navigate] = useLocation();\n\n  useEffect(() => {\n    // إضافة تأخير قبل إعادة التوجيه\n    const redirectTimeout = setTimeout(() => {\n      // إذا تم تمرير الوجهة كخاصية، استخدمها، وإلا فاستخراج من المعلمات (params)\n      const params = new URLSearchParams(window.location.search);\n      const destination = to || params.get(\"to\");\n      \n      console.log(\"صفحة التوجيه: الوجهة المطلوبة هي\", destination);\n\n      try {\n        // معالجة مختلف المسارات المحتملة باستخدام التوجيه المباشر\n        if (destination === \"admin\") {\n          console.log(\"جاري التوجيه إلى لوحة المسؤول\");\n          navigate(\"/dashboard/admin\");\n        } else if (destination === \"entrepreneur\") {\n          console.log(\"جاري التوجيه إلى لوحة رائد الأعمال\");\n          navigate(\"/dashboard/entrepreneur\");\n        } else if (destination === \"company\") {\n          console.log(\"جاري التوجيه إلى لوحة الشركة\");\n          navigate(\"/dashboard/company\");\n        } else {\n          console.log(\"توجيه إلى الصفحة الرئيسية (المسار غير معروف)\");\n          navigate(\"/\");\n        }\n      } catch (error) {\n        console.error(\"حدث خطأ أثناء التوجيه:\", error);\n        // في حالة الخطأ، توجيه إلى الصفحة الرئيسية\n        navigate(\"/\");\n      }\n    }, 1500); // تأخير 1.5 ثانية\n    \n    // تنظيف المؤقت عند إلغاء تحميل المكون\n    return () => clearTimeout(redirectTimeout);\n  }, [navigate, to]);\n\n  return (\n    <div dir=\"rtl\" className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50\">\n      <div className=\"text-center bg-white p-8 rounded-xl shadow-sm\">\n        <Loader2 className=\"h-16 w-16 animate-spin text-primary mx-auto mb-6\" />\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-2\">\n          جاري التوجيه...\n        </h2>\n        <p className=\"text-gray-600\">\n          سيتم توجيهك تلقائياً خلال لحظات، يرجى الانتظار\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":2589},"client/src/pages/sitemap.tsx":{"content":"import SEO from \"@/components/seo/SEO\";\nimport { Link } from \"wouter\";\nimport { WebpageStructuredData, BreadcrumbStructuredData } from \"@/components/seo/StructuredData\";\nimport { ArrowLeft } from \"lucide-react\";\n\nconst SitemapPage = () => {\n  return (\n    <>\n      <SEO \n        title=\"خريطة الموقع | لينكتك\"\n        description=\"استعرض جميع صفحات موقع لينكتك - المنصة الرائدة لربط رواد الأعمال بشركات البرمجة في المملكة العربية السعودية\"\n        keywords=\"خريطة الموقع, لينكتك, منصة برمجية, شركات برمجة, خدمات تقنية, تطوير برمجيات\"\n      >\n        <WebpageStructuredData\n          name=\"خريطة موقع لينكتك\"\n          description=\"استعرض جميع صفحات موقع لينكتك - المنصة الرائدة لربط رواد الأعمال بشركات البرمجة\"\n          url=\"https://linktech.app/sitemap\"\n        />\n        <BreadcrumbStructuredData\n          items={[\n            { name: \"الرئيسية\", url: \"https://linktech.app/\" },\n            { name: \"خريطة الموقع\", url: \"https://linktech.app/sitemap\" }\n          ]}\n        />\n      </SEO>\n\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"mb-6\">\n          <Link href=\"/\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n            <ArrowLeft className=\"ml-1 h-4 w-4 rtl-flip\" />\n            العودة إلى الرئيسية\n          </Link>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          <nav className=\"flex text-sm text-neutral-600 mb-6\" aria-label=\"التنقل التسلسلي\">\n            <ol className=\"flex rtl space-x-2 space-x-reverse\">\n              <li><Link href=\"/\" className=\"hover:text-primary hover:underline\">الرئيسية</Link></li>\n              <li className=\"before:content-['/'] before:mx-2 font-semibold\">خريطة الموقع</li>\n            </ol>\n          </nav>\n\n          <h1 className=\"text-3xl md:text-4xl font-bold mb-8 text-center\">خريطة الموقع</h1>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {/* الصفحات الرئيسية */}\n            <div className=\"bg-white p-6 rounded-xl shadow-sm border border-neutral-200\">\n              <h2 className=\"text-xl font-bold mb-4 border-b pb-2 border-neutral-200\">الصفحات الرئيسية</h2>\n              <ul className=\"space-y-2 text-primary\">\n                <li><Link href=\"/\" className=\"hover:underline\">الرئيسية</Link></li>\n                <li><Link href=\"/about\" className=\"hover:underline\">من نحن</Link></li>\n                <li><Link href=\"/how-it-works\" className=\"hover:underline\">كيف يعمل</Link></li>\n                <li><Link href=\"/projects\" className=\"hover:underline\">المشاريع</Link></li>\n                <li><Link href=\"/contact\" className=\"hover:underline\">اتصل بنا</Link></li>\n              </ul>\n            </div>\n            \n            {/* صفحات المساعدة والدعم */}\n            <div className=\"bg-white p-6 rounded-xl shadow-sm border border-neutral-200\">\n              <h2 className=\"text-xl font-bold mb-4 border-b pb-2 border-neutral-200\">المساعدة والدعم</h2>\n              <ul className=\"space-y-2 text-primary\">\n                <li><Link href=\"/terms\" className=\"hover:underline\">شروط الاستخدام</Link></li>\n                <li><Link href=\"/privacy\" className=\"hover:underline\">سياسة الخصوصية</Link></li>\n                <li><Link href=\"/faq\" className=\"hover:underline\">الأسئلة الشائعة</Link></li>\n              </ul>\n            </div>\n            \n            {/* صفحات المستخدمين */}\n            <div className=\"bg-white p-6 rounded-xl shadow-sm border border-neutral-200\">\n              <h2 className=\"text-xl font-bold mb-4 border-b pb-2 border-neutral-200\">صفحات المستخدمين</h2>\n              <ul className=\"space-y-2 text-primary\">\n                <li><Link href=\"/auth/login\" className=\"hover:underline\">تسجيل الدخول</Link></li>\n                <li><Link href=\"/auth/register\" className=\"hover:underline\">إنشاء حساب جديد</Link></li>\n                <li><Link href=\"/auth/reset-password\" className=\"hover:underline\">إعادة تعيين كلمة المرور</Link></li>\n              </ul>\n            </div>\n            \n            {/* الحسابات والتصنيفات */}\n            <div className=\"bg-white p-6 rounded-xl shadow-sm border border-neutral-200\">\n              <h2 className=\"text-xl font-bold mb-4 border-b pb-2 border-neutral-200\">لوحات التحكم</h2>\n              <ul className=\"space-y-2 text-primary\">\n                <li><Link href=\"/dashboard/entrepreneur\" className=\"hover:underline\">لوحة تحكم رائد الأعمال</Link></li>\n                <li><Link href=\"/dashboard/company\" className=\"hover:underline\">لوحة تحكم الشركة</Link></li>\n                <li><Link href=\"/messages\" className=\"hover:underline\">الرسائل</Link></li>\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"mt-12 p-6 bg-blue-50 rounded-xl\">\n            <h2 className=\"text-xl font-bold mb-4\">معلومات إضافية</h2>\n            <p className=\"text-neutral-700 mb-4\">\n              بالإضافة إلى الصفحات المذكورة أعلاه، يتضمن الموقع صفحات خاصة بالمشاريع الفردية وصفحات ملفات الشركات، والتي يمكن الوصول إليها من خلال تصفح المشاريع أو البحث عن الشركات.\n            </p>\n            <p className=\"text-neutral-700\">\n              يمكن لمحركات البحث الوصول إلى <a href=\"/sitemap.xml\" className=\"text-primary hover:underline\" target=\"_blank\">خريطة الموقع بصيغة XML</a> للحصول على قائمة كاملة بجميع الصفحات.\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SitemapPage;","size_bytes":6219},"client/src/pages/terms.tsx":{"content":"import { Helmet } from \"react-helmet\";\n\nexport default function Terms() {\n  return (\n    <div className=\"container mx-auto py-8 px-4 md:px-6\">\n      <Helmet>\n        <title>الشروط والأحكام - لينكتك</title>\n      </Helmet>\n      <h1 className=\"text-3xl font-bold mb-6\">الشروط والأحكام</h1>\n      <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n        <div className=\"prose prose-lg max-w-none\">\n          <p>مرحباً بك في منصة لينكتك. يرجى قراءة الشروط والأحكام التالية بعناية قبل استخدام المنصة. باستخدامك للمنصة، فإنك توافق على الالتزام بهذه الشروط والأحكام.</p>\n          \n          <h2>1. تعريفات</h2>\n          <ul>\n            <li><strong>المنصة:</strong> تشير إلى موقع لينكتك الإلكتروني وتطبيقاته.</li>\n            <li><strong>المستخدم:</strong> يشير إلى أي شخص يقوم بالتسجيل أو استخدام المنصة.</li>\n            <li><strong>رائد الأعمال:</strong> المستخدم الذي يقوم بنشر مشاريع على المنصة بهدف إيجاد شركات لتنفيذها.</li>\n            <li><strong>الشركة:</strong> المستخدم الذي يقدم خدمات تطوير البرمجيات على المنصة.</li>\n          </ul>\n          \n          <h2>2. التسجيل والحسابات</h2>\n          <p>يجب أن تكون جميع المعلومات المقدمة عند التسجيل صحيحة ودقيقة وحديثة وكاملة. يحق للمنصة تعليق أو إنهاء أي حساب يحتوي على معلومات غير صحيحة.</p>\n          \n          <h2>3. المشاريع والعروض</h2>\n          <p>يتحمل رواد الأعمال مسؤولية دقة المعلومات المقدمة في المشاريع. يحق للمنصة رفض أي مشروع لا يتوافق مع شروط الاستخدام. تتحمل الشركات مسؤولية العروض المقدمة والالتزام بها.</p>\n          \n          <h2>4. العمولات والمدفوعات</h2>\n          <p>تطبق المنصة نظام عمولة بنسبة 2.5% من قيمة المشروع، تدفع كعربون من قبل رائد الأعمال عند قبول عرض إحدى الشركات. يخصم هذا العربون من القيمة الإجمالية للمشروع.</p>\n          \n          <h2>5. حماية الملكية الفكرية</h2>\n          <p>تحترم المنصة حقوق الملكية الفكرية للآخرين وتتوقع من المستخدمين القيام بالمثل. يمنع منعاً باتاً نشر أي محتوى ينتهك حقوق الملكية الفكرية للغير.</p>\n          \n          <h2>6. المسؤولية والتعويض</h2>\n          <p>لا تتحمل المنصة مسؤولية أي نزاعات تنشأ بين المستخدمين. يتعهد المستخدمون بتعويض المنصة عن أي خسائر أو أضرار تنتج عن انتهاكهم لشروط الاستخدام.</p>\n          \n          <h2>7. التعديلات</h2>\n          <p>تحتفظ المنصة بالحق في تعديل هذه الشروط والأحكام في أي وقت. سيتم إشعار المستخدمين بالتغييرات من خلال المنصة.</p>\n          \n          <h2>8. القانون المطبق</h2>\n          <p>تخضع هذه الشروط والأحكام لقوانين المملكة العربية السعودية.</p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":3699},"client/src/pages/test-nda-page.tsx":{"content":"import React from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardFooter, \n  CardHeader, \n  CardTitle \n} from \"@/components/ui/card\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function TestNdaPage() {\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [previewUrl, setPreviewUrl] = React.useState<string | null>(null);\n\n  const handleViewPdf = async () => {\n    setIsLoading(true);\n    try {\n      // فتح PDF في نافذة جديدة\n      window.open('/api/generate-nda?mode=view', '_blank');\n      \n      toast({\n        title: \"تم فتح المستند\",\n        description: \"تم فتح اتفاقية عدم الإفصاح للمعاينة\",\n      });\n    } catch (error) {\n      console.error('Error viewing PDF:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء محاولة عرض المستند\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDownloadPdf = async () => {\n    setIsLoading(true);\n    try {\n      // تنزيل الملف\n      const link = document.createElement('a');\n      link.href = '/api/generate-nda?mode=download';\n      link.setAttribute('download', 'اتفاقية_عدم_الإفصاح.pdf');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      toast({\n        title: \"جاري التنزيل\",\n        description: \"بدأ تنزيل اتفاقية عدم الإفصاح\",\n      });\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء محاولة تنزيل المستند\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto py-10 flex flex-col items-center\">\n      <div className=\"w-full max-w-2xl\">\n        <h1 className=\"text-4xl font-bold text-center mb-8\">اختبار إنشاء اتفاقية عدم الإفصاح</h1>\n        \n        <Card className=\"w-full\">\n          <CardHeader>\n            <CardTitle className=\"text-right\">ملف اتفاقية عدم الإفصاح</CardTitle>\n            <CardDescription className=\"text-right\">\n              قم بعرض أو تنزيل نموذج اتفاقية عدم الإفصاح الذي يدعم اللغة العربية بالكامل\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <p className=\"text-right\">\n              هذا الملف يتضمن تحسينات لعرض النصوص العربية بتنسيق صحيح:\n            </p>\n            <ul className=\"list-disc pr-5 space-y-2 text-right\">\n              <li>عكس ترتيب الكلمات مع الحفاظ على علامات الترقيم</li>\n              <li>تقسيم الفقرات الطويلة إلى أسطر مناسبة</li>\n              <li>خط Cairo لدعم الحروف العربية</li>\n              <li>اسم ملف مناسب باللغة العربية</li>\n            </ul>\n          </CardContent>\n          <CardFooter className=\"flex justify-between flex-wrap gap-4\">\n            <Button \n              variant=\"outline\" \n              onClick={handleDownloadPdf}\n              disabled={isLoading}\n            >\n              {isLoading ? <Loader2 className=\"h-4 w-4 ml-2 animate-spin\" /> : <Download className=\"h-4 w-4 ml-2\" />}\n              تنزيل الملف\n            </Button>\n            <Button \n              onClick={handleViewPdf}\n              disabled={isLoading}\n            >\n              {isLoading ? <Loader2 className=\"h-4 w-4 ml-2 animate-spin\" /> : <FileText className=\"h-4 w-4 ml-2\" />}\n              عرض الملف\n            </Button>\n          </CardFooter>\n        </Card>\n\n        {previewUrl && (\n          <div className=\"mt-8 w-full\">\n            <h2 className=\"text-2xl font-bold mb-4 text-right\">معاينة المستند</h2>\n            <iframe \n              src={previewUrl} \n              className=\"w-full h-[70vh] border border-gray-300 rounded-md\"\n              title=\"معاينة اتفاقية عدم الإفصاح\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":4499},"client/src/pages/test-sadiq.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Download, FileText, Upload, Key, Send, Mail, CheckCircle, Clock } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function TestSadiq() {\n  const [documentId, setDocumentId] = useState('e7cc3b1c-8434-489d-819f-faf9aa9cb797');\n  const [accessToken, setAccessToken] = useState('');\n  const [projectData, setProjectData] = useState({\n    title: 'Project Management Application',\n    description: 'Comprehensive project and task management solution'\n  });\n  const [companyData, setCompanyData] = useState({\n    name: 'Advanced Technology Company',\n    location: 'Riyadh - Saudi Arabia'\n  });\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isSendingInvitation, setIsSendingInvitation] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [generatedData, setGeneratedData] = useState<any>(null);\n  const [uploadedDocumentId, setUploadedDocumentId] = useState('');\n  const [signingParties, setSigningParties] = useState({\n    entrepreneurName: '',\n    companyRepName: ''\n  });\n  const [invitationData, setInvitationData] = useState({\n    entrepreneurEmail: '',\n    companyEmail: '',\n    invitationMessage: 'نرجو منك توقيع اتفاقية عدم الإفصاح المرفقة أدناه'\n  });\n  const [statusResult, setStatusResult] = useState<any>(null);\n  const [referenceNumber, setReferenceNumber] = useState<string>('');\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const { toast } = useToast();\n\n  // وظيفة تحميل الوثيقة\n  const downloadDocument = async (documentId: string, fileName: string) => {\n    if (!accessToken) {\n      toast({\n        title: \"❌ خطأ\",\n        description: \"يرجى إدخال رمز الوصول أولاً\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      const downloadUrl = `/api/sadiq/download-document/${documentId}?accessToken=${encodeURIComponent(accessToken)}`;\n      \n      // إنشاء رابط تحميل مؤقت\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.download = fileName;\n      link.target = '_blank';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      toast({\n        title: \"✅ تم التحميل\",\n        description: `تم بدء تحميل الملف: ${fileName}`\n      });\n    } catch (error) {\n      console.error('خطأ في تحميل الوثيقة:', error);\n      toast({\n        title: \"❌ خطأ في التحميل\",\n        description: \"فشل في تحميل الوثيقة\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const generateNDAAsBase64 = async () => {\n    if (!projectData.title.trim() || !companyData.name.trim() || !signingParties.entrepreneurName.trim() || !signingParties.companyRepName.trim()) {\n      toast({\n        title: \"خطأ في البيانات\",\n        description: \"يرجى ملء جميع البيانات المطلوبة بما في ذلك أسماء الأطراف\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsGenerating(true);\n    try {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        toast({\n          title: \"خطأ في المصادقة\",\n          description: \"يرجى تسجيل الدخول أولاً\",\n          variant: \"destructive\"\n        });\n        return;\n      }\n\n      const response = await fetch('/api/sadiq/generate-nda-base64', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          projectData,\n          companyData,\n          entrepreneurName: signingParties.entrepreneurName,\n          companyRepName: signingParties.companyRepName\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to generate NDA');\n      }\n\n      const result = await response.json();\n      setGeneratedData(result);\n\n      toast({\n        title: \"تم إنشاء الملف\",\n        description: `تم إنشاء اتفاقية عدم الإفصاح بنجاح (${result.fileSize} بايت)`\n      });\n\n    } catch (error) {\n      console.error('Document generation error:', error);\n      toast({\n        title: \"خطأ في إنشاء الملف\",\n        description: \"حدث خطأ أثناء إنشاء اتفاقية عدم الإفصاح\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const initiateEnvelope = async () => {\n    if (!generatedData || !accessToken) {\n      toast({\n        title: \"خطأ\",\n        description: \"يجب توليد الملف والمصادقة أولاً\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsUploading(true);\n    try {\n      const token = localStorage.getItem('auth_token');\n      \n      const response = await fetch('/api/sadiq/bulk-initiate-envelope', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          accessToken,\n          base64: generatedData.base64,\n          filename: generatedData.filename\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to initiate envelope');\n      }\n\n      const result = await response.json();\n      setUploadedDocumentId(result.documentId);\n\n      // حفظ رقم المرجع لمتابعة الحالة\n      if (result.referenceNumber) {\n        setReferenceNumber(result.referenceNumber);\n      }\n\n      toast({\n        title: \"تم إنشاء المظروف\",\n        description: `تم إنشاء مظروف صادق وحصلنا على معرف الوثيقة: ${result.documentId.substring(0, 8)}...${result.referenceNumber ? `\\nرقم المرجع: ${result.referenceNumber}` : ''}`\n      });\n\n    } catch (error) {\n      console.error('Envelope initiate error:', error);\n      toast({\n        title: \"خطأ في إنشاء المظروف\",\n        description: \"فشل في إنشاء مظروف صادق\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const useDocumentId = () => {\n    if (!documentId.trim()) {\n      toast({\n        title: \"خطأ\",\n        description: \"يرجى إدخال معرف المستند من صادق\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    toast({\n      title: \"معرف المستند محفوظ\",\n      description: `تم حفظ معرف المستند: ${documentId}`\n    });\n    \n    // Here you can store the document ID for later use\n    localStorage.setItem('sadiq_document_id', documentId);\n  };\n\n  const authenticateWithSadiq = async () => {\n    try {\n      setIsSendingInvitation(true);\n      const token = localStorage.getItem('auth_token');\n      \n      const response = await fetch('/api/sadiq/authenticate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Authentication failed');\n      }\n\n      const result = await response.json();\n      setAccessToken(result.access_token);\n      \n      toast({\n        title: \"تمت المصادقة\",\n        description: \"تم الحصول على رمز الوصول بنجاح\"\n      });\n    } catch (error) {\n      console.error('Authentication error:', error);\n      toast({\n        title: \"خطأ في المصادقة\",\n        description: \"فشل في الحصول على رمز الوصول\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsSendingInvitation(false);\n    }\n  };\n\n  const sendInvitations = async () => {\n    if (!accessToken) {\n      toast({\n        title: \"خطأ\",\n        description: \"يجب المصادقة أولاً للحصول على رمز الوصول\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    if (!uploadedDocumentId || !invitationData.entrepreneurEmail || !invitationData.companyEmail) {\n      toast({\n        title: \"خطأ في البيانات\",\n        description: \"يرجى رفع الوثيقة وملء عناوين البريد الإلكتروني\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setIsSendingInvitation(true);\n      const token = localStorage.getItem('auth_token');\n\n      const response = await fetch('/api/sadiq/send-invitations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          accessToken,\n          documentId: uploadedDocumentId,\n          entrepreneurEmail: invitationData.entrepreneurEmail,\n          companyEmail: invitationData.companyEmail,\n          invitationMessage: invitationData.invitationMessage\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send invitations');\n      }\n\n      const result = await response.json();\n      \n      toast({\n        title: \"تم الإرسال\",\n        description: \"تم إرسال دعوات التوقيع بنجاح\"\n      });\n      \n      console.log('Invitation result:', result);\n      \n    } catch (error) {\n      console.error('Invitation error:', error);\n      toast({\n        title: \"خطأ في الإرسال\",\n        description: \"فشل في إرسال دعوات التوقيع\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsSendingInvitation(false);\n    }\n  };\n\n  const checkEnvelopeStatus = async () => {\n    if (!referenceNumber.trim()) {\n      toast({\n        title: \"خطأ\",\n        description: \"لا يوجد رقم مرجع للمظروف. يجب إنشاء مظروف أولاً\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    if (!accessToken) {\n      toast({\n        title: \"خطأ\",\n        description: \"يجب المصادقة أولاً للحصول على رمز الوصول\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsCheckingStatus(true);\n    try {\n      const token = localStorage.getItem('auth_token');\n      \n      const response = await fetch(`/api/sadiq/envelope-status/${referenceNumber}?accessToken=${accessToken}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to check envelope status');\n      }\n\n      const result = await response.json();\n      setStatusResult(result);\n      \n      toast({\n        title: \"تم فحص الحالة\",\n        description: `حالة المظروف: ${result.status || 'غير محددة'}`\n      });\n      \n      console.log('Status check result:', result);\n      \n    } catch (error) {\n      console.error('Status check error:', error);\n      toast({\n        title: \"خطأ في فحص الحالة\",\n        description: \"فشل في فحص حالة المظروف\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsCheckingStatus(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto py-8 px-4 max-w-4xl\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Complete Sadiq Integration</h1>\n        <p className=\"text-gray-600\">Automated workflow: Generate NDA → Authenticate → Create Envelope → Send Invitations</p>\n      </div>\n\n      <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-2\">\n        {/* Document Generation Section */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <FileText className=\"h-5 w-5\" />\n              Generate NDA as Base64\n            </CardTitle>\n            <CardDescription>\n              Create an NDA document as base64 with signing party names (partially hidden for privacy)\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"project-title\">Project Title</Label>\n              <Input\n                id=\"project-title\"\n                value={projectData.title}\n                onChange={(e) => setProjectData(prev => ({ ...prev, title: e.target.value }))}\n                placeholder=\"Enter project title\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"project-description\">Project Description</Label>\n              <Textarea\n                id=\"project-description\"\n                value={projectData.description}\n                onChange={(e) => setProjectData(prev => ({ ...prev, description: e.target.value }))}\n                placeholder=\"Enter project description\"\n                rows={3}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"company-name\">Company Name</Label>\n              <Input\n                id=\"company-name\"\n                value={companyData.name}\n                onChange={(e) => setCompanyData(prev => ({ ...prev, name: e.target.value }))}\n                placeholder=\"Enter company name\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"company-location\">Company Location</Label>\n              <Input\n                id=\"company-location\"\n                value={companyData.location}\n                onChange={(e) => setCompanyData(prev => ({ ...prev, location: e.target.value }))}\n                placeholder=\"Enter company location\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"entrepreneur-name\">Entrepreneur Name</Label>\n              <Input\n                id=\"entrepreneur-name\"\n                value={signingParties.entrepreneurName}\n                onChange={(e) => setSigningParties(prev => ({ ...prev, entrepreneurName: e.target.value }))}\n                placeholder=\"Enter entrepreneur name\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"company-rep-name\">Company Representative Name</Label>\n              <Input\n                id=\"company-rep-name\"\n                value={signingParties.companyRepName}\n                onChange={(e) => setSigningParties(prev => ({ ...prev, companyRepName: e.target.value }))}\n                placeholder=\"Enter company representative name\"\n              />\n            </div>\n\n            <Button \n              onClick={generateNDAAsBase64}\n              className=\"w-full\"\n              disabled={isGenerating}\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              {isGenerating ? 'Generating Base64...' : 'Generate NDA as Base64'}\n            </Button>\n\n            {generatedData && (\n              <div className=\"text-sm text-green-600 bg-green-50 p-3 rounded\">\n                <p><strong>✅ NDA Generated Successfully!</strong></p>\n                <p>File size: {generatedData.fileSize} bytes</p>\n                <p>Signing parties: {generatedData.signingParties.entrepreneur} & {generatedData.signingParties.companyRep}</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Initiate Envelope Section */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Upload className=\"h-5 w-5\" />\n              Initiate Sadiq Envelope\n            </CardTitle>\n            <CardDescription>\n              Create envelope and get document ID in one step using Bulk Initiate Envelope\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Button \n              onClick={initiateEnvelope}\n              variant=\"outline\"\n              className=\"w-full\"\n              disabled={!generatedData || !accessToken || isUploading}\n            >\n              <Upload className=\"h-4 w-4 mr-2\" />\n              {isUploading ? 'Creating Envelope...' : 'Create Sadiq Envelope'}\n            </Button>\n\n            {uploadedDocumentId && (\n              <div className=\"text-sm text-green-600 bg-green-50 p-3 rounded\">\n                <p><strong>✅ Envelope Created Successfully!</strong></p>\n                <p>Document ID: {uploadedDocumentId.substring(0, 8)}...{uploadedDocumentId.substring(-8)}</p>\n                <p>Ready to send invitations</p>\n              </div>\n            )}\n\n            {!generatedData && (\n              <div className=\"text-sm text-amber-600 bg-amber-50 p-3 rounded\">\n                <p><strong>⚠️ Generate NDA First</strong></p>\n                <p>Generate the NDA document before creating envelope</p>\n              </div>\n            )}\n\n            {!accessToken && (\n              <div className=\"text-sm text-amber-600 bg-amber-50 p-3 rounded\">\n                <p><strong>⚠️ Authentication Required</strong></p>\n                <p>Authenticate with Sadiq first</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Sadiq Authentication Section */}\n      <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-2 mt-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Key className=\"h-5 w-5\" />\n              Sadiq Authentication\n            </CardTitle>\n            <CardDescription>\n              Authenticate with Sadiq API to get access token for sending invitations\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"text-sm text-gray-600\">\n              <p><strong>Current Document ID:</strong></p>\n              <p className=\"bg-gray-50 p-2 rounded text-xs font-mono\">{documentId}</p>\n            </div>\n\n            <Button \n              onClick={authenticateWithSadiq}\n              className=\"w-full\"\n              disabled={isSendingInvitation}\n            >\n              <Key className=\"h-4 w-4 mr-2\" />\n              {isSendingInvitation ? 'Authenticating...' : 'Authenticate with Sadiq'}\n            </Button>\n\n            {accessToken && (\n              <div className=\"text-sm text-green-600 bg-green-50 p-3 rounded\">\n                <p><strong>✅ Authentication Successful!</strong></p>\n                <p>Access token obtained and ready for use</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Send Invitations Section */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Send className=\"h-5 w-5\" />\n              Send Signature Invitations\n            </CardTitle>\n            <CardDescription>\n              Send email invitations for NDA signature to both parties\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"entrepreneur-email\">\n                <Mail className=\"h-4 w-4 inline mr-2\" />\n                Project Owner Email\n              </Label>\n              <Input\n                id=\"entrepreneur-email\"\n                type=\"email\"\n                value={invitationData.entrepreneurEmail}\n                onChange={(e) => setInvitationData(prev => ({ ...prev, entrepreneurEmail: e.target.value }))}\n                placeholder=\"owner@example.com\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"company-email\">\n                <Mail className=\"h-4 w-4 inline mr-2\" />\n                Company Representative Email\n              </Label>\n              <Input\n                id=\"company-email\"\n                type=\"email\"\n                value={invitationData.companyEmail}\n                onChange={(e) => setInvitationData(prev => ({ ...prev, companyEmail: e.target.value }))}\n                placeholder=\"company@example.com\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"invitation-message\">Invitation Message</Label>\n              <Textarea\n                id=\"invitation-message\"\n                value={invitationData.invitationMessage}\n                onChange={(e) => setInvitationData(prev => ({ ...prev, invitationMessage: e.target.value }))}\n                placeholder=\"Enter invitation message\"\n                rows={3}\n              />\n            </div>\n\n            <Button \n              onClick={sendInvitations}\n              className=\"w-full\"\n              disabled={isSendingInvitation || !accessToken || !uploadedDocumentId}\n            >\n              <Send className=\"h-4 w-4 mr-2\" />\n              {isSendingInvitation ? 'Sending...' : 'Send Signature Invitations'}\n            </Button>\n\n            {!uploadedDocumentId && (\n              <div className=\"text-sm text-amber-600 bg-amber-50 p-3 rounded\">\n                <p><strong>⚠️ Create Envelope First</strong></p>\n                <p>Create the Sadiq envelope to get document ID before sending invitations</p>\n              </div>\n            )}\n\n            {!accessToken && (\n              <div className=\"text-sm text-amber-600 bg-amber-50 p-3 rounded\">\n                <p><strong>⚠️ Authentication Required</strong></p>\n                <p>Please authenticate with Sadiq first to enable invitation sending</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Workflow Summary */}\n      <Card className=\"mt-6\">\n        <CardHeader>\n          <CardTitle>Complete Sadiq Workflow</CardTitle>\n          <CardDescription>\n            Step-by-step process for NDA signature management\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm\">\n              <div className=\"bg-blue-50 p-4 rounded\">\n                <h4 className=\"font-semibold text-blue-900\">Step 1: Generate Base64</h4>\n                <ol className=\"list-decimal list-inside mt-2 space-y-1 text-blue-700\">\n                  <li>Fill project details</li>\n                  <li>Enter signing party names</li>\n                  <li>Generate NDA as base64</li>\n                  <li>Names partially hidden</li>\n                </ol>\n              </div>\n              \n              <div className=\"bg-green-50 p-4 rounded\">\n                <h4 className=\"font-semibold text-green-900\">Step 2: Authenticate</h4>\n                <ol className=\"list-decimal list-inside mt-2 space-y-1 text-green-700\">\n                  <li>Click authenticate</li>\n                  <li>Get Sadiq access token</li>\n                  <li>Ready for upload</li>\n                </ol>\n              </div>\n              \n              <div className=\"bg-orange-50 p-4 rounded\">\n                <h4 className=\"font-semibold text-orange-900\">Step 3: Create Envelope</h4>\n                <ol className=\"list-decimal list-inside mt-2 space-y-1 text-orange-700\">\n                  <li>Bulk initiate envelope</li>\n                  <li>Upload + get document ID</li>\n                  <li>Single API call</li>\n                </ol>\n              </div>\n              \n              <div className=\"bg-purple-50 p-4 rounded\">\n                <h4 className=\"font-semibold text-purple-900\">Step 4: Send Invitations</h4>\n                <ol className=\"list-decimal list-inside mt-2 space-y-1 text-purple-700\">\n                  <li>Enter email addresses</li>\n                  <li>Customize message</li>\n                  <li>Send invitations</li>\n                  <li>Track signatures</li>\n                </ol>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Envelope Status Tracking */}\n      <Card className=\"mt-6\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <CheckCircle className=\"h-5 w-5\" />\n            Envelope Status Tracking\n          </CardTitle>\n          <CardDescription>\n            Track the status of your envelope using the reference number\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"reference-number\">Reference Number</Label>\n            <Input\n              id=\"reference-number\"\n              value={referenceNumber}\n              onChange={(e) => setReferenceNumber(e.target.value)}\n              placeholder=\"Enter envelope reference number\"\n            />\n          </div>\n\n          <Button \n            onClick={checkEnvelopeStatus} \n            disabled={isCheckingStatus || !referenceNumber.trim() || !accessToken}\n            className=\"w-full\"\n          >\n            {isCheckingStatus ? (\n              <>\n                <Clock className=\"mr-2 h-4 w-4 animate-spin\" />\n                Checking Status...\n              </>\n            ) : (\n              <>\n                <CheckCircle className=\"mr-2 h-4 w-4\" />\n                Check Envelope Status\n              </>\n            )}\n          </Button>\n\n          {statusResult && (\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n              <h4 className=\"font-semibold text-sm text-gray-700 mb-3\">Envelope Status Details:</h4>\n              \n              {/* Status Overview */}\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <span><strong>Status:</strong></span>\n                  <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                    statusResult.isComplete ? 'bg-green-100 text-green-800' : \n                    statusResult.isInProgress ? 'bg-blue-100 text-blue-800' :\n                    statusResult.isPending ? 'bg-yellow-100 text-yellow-800' : \n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {statusResult.status}\n                  </span>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <span><strong>Progress:</strong></span>\n                  <span className=\"text-sm\">\n                    {statusResult.signedCount}/{statusResult.totalSignatories} signed \n                    <span className=\"ml-2 text-xs text-gray-500\">\n                      ({statusResult.completionPercentage}%)\n                    </span>\n                  </span>\n                </div>\n\n                <div><strong>Reference:</strong> {statusResult.referenceNumber}</div>\n                <div><strong>Created:</strong> {statusResult.createDate ? new Date(statusResult.createDate).toLocaleString() : 'Unknown'}</div>\n              </div>\n\n              {/* Signatories Progress */}\n              {statusResult.signatories?.length > 0 && (\n                <div className=\"mt-4\">\n                  <h5 className=\"font-medium text-gray-700 mb-2\">Signatories:</h5>\n                  <div className=\"space-y-2\">\n                    {statusResult.signatories.map((signer: any, index: number) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded border\">\n                        <div className=\"flex-1\">\n                          <div className=\"text-sm font-medium\">\n                            {signer.name || signer.nameAr || 'Unknown'}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">{signer.email}</div>\n                        </div>\n                        <span className={`px-2 py-1 rounded text-xs ${\n                          signer.status === 'SIGNED' ? 'bg-green-100 text-green-800' :\n                          signer.status === 'PENDING' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-gray-100 text-gray-800'\n                        }`}>\n                          {signer.status}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Documents */}\n              {statusResult.documents?.length > 0 && (\n                <div className=\"mt-4\">\n                  <h5 className=\"font-medium text-gray-700 mb-2\">Documents:</h5>\n                  <div className=\"space-y-1\">\n                    {statusResult.documents.map((doc: any, index: number) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded border text-xs\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium\">{doc.fileName}</div>\n                          <div className=\"text-gray-500\">{doc.sizeInKB} KB</div>\n                        </div>\n                        {(statusResult.isComplete || statusResult.isInProgress) && (\n                          <Button \n                            size=\"sm\" \n                            variant=\"outline\"\n                            onClick={() => downloadDocument(doc.id, doc.fileName)}\n                            className=\"ml-2\"\n                          >\n                            <Download className=\"w-3 h-3 mr-1\" />\n                            Download\n                          </Button>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"mt-3 text-xs text-gray-500\">\n                Last checked: {new Date(statusResult.lastUpdated).toLocaleString()}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":29892},"client/src/components/analytics/GoogleAnalytics.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\n\ninterface GoogleAnalyticsProps {\n  measurementId: string;\n  anonymizeIp?: boolean;\n}\n\n/**\n * مكون Google Analytics\n * يقوم بتضمين سكربت Google Analytics وإرسال مشاهدات الصفحة\n * \n * @param measurementId معرف القياس من Google Analytics (G-XXXXXXXX)\n * @param anonymizeIp تفعيل إخفاء عنوان IP (اختياري، افتراضي: true)\n */\nexport default function GoogleAnalytics({ \n  measurementId, \n  anonymizeIp = true \n}: GoogleAnalyticsProps) {\n  const [location] = useLocation();\n  \n  // تضمين سكربت Google Analytics عند تحميل المكون\n  useEffect(() => {\n    // تخطي في بيئة التطوير المحلية\n    if (window.location.hostname === 'localhost') {\n      console.log('Google Analytics متوقف في بيئة التطوير المحلية');\n      return;\n    }\n\n    if (!measurementId) {\n      console.warn('لم يتم توفير معرف القياس لـ Google Analytics');\n      return;\n    }\n\n    // تضمين السكربت إذا لم يكن موجوداً بالفعل\n    if (!document.getElementById('google-analytics-script')) {\n      const script = document.createElement('script');\n      script.id = 'google-analytics-script';\n      script.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;\n      script.async = true;\n      document.head.appendChild(script);\n\n      // تهيئة gtag\n      window.dataLayer = window.dataLayer || [];\n      function gtag(...args: any[]) {\n        window.dataLayer.push(args);\n      }\n      \n      gtag('js', new Date());\n      \n      // ضبط إعداد إخفاء عنوان IP إذا كان مطلوباً\n      if (anonymizeIp) {\n        gtag('config', measurementId, { 'anonymize_ip': true });\n      } else {\n        gtag('config', measurementId);\n      }\n    }\n  }, [measurementId, anonymizeIp]);\n\n  // إرسال مشاهدة صفحة عند تغيير المسار\n  useEffect(() => {\n    // تخطي في بيئة التطوير المحلية\n    if (window.location.hostname === 'localhost') {\n      return;\n    }\n\n    if (window.gtag && location) {\n      window.gtag('config', measurementId, {\n        'page_path': location,\n        'anonymize_ip': anonymizeIp\n      });\n      \n      console.log(`تم إرسال مشاهدة صفحة إلى Google Analytics للمسار: ${location}`);\n    }\n  }, [location, measurementId, anonymizeIp]);\n\n  // هذا المكون غير مرئي في الواجهة\n  return null;\n}\n\n// إضافة التعريف الشامل لـ gtag\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}","size_bytes":2735},"client/src/components/analytics/VisitChart.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { \n  LineChart, \n  Line, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell\n} from \"recharts\";\n\ninterface DailyVisitData {\n  date: string;\n  visits: number;\n  uniqueVisitors: number;\n}\n\ninterface VisitChartProps {\n  data: DailyVisitData[];\n}\n\nexport const VisitChart = ({ data }: VisitChartProps) => {\n  const formatDate = (dateStr: string) => {\n    const date = new Date(dateStr);\n    return date.toLocaleDateString('ar-SA', { month: 'short', day: 'numeric' });\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg font-semibold\">الزيارات اليومية</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"date\" \n              tickFormatter={formatDate}\n              tick={{ fontSize: 12 }}\n            />\n            <YAxis tick={{ fontSize: 12 }} />\n            <Tooltip \n              labelFormatter={formatDate}\n              formatter={(value, name) => [\n                value, \n                name === 'visits' ? 'إجمالي الزيارات' : 'الزوار الفريدون'\n              ]}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"visits\" \n              stroke=\"#3b82f6\" \n              strokeWidth={2}\n              dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"uniqueVisitors\" \n              stroke=\"#10b981\" \n              strokeWidth={2}\n              dot={{ fill: '#10b981', strokeWidth: 2, r: 4 }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\ninterface TopPagesData {\n  url: string;\n  views: number;\n}\n\ninterface TopPagesChartProps {\n  data: TopPagesData[];\n}\n\nexport const TopPagesChart = ({ data }: TopPagesChartProps) => {\n  const formatUrl = (url: string) => {\n    if (url === '/') return 'الصفحة الرئيسية';\n    if (url === '/projects') return 'المشاريع';\n    if (url === '/projects/trending') return 'المشاريع الرائجة';\n    if (url === '/for-companies') return 'للشركات';\n    if (url === '/about') return 'من نحن';\n    if (url === '/contact') return 'اتصل بنا';\n    return url.replace('/', '');\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg font-semibold\">أكثر الصفحات زيارة</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={data} layout=\"horizontal\">\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis type=\"number\" tick={{ fontSize: 12 }} />\n            <YAxis \n              type=\"category\" \n              dataKey=\"url\" \n              tick={{ fontSize: 12 }}\n              tickFormatter={formatUrl}\n              width={120}\n            />\n            <Tooltip \n              formatter={(value) => [value, 'مشاهدات']}\n              labelFormatter={formatUrl}\n            />\n            <Bar dataKey=\"views\" fill=\"#8b5cf6\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\ninterface DeviceStatsData {\n  desktop: number;\n  mobile: number;\n  tablet: number;\n}\n\ninterface DeviceStatsChartProps {\n  data: DeviceStatsData;\n}\n\nexport const DeviceStatsChart = ({ data }: DeviceStatsChartProps) => {\n  const chartData = [\n    { name: 'سطح المكتب', value: data.desktop || 0, color: '#3b82f6' },\n    { name: 'الهاتف', value: data.mobile || 0, color: '#10b981' },\n    { name: 'الجهاز اللوحي', value: data.tablet || 0, color: '#f59e0b' }\n  ].filter(item => item.value > 0);\n\n  const total = chartData.reduce((sum, item) => sum + item.value, 0);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg font-semibold\">توزيع الأجهزة</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <PieChart>\n            <Pie\n              data={chartData}\n              cx=\"50%\"\n              cy=\"50%\"\n              innerRadius={60}\n              outerRadius={100}\n              paddingAngle={5}\n              dataKey=\"value\"\n            >\n              {chartData.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={entry.color} />\n              ))}\n            </Pie>\n            <Tooltip formatter={(value) => [value, 'زيارات']} />\n          </PieChart>\n        </ResponsiveContainer>\n        <div className=\"mt-4 space-y-2\">\n          {chartData.map((item) => (\n            <div key={item.name} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div \n                  className=\"w-3 h-3 rounded-full ml-2\"\n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-sm text-gray-600\">{item.name}</span>\n              </div>\n              <div className=\"text-sm font-medium\">\n                {item.value} ({Math.round((item.value / total) * 100)}%)\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\ninterface BrowserStatsData {\n  [key: string]: number;\n}\n\ninterface BrowserStatsChartProps {\n  data: BrowserStatsData;\n}\n\nexport const BrowserStatsChart = ({ data }: BrowserStatsChartProps) => {\n  const colors = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6'];\n  \n  const chartData = Object.entries(data)\n    .map(([name, value], index) => ({\n      name: name === 'unknown' ? 'غير معروف' : name,\n      value,\n      color: colors[index % colors.length]\n    }))\n    .filter(item => item.value > 0)\n    .sort((a, b) => b.value - a.value)\n    .slice(0, 5);\n\n  const total = chartData.reduce((sum, item) => sum + item.value, 0);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg font-semibold\">المتصفحات الأكثر استخداماً</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <BarChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"name\" \n              tick={{ fontSize: 12 }}\n              angle={-45}\n              textAnchor=\"end\"\n              height={60}\n            />\n            <YAxis tick={{ fontSize: 12 }} />\n            <Tooltip formatter={(value) => [value, 'زيارات']} />\n            <Bar dataKey=\"value\" fill=\"#3b82f6\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <div className=\"mt-4 space-y-2\">\n          {chartData.map((item) => (\n            <div key={item.name} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div \n                  className=\"w-3 h-3 rounded-full ml-2\"\n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-sm text-gray-600\">{item.name}</span>\n              </div>\n              <div className=\"text-sm font-medium\">\n                {item.value} ({Math.round((item.value / total) * 100)}%)\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};","size_bytes":7577},"client/src/components/analytics/VisitStatsCard.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TrendingUp, TrendingDown, Users, Eye, Clock, Globe } from \"lucide-react\";\n\ninterface VisitStatsCardProps {\n  title: string;\n  value: number;\n  change?: number;\n  changeLabel?: string;\n  icon: React.ComponentType<{ className?: string }>;\n  color?: \"green\" | \"red\" | \"blue\" | \"purple\";\n}\n\nconst VisitStatsCard = ({ \n  title, \n  value, \n  change, \n  changeLabel, \n  icon: Icon, \n  color = \"blue\" \n}: VisitStatsCardProps) => {\n  const isPositive = change !== undefined && change >= 0;\n  \n  const colorClasses = {\n    green: \"text-green-600 bg-green-50\",\n    red: \"text-red-600 bg-red-50\", \n    blue: \"text-blue-600 bg-blue-50\",\n    purple: \"text-purple-600 bg-purple-50\"\n  };\n\n  return (\n    <Card className=\"hover:shadow-lg transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-gray-600\">\n          {title}\n        </CardTitle>\n        <div className={`p-2 rounded-lg ${colorClasses[color]}`}>\n          <Icon className=\"h-4 w-4\" />\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold text-gray-900 mb-1\">\n          {value.toLocaleString('ar-SA')}\n        </div>\n        {change !== undefined && (\n          <div className=\"flex items-center text-sm\">\n            {isPositive ? (\n              <TrendingUp className=\"h-3 w-3 text-green-500 ml-1\" />\n            ) : (\n              <TrendingDown className=\"h-3 w-3 text-red-500 ml-1\" />\n            )}\n            <span className={isPositive ? \"text-green-600\" : \"text-red-600\"}>\n              {Math.abs(change)}%\n            </span>\n            {changeLabel && (\n              <span className=\"text-gray-500 mr-1\">\n                {changeLabel}\n              </span>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\ninterface QuickStatsProps {\n  stats: {\n    todayVisits: number;\n    yesterdayVisits: number;\n    thisWeekVisits: number;\n    thisMonthVisits: number;\n    growthRate: number;\n  };\n}\n\nexport const QuickVisitStats = ({ stats }: QuickStatsProps) => {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n      <VisitStatsCard\n        title=\"زيارات اليوم\"\n        value={stats.todayVisits}\n        change={stats.growthRate}\n        changeLabel=\"من الأمس\"\n        icon={Eye}\n        color=\"green\"\n      />\n      <VisitStatsCard\n        title=\"زيارات هذا الأسبوع\"\n        value={stats.thisWeekVisits}\n        icon={Users}\n        color=\"blue\"\n      />\n      <VisitStatsCard\n        title=\"زيارات هذا الشهر\"\n        value={stats.thisMonthVisits}\n        icon={Globe}\n        color=\"purple\"\n      />\n      <VisitStatsCard\n        title=\"الأمس\"\n        value={stats.yesterdayVisits}\n        icon={Clock}\n        color=\"red\"\n      />\n    </div>\n  );\n};\n\nexport default VisitStatsCard;","size_bytes":3056},"client/src/components/auth/ProtectedRoute.tsx":{"content":"import React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'wouter';\nimport { Loader2 } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\n\ninterface ProtectedRouteProps {\n  path: string;\n  component: React.ComponentType<any>;\n  requiredRole?: 'admin' | 'company' | 'entrepreneur' | null;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  path, \n  component: Component, \n  requiredRole = null\n}) => {\n  const [userState, setUserState] = useState<any>(null);\n  const [authChecked, setAuthChecked] = useState(false);\n  \n  // Direct auth query without dependency on useAuth hook\n  const { data: authData, isLoading, error, refetch } = useQuery<{user: any}>({\n    queryKey: ['/api/auth/user'],\n    retry: false,\n    staleTime: 0,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true,\n    refetchOnReconnect: true,\n  });\n  \n  useEffect(() => {\n    console.log(\"ProtectedRoute - Auth data:\", authData);\n    if (authData?.user) {\n      setUserState(authData.user);\n      setAuthChecked(true);\n    } else if (error || (!isLoading && !authData)) {\n      setUserState(null);\n      setAuthChecked(true);\n    }\n  }, [authData, error, isLoading]);\n\n  // Force refetch when localStorage token changes (for fresh login)\n  useEffect(() => {\n    const handleStorageChange = () => {\n      const token = localStorage.getItem('auth_token');\n      if (token && !userState) {\n        console.log(\"Token detected, refetching auth data...\");\n        refetch();\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, [userState, refetch]);\n  \n  // Function to check if user has the required role\n  const hasRequiredRole = (user: any): boolean => {\n    if (!requiredRole) return true;\n    \n    if (requiredRole === 'admin') return user?.role === 'admin';\n    if (requiredRole === 'company') return user?.role === 'company';\n    if (requiredRole === 'entrepreneur') return user?.role === 'entrepreneur';\n    \n    return false;\n  };\n\n  return (\n    <Route path={path}>\n      {() => {\n        // Show loading indicator while checking auth\n        if (isLoading || !authChecked) {\n          console.log(\"Loading user info...\");\n          return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n              <span className=\"mr-2\">جاري تحميل البيانات...</span>\n            </div>\n          );\n        }\n        \n        // Check if user is authenticated\n        if (!userState) {\n          console.log(\"User not authenticated, redirecting to login\");\n          return <Redirect to=\"/auth/login\" />;\n        }\n        \n        console.log(\"Authentication successful, rendering protected component\");\n        \n        // Check if user has required role\n        if (requiredRole && !hasRequiredRole(userState)) {\n          console.log(`Required role: ${requiredRole}, current role: ${userState?.role}`);\n          return <Redirect to=\"/auth/login\" />;\n        }\n\n        // Create auth object for the component\n        const auth = {\n          user: userState,\n          isAuthenticated: !!userState,\n          isAdmin: userState?.role === 'admin',\n          isCompany: userState?.role === 'company',\n          isEntrepreneur: userState?.role === 'entrepreneur',\n        };\n\n        // If all checks pass, render the component\n        console.log(\"Rendering component with user:\", userState);\n        return <Component auth={auth} />;\n      }}\n    </Route>\n  );\n};","size_bytes":3622},"client/src/components/cms/BlogEditor.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\n\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Loader2, Save, Eye, Image, Trash } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\n\n// تعريف مخطط التحقق من مدخلات المدونة\nconst blogPostSchema = z.object({\n  title: z.string().min(5, { message: 'عنوان المقال يجب أن يحتوي على 5 أحرف على الأقل' }),\n  slug: z.string().min(3, { message: 'الرابط المخصص يجب أن يحتوي على 3 أحرف على الأقل' })\n    .regex(/^[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF\\w-]+$/, { message: 'الرابط المخصص يجب أن يحتوي فقط على أحرف عربية أو إنجليزية وأرقام وشرطات' }),\n  excerpt: z.string().min(10, { message: 'ملخص المقال يجب أن يحتوي على 10 أحرف على الأقل' }),\n  content: z.string().min(50, { message: 'محتوى المقال يجب أن يحتوي على 50 حرفًا على الأقل' }),\n  categoryId: z.string().min(1, { message: 'اختر فئة للمقال' }),\n  featuredImage: z.string().optional(),\n  tags: z.string().optional(),\n  status: z.enum(['draft', 'published']),\n  seoTitle: z.string().optional(),\n  seoDescription: z.string().optional(),\n  seoKeywords: z.string().optional(),\n});\n\ntype BlogPostFormValues = z.infer<typeof blogPostSchema>;\n\ninterface BlogEditorProps {\n  postId?: number;\n  onSuccess?: () => void;\n}\n\n/**\n * مكون محرر المدونة\n * يتيح إنشاء وتحرير مقالات المدونة مع معاينة مباشرة\n * \n * @param postId معرف المقال (اختياري - للتحرير)\n * @param onSuccess دالة يتم استدعاؤها بعد الحفظ بنجاح\n */\nexport default function BlogEditor({ postId, onSuccess }: BlogEditorProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [activeTab, setActiveTab] = useState('edit');\n  const [tagInput, setTagInput] = useState('');\n  const [tags, setTags] = useState<string[]>([]);\n\n  // استعلام لجلب فئات المدونة\n  const { data: categories, isLoading: loadingCategories } = useQuery({\n    queryKey: ['/api/blog/categories'],\n  });\n\n  // استعلام لجلب تفاصيل المقال (في حالة التحرير)\n  const { data: post, isLoading: loadingPost } = useQuery({\n    queryKey: [`/api/blog/posts/${postId}`],\n    enabled: !!postId,\n  });\n\n  // إعداد نموذج البيانات\n  const form = useForm<BlogPostFormValues>({\n    resolver: zodResolver(blogPostSchema),\n    defaultValues: {\n      title: '',\n      slug: '',\n      excerpt: '',\n      content: '',\n      categoryId: '',\n      featuredImage: '',\n      tags: '',\n      status: 'draft',\n      seoTitle: '',\n      seoDescription: '',\n      seoKeywords: '',\n    },\n  });\n\n  // mutation لإنشاء أو تحديث المقال\n  const mutation = useMutation({\n    mutationFn: async (data: BlogPostFormValues) => {\n      const url = postId \n        ? `/api/blog/posts/${postId}` \n        : '/api/blog/posts';\n      const method = postId ? 'PATCH' : 'POST';\n      \n      const res = await apiRequest(method, url, {\n        ...data,\n        tags: tags.join(','),\n      });\n      return await res.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: postId ? 'تم تحديث المقال بنجاح' : 'تم إنشاء المقال بنجاح',\n        description: postId \n          ? 'تم تحديث بيانات المقال في قاعدة البيانات' \n          : 'تم إضافة المقال إلى قاعدة البيانات',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/blog/posts'] });\n      if (postId) {\n        queryClient.invalidateQueries({ queryKey: [`/api/blog/posts/${postId}`] });\n      }\n      if (onSuccess) onSuccess();\n\n      // إرسال إشعار تحديث sitemap إلى محركات البحث\n      apiRequest('POST', '/api/sitemap/ping', {}).catch(err => {\n        console.error('فشل إرسال إشعار تحديث sitemap:', err);\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: 'خطأ في حفظ المقال',\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // تعبئة بيانات النموذج عند تحميل التفاصيل\n  useEffect(() => {\n    if (post) {\n      form.reset({\n        title: post.title,\n        slug: post.slug,\n        excerpt: post.excerpt,\n        content: post.content,\n        categoryId: post.categoryId.toString(),\n        featuredImage: post.featuredImage || '',\n        status: post.status as 'draft' | 'published',\n        seoTitle: post.seoTitle || '',\n        seoDescription: post.seoDescription || '',\n        seoKeywords: post.seoKeywords || '',\n      });\n      \n      // تعبئة الوسوم\n      if (post.tags) {\n        if (Array.isArray(post.tags)) {\n          setTags(post.tags);\n        } else if (typeof post.tags === 'string') {\n          setTags(post.tags.split(',').map(tag => tag.trim()));\n        }\n      }\n    }\n  }, [post, form]);\n\n  // معالجة إرسال النموذج\n  const onSubmit = (data: BlogPostFormValues) => {\n    mutation.mutate(data);\n  };\n\n  // إضافة وسم جديد\n  const addTag = () => {\n    if (tagInput.trim() && !tags.includes(tagInput.trim())) {\n      setTags([...tags, tagInput.trim()]);\n      setTagInput('');\n    }\n  };\n\n  // حذف وسم\n  const removeTag = (tag: string) => {\n    setTags(tags.filter(t => t !== tag));\n  };\n\n  // ضبط الرابط المخصص (slug) تلقائيًا من العنوان\n  const generateSlug = () => {\n    const title = form.watch('title');\n    if (title) {\n      // تحويل الفراغات إلى شرطات والتأكد من أن الرابط صالح\n      // نحتفظ بالأحرف العربية والإنجليزية والأرقام والشرطات فقط\n      const slug = title\n        .replace(/\\s+/g, '-') // تحويل الفراغات إلى شرطات\n        .replace(/[^\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF\\w\\-]+/g, '') // الاحتفاظ بالأحرف العربية والإنجليزية والأرقام والشرطات فقط\n        .replace(/\\-\\-+/g, '-') // حذف الشرطات المتكررة\n        .replace(/^-+/, '') // حذف الشرطات في بداية النص\n        .replace(/-+$/, ''); // حذف الشرطات في نهاية النص\n        \n      form.setValue('slug', slug);\n    }\n  };\n\n  // حالات التحميل\n  if ((postId && loadingPost) || loadingCategories) {\n    return (\n      <div className=\"flex items-center justify-center p-6\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        <span className=\"mr-2\">جاري تحميل البيانات...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <Tabs defaultValue=\"edit\" value={activeTab} onValueChange={setActiveTab}>\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-bold\">\n            {postId ? 'تحرير مقال' : 'إنشاء مقال جديد'}\n          </h1>\n          <TabsList>\n            <TabsTrigger value=\"edit\">تحرير</TabsTrigger>\n            <TabsTrigger value=\"preview\">معاينة</TabsTrigger>\n            <TabsTrigger value=\"seo\">تحسين SEO</TabsTrigger>\n          </TabsList>\n        </div>\n\n        <TabsContent value=\"edit\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"title\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>عنوان المقال</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"أدخل عنوان المقال\"\n                          {...field}\n                          onBlur={() => {\n                            if (!postId && !form.getValues('slug')) {\n                              generateSlug();\n                            }\n                          }}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"slug\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>الرابط المخصص</FormLabel>\n                      <div className=\"flex items-center gap-2\">\n                        <FormControl>\n                          <Input \n                            placeholder=\"الرابط-المخصص-للمقال\" \n                            {...field} \n                          />\n                        </FormControl>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={generateSlug}\n                        >\n                          إنشاء\n                        </Button>\n                      </div>\n                      <FormDescription>\n                        سيظهر في الرابط: /blog/{field.value}\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"excerpt\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>ملخص المقال</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"اكتب ملخصاً قصيراً للمقال (سيظهر في صفحة قائمة المقالات)\"\n                        rows={3}\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"content\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>محتوى المقال</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"اكتب محتوى المقال الكامل هنا\"\n                        rows={15}\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      يمكنك استخدام وسوم HTML لتنسيق النص\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"categoryId\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>الفئة</FormLabel>\n                      <FormControl>\n                        <Select\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"اختر فئة المقال\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {categories?.map((category: any) => (\n                              <SelectItem\n                                key={category.id}\n                                value={category.id.toString()}\n                              >\n                                {category.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"status\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>حالة النشر</FormLabel>\n                      <FormControl>\n                        <Select\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"اختر حالة النشر\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"draft\">مسودة</SelectItem>\n                            <SelectItem value=\"published\">منشور</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"featuredImage\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>صورة المقال الرئيسية</FormLabel>\n                    <FormControl>\n                      <div className=\"flex items-start gap-2\">\n                        <Input\n                          placeholder=\"رابط صورة المقال الرئيسية\"\n                          {...field}\n                        />\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"icon\"\n                          className=\"flex-shrink-0\"\n                        >\n                          <Image className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </FormControl>\n                    {field.value && (\n                      <div className=\"mt-2 border rounded-md overflow-hidden max-w-xs\">\n                        <img\n                          src={field.value}\n                          alt=\"صورة المقال الرئيسية\"\n                          className=\"max-w-full h-auto\"\n                        />\n                      </div>\n                    )}\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div>\n                <FormLabel>الوسوم</FormLabel>\n                <div className=\"flex flex-wrap gap-2 mb-2\">\n                  {tags.map((tag) => (\n                    <Badge key={tag} variant=\"secondary\" className=\"flex gap-1 items-center\">\n                      {tag}\n                      <button\n                        type=\"button\"\n                        onClick={() => removeTag(tag)}\n                        className=\"text-xs text-muted-foreground hover:text-foreground\"\n                      >\n                        <Trash className=\"h-3 w-3\" />\n                      </button>\n                    </Badge>\n                  ))}\n                </div>\n                <div className=\"flex gap-2\">\n                  <Input\n                    value={tagInput}\n                    onChange={(e) => setTagInput(e.target.value)}\n                    placeholder=\"أضف وسمًا جديدًا\"\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault();\n                        addTag();\n                      }\n                    }}\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={addTag}\n                    className=\"flex-shrink-0\"\n                  >\n                    إضافة\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end gap-2\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => setActiveTab('preview')}\n                >\n                  <Eye className=\"h-4 w-4 ml-2\" />\n                  معاينة\n                </Button>\n                <Button\n                  type=\"submit\"\n                  disabled={mutation.isPending}\n                  className=\"gap-1\"\n                >\n                  {mutation.isPending && (\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                  )}\n                  <Save className=\"h-4 w-4 ml-2\" />\n                  حفظ المقال\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </TabsContent>\n\n        <TabsContent value=\"preview\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"prose prose-lg max-w-none border-b pb-6 mb-6\">\n                <h1 className=\"text-3xl font-bold\">{form.watch('title') || 'عنوان المقال'}</h1>\n                <div className=\"flex flex-wrap gap-2 mb-4\">\n                  {tags.length > 0 ? (\n                    tags.map((tag) => (\n                      <Badge key={tag} variant=\"secondary\">\n                        {tag}\n                      </Badge>\n                    ))\n                  ) : (\n                    <span className=\"text-muted-foreground text-sm\">لا توجد وسوم</span>\n                  )}\n                </div>\n                {form.watch('featuredImage') && (\n                  <img\n                    src={form.watch('featuredImage')}\n                    alt={form.watch('title')}\n                    className=\"w-full h-auto rounded-lg mb-6\"\n                  />\n                )}\n                <div className=\"mb-6 italic text-muted-foreground\">\n                  {form.watch('excerpt') || 'ملخص المقال سيظهر هنا'}\n                </div>\n                <div \n                  dangerouslySetInnerHTML={{ \n                    __html: form.watch('content') || '<p>محتوى المقال سيظهر هنا</p>' \n                  }}\n                />\n              </div>\n              <div className=\"flex justify-end\">\n                <Button type=\"button\" onClick={() => setActiveTab('edit')}>\n                  العودة للتحرير\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"seo\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <Form {...form}>\n                <div className=\"space-y-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"seoTitle\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>عنوان SEO</FormLabel>\n                        <FormControl>\n                          <Input\n                            placeholder=\"عنوان الصفحة لمحركات البحث (50-60 حرف)\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          {field.value?.length || 0}/60 حرف\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"seoDescription\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>وصف SEO</FormLabel>\n                        <FormControl>\n                          <Textarea\n                            placeholder=\"وصف الصفحة لمحركات البحث (120-160 حرف)\"\n                            rows={3}\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          {field.value?.length || 0}/160 حرف\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"seoKeywords\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>كلمات مفتاحية SEO</FormLabel>\n                        <FormControl>\n                          <Input\n                            placeholder=\"كلمات مفتاحية مفصولة بفواصل\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          مثال: لينكتك, مدونة تقنية, تطوير مواقع\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <Alert className=\"bg-muted/50\">\n                    <AlertDescription>\n                      معاينة ظهور المقال في نتائج بحث جوجل:\n                      <div className=\"mt-2 p-4 border rounded-md\">\n                        <div className=\"text-blue-600 text-lg font-medium\">\n                          {form.watch('seoTitle') || form.watch('title') || 'عنوان المقال'} | لينكتك\n                        </div>\n                        <div className=\"text-green-700 text-sm\">\n                          linktech.app/blog/{form.watch('slug') || 'رابط-المقال'}\n                        </div>\n                        <div className=\"text-gray-700 text-sm mt-1\">\n                          {form.watch('seoDescription') || form.watch('excerpt') || 'وصف المقال سيظهر هنا...'}\n                        </div>\n                      </div>\n                    </AlertDescription>\n                  </Alert>\n\n                  <div className=\"flex justify-end\">\n                    <Button\n                      type=\"button\"\n                      onClick={() => {\n                        form.trigger(['seoTitle', 'seoDescription', 'seoKeywords']);\n                        setActiveTab('edit');\n                      }}\n                    >\n                      تأكيد وحفظ\n                    </Button>\n                  </div>\n                </div>\n              </Form>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}","size_bytes":24089},"client/src/components/cms/CategoryManager.tsx":{"content":"import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\n\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Loader2, Plus, Pencil, Trash2, Check, X } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\n\n// تعريف مخطط التحقق من مدخلات فئة المدونة\nconst categorySchema = z.object({\n  name: z.string().min(2, { message: 'اسم الفئة يجب أن يحتوي على حرفين على الأقل' }),\n  slug: z.string().min(2, { message: 'الرابط المخصص يجب أن يحتوي على حرفين على الأقل' })\n    .regex(/^[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF\\w-]+$/, { message: 'الرابط المخصص يجب أن يحتوي فقط على أحرف عربية أو إنجليزية وأرقام وشرطات' }),\n  description: z.string().optional(),\n});\n\ntype CategoryFormValues = z.infer<typeof categorySchema>;\n\ninterface CategoryManagerProps {\n  onSuccess?: () => void;\n}\n\n/**\n * مكون إدارة فئات المدونة\n * يتيح إنشاء وتحرير وحذف فئات المدونة\n * \n * @param onSuccess دالة يتم استدعاؤها بعد الحفظ بنجاح\n */\nexport default function CategoryManager({ onSuccess }: CategoryManagerProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [editingCategoryId, setEditingCategoryId] = useState<number | null>(null);\n  const [deletingCategoryId, setDeletingCategoryId] = useState<number | null>(null);\n\n  // استعلام لجلب فئات المدونة\n  const { data: categories, isLoading: loadingCategories } = useQuery({\n    queryKey: ['/api/blog/categories'],\n  });\n\n  // إعداد نموذج البيانات\n  const form = useForm<CategoryFormValues>({\n    resolver: zodResolver(categorySchema),\n    defaultValues: {\n      name: '',\n      slug: '',\n      description: '',\n    },\n  });\n\n  // mutation لإنشاء أو تحديث الفئة\n  const mutation = useMutation({\n    mutationFn: async (data: CategoryFormValues) => {\n      const url = editingCategoryId \n        ? `/api/blog/categories/${editingCategoryId}` \n        : '/api/blog/categories';\n      const method = editingCategoryId ? 'PATCH' : 'POST';\n      \n      const res = await apiRequest(method, url, data);\n      return await res.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: editingCategoryId ? 'تم تحديث الفئة بنجاح' : 'تم إنشاء الفئة بنجاح',\n        description: editingCategoryId \n          ? 'تم تحديث بيانات الفئة في قاعدة البيانات' \n          : 'تم إضافة الفئة إلى قاعدة البيانات',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/blog/categories'] });\n      form.reset();\n      setIsDialogOpen(false);\n      setEditingCategoryId(null);\n      \n      // إرسال إشعار تحديث sitemap إلى محركات البحث\n      apiRequest('POST', '/api/sitemap/ping', {}).catch(err => {\n        console.error('فشل إرسال إشعار تحديث sitemap:', err);\n      });\n      \n      if (onSuccess) onSuccess();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: 'خطأ في حفظ الفئة',\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // mutation لحذف الفئة\n  const deleteMutation = useMutation({\n    mutationFn: async (categoryId: number) => {\n      const res = await apiRequest('DELETE', `/api/blog/categories/${categoryId}`);\n      return await res.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'تم حذف الفئة بنجاح',\n        description: 'تم حذف الفئة من قاعدة البيانات',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/blog/categories'] });\n      setDeletingCategoryId(null);\n      \n      // إرسال إشعار تحديث sitemap إلى محركات البحث\n      apiRequest('POST', '/api/sitemap/ping', {}).catch(err => {\n        console.error('فشل إرسال إشعار تحديث sitemap:', err);\n      });\n      \n      if (onSuccess) onSuccess();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: 'خطأ في حذف الفئة',\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // إعداد بيانات الفئة للتحرير\n  const editCategory = (category: any) => {\n    form.reset({\n      name: category.name,\n      slug: category.slug,\n      description: category.description || '',\n    });\n    setEditingCategoryId(category.id);\n    setIsDialogOpen(true);\n  };\n\n  // بدء عملية حذف فئة\n  const initiateDeleteCategory = (categoryId: number) => {\n    setDeletingCategoryId(categoryId);\n  };\n\n  // إرسال نموذج إنشاء/تحرير الفئة\n  const onSubmit = (data: CategoryFormValues) => {\n    mutation.mutate(data);\n  };\n\n  // ضبط الرابط المخصص (slug) تلقائيًا من الاسم\n  const generateSlug = () => {\n    const name = form.watch('name');\n    if (name) {\n      // التعامل مع الأحرف العربية وأحرف أخرى\n      const slug = name\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF\\w\\-]+/g, '')\n        .replace(/\\-\\-+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n      form.setValue('slug', slug);\n    }\n  };\n\n  if (loadingCategories) {\n    return (\n      <div className=\"flex items-center justify-center p-6\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        <span className=\"mr-2\">جاري تحميل الفئات...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle>إدارة فئات المدونة</CardTitle>\n          <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n            <DialogTrigger asChild>\n              <Button onClick={() => {\n                form.reset({\n                  name: '',\n                  slug: '',\n                  description: '',\n                });\n                setEditingCategoryId(null);\n              }}>\n                <Plus className=\"h-4 w-4 ml-2\" />\n                إضافة فئة جديدة\n              </Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogHeader>\n                <DialogTitle>\n                  {editingCategoryId ? 'تحرير فئة' : 'إضافة فئة جديدة'}\n                </DialogTitle>\n                <DialogDescription>\n                  {editingCategoryId \n                    ? 'قم بتحرير تفاصيل الفئة واضغط حفظ عند الانتهاء'\n                    : 'أدخل تفاصيل الفئة الجديدة واضغط إضافة عند الانتهاء'\n                  }\n                </DialogDescription>\n              </DialogHeader>\n              \n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>اسم الفئة</FormLabel>\n                        <FormControl>\n                          <Input\n                            placeholder=\"اسم الفئة\"\n                            {...field}\n                            onBlur={() => {\n                              if (!editingCategoryId && !form.getValues('slug')) {\n                                generateSlug();\n                              }\n                            }}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"slug\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>الرابط المخصص</FormLabel>\n                        <div className=\"flex items-center gap-2\">\n                          <FormControl>\n                            <Input \n                              placeholder=\"الرابط-المخصص\" \n                              {...field} \n                            />\n                          </FormControl>\n                          <Button\n                            type=\"button\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={generateSlug}\n                          >\n                            إنشاء\n                          </Button>\n                        </div>\n                        <FormDescription>\n                          سيظهر في الرابط: /blog/category/{field.value}\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"description\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>وصف الفئة</FormLabel>\n                        <FormControl>\n                          <Textarea\n                            placeholder=\"وصف الفئة (اختياري)\"\n                            rows={3}\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <DialogFooter>\n                    <Button\n                      type=\"submit\"\n                      disabled={mutation.isPending}\n                      className=\"gap-1\"\n                    >\n                      {mutation.isPending && (\n                        <Loader2 className=\"h-4 w-4 animate-spin\" />\n                      )}\n                      {editingCategoryId ? 'حفظ التغييرات' : 'إضافة الفئة'}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </Form>\n            </DialogContent>\n          </Dialog>\n        </CardHeader>\n        <CardContent>\n          {categories?.length === 0 ? (\n            <div className=\"text-center py-6 text-muted-foreground\">\n              لا توجد فئات بعد. قم بإضافة فئة جديدة لبدء تنظيم المدونة.\n            </div>\n          ) : (\n            <div className=\"border rounded-md\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>الاسم</TableHead>\n                    <TableHead>الرابط المخصص</TableHead>\n                    <TableHead>عدد المقالات</TableHead>\n                    <TableHead className=\"text-left\">إجراءات</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {categories?.map((category: any) => (\n                    <TableRow key={category.id}>\n                      <TableCell className=\"font-medium\">{category.name}</TableCell>\n                      <TableCell>/blog/category/{category.slug}</TableCell>\n                      <TableCell>{category.postsCount || 0}</TableCell>\n                      <TableCell className=\"flex items-center gap-2\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => editCategory(category)}\n                        >\n                          <Pencil className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">تحرير</span>\n                        </Button>\n                        <AlertDialog>\n                          <AlertDialogTrigger asChild>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"text-red-500 hover:text-red-600 hover:bg-red-50\"\n                              onClick={() => initiateDeleteCategory(category.id)}\n                            >\n                              <Trash2 className=\"h-4 w-4\" />\n                              <span className=\"sr-only\">حذف</span>\n                            </Button>\n                          </AlertDialogTrigger>\n                          <AlertDialogContent>\n                            <AlertDialogHeader>\n                              <AlertDialogTitle>هل أنت متأكد من حذف هذه الفئة؟</AlertDialogTitle>\n                              <AlertDialogDescription>\n                                سيتم حذف الفئة \"{category.name}\" نهائيًا. هذا الإجراء لا يمكن التراجع عنه.\n                                {category.postsCount > 0 && (\n                                  <div className=\"mt-2 text-red-500 font-semibold\">\n                                    تحذير: هذه الفئة تحتوي على {category.postsCount} مقال/مقالات. حذف الفئة قد يؤثر على تصنيف هذه المقالات.\n                                  </div>\n                                )}\n                              </AlertDialogDescription>\n                            </AlertDialogHeader>\n                            <AlertDialogFooter>\n                              <AlertDialogCancel>إلغاء</AlertDialogCancel>\n                              <AlertDialogAction\n                                className=\"bg-red-600 hover:bg-red-700 text-white\"\n                                onClick={() => deleteMutation.mutate(category.id)}\n                              >\n                                {deleteMutation.isPending && deletingCategoryId === category.id ? (\n                                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                                ) : (\n                                  'نعم، أريد الحذف'\n                                )}\n                              </AlertDialogAction>\n                            </AlertDialogFooter>\n                          </AlertDialogContent>\n                        </AlertDialog>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":15869},"client/src/components/companies/CompanyCard.tsx":{"content":"import { Link } from \"wouter\";\nimport { Star, MessageSquare } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { truncateText } from \"@/lib/utils\";\nimport { LazyImage } from \"@/components/ui/lazy-image\";\n\ntype CompanyProps = {\n  company: {\n    id: number;\n    userId: number;\n    description: string;\n    logo?: string;\n    coverPhoto?: string;\n    website?: string;\n    location?: string;\n    skills: string[];\n    rating?: number;\n    reviewCount?: number;\n    name?: string;\n    username?: string;\n  };\n};\n\nconst CompanyCard = ({ company }: CompanyProps) => {\n  const renderStars = (rating?: number) => {\n    if (!rating) return null;\n    \n    const stars = [];\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n    \n    for (let i = 0; i < fullStars; i++) {\n      stars.push(<Star key={`full-${i}`} className=\"fill-amber-500 text-amber-500 h-4 w-4\" />);\n    }\n    \n    if (hasHalfStar) {\n      stars.push(\n        <svg key=\"half\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-amber-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <defs>\n            <linearGradient id=\"halfFill\">\n              <stop offset=\"50%\" stopColor=\"#F59E0B\" />\n              <stop offset=\"50%\" stopColor=\"transparent\" />\n            </linearGradient>\n          </defs>\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" fill=\"url(#halfFill)\" stroke=\"currentColor\" />\n        </svg>\n      );\n    }\n    \n    const remainingStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    for (let i = 0; i < remainingStars; i++) {\n      stars.push(<Star key={`empty-${i}`} className=\"text-amber-500 h-4 w-4\" />);\n    }\n    \n    return stars;\n  };\n\n  const getCoverGradient = (id: number) => {\n    const colors = [\n      \"from-blue-400 to-blue-600\",\n      \"from-purple-400 to-purple-600\",\n      \"from-green-400 to-green-600\",\n      \"from-red-400 to-red-600\",\n      \"from-indigo-400 to-indigo-600\"\n    ];\n    \n    return `bg-gradient-to-r ${colors[(id || 1) % colors.length]}`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden hover-card-lift transform transition-all duration-300 hover:shadow-md\">\n      <div className=\"relative\">\n        <div className={`h-24 sm:h-28 md:h-32 ${company.coverPhoto ? '' : getCoverGradient(company.id)} overflow-hidden`}>\n          {company.coverPhoto ? (\n            <LazyImage \n              src={company.coverPhoto} \n              alt={company.name || 'صورة غلاف الشركة'} \n              className=\"w-full h-full object-cover transition-transform duration-700 hover:scale-110\"\n              loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full\"\n            />\n          ) : (\n            <div className=\"absolute inset-0 bg-gradient-to-b from-black/20 to-transparent z-10\"></div>\n          )}\n        </div>\n        <div className=\"absolute -bottom-12 sm:-bottom-14 right-4 sm:right-6 z-10\">\n          <div className=\"w-20 h-20 sm:w-24 sm:h-24 rounded-lg bg-white shadow-md flex items-center justify-center overflow-hidden p-1 transition-all duration-300 hover:shadow-lg hover:scale-105\">\n            {company.logo ? (\n              <LazyImage \n                src={company.logo} \n                alt={company.name || 'شعار الشركة'} \n                className=\"w-full h-full object-cover rounded hover:scale-105 transition-transform duration-300\"\n                loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full rounded\"\n              />\n            ) : (\n              <div className={`w-full h-full flex items-center justify-center rounded ${getCoverGradient(company.id)} text-white text-xl sm:text-2xl font-bold transition-all duration-300 hover:opacity-90`}>\n                {company.name?.charAt(0) || ''}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"p-3 sm:p-4 md:p-6 pt-14 sm:pt-20\">\n        <h3 className=\"font-heading font-semibold text-base sm:text-lg md:text-xl mb-1 sm:mb-2 transition-colors duration-300 hover:text-primary bg-gradient-to-r from-primary to-primary bg-[length:0%_2px] bg-no-repeat bg-bottom group-hover:bg-[length:100%_2px] line-clamp-1 relative\">{company.name}</h3>\n        <div className=\"flex items-center text-xs sm:text-sm text-amber-500 mb-2 sm:mb-3 group\">\n          <div className=\"flex transition-transform duration-300 group-hover:scale-110\">\n            {renderStars(company.rating)}\n          </div>\n          <span className=\"text-neutral-600 mr-2 text-xs\">\n            ({company.rating || 0}) - {company.reviewCount || 0} مراجعة\n          </span>\n        </div>\n        <p className=\"text-neutral-600 text-xs sm:text-sm md:text-base mb-3 sm:mb-4 line-clamp-3\">{truncateText(company.description, window.innerWidth < 640 ? 80 : 120)}</p>\n        <div className=\"flex flex-wrap gap-1 sm:gap-2 mb-3 sm:mb-4\">\n          {(company.skills || []).slice(0, window.innerWidth < 640 ? 2 : 3).map((skill, index) => (\n            <Badge \n              key={index} \n              variant=\"outline\" \n              className=\"bg-neutral-100 text-neutral-700 text-[10px] sm:text-xs font-medium px-1.5 sm:px-2.5 py-0.5 sm:py-1 rounded badge-pulse transition-all duration-300 hover:bg-neutral-200\"\n            >\n              {skill}\n            </Badge>\n          ))}\n          {(company.skills || []).length > (window.innerWidth < 640 ? 2 : 3) && (\n            <Badge \n              variant=\"outline\" \n              className=\"bg-neutral-100 text-neutral-700 text-[10px] sm:text-xs font-medium px-1.5 sm:px-2.5 py-0.5 sm:py-1 rounded badge-pulse transition-all duration-300 hover:bg-neutral-200\"\n            >\n              +{(company.skills || []).length - (window.innerWidth < 640 ? 2 : 3)}\n            </Badge>\n          )}\n        </div>\n      </div>\n      <div className=\"bg-neutral-50 px-3 sm:px-4 md:px-6 py-2 sm:py-3 border-t border-neutral-200 flex justify-between items-center\">\n        <Link \n          href={`/companies/${company.id}`} \n          className=\"text-primary hover:text-primary-dark text-sm sm:text-base font-medium link-underline relative overflow-hidden after:absolute after:bottom-0 after:right-0 after:h-[2px] after:w-full after:origin-bottom-right after:scale-x-0 after:bg-primary-dark after:transition-transform after:duration-300 hover:after:origin-bottom-left hover:after:scale-x-100\"\n        >\n          عرض الملف\n        </Link>\n        <Link \n          href={`/messages?userId=${company.userId}`} \n          className=\"text-neutral-600 hover:text-primary p-1.5 sm:p-2 rounded-full transition-all duration-200 hover:bg-neutral-200 hover:shadow-sm\"\n        >\n          <MessageSquare className=\"h-4 w-4 sm:h-5 sm:w-5 rtl-flip transition-transform duration-200 hover:scale-110\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyCard;\n","size_bytes":7183},"client/src/components/home/AIAssistantSection.tsx":{"content":"import React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Brain, \n  Zap, \n  Target, \n  TrendingUp, \n  FileText, \n  Calculator,\n  Clock,\n  Shield,\n  ArrowLeft,\n  Sparkles\n} from 'lucide-react';\nimport { Link } from 'wouter';\n\ninterface AIAssistantSectionProps {\n  auth: {\n    isAuthenticated: boolean;\n    isEntrepreneur: boolean;\n    isCompany: boolean;\n  };\n}\n\nconst AIAssistantSection: React.FC<AIAssistantSectionProps> = ({ auth }) => {\n  const features = [\n    {\n      icon: <Brain className=\"h-6 w-6 text-blue-500\" />,\n      title: \"تحليل ذكي للمشاريع\",\n      description: \"يحلل المساعد الذكي فكرة مشروعك ويقدم تحليلاً تقنياً مفصلاً مع التوصيات المناسبة\"\n    },\n    {\n      icon: <Calculator className=\"h-6 w-6 text-green-500\" />,\n      title: \"تقدير التكلفة الدقيق\",\n      description: \"حساب تكلفة المشروع بناءً على التعقيد التقني والمتطلبات والوقت المتوقع للتنفيذ\"\n    },\n    {\n      icon: <Target className=\"h-6 w-6 text-purple-500\" />,\n      title: \"اختيار التقنيات المناسبة\",\n      description: \"توصيات ذكية لأفضل التقنيات والأدوات المناسبة لنوع مشروعك وأهدافك\"\n    },\n    {\n      icon: <Clock className=\"h-6 w-6 text-orange-500\" />,\n      title: \"جدولة زمنية واقعية\",\n      description: \"تقدير دقيق للوقت المطلوب مع تقسيم المشروع إلى مراحل قابلة للتنفيذ\"\n    },\n    {\n      icon: <Shield className=\"h-6 w-6 text-red-500\" />,\n      title: \"تقييم المخاطر\",\n      description: \"تحديد المخاطر التقنية والزمنية المحتملة مع استراتيجيات التخفيف منها\"\n    },\n    {\n      icon: <TrendingUp className=\"h-6 w-6 text-indigo-500\" />,\n      title: \"تحليل المنافسين\",\n      description: \"دراسة السوق والحلول المشابهة مع تحديد فرص التميز والابتكار\"\n    }\n  ];\n\n  const benefits = [\n    \"توفير الوقت في مرحلة التخطيط\",\n    \"تجنب الأخطاء التقنية المكلفة\",\n    \"فهم أفضل لمتطلبات المشروع\",\n    \"تحديد الميزانية بدقة\",\n    \"اختيار الشركة المناسبة\"\n  ];\n\n  return (\n    <section className=\"py-16 bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 relative overflow-hidden\">\n      {/* Background decoration */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"absolute top-10 right-10 w-32 h-32 bg-blue-400 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-10 left-10 w-40 h-40 bg-purple-400 rounded-full blur-3xl\"></div>\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-60 h-60 bg-indigo-400 rounded-full blur-3xl\"></div>\n      </div>\n\n      <div className=\"container mx-auto px-4 relative\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"flex items-center justify-center gap-2 mb-4\">\n            <Sparkles className=\"h-8 w-8 text-blue-500\" />\n            <Badge variant=\"secondary\" className=\"text-lg px-4 py-2\">\n              جديد\n            </Badge>\n          </div>\n          <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">\n            مساعد الذكاء الاصطناعي\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n            احصل على تحليل ذكي ومفصل لفكرة مشروعك مع توصيات تقنية دقيقة وتقدير واقعي للتكلفة والوقت\n          </p>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-16\">\n          {/* Left Column - Features */}\n          <div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-8\">\n              كيف يساعدك المساعد الذكي؟\n            </h3>\n            <div className=\"space-y-6\">\n              {features.map((feature, index) => (\n                <div key={index} className=\"flex gap-4 p-4 bg-white/80 backdrop-blur-sm rounded-xl shadow-sm hover:shadow-md transition-all duration-300\">\n                  <div className=\"flex-shrink-0 w-12 h-12 bg-gray-50 rounded-lg flex items-center justify-center\">\n                    {feature.icon}\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-gray-900 mb-2\">{feature.title}</h4>\n                    <p className=\"text-gray-600 text-sm leading-relaxed\">{feature.description}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Right Column - Benefits & CTA */}\n          <div>\n            <Card className=\"bg-white/90 backdrop-blur-sm border-0 shadow-xl\">\n              <CardHeader className=\"text-center pb-6\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Brain className=\"h-8 w-8 text-white\" />\n                </div>\n                <CardTitle className=\"text-2xl font-bold text-gray-900\">\n                  ابدأ مع المساعد الذكي\n                </CardTitle>\n                <CardDescription className=\"text-gray-600\">\n                  احصل على تحليل شامل لمشروعك في دقائق معدودة\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-4\">ما ستحصل عليه:</h4>\n                  <ul className=\"space-y-3\">\n                    {benefits.map((benefit, index) => (\n                      <li key={index} className=\"flex items-center gap-3\">\n                        <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                        <span className=\"text-gray-700\">{benefit}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                {auth.isAuthenticated && auth.isEntrepreneur ? (\n                  <Link href=\"/ai-assistant\">\n                    <Button size=\"lg\" className=\"w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white\">\n                      <Zap className=\"h-5 w-5 ml-2\" />\n                      جرب المساعد الذكي مجاناً\n                    </Button>\n                  </Link>\n                ) : (\n                  <div className=\"space-y-3\">\n                    <Link href=\"/auth/register\">\n                      <Button size=\"lg\" className=\"w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white\">\n                        سجل كرائد أعمال\n                        <ArrowLeft className=\"h-5 w-5 mr-2\" />\n                      </Button>\n                    </Link>\n                    <p className=\"text-center text-sm text-gray-500\">\n                      المساعد الذكي متاح لرواد الأعمال المسجلين\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Process Steps */}\n        <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl p-8 shadow-lg\">\n          <h3 className=\"text-2xl font-bold text-center text-gray-900 mb-8\">\n            كيف يعمل المساعد الذكي؟\n          </h3>\n          <div className=\"grid md:grid-cols-4 gap-6\">\n            {[\n              { step: \"1\", title: \"اكتب فكرة مشروعك\", desc: \"صف مشروعك بكلماتك الخاصة\" },\n              { step: \"2\", title: \"حدد المتطلبات\", desc: \"اختر حجم العمل والميزانية والوقت\" },\n              { step: \"3\", title: \"تحليل ذكي\", desc: \"يحلل المساعد مشروعك بالذكاء الاصطناعي\" },\n              { step: \"4\", title: \"احصل على التقرير\", desc: \"تقرير مفصل مع التوصيات والتكلفة\" }\n            ].map((item, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 text-white rounded-full flex items-center justify-center font-bold text-lg mx-auto mb-4\">\n                  {item.step}\n                </div>\n                <h4 className=\"font-semibold text-gray-900 mb-2\">{item.title}</h4>\n                <p className=\"text-gray-600 text-sm\">{item.desc}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default AIAssistantSection;","size_bytes":9129},"client/src/components/home/CTASection.tsx":{"content":"import { Link } from \"wouter\";\n\ntype CTASectionProps = {\n  auth: {\n    isAuthenticated: boolean;\n  };\n};\n\nconst CTASection = ({ auth }: CTASectionProps) => {\n  return (\n    <section className=\"py-16 bg-blue-600 text-white relative overflow-hidden\">\n      {/* الخلفية المتدرجة */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-blue-600 via-blue-700 to-blue-600 opacity-95\"></div>\n      \n      {/* أشكال زخرفية متحركة في الخلفية */}\n      <div className=\"absolute top-0 left-0 w-64 h-64 rounded-full bg-amber-500/15 blur-3xl animate-blob\"></div>\n      <div className=\"absolute bottom-0 right-0 w-80 h-80 rounded-full bg-amber-400/10 blur-3xl animate-blob animation-delay-2000\"></div>\n      <div className=\"absolute top-1/3 right-1/4 w-40 h-40 rounded-full bg-amber-300/15 blur-3xl animate-blob animation-delay-4000\"></div>\n      \n      {/* خطوط زخرفية */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute top-12 left-0 w-full h-[1px] bg-gradient-to-r from-transparent via-amber-500/40 to-transparent\"></div>\n        <div className=\"absolute bottom-12 left-0 w-full h-[1px] bg-gradient-to-r from-transparent via-amber-400/30 to-transparent\"></div>\n      </div>\n      \n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <div className=\"max-w-3xl mx-auto text-center\">\n          <h2 className=\"font-heading text-3xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-amber-300 via-amber-200 to-amber-400 text-transparent bg-clip-text\">\n            ابدأ رحلتك التقنية اليوم\n          </h2>\n          <p className=\"text-blue-100 text-lg md:text-xl mb-8 font-medium max-w-xl mx-auto\">\n            سواء كنت رائد أعمال تبحث عن تنفيذ فكرتك أو شركة برمجة تبحث عن عملاء جدد، انضم إلينا الآن وكن جزءاً من منصتنا.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4 sm:space-x-reverse\">\n            <Link \n              href={auth.isAuthenticated ? \"/projects\" : \"/auth/register\"} \n              className=\"bg-amber-500 text-slate-950 hover:bg-amber-400 font-bold rounded-lg px-8 py-4 text-center transition-all duration-300 hover:shadow-xl shadow-amber-500/20 hover:-translate-y-1 text-lg\"\n            >\n              {auth.isAuthenticated ? \"استكشف المشاريع\" : \"أنشئ حسابك مجاناً\"}\n            </Link>\n            <Link \n              href=\"/how-it-works\" \n              className=\"bg-transparent text-amber-400 hover:text-amber-300 font-bold rounded-lg px-8 py-4 text-center border border-amber-500/30 transition-all duration-300 hover:border-amber-400/50 hover:shadow-lg shadow-amber-500/10 hover:-translate-y-1 text-lg\"\n            >\n              تعرف على كيفية عمل المنصة\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CTASection;\n","size_bytes":3044},"client/src/components/home/FeaturedClients.tsx":{"content":"import React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { motion } from 'framer-motion';\n\ninterface FeaturedClient {\n  id: number;\n  name: string;\n  logo: string;\n  website?: string;\n  description?: string;\n  category?: string;\n  order: number;\n  active: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nconst FeaturedClients = () => {\n  const { data: clients, isLoading, error } = useQuery<FeaturedClient[]>({\n    queryKey: ['/api/featured-clients'],\n    refetchOnWindowFocus: false,\n    staleTime: 300000, // 5 minutes\n  });\n\n  if (isLoading) {\n    return (\n      <section className=\"py-16 bg-gradient-to-br from-blue-50 to-indigo-50\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <div className=\"h-8 bg-gray-200 rounded-lg w-64 mx-auto mb-4 animate-pulse\"></div>\n            <div className=\"h-6 bg-gray-200 rounded-lg w-96 mx-auto animate-pulse\"></div>\n          </div>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-8\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"bg-white p-6 rounded-xl shadow-sm animate-pulse\">\n                <div className=\"h-16 bg-gray-200 rounded-lg\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (error || !clients || clients.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"py-16 bg-gradient-to-br from-blue-50 to-indigo-50\">\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-12\"\n        >\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n            عملاء نفخر بهم\n          </h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            يثق بنا أبرز العملاء في المملكة العربية السعودية لتنفيذ مشاريعهم التقنية المتطورة\n          </p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-6\">\n          {clients.map((client, index) => (\n            <motion.div\n              key={client.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              className=\"group\"\n            >\n              <div className=\"bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1 border border-gray-100\">\n                <div className=\"flex items-center justify-center h-16 mb-4\">\n                  {client.logo ? (\n                    <img\n                      src={client.logo}\n                      alt={client.name}\n                      className=\"max-h-full max-w-full object-contain filter grayscale hover:grayscale-0 transition-all duration-300\"\n                      loading=\"lazy\"\n                    />\n                  ) : (\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold text-lg\">\n                      {client.name.charAt(0)}\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-center\">\n                  <h3 className=\"font-semibold text-gray-900 text-sm mb-1\">\n                    {client.name}\n                  </h3>\n                  {client.description && (\n                    <p className=\"text-xs text-gray-500 line-clamp-2\">\n                      {client.description}\n                    </p>\n                  )}\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.8 }}\n          className=\"text-center mt-12\"\n        >\n          <p className=\"text-gray-600 text-sm\">\n            انضم إلى مئات العملاء الذين يثقون بخدماتنا المتميزة\n          </p>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default FeaturedClients;","size_bytes":4364},"client/src/components/home/FeaturedProjects.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport ProjectCard from \"@/components/projects/ProjectCard\";\nimport { ArrowRight } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  name?: string;\n};\n\nconst ProjectSkeleton = () => (\n  <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n    <div className=\"p-6\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <Skeleton className=\"h-6 w-2/3\" />\n        <Skeleton className=\"h-6 w-1/6 rounded-full\" />\n      </div>\n      <Skeleton className=\"h-16 w-full mb-4\" />\n      <div className=\"flex flex-wrap gap-2 mb-4\">\n        <Skeleton className=\"h-6 w-20 rounded\" />\n        <Skeleton className=\"h-6 w-16 rounded\" />\n        <Skeleton className=\"h-6 w-24 rounded\" />\n      </div>\n      <div className=\"flex justify-between items-center text-sm border-t border-neutral-200 pt-4\">\n        <Skeleton className=\"h-5 w-1/3\" />\n        <Skeleton className=\"h-5 w-1/4\" />\n      </div>\n    </div>\n    <div className=\"bg-neutral-50 px-6 py-3 border-t border-neutral-200\">\n      <Skeleton className=\"h-5 w-28\" />\n    </div>\n  </div>\n);\n\nconst SimplifiedProjectCard = ({ project }: { project: Project }) => {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden hover-card-lift\">\n      <div className=\"p-5\">\n        <div className=\"flex justify-between items-start mb-4\">\n          <h3 className=\"font-heading font-semibold text-lg text-neutral-800\">{project.title}</h3>\n          {project.highlightStatus && (\n            <span className={`text-xs font-medium px-2 py-0.5 rounded-full ${\n              project.highlightStatus === \"عالي الطلب\" \n                ? \"bg-accent-light text-accent-dark\" \n                : \"bg-neutral-100 text-neutral-700\"\n            }`}>\n              {project.highlightStatus}\n            </span>\n          )}\n        </div>\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {(project.skills || []).slice(0, 4).map((skill, index) => (\n            <span key={index} className=\"bg-neutral-100 text-neutral-700 text-xs px-2.5 py-1 rounded\">\n              {skill}\n            </span>\n          ))}\n        </div>\n        <div className=\"mt-4 text-center\">\n          <Link href=\"/auth/register\" className=\"w-full inline-block bg-primary hover:bg-primary-dark text-white font-medium rounded-lg px-6 py-2.5 transition-colors\">\n            اطلب مشروع مماثل\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst FeaturedProjects = () => {\n  const { data: projects, isLoading, error } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  // Show only the latest 3 projects\n  const latestProjects = projects?.slice(0, 3);\n\n  return (\n    <section className=\"py-16 bg-neutral-50\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-10\">\n          <div>\n            <h2 className=\"font-heading text-3xl font-bold text-neutral-800\">مشاريع مطلوبة</h2>\n            <p className=\"mt-2 text-lg text-neutral-600\">فرص مشاريع تقنية يمكنك تقديم عروض مماثلة عليها</p>\n          </div>\n          <Link href=\"/auth/register\" className=\"mt-4 md:mt-0 text-primary font-medium hover:text-primary-dark flex items-center\">\n            إنشاء حساب لرؤية جميع المشاريع\n            <ArrowRight className=\"mr-2 h-4 w-4 rtl-flip\" />\n          </Link>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {isLoading ? (\n            <>\n              <ProjectSkeleton />\n              <ProjectSkeleton />\n              <ProjectSkeleton />\n            </>\n          ) : error ? (\n            <div className=\"col-span-3 text-center py-8\">\n              <p className=\"text-neutral-600\">حدث خطأ أثناء تحميل المشاريع. حاول مرة أخرى لاحقاً.</p>\n            </div>\n          ) : latestProjects && latestProjects.length > 0 ? (\n            latestProjects.map((project) => (\n              <SimplifiedProjectCard key={project.id} project={project} />\n            ))\n          ) : (\n            <div className=\"col-span-3 text-center py-8\">\n              <p className=\"text-neutral-600\">لا توجد مشاريع متاحة حالياً.</p>\n              <Link href=\"/auth/register\" className=\"mt-4 inline-block bg-primary hover:bg-primary-dark text-white font-medium rounded-lg px-6 py-2 transition-colors\">\n                إنشاء حساب لإضافة مشروع\n              </Link>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FeaturedProjects;\n","size_bytes":5024},"client/src/components/home/HeroSection.tsx":{"content":"import { Link } from \"wouter\";\nimport { useEffect, useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Clock, Users, CheckCircle, TrendingUp, Star, Zap, Shield, Award } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\n// تعريف نوع الإحصائيات\ninterface PlatformStats {\n  companiesCount: number;\n  offersCount: number;\n  responseTimeMinutes: number;\n  completedProjectsCount: number;\n}\n\ntype HeroSectionProps = {\n  auth: {\n    isAuthenticated: boolean;\n    isCompany: boolean;\n    isEntrepreneur: boolean;\n  };\n};\n\nconst HeroSection = ({ auth }: HeroSectionProps) => {\n  const [headerImageUrl, setHeaderImageUrl] = useState<string | null>(null);\n  const [sideImageUrl, setSideImageUrl] = useState<string | null>(null);\n  \n  // استعلام لجلب إعدادات صورة خلفية الهيدر\n  const { data: headerImageSetting } = useQuery({\n    queryKey: [\"/api/site-settings/header_image\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/site-settings/header_image\");\n      if (!response.ok) {\n        return null;\n      }\n      return response.json();\n    },\n  });\n  \n  // استعلام لجلب إعدادات صورة الجانب\n  const { data: sideImageSetting } = useQuery({\n    queryKey: [\"/api/site-settings/side_image\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/site-settings/side_image\");\n      if (!response.ok) {\n        return null;\n      }\n      return response.json();\n    },\n  });\n  \n  // استعلام لجلب إحصائيات المنصة (عدد الشركات الموثقة ووقت الاستجابة)\n  const { data: platformStats, isLoading: statsLoading } = useQuery<PlatformStats>({\n    queryKey: [\"/api/platform-stats\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/platform-stats\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch platform stats\");\n      }\n      return response.json();\n    },\n  });\n  \n  // استخراج روابط الصور عند تحميل البيانات\n  useEffect(() => {\n    if (headerImageSetting?.value) {\n      setHeaderImageUrl(headerImageSetting.value);\n    }\n    \n    if (sideImageSetting?.value) {\n      setSideImageUrl(sideImageSetting.value);\n    }\n  }, [headerImageSetting, sideImageSetting]);\n  \n  const getEntrepreneurLink = () => {\n    if (auth.isAuthenticated && auth.isEntrepreneur) {\n      return \"/dashboard/entrepreneur\";\n    }\n    return auth.isAuthenticated ? \"/auth/register\" : \"/auth/register\";\n  };\n  \n  const getCompanyLink = () => {\n    if (auth.isAuthenticated && auth.isCompany) {\n      return \"/dashboard/company\";\n    }\n    return auth.isAuthenticated ? \"/auth/register\" : \"/auth/register\";\n  };\n  \n  return (\n    <section \n      className=\"relative min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 overflow-hidden\"\n      style={headerImageUrl ? {\n        backgroundImage: `url(${headerImageUrl})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      } : {}}\n    >\n      {/* Animated Background Elements */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-20 left-4 md:left-10 w-48 h-48 md:w-72 md:h-72 bg-blue-500/20 rounded-full blur-3xl animate-pulse\"></div>\n        <div className=\"absolute bottom-20 right-4 md:right-10 w-64 h-64 md:w-96 md:h-96 bg-purple-500/20 rounded-full blur-3xl animate-pulse\" style={{ animationDelay: '1s' }}></div>\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-60 h-60 md:w-80 md:h-80 bg-amber-500/10 rounded-full blur-3xl animate-pulse\" style={{ animationDelay: '2s' }}></div>\n      </div>\n      {/* Gradient Overlay */}\n      <div className=\"absolute inset-0 bg-gradient-to-r from-black/40 via-transparent to-black/40\"></div>\n      {/* Floating Elements */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <motion.div \n          className=\"absolute top-20 right-20 text-blue-300/30\"\n          animate={{ y: [0, -20, 0], rotate: [0, 5, 0] }}\n          transition={{ duration: 4, repeat: Infinity }}\n        >\n          <Zap size={40} />\n        </motion.div>\n        <motion.div \n          className=\"absolute bottom-32 left-16 text-purple-300/30\"\n          animate={{ y: [0, 15, 0], rotate: [0, -5, 0] }}\n          transition={{ duration: 3, repeat: Infinity, delay: 1 }}\n        >\n          <Shield size={50} />\n        </motion.div>\n        <motion.div \n          className=\"absolute top-1/3 left-20 text-amber-300/30\"\n          animate={{ y: [0, -25, 0], rotate: [0, 10, 0] }}\n          transition={{ duration: 5, repeat: Infinity, delay: 2 }}\n        >\n          <Award size={35} />\n        </motion.div>\n      </div>\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 relative z-10 flex items-center min-h-screen py-8 md:py-12\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 md:gap-12 lg:gap-16 items-center w-full\">\n          {/* Content Section */}\n          <motion.div \n            className=\"order-2 lg:order-1 text-center lg:text-right space-y-4 md:space-y-6\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            {/* Badge */}\n            <motion.div \n              className=\"inline-flex items-center px-4 py-2 rounded-full bg-gradient-to-r from-amber-500/20 to-orange-500/20 border border-amber-500/30 mb-6\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n            >\n              <Star className=\"ml-2 h-4 w-4 text-amber-400\" />\n              <span className=\"text-amber-300 font-medium text-sm\">المنصة الأولى في المملكة</span>\n            </motion.div>\n\n            {/* Main Heading */}\n            <motion.h1 \n              className=\"font-heading text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold leading-tight\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.3 }}\n            >\n              <span className=\"text-white drop-shadow-2xl\">ربط رواد الأعمال</span>\n              <br />\n              <span className=\"bg-gradient-to-r from-amber-400 via-orange-400 to-red-400 bg-clip-text text-transparent\">\n                بشركات البرمجة\n              </span>\n              <br />\n              <span className=\"text-white drop-shadow-2xl\">الموثوقة</span>\n            </motion.h1>\n\n            {/* Subtitle */}\n            <motion.p \n              className=\"text-lg md:text-xl lg:text-2xl text-blue-100 leading-relaxed max-w-2xl mx-auto lg:mx-0\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.5 }}\n            >\n              منصة رسمية معتمدة تضمن لك إيجاد الشريك التقني المثالي لتحويل أفكارك إلى مشاريع ناجحة\n              <span className=\"text-amber-300 font-semibold\"> بأعلى معايير الجودة والاحترافية</span>\n            </motion.p>\n\n            {/* Quick Promise */}\n            <motion.div \n              className=\"bg-gradient-to-r from-emerald-500/20 to-blue-500/20 backdrop-blur-xl p-4 md:p-6 rounded-2xl border border-emerald-400/30 shadow-2xl\"\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.6, delay: 0.7 }}\n            >\n              <div className=\"flex items-center justify-center mb-4\">\n                <motion.div\n                  className=\"flex items-center text-emerald-300 font-bold text-lg md:text-xl\"\n                  animate={{ scale: [1, 1.05, 1] }}\n                  transition={{ duration: 2, repeat: Infinity }}\n                >\n                  <Zap className=\"ml-2 md:ml-3 h-5 w-5 md:h-7 md:w-7\" />\n                  استجابة فورية خلال 30 دقيقة!\n                </motion.div>\n              </div>\n              \n              {/* Stats Grid */}\n              <div className=\"grid grid-cols-2 gap-3 md:gap-6\">\n                <motion.div \n                  className=\"bg-white/10 backdrop-blur-sm p-3 md:p-6 rounded-xl text-center border border-white/20\"\n                  whileHover={{ scale: 1.05, y: -5 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <Users className=\"h-6 w-6 md:h-8 md:w-8 text-blue-300\" />\n                  </div>\n                  <div className=\"font-bold text-2xl md:text-4xl text-white mb-1\">\n                    {statsLoading ? \"...\" : platformStats?.companiesCount || 0}+\n                  </div>\n                  <div className=\"text-blue-200 font-medium text-xs md:text-sm\">شركة متخصصة</div>\n                </motion.div>\n                \n                <motion.div \n                  className=\"bg-white/10 backdrop-blur-sm p-3 md:p-6 rounded-xl text-center border border-white/20\"\n                  whileHover={{ scale: 1.05, y: -5 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <TrendingUp className=\"h-6 w-6 md:h-8 md:w-8 text-green-300\" />\n                  </div>\n                  <div className=\"font-bold text-2xl md:text-4xl text-white mb-1\">\n                    {statsLoading ? \"...\" : platformStats?.offersCount || 0}+\n                  </div>\n                  <div className=\"text-green-200 font-medium text-xs md:text-sm\">عرض مقدم</div>\n                </motion.div>\n              </div>\n            </motion.div>\n\n            {/* CTA Buttons */}\n            <motion.div \n              className=\"flex flex-col sm:flex-row gap-4 sm:gap-6 justify-center lg:justify-start\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.9 }}\n            >\n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                <Link \n                  href={getEntrepreneurLink()} \n                  className=\"group relative bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-400 hover:to-orange-400 text-white font-bold rounded-2xl px-6 md:px-8 py-3 md:py-4 text-base md:text-lg text-center transition-all duration-300 shadow-2xl hover:shadow-amber-500/25 overflow-hidden inline-flex items-center justify-center w-full sm:w-auto\"\n                >\n                  <span className=\"relative z-10 flex items-center justify-center\">\n                    <Users className=\"ml-2 h-4 w-4 md:h-5 md:w-5\" />\n                    أنا رائد أعمال\n                  </span>\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                </Link>\n              </motion.div>\n              \n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                <Link \n                  href={getCompanyLink()} \n                  className=\"group relative bg-white/10 backdrop-blur-sm text-white hover:bg-white/20 font-bold rounded-2xl px-6 md:px-8 py-3 md:py-4 text-base md:text-lg text-center transition-all duration-300 border border-white/30 hover:border-white/50 shadow-2xl overflow-hidden inline-flex items-center justify-center w-full sm:w-auto\"\n                >\n                  <span className=\"relative z-10 flex items-center justify-center\">\n                    <Shield className=\"ml-2 h-4 w-4 md:h-5 md:w-5\" />\n                    أنا شركة برمجة\n                  </span>\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                </Link>\n              </motion.div>\n            </motion.div>\n          </motion.div>\n\n          {/* Visual Section */}\n          <motion.div \n            className=\"order-1 lg:order-2 flex justify-center items-center\"\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n          >\n            <div className=\"relative w-full max-w-sm md:max-w-md lg:max-w-lg\">\n              {sideImageUrl ? (\n                <motion.div\n                  className=\"rounded-3xl shadow-2xl overflow-hidden w-full\"\n                  whileHover={{ scale: 1.02, rotate: 1 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <img \n                    src={sideImageUrl} \n                    alt=\"صورة توضيحية\" \n                    className=\"w-full h-auto object-cover\"\n                  />\n                </motion.div>\n              ) : (\n                <motion.div\n                  className=\"relative w-full\"\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  {/* Modern Illustrated Hero Graphic */}\n                  <svg viewBox=\"0 0 600 500\" className=\"w-full h-auto drop-shadow-2xl\">\n                    {/* Background */}\n                    <defs>\n                      <linearGradient id=\"bgGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" stopColor=\"#1e40af\" />\n                        <stop offset=\"50%\" stopColor=\"#3b82f6\" />\n                        <stop offset=\"100%\" stopColor=\"#6366f1\" />\n                      </linearGradient>\n                      <linearGradient id=\"cardGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" stopColor=\"#ffffff\" />\n                        <stop offset=\"100%\" stopColor=\"#f8fafc\" />\n                      </linearGradient>\n                    </defs>\n                    \n                    <rect width=\"600\" height=\"500\" rx=\"30\" fill=\"url(#bgGradient)\" />\n                    \n                    {/* Floating Elements */}\n                    <circle cx=\"500\" cy=\"100\" r=\"60\" fill=\"#fbbf24\" fillOpacity=\"0.2\" />\n                    <circle cx=\"100\" cy=\"400\" r=\"40\" fill=\"#10b981\" fillOpacity=\"0.3\" />\n                    <circle cx=\"550\" cy=\"350\" r=\"30\" fill=\"#f59e0b\" fillOpacity=\"0.4\" />\n                    \n                    {/* Main Dashboard Card */}\n                    <g transform=\"translate(150, 120)\">\n                      <rect width=\"300\" height=\"200\" rx=\"15\" fill=\"url(#cardGradient)\" stroke=\"#e2e8f0\" strokeWidth=\"2\" />\n                      {/* Header */}\n                      <rect x=\"20\" y=\"20\" width=\"260\" height=\"40\" rx=\"8\" fill=\"#3b82f6\" />\n                      <circle cx=\"40\" cy=\"40\" r=\"8\" fill=\"#ffffff\" />\n                      <rect x=\"60\" y=\"35\" width=\"120\" height=\"10\" rx=\"5\" fill=\"#ffffff\" fillOpacity=\"0.9\" />\n                      {/* Content */}\n                      <rect x=\"20\" y=\"80\" width=\"200\" height=\"12\" rx=\"6\" fill=\"#e2e8f0\" />\n                      <rect x=\"20\" y=\"100\" width=\"150\" height=\"12\" rx=\"6\" fill=\"#e2e8f0\" />\n                      <rect x=\"20\" y=\"120\" width=\"180\" height=\"12\" rx=\"6\" fill=\"#e2e8f0\" />\n                      {/* Button */}\n                      <rect x=\"20\" y=\"150\" width=\"100\" height=\"30\" rx=\"15\" fill=\"#f59e0b\" />\n                      <rect x=\"140\" y=\"155\" width=\"60\" height=\"20\" rx=\"10\" fill=\"#10b981\" />\n                    </g>\n                    \n                    {/* Side Card 1 */}\n                    <g transform=\"translate(50, 250)\">\n                      <rect width=\"150\" height=\"120\" rx=\"12\" fill=\"#ffffff\" stroke=\"#e2e8f0\" strokeWidth=\"1\" />\n                      <circle cx=\"30\" cy=\"30\" r=\"15\" fill=\"#3b82f6\" />\n                      <rect x=\"55\" y=\"20\" width=\"80\" height=\"8\" rx=\"4\" fill=\"#e2e8f0\" />\n                      <rect x=\"55\" y=\"35\" width=\"60\" height=\"8\" rx=\"4\" fill=\"#e2e8f0\" />\n                      <rect x=\"20\" y=\"60\" width=\"110\" height=\"40\" rx=\"8\" fill=\"#f1f5f9\" />\n                    </g>\n                    \n                    {/* Side Card 2 */}\n                    <g transform=\"translate(400, 280)\">\n                      <rect width=\"150\" height=\"120\" rx=\"12\" fill=\"#ffffff\" stroke=\"#e2e8f0\" strokeWidth=\"1\" />\n                      <rect x=\"20\" y=\"20\" width=\"110\" height=\"30\" rx=\"6\" fill=\"#10b981\" />\n                      <circle cx=\"30\" cy=\"70\" r=\"12\" fill=\"#f59e0b\" />\n                      <rect x=\"50\" y=\"65\" width=\"80\" height=\"10\" rx=\"5\" fill=\"#e2e8f0\" />\n                      <rect x=\"20\" y=\"90\" width=\"110\" height=\"15\" rx=\"7\" fill=\"#f1f5f9\" />\n                    </g>\n                    \n                    {/* Connection Lines */}\n                    <path d=\"M200 220 Q300 180 400 220\" stroke=\"#6366f1\" strokeWidth=\"3\" fill=\"none\" strokeDasharray=\"10,5\" opacity=\"0.6\" />\n                    <path d=\"M300 320 Q350 280 400 320\" stroke=\"#f59e0b\" strokeWidth=\"3\" fill=\"none\" strokeDasharray=\"8,4\" opacity=\"0.6\" />\n                  </svg>\n                  \n                  {/* Floating Icons */}\n                  <motion.div \n                    className=\"absolute top-10 right-10 text-amber-400\"\n                    animate={{ y: [0, -10, 0], rotate: [0, 10, 0] }}\n                    transition={{ duration: 3, repeat: Infinity }}\n                  >\n                    <Star size={24} />\n                  </motion.div>\n                  \n                  <motion.div \n                    className=\"absolute bottom-20 left-10 text-emerald-400\"\n                    animate={{ y: [0, 15, 0], rotate: [0, -10, 0] }}\n                    transition={{ duration: 4, repeat: Infinity, delay: 1 }}\n                  >\n                    <CheckCircle size={28} />\n                  </motion.div>\n                </motion.div>\n              )}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroSection;\n","size_bytes":18195},"client/src/components/home/HowItWorks.tsx":{"content":"import { PencilLine, Handshake, Rocket } from \"lucide-react\";\n\nconst HowItWorks = () => {\n  return (\n    <section id=\"how-it-works\" className=\"py-16 bg-white\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"font-heading text-3xl font-bold text-neutral-800\">كيف تعمل المنصة</h2>\n          <p className=\"mt-4 text-lg text-neutral-600 max-w-3xl mx-auto\">\n            عملية سهلة وبسيطة لربط المشاريع التقنية بأفضل شركات البرمجة\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mt-12\">\n          {/* Step 1 */}\n          <div className=\"bg-neutral-50 rounded-xl p-6 text-center\">\n            <div className=\"w-16 h-16 bg-primary-light text-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n              <PencilLine className=\"h-8 w-8\" />\n            </div>\n            <h3 className=\"text-xl font-heading font-semibold mb-3\">1. أنشئ مشروعك</h3>\n            <p className=\"text-neutral-600\">\n              حدد تفاصيل مشروعك التقني، والميزانية المتوقعة، والجدول الزمني المطلوب.\n            </p>\n          </div>\n\n          {/* Step 2 */}\n          <div className=\"bg-neutral-50 rounded-xl p-6 text-center\">\n            <div className=\"w-16 h-16 bg-primary-light text-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Handshake className=\"h-8 w-8\" />\n            </div>\n            <h3 className=\"text-xl font-heading font-semibold mb-3\">2. تواصل مع الشركات</h3>\n            <p className=\"text-neutral-600\">\n              استقبل عروض من شركات البرمجة المهتمة، وقارن بينها، واختر الأنسب لك.\n            </p>\n          </div>\n\n          {/* Step 3 */}\n          <div className=\"bg-neutral-50 rounded-xl p-6 text-center\">\n            <div className=\"w-16 h-16 bg-primary-light text-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Rocket className=\"h-8 w-8\" />\n            </div>\n            <h3 className=\"text-xl font-heading font-semibold mb-3\">3. أطلق مشروعك</h3>\n            <p className=\"text-neutral-600\">\n              ابدأ العمل مع الشركة المختارة، وتابع التقدم، واستلم مشروعك النهائي.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HowItWorks;\n","size_bytes":2586},"client/src/components/home/OfficialCompaniesSection.tsx":{"content":"import { CheckCircle, Shield, Briefcase, Award } from \"lucide-react\";\n\nconst OfficialCompaniesSection = () => {\n  return (\n    <section className=\"py-16 bg-gradient-to-br from-blue-50 to-blue-100\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-3xl mx-auto text-center mb-12\">\n          <div className=\"inline-flex items-center justify-center bg-primary text-white px-4 py-1 rounded-full mb-4\">\n            <Shield className=\"w-4 h-4 mr-2\" />\n            <span className=\"text-sm font-medium\">100% موثوقية</span>\n          </div>\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n            شركات سعودية رسمية ومعتمدة\n          </h2>\n          <p className=\"text-lg text-gray-700\">\n            جميع الشركات على منصتنا هي شركات سعودية مسجلة رسمياً بسجل تجاري موثق، مما يضمن تعاملات آمنة وموثوقة بنسبة 100%.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          <div className=\"bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300\">\n            <div className=\"bg-blue-100 w-12 h-12 rounded-full flex items-center justify-center mb-4\">\n              <Briefcase className=\"text-primary w-6 h-6\" />\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">سجل تجاري رسمي</h3>\n            <p className=\"text-gray-600\">\n              نتحقق من كل شركة على المنصة للتأكد من امتلاكها سجل تجاري ساري المفعول صادر من وزارة التجارة السعودية.\n            </p>\n          </div>\n\n          <div className=\"bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300\">\n            <div className=\"bg-emerald-100 w-12 h-12 rounded-full flex items-center justify-center mb-4\">\n              <CheckCircle className=\"text-emerald-600 w-6 h-6\" />\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">توثيق الشركات</h3>\n            <p className=\"text-gray-600\">\n              نمنح شارة التوثيق للشركات بعد التحقق من هويتها ومستنداتها الرسمية، مما يضمن أنك تتعامل مع كيانات حقيقية ومرخصة.\n            </p>\n          </div>\n\n          <div className=\"bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300\">\n            <div className=\"bg-amber-100 w-12 h-12 rounded-full flex items-center justify-center mb-4\">\n              <Award className=\"text-amber-600 w-6 h-6\" />\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">ضمان العقود والمدفوعات</h3>\n            <p className=\"text-gray-600\">\n              نقدم نظام وساطة آمن يحمي حقوق جميع الأطراف، مع توثيق العقود والمدفوعات بطريقة تضمن إتمام المشاريع بثقة وشفافية.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default OfficialCompaniesSection;","size_bytes":3200},"client/src/components/home/Testimonials.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Star } from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { getInitials } from \"@/lib/utils\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ntype Testimonial = {\n  id: number;\n  userId: number;\n  content: string;\n  role: string;\n  companyName?: string;\n  userTitle?: string;\n  rating: number;\n  avatar?: string;\n  name?: string;\n};\n\nconst TestimonialSkeleton = () => (\n  <div className=\"bg-white rounded-xl shadow-sm p-8 border border-neutral-200\">\n    <div className=\"flex items-center mb-6\">\n      <Skeleton className=\"w-14 h-14 rounded-full mr-4\" />\n      <div>\n        <Skeleton className=\"h-5 w-32 mb-1\" />\n        <Skeleton className=\"h-4 w-48\" />\n      </div>\n    </div>\n    <Skeleton className=\"h-24 w-full mb-4\" />\n    <div className=\"flex\">\n      <Skeleton className=\"h-5 w-20\" />\n    </div>\n  </div>\n);\n\nconst Testimonials = () => {\n  const { data: testimonials, isLoading, error } = useQuery<Testimonial[]>({\n    queryKey: ['/api/testimonials'],\n  });\n\n  const renderStars = (rating: number) => {\n    const stars = [];\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n    \n    for (let i = 0; i < fullStars; i++) {\n      stars.push(<Star key={`full-${i}`} className=\"fill-amber-500 text-amber-500 h-4 w-4\" />);\n    }\n    \n    if (hasHalfStar) {\n      stars.push(\n        <svg key=\"half\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-amber-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <defs>\n            <linearGradient id=\"halfFill\">\n              <stop offset=\"50%\" stopColor=\"#F59E0B\" />\n              <stop offset=\"50%\" stopColor=\"transparent\" />\n            </linearGradient>\n          </defs>\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" fill=\"url(#halfFill)\" stroke=\"currentColor\" />\n        </svg>\n      );\n    }\n    \n    const remainingStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    for (let i = 0; i < remainingStars; i++) {\n      stars.push(<Star key={`empty-${i}`} className=\"text-amber-500 h-4 w-4\" />);\n    }\n    \n    return stars;\n  };\n\n  return (\n    <section className=\"py-16 bg-neutral-50\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"font-heading text-3xl font-bold text-neutral-800\">آراء عملائنا</h2>\n          <p className=\"mt-4 text-lg text-neutral-600 max-w-3xl mx-auto\">\n            تجارب حقيقية من رواد الأعمال وشركات البرمجة في منصتنا\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {isLoading ? (\n            <>\n              <TestimonialSkeleton />\n              <TestimonialSkeleton />\n            </>\n          ) : error ? (\n            <div className=\"col-span-2 text-center py-8\">\n              <p className=\"text-neutral-600\">حدث خطأ أثناء تحميل الآراء. حاول مرة أخرى لاحقاً.</p>\n            </div>\n          ) : testimonials && testimonials.length > 0 ? (\n            testimonials.slice(0, 2).map((testimonial) => (\n              <div key={testimonial.id} className=\"bg-white rounded-xl shadow-sm p-8 border border-neutral-200\">\n                <div className=\"flex items-center mb-6\">\n                  <Avatar className=\"w-14 h-14 mr-4\">\n                    <AvatarImage src={testimonial.avatar} alt={testimonial.name} />\n                    <AvatarFallback>{getInitials(testimonial.name || \"\")}</AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <h4 className=\"font-heading font-semibold text-lg\">{testimonial.name}</h4>\n                    <p className=\"text-neutral-600 text-sm\">\n                      {testimonial.role === 'entrepreneur' \n                        ? testimonial.userTitle \n                        : `${testimonial.userTitle} - ${testimonial.companyName}`}\n                    </p>\n                  </div>\n                </div>\n                <p className=\"text-neutral-700 mb-4\">\"{testimonial.content}\"</p>\n                <div className=\"flex text-amber-500\">\n                  {renderStars(testimonial.rating)}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"col-span-2 text-center py-8\">\n              <p className=\"text-neutral-600\">لا توجد آراء متاحة حالياً.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Testimonials;\n","size_bytes":4909},"client/src/components/home/TopCompanies.tsx":{"content":"import { Link } from \"wouter\";\nimport { \n  Code, \n  Users, \n  Search, \n  CheckCircle, \n  DollarSign, \n  Zap, \n  Shield, \n  Award, \n  TrendingUp \n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nconst CompanyPromotionSection = () => {\n  return (\n    <section className=\"py-16 bg-gradient-to-b from-white to-neutral-50\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center max-w-3xl mx-auto mb-12\">\n          <h2 className=\"font-heading text-3xl font-bold text-neutral-800\">\n            شركات البرمجة\n          </h2>\n          <p className=\"mt-4 text-lg text-neutral-600 leading-relaxed\">\n            انضم إلى منصة لينكتك واحصل على عملاء جدد لشركتك. نحن نوفر فرصًا مميزة لتنمية أعمالك وزيادة إيراداتك.\n          </p>\n        </div>\n\n        {/* الميزات والفوائد في بطاقات */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 p-6 hover:shadow-md transition-all duration-300 hover:-translate-y-1\">\n            <div className=\"bg-primary/10 p-3 rounded-full w-14 h-14 flex items-center justify-center mb-4\">\n              <Search className=\"text-primary h-8 w-8\" />\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">فرص مشاريع متنوعة</h3>\n            <p className=\"text-neutral-600\">الوصول إلى مئات المشاريع المتنوعة من رواد أعمال وشركات ناشئة في مختلف المجالات التقنية.</p>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 p-6 hover:shadow-md transition-all duration-300 hover:-translate-y-1\">\n            <div className=\"bg-accent/10 p-3 rounded-full w-14 h-14 flex items-center justify-center mb-4\">\n              <Shield className=\"text-accent h-8 w-8\" />\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">حماية كاملة للمدفوعات</h3>\n            <p className=\"text-neutral-600\">نظام مدفوعات آمن يضمن حقوقك المالية ويسهل عملية تحصيل المستحقات عند إنجاز المشاريع.</p>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 p-6 hover:shadow-md transition-all duration-300 hover:-translate-y-1\">\n            <div className=\"bg-green-100 p-3 rounded-full w-14 h-14 flex items-center justify-center mb-4\">\n              <Award className=\"text-green-600 h-8 w-8\" />\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">بناء سمعة قوية</h3>\n            <p className=\"text-neutral-600\">تعزيز مكانة شركتك عبر نظام تقييمات مفصل وتوصيات العملاء التي تزيد من مصداقيتك وفرص عملك.</p>\n          </div>\n        </div>\n\n        {/* إحصائيات مؤثرة */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-12\">\n          <div className=\"bg-white rounded-lg border border-neutral-200 p-6 text-center transform transition-all hover:bg-primary-50 hover:shadow hover:border-primary/30\">\n            <h3 className=\"text-3xl font-bold text-primary\">+٢٥٪</h3>\n            <p className=\"text-neutral-600 mt-1\">زيادة في العملاء</p>\n          </div>\n          <div className=\"bg-white rounded-lg border border-neutral-200 p-6 text-center transform transition-all hover:bg-primary-50 hover:shadow hover:border-primary/30\">\n            <h3 className=\"text-3xl font-bold text-primary\">-٤٠٪</h3>\n            <p className=\"text-neutral-600 mt-1\">خفض تكاليف التسويق</p>\n          </div>\n          <div className=\"bg-white rounded-lg border border-neutral-200 p-6 text-center transform transition-all hover:bg-primary-50 hover:shadow hover:border-primary/30\">\n            <h3 className=\"text-3xl font-bold text-primary\">٣٠+</h3>\n            <p className=\"text-neutral-600 mt-1\">مشروع شهرياً</p>\n          </div>\n          <div className=\"bg-white rounded-lg border border-neutral-200 p-6 text-center transform transition-all hover:bg-primary-50 hover:shadow hover:border-primary/30\">\n            <h3 className=\"text-3xl font-bold text-primary\">١٠٠٪</h3>\n            <p className=\"text-neutral-600 mt-1\">رضا العملاء</p>\n          </div>\n        </div>\n\n        {/* قسم كيف يعمل */}\n        <div className=\"bg-white rounded-xl shadow-md border border-neutral-200 p-8 mb-12\">\n          <h3 className=\"text-2xl font-bold mb-6 text-center\">كيف تبدأ في الحصول على مشاريع جديدة؟</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-neutral-100 rounded-full w-16 h-16 flex items-center justify-center mb-4 relative\">\n                <Users className=\"h-8 w-8 text-primary\" />\n                <span className=\"absolute -top-2 -right-2 bg-primary text-white rounded-full w-8 h-8 flex items-center justify-center font-bold\">١</span>\n              </div>\n              <h4 className=\"text-lg font-semibold mb-2\">أنشئ حساب شركة</h4>\n              <p className=\"text-neutral-600\">سجل كشركة وأكمل ملفك الشخصي بالمهارات والخبرات.</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-neutral-100 rounded-full w-16 h-16 flex items-center justify-center mb-4 relative\">\n                <Search className=\"h-8 w-8 text-primary\" />\n                <span className=\"absolute -top-2 -right-2 bg-primary text-white rounded-full w-8 h-8 flex items-center justify-center font-bold\">٢</span>\n              </div>\n              <h4 className=\"text-lg font-semibold mb-2\">تصفح المشاريع</h4>\n              <p className=\"text-neutral-600\">ابحث عن المشاريع التي تناسب مهاراتك واطلع على تفاصيلها الكاملة.</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-neutral-100 rounded-full w-16 h-16 flex items-center justify-center mb-4 relative\">\n                <CheckCircle className=\"h-8 w-8 text-primary\" />\n                <span className=\"absolute -top-2 -right-2 bg-primary text-white rounded-full w-8 h-8 flex items-center justify-center font-bold\">٣</span>\n              </div>\n              <h4 className=\"text-lg font-semibold mb-2\">قدم عروضك</h4>\n              <p className=\"text-neutral-600\">أرسل عرضك المميز وتواصل مع أصحاب المشاريع لتحويلهم إلى عملاء.</p>\n            </div>\n          </div>\n        </div>\n\n        {/* زر الحث على العمل */}\n        <div className=\"text-center\">\n          <Link href=\"/auth/register\">\n            <Button size=\"lg\" className=\"bg-gradient-to-r from-primary to-accent hover:from-primary-dark hover:to-accent/90 text-white font-semibold rounded-lg px-8 py-3 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 text-lg\">\n              <Code className=\"ml-2 h-5 w-5\" />\n              سجل الآن كشركة برمجة\n            </Button>\n          </Link>\n          <p className=\"mt-4 text-neutral-500\">انضم إلى مئات الشركات التي تنمو أعمالها معنا</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CompanyPromotionSection;\n","size_bytes":7705},"client/src/components/layout/AdminLayout.tsx":{"content":"import { ReactNode } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { User, ChevronLeft, Home, MessageSquare, Users, FileText, Star, Award } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface AdminLayoutProps {\n  children: ReactNode;\n}\n\nconst AdminLayout = ({ children }: AdminLayoutProps) => {\n  const [location] = useLocation();\n\n  const menuItems = [\n    { label: \"لوحة التحكم\", href: \"/dashboard/admin\", icon: Home },\n    { label: \"المستخدمين\", href: \"/dashboard/admin/users\", icon: Users },\n    { label: \"المشاريع\", href: \"/dashboard/admin/projects\", icon: FileText },\n    { label: \"رسائل الاتصال\", href: \"/admin/contact-messages\", icon: MessageSquare },\n    { label: \"المدونة\", href: \"/admin/blog-management\", icon: FileText },\n    { label: \"عملاء التميز\", href: \"/admin/premium-clients\", icon: Star },\n    { label: \"عملاء نفخر بهم\", href: \"/admin/featured-clients-management\", icon: Award },\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4 py-6 min-h-screen\">\n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        {/* Sidebar */}\n        <div className=\"lg:w-64 shrink-0\">\n          <div className=\"bg-white rounded-xl shadow-sm p-4 sticky top-20\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-lg font-bold text-primary\">لوحة التحكم</h2>\n              <Link href=\"/\">\n                <Button variant=\"ghost\" size=\"icon\" title=\"العودة إلى الموقع\">\n                  <ChevronLeft className=\"h-5 w-5\" />\n                </Button>\n              </Link>\n            </div>\n            \n            <nav className=\"space-y-1\">\n              {menuItems.map((item) => {\n                const isActive = location === item.href;\n                const ItemIcon = item.icon;\n                \n                return (\n                  <Link key={item.href} href={item.href}>\n                    <Button\n                      variant={isActive ? \"default\" : \"ghost\"}\n                      className={`w-full justify-start ${isActive ? \"\" : \"hover:bg-muted\"}`}\n                    >\n                      <ItemIcon className=\"ml-2 h-4 w-4\" />\n                      {item.label}\n                    </Button>\n                  </Link>\n                );\n              })}\n            </nav>\n          </div>\n        </div>\n        \n        {/* Main content */}\n        <div className=\"flex-1 bg-white rounded-xl shadow-sm p-6\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLayout;","size_bytes":2639},"client/src/components/layout/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { useState } from \"react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2 } from \"lucide-react\";\n\nconst Footer = () => {\n  const [email, setEmail] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleNewsletterSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email) {\n      toast({\n        title: \"خطأ\",\n        description: \"يرجى إدخال البريد الإلكتروني\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      const response = await apiRequest(\"POST\", \"/api/newsletter/subscribe\", { email });\n      const data = await response.json();\n      \n      toast({\n        title: \"تم الاشتراك بنجاح\",\n        description: data.message || \"شكراً لاشتراكك في نشرتنا البريدية!\",\n      });\n      \n      setEmail(\"\");\n    } catch (error) {\n      console.error(\"خطأ في الاشتراك:\", error);\n      toast({\n        title: \"خطأ في الاشتراك\",\n        description: \"حدث خطأ أثناء محاولة الاشتراك في النشرة البريدية. يرجى المحاولة مرة أخرى.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer className=\"bg-neutral-800 text-neutral-300 pt-12 pb-6\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n          {/* About */}\n          <div>\n            <h3 className=\"font-heading text-white text-xl font-semibold mb-4\">حول المنصة</h3>\n            <p className=\"mb-4\">منصة تربط بين رواد الأعمال وشركات البرمجة لتنفيذ المشاريع التقنية بكفاءة وسهولة.</p>\n            <div className=\"flex gap-4\">\n              {/* تويتر - Twitter */}\n              <a href=\"#\" className=\"text-neutral-400 hover:text-white transition-colors\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n                </svg>\n              </a>\n              {/* لينكد إن - LinkedIn */}\n              <a href=\"#\" className=\"text-neutral-400 hover:text-white transition-colors\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z\"/>\n                </svg>\n              </a>\n              {/* إنستجرام - Instagram */}\n              <a href=\"#\" className=\"text-neutral-400 hover:text-white transition-colors\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n\n          {/* Links 1 */}\n          <div>\n            <h3 className=\"font-heading text-white text-xl font-semibold mb-4\">روابط سريعة</h3>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/projects\" className=\"hover:text-white transition-colors\">المشاريع</Link></li>\n              <li><Link href=\"/how-it-works\" className=\"hover:text-white transition-colors\">كيف يعمل</Link></li>\n              <li><Link href=\"/help-center\" className=\"hover:text-white transition-colors\">الأسئلة الشائعة</Link></li>\n            </ul>\n          </div>\n\n          {/* Links 2 */}\n          <div>\n            <h3 className=\"font-heading text-white text-xl font-semibold mb-4\">الدعم</h3>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/help-center\" className=\"hover:text-white transition-colors\">مركز المساعدة</Link></li>\n              <li><Link href=\"/contact\" className=\"hover:text-white transition-colors\">التواصل معنا</Link></li>\n              <li><Link href=\"/terms\" className=\"hover:text-white transition-colors\">الشروط والأحكام</Link></li>\n              <li><Link href=\"/privacy\" className=\"hover:text-white transition-colors\">سياسة الخصوصية</Link></li>\n            </ul>\n          </div>\n\n          {/* Newsletter */}\n          <div>\n            <h3 className=\"font-heading text-white text-xl font-semibold mb-4\">النشرة الإخبارية</h3>\n            <p className=\"mb-4\">اشترك للحصول على آخر الأخبار والعروض الحصرية.</p>\n            <form className=\"flex\" onSubmit={handleNewsletterSubmit}>\n              <input \n                type=\"email\" \n                placeholder=\"البريد الإلكتروني\" \n                className=\"bg-neutral-700 text-white px-4 py-2 rounded-r-lg w-full focus:outline-none focus:ring-2 focus:ring-primary\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                disabled={isSubmitting}\n              />\n              <button \n                type=\"submit\" \n                className=\"bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-l-lg disabled:opacity-70\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? (\n                  <Loader2 className=\"h-5 w-5 animate-spin\" />\n                ) : (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 rtl-flip\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                )}\n              </button>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"border-t border-neutral-700 pt-6 text-center text-sm\">\n          <p>© {currentYear} لينكتك. جميع الحقوق محفوظة.</p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":8024},"client/src/components/layout/Header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { getInitials } from \"@/lib/utils\";\nimport { Menu, User, LogOut, LayoutDashboard, MessageSquare, ShieldCheck, UserPlus, Bell } from \"lucide-react\";\nimport NotificationBell from \"@/components/notifications/NotificationBell\";\n\ntype HeaderProps = {\n  auth: {\n    user: any;\n    isAuthenticated: boolean;\n    isCompany: boolean;\n    isEntrepreneur: boolean;\n    logout: () => void;\n  };\n};\n\nconst Header = ({ auth }: HeaderProps) => {\n  const [location] = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const handleLogout = () => {\n    auth.logout();\n  };\n\n  const getDashboardLink = () => {\n    if (auth.isCompany) return \"/dashboard/company\";\n    if (auth.isEntrepreneur) return \"/dashboard/entrepreneur\";\n    if (auth.user?.role === \"admin\") return \"/dashboard/admin\";\n    return \"/\";\n  };\n\n  const isActive = (path: string) => location === path;\n\n  return (\n    <header className=\"bg-white shadow-sm sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex-shrink-0 flex items-center\">\n              <span className=\"text-primary font-heading font-bold text-2xl\">لينك<span className=\"text-accent\">تك</span></span>\n            </Link>\n          </div>\n\n          {/* Navigation - Desktop */}\n          <nav className=\"hidden md:block\">\n            <ul className=\"flex space-x-8 space-x-reverse\">\n              <li>\n                {auth.isAuthenticated ? (\n                  <Link \n                    href={getDashboardLink()} \n                    className={`px-3 py-2 font-medium ${isActive(getDashboardLink()) ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                  >\n                    لوحة التحكم\n                  </Link>\n                ) : (\n                  <Link \n                    href=\"/\" \n                    className={`px-3 py-2 font-medium ${isActive(\"/\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                  >\n                    الرئيسية\n                  </Link>\n                )}\n              </li>\n              {auth.isCompany && (\n                <li>\n                  <Link \n                    href=\"/projects\" \n                    className={`px-3 py-2 font-medium ${isActive(\"/projects\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                  >\n                    المشاريع\n                  </Link>\n                </li>\n              )}\n              {auth.isCompany && (\n                <li>\n                  <Link \n                    href=\"/for-companies\" \n                    className={`px-3 py-2 font-medium ${isActive(\"/for-companies\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                  >\n                    للشركات\n                  </Link>\n                </li>\n              )}\n              {auth.isEntrepreneur && (\n                <li>\n                  <Link \n                    href=\"/ai-assistant\" \n                    className={`px-3 py-2 font-medium ${isActive(\"/ai-assistant\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                  >\n                    المساعد الذكي\n                  </Link>\n                </li>\n              )}\n              <li>\n                <Link \n                  href=\"/how-it-works\" \n                  className={`px-3 py-2 font-medium ${isActive(\"/how-it-works\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                >\n                  كيف يعمل\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/blog\" \n                  className={`px-3 py-2 font-medium ${isActive(\"/blog\") || location.startsWith(\"/blog/\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                >\n                  المدونة\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/premium-clients\" \n                  className={`px-3 py-2 font-medium ${isActive(\"/premium-clients\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                >\n                  عملاء التميز\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/about\" \n                  className={`px-3 py-2 font-medium ${isActive(\"/about\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                >\n                  من نحن\n                </Link>\n              </li>\n              <li>\n                <Link \n                  href=\"/contact\" \n                  className={`px-3 py-2 font-medium ${isActive(\"/contact\") ? \"text-primary\" : \"text-neutral-600 hover:text-primary\"}`}\n                >\n                  تواصل معنا\n                </Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* User Actions */}\n          {auth.isAuthenticated ? (\n            <div className=\"hidden md:flex items-center space-x-4 space-x-reverse\">\n              {/* Notification Bell */}\n              <NotificationBell />\n              \n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" className=\"relative rounded-full h-8 w-8 p-0\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage src={auth.user?.avatar} alt={auth.user?.name} />\n                      <AvatarFallback>{getInitials(auth.user?.name || \"\")}</AvatarFallback>\n                    </Avatar>\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\" className=\"w-56\">\n                  <div className=\"px-4 py-3\">\n                    <p className=\"text-sm font-medium text-neutral-900 truncate\">{auth.user?.name}</p>\n                    <p className=\"text-xs text-neutral-500 truncate\">{auth.user?.email}</p>\n                  </div>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem asChild>\n                    <Link href={getDashboardLink()} className=\"cursor-pointer flex w-full\">\n                      <LayoutDashboard className=\"ml-2 h-4 w-4\" />\n                      <span>لوحة التحكم</span>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/messages\" className=\"cursor-pointer flex w-full\">\n                      <MessageSquare className=\"ml-2 h-4 w-4\" />\n                      <span>الرسائل</span>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/notifications\" className=\"cursor-pointer flex w-full\">\n                      <Bell className=\"ml-2 h-4 w-4\" />\n                      <span>الإشعارات</span>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem onClick={handleLogout} className=\"text-red-600 cursor-pointer\">\n                    <LogOut className=\"ml-2 h-4 w-4\" />\n                    <span>تسجيل الخروج</span>\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          ) : (\n            <div className=\"hidden md:flex items-center space-x-4 space-x-reverse\">\n              <Link href=\"/auth/login\" className=\"text-neutral-600 hover:text-primary font-medium\">\n                تسجيل دخول\n              </Link>\n              <Link href=\"/auth/register\" className=\"bg-primary hover:bg-primary-dark text-white font-medium rounded-lg px-4 py-2 transition-colors\">\n                إنشاء حساب\n              </Link>\n            </div>\n          )}\n\n          {/* Mobile Menu Button */}\n          <div className=\"md:hidden\">\n            <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-10 w-10\">\n                  <Menu className=\"h-6 w-6\" />\n                  <span className=\"sr-only\">فتح القائمة</span>\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"sm:max-w-md max-h-screen overflow-y-auto\">\n                <div className=\"mt-6 mb-6\">\n                  <span className=\"text-primary font-heading font-bold text-2xl\">لينك<span className=\"text-accent\">تك</span></span>\n                </div>\n\n                <div className=\"py-4\">\n                  <nav className=\"flex flex-col space-y-4\">\n                    {auth.isAuthenticated ? (\n                      <Link \n                        href={getDashboardLink()} \n                        onClick={() => setMobileMenuOpen(false)} \n                        className=\"text-lg font-medium\"\n                      >\n                        لوحة التحكم\n                      </Link>\n                    ) : (\n                      <Link \n                        href=\"/\" \n                        onClick={() => setMobileMenuOpen(false)} \n                        className=\"text-lg font-medium\"\n                      >\n                        الرئيسية\n                      </Link>\n                    )}\n                    \n                    {auth.isCompany && (\n                      <Link href=\"/projects\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                        المشاريع\n                      </Link>\n                    )}\n\n                    {auth.isCompany && (\n                      <Link href=\"/for-companies\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                        للشركات\n                      </Link>\n                    )}\n\n                    {auth.isEntrepreneur && (\n                      <Link href=\"/ai-assistant\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                        المساعد الذكي\n                      </Link>\n                    )}\n                    \n                    <Link href=\"/how-it-works\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                      كيف يعمل\n                    </Link>\n                    \n                    <Link href=\"/blog\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                      المدونة\n                    </Link>\n                    \n                    <Link href=\"/premium-clients\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                      عملاء التميز\n                    </Link>\n                    \n                    <Link href=\"/about\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                      من نحن\n                    </Link>\n                    \n                    <Link href=\"/contact\" onClick={() => setMobileMenuOpen(false)} className=\"text-lg font-medium\">\n                      تواصل معنا\n                    </Link>\n                  </nav>\n\n                  <div className=\"mt-8 pt-4 border-t border-gray-200\">\n                    {auth.isAuthenticated ? (\n                      <div className=\"space-y-4\">\n                        <div className=\"flex items-center\">\n                          <Avatar className=\"h-10 w-10\">\n                            <AvatarImage src={auth.user?.avatar} alt={auth.user?.name} />\n                            <AvatarFallback>{getInitials(auth.user?.name || \"\")}</AvatarFallback>\n                          </Avatar>\n                          <div className=\"mr-3\">\n                            <p className=\"text-sm font-medium\">{auth.user?.name}</p>\n                            <p className=\"text-xs text-gray-500\">{auth.user?.email}</p>\n                          </div>\n                        </div>\n                        <Link \n                          href={getDashboardLink()} \n                          onClick={() => setMobileMenuOpen(false)}\n                          className=\"flex items-center text-lg font-medium\"\n                        >\n                          <LayoutDashboard className=\"ml-2 h-5 w-5\" />\n                          <span>لوحة التحكم</span>\n                        </Link>\n                        <Link \n                          href=\"/messages\" \n                          onClick={() => setMobileMenuOpen(false)}\n                          className=\"flex items-center text-lg font-medium\"\n                        >\n                          <MessageSquare className=\"ml-2 h-5 w-5\" />\n                          <span>الرسائل</span>\n                        </Link>\n                        <Link \n                          href=\"/notifications\" \n                          onClick={() => setMobileMenuOpen(false)}\n                          className=\"flex items-center text-lg font-medium\"\n                        >\n                          <Bell className=\"ml-2 h-5 w-5\" />\n                          <span>الإشعارات</span>\n                        </Link>\n                        <Button \n                          variant=\"destructive\" \n                          className=\"w-full mt-4 flex items-center justify-center\" \n                          onClick={() => {\n                            handleLogout();\n                            setMobileMenuOpen(false);\n                          }}\n                        >\n                          <LogOut className=\"ml-2 h-5 w-5\" />\n                          <span>تسجيل الخروج</span>\n                        </Button>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        <Link \n                          href=\"/auth/login\"\n                          onClick={() => setMobileMenuOpen(false)}\n                          className=\"block w-full text-center px-4 py-2 border border-gray-300 rounded-md text-gray-700 font-medium hover:bg-gray-50\"\n                        >\n                          تسجيل دخول\n                        </Link>\n                        <Link \n                          href=\"/auth/register\"\n                          onClick={() => setMobileMenuOpen(false)}\n                          className=\"block w-full text-center bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-md font-medium\"\n                        >\n                          إنشاء حساب\n                        </Link>\n\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","size_bytes":15455},"client/src/components/layout/ModernHeader.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { getInitials } from \"@/lib/utils\";\nimport { \n  Menu, \n  User, \n  LogOut, \n  LayoutDashboard, \n  MessageSquare, \n  ShieldCheck, \n  UserPlus, \n  ChevronDown,\n  Search,\n  BellRing,\n  Code,\n  Layers,\n  Zap,\n  ExternalLink\n} from \"lucide-react\";\nimport NotificationBell from \"@/components/notifications/NotificationBell\";\n\ntype ModernHeaderProps = {\n  auth: {\n    user: any;\n    isAuthenticated: boolean;\n    isCompany: boolean;\n    isEntrepreneur: boolean;\n    logout: () => void;\n  };\n};\n\nconst ModernHeader = ({ auth }: ModernHeaderProps) => {\n  const [location] = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  // تتبع حالة السكرول لتغيير مظهر الهيدر\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 20);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const handleLogout = () => {\n    auth.logout();\n  };\n\n  const getDashboardLink = () => {\n    if (auth.isCompany) return \"/dashboard/company\";\n    if (auth.isEntrepreneur) return \"/dashboard/entrepreneur\";\n    if (auth.user?.role === \"admin\") return \"/dashboard/admin\";\n    return \"/\";\n  };\n\n  const isActive = (path: string) => location === path;\n\n  return (\n    <>\n      {/* الهيدر الرئيسي */}\n      <header \n        className={`sticky top-0 z-50 w-full transition-all duration-300 ${\n          scrolled \n            ? \"bg-white/90 backdrop-blur-md shadow-md\" \n            : \"bg-white/60 backdrop-blur-sm\"\n        }`}\n      >\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16 md:h-20\">\n            {/* الشعار */}\n            <div className=\"flex items-center\">\n              <Link href=\"/\" className=\"flex-shrink-0 flex items-center\">\n                {/* شعار مع تأثير تدرج لوني */}\n                <span className=\"font-heading font-extrabold text-2xl md:text-3xl\">\n                  <span className=\"bg-clip-text text-transparent bg-gradient-to-l from-primary to-blue-700\">لينك</span>\n                  <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-accent to-purple-600\">تك</span>\n                </span>\n              </Link>\n            </div>\n\n            {/* القائمة - نسخة سطح المكتب */}\n            <nav className=\"hidden md:block ml-4 mr-auto\">\n              <ul className=\"flex space-x-1 space-x-reverse\">\n                <li>\n                  <Link \n                    href=\"/\" \n                    className={`px-3 py-2 rounded-md font-medium transition-colors ${\n                      isActive(\"/\") \n                        ? \"text-primary bg-primary/5\" \n                        : \"text-neutral-700 hover:text-primary hover:bg-primary/5\"\n                    }`}\n                  >\n                    الرئيسية\n                  </Link>\n                </li>\n                \n                {/* قائمة منسدلة للمشاريع */}\n                {auth.isAuthenticated && (\n                  <li className=\"relative group\">\n                    <div className=\"flex items-center px-3 py-2 rounded-md font-medium text-neutral-700 hover:text-primary hover:bg-primary/5 cursor-pointer\">\n                      <span>المشاريع</span>\n                      <ChevronDown className=\"mr-1 h-4 w-4 opacity-70 group-hover:opacity-100\" />\n                    </div>\n                    <div className=\"absolute top-full right-0 w-56 py-2 bg-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50 border border-gray-100\">\n                      <Link href=\"/projects\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-primary/5 hover:text-primary\">\n                        <Layers className=\"inline-block ml-2 h-4 w-4\" />\n                        مشاريعي\n                      </Link>\n                      {auth.isEntrepreneur && (\n                        <Link href=\"/dashboard/entrepreneur?action=create-project\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-primary/5 hover:text-primary\">\n                          <Code className=\"inline-block ml-2 h-4 w-4\" />\n                          إضافة مشروع جديد\n                        </Link>\n                      )}\n                    </div>\n                  </li>\n                )}\n                \n                <li>\n                  <Link \n                    href=\"/how-it-works\" \n                    className={`px-3 py-2 rounded-md font-medium transition-colors ${\n                      isActive(\"/how-it-works\") \n                        ? \"text-primary bg-primary/5\" \n                        : \"text-neutral-700 hover:text-primary hover:bg-primary/5\"\n                    }`}\n                  >\n                    كيف يعمل\n                  </Link>\n                </li>\n                \n                <li>\n                  <Link \n                    href=\"/premium-clients\" \n                    className={`px-3 py-2 rounded-md font-medium transition-colors ${\n                      isActive(\"/premium-clients\") \n                        ? \"text-primary bg-primary/5\" \n                        : \"text-neutral-700 hover:text-primary hover:bg-primary/5\"\n                    }`}\n                  >\n                    عملاء التميز\n                  </Link>\n                </li>\n                \n                <li>\n                  <Link \n                    href=\"/blog\" \n                    className={`px-3 py-2 rounded-md font-medium transition-colors ${\n                      isActive(\"/blog\") || location.startsWith(\"/blog/\")\n                        ? \"text-primary bg-primary/5\" \n                        : \"text-neutral-700 hover:text-primary hover:bg-primary/5\"\n                    }`}\n                  >\n                    المدونة\n                  </Link>\n                </li>\n                \n                <li>\n                  <Link \n                    href=\"/about\" \n                    className={`px-3 py-2 rounded-md font-medium transition-colors ${\n                      isActive(\"/about\") \n                        ? \"text-primary bg-primary/5\" \n                        : \"text-neutral-700 hover:text-primary hover:bg-primary/5\"\n                    }`}\n                  >\n                    من نحن\n                  </Link>\n                </li>\n                \n                <li>\n                  <Link \n                    href=\"/contact\" \n                    className={`px-3 py-2 rounded-md font-medium transition-colors ${\n                      isActive(\"/contact\") \n                        ? \"text-primary bg-primary/5\" \n                        : \"text-neutral-700 hover:text-primary hover:bg-primary/5\"\n                    }`}\n                  >\n                    تواصل معنا\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n\n            {/* أزرار المستخدم */}\n            <div className=\"flex items-center space-x-4 space-x-reverse\">\n              \n              {auth.isAuthenticated && (\n                <>\n                  {/* إشعارات */}\n                  <NotificationBell />\n                  \n                  {/* الرسائل - رمز فقط */}\n                  <Link href=\"/messages\" className=\"p-2 text-gray-600 hover:text-primary rounded-full hover:bg-gray-100 relative\">\n                    <MessageSquare className=\"h-5 w-5\" />\n                    <span className=\"absolute top-0 right-0 block h-2 w-2 rounded-full bg-green-500\"></span>\n                  </Link>\n                </>\n              )}\n\n              {/* حساب المستخدم أو أزرار تسجيل الدخول */}\n              {auth.isAuthenticated ? (\n                <div className=\"hidden md:block\">\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button variant=\"ghost\" className=\"relative h-10 flex items-center gap-2 font-normal hover:bg-gray-100\">\n                        <Avatar className=\"h-8 w-8 border-2 border-white shadow-sm\">\n                          <AvatarImage src={auth.user?.avatar} alt={auth.user?.name} />\n                          <AvatarFallback className=\"bg-primary text-white\">{getInitials(auth.user?.name || \"\")}</AvatarFallback>\n                        </Avatar>\n                        <div className=\"flex flex-col items-start\">\n                          <span className=\"text-sm font-medium\">{auth.user?.name?.split(' ')[0]}</span>\n                        </div>\n                        <ChevronDown className=\"h-4 w-4 opacity-70\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\" className=\"w-56\">\n                      <div className=\"px-4 py-3 border-b border-gray-100\">\n                        <p className=\"text-sm font-medium text-neutral-900 truncate\">{auth.user?.name}</p>\n                        <p className=\"text-xs text-neutral-500 truncate\">{auth.user?.email}</p>\n                      </div>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem asChild>\n                        <Link href={getDashboardLink()} className=\"cursor-pointer flex w-full\">\n                          <LayoutDashboard className=\"ml-2 h-4 w-4\" />\n                          <span>لوحة التحكم</span>\n                        </Link>\n                      </DropdownMenuItem>\n                      <DropdownMenuItem asChild>\n                        <Link href=\"/messages\" className=\"cursor-pointer flex w-full\">\n                          <MessageSquare className=\"ml-2 h-4 w-4\" />\n                          <span>الرسائل</span>\n                        </Link>\n                      </DropdownMenuItem>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem onClick={handleLogout} className=\"text-red-600 cursor-pointer\">\n                        <LogOut className=\"ml-2 h-4 w-4\" />\n                        <span>تسجيل الخروج</span>\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </div>\n              ) : (\n                <div className=\"hidden md:flex items-center space-x-4 space-x-reverse\">\n                  <Link href=\"/auth/login\" className=\"font-medium text-gray-700 hover:text-primary transition-colors\">\n                    تسجيل دخول\n                  </Link>\n                  <Link \n                    href=\"/auth/register\" \n                    className=\"bg-gradient-to-r from-primary to-blue-700 hover:opacity-90 text-white font-medium rounded-full px-5 py-2 transition-all shadow-sm hover:shadow-md\"\n                  >\n                    إنشاء حساب\n                  </Link>\n                </div>\n              )}\n\n              {/* زر القائمة المتنقلة */}\n              <div className=\"md:hidden\">\n                <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>\n                  <SheetTrigger asChild>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-10 w-10\">\n                      <Menu className=\"h-6 w-6\" />\n                      <span className=\"sr-only\">فتح القائمة</span>\n                    </Button>\n                  </SheetTrigger>\n                  <SheetContent side=\"right\" className=\"sm:max-w-md max-h-screen overflow-y-auto\">\n                    <div className=\"mt-6 mb-6\">\n                      <span className=\"font-heading font-bold text-2xl\">\n                        <span className=\"bg-clip-text text-transparent bg-gradient-to-l from-primary to-blue-700\">لينك</span>\n                        <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-accent to-purple-600\">تك</span>\n                      </span>\n                    </div>\n\n                    <div className=\"py-4\">\n                      <nav className=\"flex flex-col space-y-4\">\n                        <Link \n                          href=\"/\" \n                          onClick={() => setMobileMenuOpen(false)} \n                          className=\"text-lg font-medium flex items-center\"\n                        >\n                          <span className=\"inline-block w-6 ml-2 text-primary\">•</span>\n                          الرئيسية\n                        </Link>\n                        \n                        <Link \n                          href=\"/projects\" \n                          onClick={() => setMobileMenuOpen(false)} \n                          className=\"text-lg font-medium flex items-center\"\n                        >\n                          <span className=\"inline-block w-6 ml-2 text-primary\">•</span>\n                          المشاريع\n                        </Link>\n                        \n                        <Link \n                          href=\"/how-it-works\" \n                          onClick={() => setMobileMenuOpen(false)} \n                          className=\"text-lg font-medium flex items-center\"\n                        >\n                          <span className=\"inline-block w-6 ml-2 text-primary\">•</span>\n                          كيف يعمل\n                        </Link>\n                        \n                        <Link \n                          href=\"/premium-clients\" \n                          onClick={() => setMobileMenuOpen(false)} \n                          className=\"text-lg font-medium flex items-center\"\n                        >\n                          <span className=\"inline-block w-6 ml-2 text-primary\">•</span>\n                          عملاء التميز\n                        </Link>\n                        \n                        <Link \n                          href=\"/blog\" \n                          onClick={() => setMobileMenuOpen(false)} \n                          className=\"text-lg font-medium flex items-center\"\n                        >\n                          <span className=\"inline-block w-6 ml-2 text-primary\">•</span>\n                          المدونة\n                        </Link>\n                        \n                        <Link \n                          href=\"/about\" \n                          onClick={() => setMobileMenuOpen(false)} \n                          className=\"text-lg font-medium flex items-center\"\n                        >\n                          <span className=\"inline-block w-6 ml-2 text-primary\">•</span>\n                          من نحن\n                        </Link>\n                        \n                        <Link \n                          href=\"/contact\" \n                          onClick={() => setMobileMenuOpen(false)} \n                          className=\"text-lg font-medium flex items-center\"\n                        >\n                          <span className=\"inline-block w-6 ml-2 text-primary\">•</span>\n                          تواصل معنا\n                        </Link>\n                      </nav>\n\n                      <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                        {auth.isAuthenticated ? (\n                          <div className=\"space-y-4\">\n                            <div className=\"flex items-center p-3 bg-gray-50 rounded-lg\">\n                              <Avatar className=\"h-12 w-12 border-2 border-white shadow-sm\">\n                                <AvatarImage src={auth.user?.avatar} alt={auth.user?.name} />\n                                <AvatarFallback className=\"bg-primary text-white\">{getInitials(auth.user?.name || \"\")}</AvatarFallback>\n                              </Avatar>\n                              <div className=\"mr-3\">\n                                <p className=\"font-medium\">{auth.user?.name}</p>\n                                <p className=\"text-xs text-gray-500 mt-1\">{auth.user?.email}</p>\n                              </div>\n                            </div>\n                            \n                            <div className=\"space-y-1\">\n                              <Link \n                                href={getDashboardLink()} \n                                onClick={() => setMobileMenuOpen(false)}\n                                className=\"flex items-center p-3 rounded-md hover:bg-gray-50 text-lg\"\n                              >\n                                <LayoutDashboard className=\"ml-3 h-5 w-5 text-primary\" />\n                                <span>لوحة التحكم</span>\n                              </Link>\n                              \n                              <Link \n                                href=\"/messages\" \n                                onClick={() => setMobileMenuOpen(false)}\n                                className=\"flex items-center p-3 rounded-md hover:bg-gray-50 text-lg\"\n                              >\n                                <MessageSquare className=\"ml-3 h-5 w-5 text-primary\" />\n                                <span>الرسائل</span>\n                              </Link>\n                              \n                              <Link \n                                href=\"/notifications\" \n                                onClick={() => setMobileMenuOpen(false)}\n                                className=\"flex items-center p-3 rounded-md hover:bg-gray-50 text-lg\"\n                              >\n                                <BellRing className=\"ml-3 h-5 w-5 text-primary\" />\n                                <span>الإشعارات</span>\n                              </Link>\n                            </div>\n                            \n                            <Button \n                              variant=\"destructive\" \n                              className=\"w-full mt-4 flex items-center justify-center py-6\" \n                              onClick={() => {\n                                handleLogout();\n                                setMobileMenuOpen(false);\n                              }}\n                            >\n                              <LogOut className=\"ml-2 h-5 w-5\" />\n                              <span>تسجيل الخروج</span>\n                            </Button>\n                          </div>\n                        ) : (\n                          <div className=\"space-y-4 pt-2\">\n                            <Link \n                              href=\"/auth/login\"\n                              onClick={() => setMobileMenuOpen(false)}\n                              className=\"block w-full text-center px-4 py-3 border border-gray-300 rounded-md text-gray-700 font-medium hover:bg-gray-50\"\n                            >\n                              تسجيل دخول\n                            </Link>\n                            <Link \n                              href=\"/auth/register\"\n                              onClick={() => setMobileMenuOpen(false)}\n                              className=\"block w-full text-center bg-gradient-to-r from-primary to-blue-700 text-white px-4 py-3 rounded-md font-medium hover:opacity-90\"\n                            >\n                              إنشاء حساب\n                            </Link>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </SheetContent>\n                </Sheet>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    </>\n  );\n};\n\nexport default ModernHeader;","size_bytes":20213},"client/src/components/layout/ScrollToTop.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\n\n/**\n * هذا المكون يعيد تعيين السكرول إلى الأعلى عند الانتقال بين الصفحات\n * يستخدم useLocation من wouter للاستماع لتغييرات المسار\n */\nexport default function ScrollToTop() {\n  const [location] = useLocation();\n  \n  useEffect(() => {\n    // عند تغيير المسار، نمرر السكرول إلى أعلى الصفحة\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return null; // هذا المكون لا يعرض أي محتوى في DOM\n}","size_bytes":609},"client/src/components/messages/ConversationWrapper.tsx":{"content":"import React from 'react';\nimport { Loader2, Check, CheckCheck, Clock, AlertCircle } from 'lucide-react';\nimport { Message } from '../../interfaces/messageTypes';\n\ninterface ConversationWrapperProps {\n  conversationLoading: boolean;\n  conversationData: Message[] | undefined;\n  localMessages: Message[];\n  selectedConversation: number | null;\n  userId: number;\n}\n\n// دالة لتنسيق التاريخ\nexport const formatDate = (date: Date): string => {\n  // القيم الافتراضية للتاريخ الحالي\n  const now = new Date();\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  const yesterday = new Date(today);\n  yesterday.setDate(yesterday.getDate() - 1);\n  \n  // التحقق إذا كان اليوم\n  if (date >= today) {\n    return `اليوم ${date.toLocaleTimeString('ar-SA', { hour: '2-digit', minute: '2-digit' })}`;\n  }\n  \n  // التحقق إذا كان أمس\n  if (date >= yesterday && date < today) {\n    return `أمس ${date.toLocaleTimeString('ar-SA', { hour: '2-digit', minute: '2-digit' })}`;\n  }\n  \n  // إذا كان قديماً، أظهر التاريخ كاملاً\n  return date.toLocaleDateString('ar-SA', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nexport const ConversationWrapper: React.FC<ConversationWrapperProps> = ({\n  conversationLoading,\n  conversationData,\n  localMessages,\n  selectedConversation,\n  userId\n}) => {\n  // تأكد من أن البيانات موجودة قبل عرضها\n  const hasData = Array.isArray(conversationData) && conversationData.length > 0;\n  const hasLocalMessages = localMessages && localMessages.length > 0;\n  const isLoading = conversationLoading && !hasData && !hasLocalMessages;\n\n  if (isLoading) {\n    return (\n      <div className=\"h-full flex justify-center items-center\">\n        <Loader2 className=\"w-6 h-6 md:w-8 md:h-8 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  // دمج الرسائل من الخادم مع الرسائل المحلية المؤقتة\n  const allMessages = [\n    ...(Array.isArray(conversationData) ? conversationData : []),\n    ...localMessages.filter(msg => \n      msg.toUserId === selectedConversation || \n      msg.fromUserId === selectedConversation\n    )\n  ];\n\n  // ترتيب الرسائل حسب التاريخ للتأكد من عرضها بشكل صحيح\n  allMessages.sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n\n  if (allMessages.length === 0) {\n    return (\n      <div className=\"h-full flex justify-center items-center text-center p-2 md:p-4\">\n        <div>\n          <p className=\"text-muted-foreground mb-1 md:mb-2 text-sm md:text-base\">لا توجد رسائل في هذه المحادثة</p>\n          <p className=\"text-xs md:text-sm text-muted-foreground\">ابدأ بإرسال رسالة!</p>\n        </div>\n      </div>\n    );\n  }\n\n  // تجميع الرسائل حسب التاريخ للعرض بترتيب تاريخي\n  const messagesByDate: { [date: string]: Message[] } = {};\n  \n  allMessages.forEach(message => {\n    const messageDate = new Date(message.createdAt);\n    const dateKey = messageDate.toLocaleDateString('ar-SA');\n    \n    if (!messagesByDate[dateKey]) {\n      messagesByDate[dateKey] = [];\n    }\n    \n    messagesByDate[dateKey].push(message);\n  });\n\n  return (\n    <>\n      {Object.entries(messagesByDate).map(([dateKey, messages]) => (\n        <div key={dateKey} className=\"message-group\">\n          <div className=\"flex justify-center mb-2\">\n            <div className=\"bg-muted px-2 py-1 rounded-full\">\n              <span className=\"text-xs text-muted-foreground\">\n                {new Date(messages[0].createdAt).toLocaleDateString('ar-SA', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </span>\n            </div>\n          </div>\n          \n          {messages.map((message) => (\n            <div \n              key={message.id}\n              className={`flex ${message.fromUserId === userId ? 'justify-end' : 'justify-start'} mb-2`}\n            >\n              <div \n                className={`max-w-[85%] p-2 md:p-3 rounded-lg text-sm ${\n                  message.fromUserId === userId \n                    ? 'bg-primary text-primary-foreground'\n                    : 'bg-muted'\n                }`}\n              >\n                <p className=\"text-xs md:text-sm break-words\">{message.content}</p>\n                <div className=\"flex justify-between items-center mt-1\">\n                  <p className=\"text-[10px] md:text-xs opacity-70\">\n                    {new Date(message.createdAt).toLocaleTimeString('ar-SA', { hour: '2-digit', minute: '2-digit' })}\n                  </p>\n                  \n                  {/* عرض حالة تسليم الرسالة فقط للرسائل المرسلة من المستخدم الحالي */}\n                  {message.fromUserId === userId && (\n                    <div className=\"flex items-center mr-1\">\n                      {message.deliveryStatus === 'delivered' ? (\n                        <CheckCheck className=\"h-3 w-3 opacity-70\" />\n                      ) : message.deliveryStatus === 'sent' || message.read ? (\n                        <Check className=\"h-3 w-3 opacity-70\" />\n                      ) : message.deliveryStatus === 'failed' ? (\n                        <AlertCircle className=\"h-3 w-3 text-red-400\" />\n                      ) : message.deliveryStatus === 'processing' || !message.deliveryStatus ? (\n                        <Clock className=\"h-3 w-3 opacity-50\" />\n                      ) : null}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default ConversationWrapper;","size_bytes":5925},"client/src/components/nda/NdaDialog.tsx":{"content":"import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Shield, FileCheck, FileText, Lock, User, Phone, Mail, Users } from \"lucide-react\";\nimport { validatePhoneNumber, validateEmail, validateName, validateContactForm } from '@/lib/validation';\n\ninterface NdaDialogProps {\n  projectId: number;\n  projectTitle: string;\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess?: (ndaId: number) => void;\n}\n\ninterface ContactFormData {\n  companyRep: {\n    name: string;\n    email: string;\n    phone: string;\n  };\n}\n\nexport function NdaDialog({\n  projectId,\n  projectTitle,\n  isOpen,\n  onOpenChange,\n  onSuccess,\n}: NdaDialogProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  const [agreed, setAgreed] = useState(false);\n  const [step, setStep] = useState<'contact-info' | 'agreement'>('contact-info');\n  \n  // Validation states for company form\n  const [nameValidation, setNameValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  const [emailValidation, setEmailValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  const [phoneValidation, setPhoneValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  \n  // Get current user info\n  const { data: auth } = useQuery<any>({\n    queryKey: ['/api/auth/user'],\n  });\n\n  // Contact form state - only company's info\n  const [contactForm, setContactForm] = useState<ContactFormData>({\n    companyRep: {\n      name: auth?.user?.name || '',\n      email: auth?.user?.email || '',\n      phone: ''\n    }\n  });\n\n  // Reset form when dialog opens\n  React.useEffect(() => {\n    if (isOpen) {\n      setStep('contact-info');\n      setAgreed(false);\n      setContactForm({\n        companyRep: {\n          name: auth?.user?.name || '',\n          email: auth?.user?.email || '',\n          phone: ''\n        }\n      });\n    }\n  }, [isOpen, auth?.user]);\n\n  // Initiate NDA request with company info only\n  const createNdaMutation = useMutation({\n    mutationFn: async (data: ContactFormData) => {\n      const response = await apiRequest(\"POST\", `/api/projects/${projectId}/nda/initiate`, {\n        companyRep: data.companyRep\n      });\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['/api/projects'] });\n      queryClient.invalidateQueries({ queryKey: [`/api/projects/${projectId}/nda`] });\n      \n      toast({\n        title: \"تم إرسال طلب اتفاقية عدم الإفصاح\",\n        description: \"تم إرسال إشعار لرائد الأعمال لإكمال بياناته. ستكتمل العملية عند موافقته.\",\n      });\n\n      onOpenChange(false);\n      onSuccess?.(data.id);\n    },\n    onError: (error) => {\n      toast({\n        title: \"حدث خطأ\",\n        description: error.message || \"لم نتمكن من إرسال طلب اتفاقية عدم الإفصاح.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleContactSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Comprehensive validation using expert validation system\n    const validation = validateContactForm(contactForm.companyRep);\n    \n    if (!validation.isValid) {\n      // Update validation states for UI feedback\n      setNameValidation(validation.errors.name ? { isValid: false, message: validation.errors.name } : { isValid: true });\n      setEmailValidation(validation.errors.email ? { isValid: false, message: validation.errors.email } : { isValid: true });\n      setPhoneValidation(validation.errors.phone ? { isValid: false, message: validation.errors.phone } : { isValid: true });\n      \n      // Show first error as toast\n      const firstError = Object.values(validation.errors)[0];\n      toast({\n        title: \"بيانات غير صحيحة\",\n        description: firstError,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // All validations passed, use formatted data\n    if (validation.formattedData) {\n      setContactForm(prev => ({\n        ...prev,\n        companyRep: validation.formattedData!\n      }));\n    }\n\n    // Move to agreement step\n    setStep('agreement');\n  };\n\n  const handleAgreementSubmit = () => {\n    if (!agreed) {\n      toast({\n        title: \"موافقة مطلوبة\",\n        description: \"يرجى الموافقة على شروط اتفاقية عدم الإفصاح.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    createNdaMutation.mutate(contactForm);\n  };\n\n  const handleInputChange = (\n    field: 'name' | 'email' | 'phone',\n    value: string\n  ) => {\n    setContactForm(prev => ({\n      ...prev,\n      companyRep: {\n        ...prev.companyRep,\n        [field]: value\n      }\n    }));\n    \n    // Enhanced real-time validation for all fields\n    if (field === 'name') {\n      const validation = validateName(value);\n      setNameValidation(validation);\n    } else if (field === 'email') {\n      const validation = validateEmail(value);\n      setEmailValidation(validation);\n    } else if (field === 'phone') {\n      const validation = validatePhoneNumber(value);\n      setPhoneValidation(validation);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <FileText className=\"h-5 w-5\" />\n            اتفاقية عدم الإفصاح - {projectTitle}\n          </DialogTitle>\n          <DialogDescription>\n            {step === 'contact-info' \n              ? 'يرجى إدخال معلومات الاتصال الخاصة بك. سيتم إرسال إشعار لرائد الأعمال لإكمال بياناته.'\n              : 'يرجى مراجعة والموافقة على إرسال طلب اتفاقية عدم الإفصاح'\n            }\n          </DialogDescription>\n        </DialogHeader>\n\n        {step === 'contact-info' && (\n          <form onSubmit={handleContactSubmit} className=\"space-y-6\">\n            {/* Company Representative Info */}\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-100\">\n                <div className=\"flex items-center mb-3\">\n                  <User className=\"h-5 w-5 text-blue-600 ml-2\" />\n                  <h3 className=\"font-medium text-blue-800\">معلومات ممثل الشركة</h3>\n                </div>\n                \n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div>\n                    <Label htmlFor=\"company-name\">الاسم الكامل *</Label>\n                    <Input\n                      id=\"company-name\"\n                      value={contactForm.companyRep.name}\n                      onChange={(e) => handleInputChange('name', e.target.value)}\n                      placeholder=\"اسم ممثل الشركة\"\n                      className={`${\n                        contactForm.companyRep.name && !nameValidation.isValid \n                          ? 'border-red-500 focus:border-red-500' \n                          : nameValidation.message && nameValidation.isValid\n                          ? 'border-green-500 focus:border-green-500'\n                          : ''\n                      }`}\n                      required\n                    />\n                    {contactForm.companyRep.name && nameValidation.message && (\n                      <p className={`text-sm mt-1 ${\n                        nameValidation.isValid ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {nameValidation.message}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"company-email\">البريد الإلكتروني *</Label>\n                      <div className=\"relative\">\n                        <Mail className=\"absolute right-3 top-3 h-4 w-4 text-gray-400\" />\n                        <Input\n                          id=\"company-email\"\n                          type=\"email\"\n                          value={contactForm.companyRep.email}\n                          onChange={(e) => handleInputChange('email', e.target.value)}\n                          placeholder=\"company@example.com\"\n                          className={`pr-10 ${\n                            contactForm.companyRep.email && !emailValidation.isValid \n                              ? 'border-red-500 focus:border-red-500' \n                              : emailValidation.message && emailValidation.isValid\n                              ? 'border-green-500 focus:border-green-500'\n                              : ''\n                          }`}\n                          required\n                        />\n                      </div>\n                      {contactForm.companyRep.email && emailValidation.message && (\n                        <p className={`text-sm mt-1 ${\n                          emailValidation.isValid ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                          {emailValidation.message}\n                        </p>\n                      )}\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"company-phone\">رقم الهاتف *</Label>\n                      <div className=\"relative\">\n                        <Phone className=\"absolute right-3 top-3 h-4 w-4 text-gray-400\" />\n                        <Input\n                          id=\"company-phone\"\n                          type=\"tel\"\n                          value={contactForm.companyRep.phone}\n                          onChange={(e) => handleInputChange('phone', e.target.value)}\n                          placeholder=\"+966xxxxxxxx أو 05xxxxxxxx\"\n                          className={`pr-10 ${\n                            contactForm.companyRep.phone && !phoneValidation.isValid \n                              ? 'border-red-500 focus:border-red-500' \n                              : phoneValidation.message && phoneValidation.isValid\n                              ? 'border-green-500 focus:border-green-500'\n                              : ''\n                          }`}\n                          required\n                        />\n                      </div>\n                      {contactForm.companyRep.phone && phoneValidation.message && (\n                        <p className={`text-sm mt-1 ${\n                          phoneValidation.isValid ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                          {phoneValidation.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Entrepreneur notification info */}\n            <div className=\"bg-green-50 p-4 rounded-lg border border-green-100\">\n              <div className=\"flex items-center mb-3\">\n                <Users className=\"h-5 w-5 text-green-600 ml-2\" />\n                <h3 className=\"font-medium text-green-800\">الخطوة التالية</h3>\n              </div>\n              <p className=\"text-sm text-green-700\">\n                سيتم إرسال إشعار لرائد الأعمال لإكمال معلومات الاتصال الخاصة به، وبعدها ستبدأ عملية التوقيع الإلكتروني عبر منصة صادق.\n              </p>\n            </div>\n\n            <DialogFooter>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => onOpenChange(false)}\n              >\n                إلغاء\n              </Button>\n              <Button type=\"submit\">\n                المتابعة إلى طلب الاتفاقية\n              </Button>\n            </DialogFooter>\n          </form>\n        )}\n\n        {step === 'agreement' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-amber-50 p-4 rounded-lg border border-amber-200\">\n              <div className=\"flex items-start\">\n                <Shield className=\"h-5 w-5 text-amber-600 mt-0.5 ml-3 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"font-medium text-amber-800 mb-2\">طلب اتفاقية عدم الإفصاح</h3>\n                  <p className=\"text-sm text-amber-700 mb-3\">\n                    بالموافقة، ستقوم بإرسال طلب اتفاقية عدم إفصاح لمشروع \"{projectTitle}\". \n                    سيتم إشعار رائد الأعمال لإكمال بياناته وبدء عملية التوقيع الإلكتروني.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 p-4 rounded-lg border\">\n              <h4 className=\"font-medium text-gray-800 mb-3\">معلومات الطلب:</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">ممثل الشركة:</span>\n                  <span className=\"font-medium\">{contactForm.companyRep.name} - {contactForm.companyRep.email}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">المشروع:</span>\n                  <span className=\"font-medium\">{projectTitle}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">حالة رائد الأعمال:</span>\n                  <span className=\"text-amber-600 font-medium\">في انتظار إكمال البيانات</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"agree\"\n                  checked={agreed}\n                  onCheckedChange={(checked) => setAgreed(checked as boolean)}\n                />\n                <Label htmlFor=\"agree\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                  أوافق على إرسال طلب اتفاقية عدم الإفصاح وأتعهد بالالتزام بشروطها عند توقيعها\n                </Label>\n              </div>\n            </div>\n\n            <DialogFooter>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => setStep('contact-info')}\n              >\n                العودة\n              </Button>\n              <Button\n                onClick={handleAgreementSubmit}\n                disabled={!agreed || createNdaMutation.isPending}\n              >\n                {createNdaMutation.isPending ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white ml-2\"></div>\n                    جاري الإنشاء...\n                  </>\n                ) : (\n                  <>\n                    <FileCheck className=\"w-4 h-4 ml-2\" />\n                    إرسال طلب اتفاقية عدم الإفصاح\n                  </>\n                )}\n              </Button>\n            </DialogFooter>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":16096},"client/src/components/nda/NdaSection.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Shield, Lock, Info, CheckCircle, Clock, AlertCircle, Users } from \"lucide-react\";\nimport { NdaDialog } from \"./NdaDialog\";\n\n// تعريف نوع البيانات الخاص باتفاقية عدم الإفصاح\ninterface NdaAgreement {\n  id: number;\n  projectId: number;\n  status: 'pending' | 'invitations_sent' | 'signed' | 'cancelled' | 'expired';\n  envelopeStatus?: string;\n  pdfUrl: string | null;\n  createdAt: string;\n  signedAt: string | null;\n  expiresAt: string | null;\n  sadiqReferenceNumber?: string;\n  sadiqEnvelopeId?: string;\n  companySignatureInfo?: {\n    name: string;\n    email: string;\n    phone: string;\n    companyName: string;\n    companyUserId: number;\n    createdAt: string;\n  };\n  entrepreneurInfo?: {\n    name: string;\n    email: string;\n    phone: string;\n    entrepreneurUserId: number;\n    completedAt: string;\n  };\n}\n\ninterface NdaSectionProps {\n  projectId: number;\n  projectTitle: string;\n  requiresNda?: boolean;\n  ndaId?: number;\n  userId: number;\n  currentUserId?: number;\n  userRole?: string;\n}\n\n// Helper functions for status display\nconst getStatusInfo = (status: string) => {\n  switch (status) {\n    case 'signed':\n      return {\n        icon: CheckCircle,\n        color: 'text-green-600',\n        bgColor: 'bg-green-50',\n        borderColor: 'border-green-200',\n        label: 'تم التوقيع',\n        badgeVariant: 'secondary' as const,\n        badgeClass: 'bg-green-100 text-green-800'\n      };\n    case 'invitations_sent':\n      return {\n        icon: Clock,\n        color: 'text-blue-600',\n        bgColor: 'bg-blue-50',\n        borderColor: 'border-blue-200',\n        label: 'في انتظار التوقيع',\n        badgeVariant: 'outline' as const,\n        badgeClass: 'border-blue-300 text-blue-700'\n      };\n    case 'pending':\n      return {\n        icon: AlertCircle,\n        color: 'text-amber-600',\n        bgColor: 'bg-amber-50',\n        borderColor: 'border-amber-200',\n        label: 'معلق',\n        badgeVariant: 'outline' as const,\n        badgeClass: 'border-amber-300 text-amber-700'\n      };\n    case 'cancelled':\n      return {\n        icon: AlertCircle,\n        color: 'text-red-600',\n        bgColor: 'bg-red-50',\n        borderColor: 'border-red-200',\n        label: 'ملغي',\n        badgeVariant: 'outline' as const,\n        badgeClass: 'border-red-300 text-red-700'\n      };\n    default:\n      return {\n        icon: Clock,\n        color: 'text-gray-600',\n        bgColor: 'bg-gray-50',\n        borderColor: 'border-gray-200',\n        label: 'حالة غير معروفة',\n        badgeVariant: 'outline' as const,\n        badgeClass: 'border-gray-300 text-gray-700'\n      };\n  }\n};\n\nexport function NdaSection({\n  projectId,\n  projectTitle,\n  requiresNda,\n  ndaId,\n  userId,\n  currentUserId,\n  userRole,\n}: NdaSectionProps) {\n  const [isNdaDialogOpen, setIsNdaDialogOpen] = useState(false);\n  \n  // إذا كان هناك معرف اتفاقية، نقوم بجلب تفاصيلها\n  const {\n    data: ndaData,\n    isLoading: isLoadingNda,\n  } = useQuery<NdaAgreement>({\n    queryKey: [`/api/nda/${ndaId}`],\n    enabled: !!ndaId && ndaId > 0,\n  });\n\n  // Check if there's a pending NDA that needs entrepreneur data\n  const {\n    data: pendingNdaStatus,\n    isLoading: isCheckingPendingNda,\n  } = useQuery<{ status: string; ndaId: number }>({\n    queryKey: [`/api/nda/status/${projectId}`],\n    enabled: !!projectId && userRole === 'entrepreneur' && currentUserId === userId,\n  });\n\n  // إذا كان المستخدم هو صاحب المشروع أو شركة، نقوم بجلب جميع اتفاقيات المشروع\n  const {\n    data: projectNdas,\n    isLoading: isLoadingProjectNdas,\n  } = useQuery<NdaAgreement[]>({\n    queryKey: [`/api/projects/${projectId}/nda`],\n    enabled: !!projectId && (userRole === 'admin' || currentUserId === userId || userRole === 'company'), // المسؤولون أو صاحب المشروع أو الشركات\n  });\n\n  // التحقق مما إذا كان المستخدم شركة ويمكنه توقيع اتفاقية عدم الإفصاح\n  const canSignNda = userRole === 'company' && currentUserId !== userId;\n\n  // التحقق مما إذا كان المستخدم الحالي هو صاحب المشروع\n  const isProjectOwner = currentUserId === userId;\n\n  // التحقق مما إذا كان المستخدم مسؤول\n  const isAdmin = userRole === 'admin';\n\n  // Check if current user (company) has signed NDA for this project\n  const companyNda = projectNdas?.find(nda => \n    nda.companySignatureInfo?.companyUserId === currentUserId\n  );\n  \n  // For companies: check if they already signed\n  const hasCompanySignedNda = !!companyNda;\n  \n  // For specific NDA: check if it exists\n  const hasSignedNda = !!ndaData;\n\n  // Check if entrepreneur needs to complete NDA data\n  const entrepreneurNeedsToComplete = isProjectOwner && \n    pendingNdaStatus?.status === 'awaiting_entrepreneur';\n\n  // عندما لا يتطلب المشروع اتفاقية عدم إفصاح أو المستخدم ليس شركة، لا نعرض شيئاً\n  if (!requiresNda && !isProjectOwner && !isAdmin) {\n    return null;\n  }\n\n  // Show prominent alert if entrepreneur needs to complete NDA data\n  if (entrepreneurNeedsToComplete && !isCheckingPendingNda) {\n    return (\n      <div className=\"mb-8\">\n        <div className=\"bg-red-50 border-2 border-red-300 rounded-lg p-5 animate-pulse-border\">\n          <div className=\"flex items-start\">\n            <AlertCircle className=\"h-6 w-6 text-red-600 mt-1 ml-3 flex-shrink-0 animate-bounce\" />\n            <div className=\"w-full\">\n              <h3 className=\"font-bold text-red-800 text-lg mb-2\">\n                ⚠️ مطلوب: إكمال بيانات اتفاقية عدم الإفصاح\n              </h3>\n              <p className=\"text-red-700 mb-4\">\n                لديك طلب اتفاقية عدم إفصاح من إحدى الشركات المهتمة بمشروعك. \n                يجب عليك إكمال بياناتك لتفعيل عملية التوقيع الإلكتروني عبر منصة صادق.\n              </p>\n              \n              <div className=\"bg-white rounded-lg p-4 border border-red-200 mb-4\">\n                <h4 className=\"font-semibold text-neutral-800 mb-2\">لماذا هذا مهم؟</h4>\n                <ul className=\"space-y-2 text-sm text-neutral-700\">\n                  <li className=\"flex items-start\">\n                    <Shield className=\"h-4 w-4 text-red-500 ml-2 mt-0.5 flex-shrink-0\" />\n                    <span>حماية معلومات مشروعك السرية من خلال اتفاقية قانونية ملزمة</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <CheckCircle className=\"h-4 w-4 text-red-500 ml-2 mt-0.5 flex-shrink-0\" />\n                    <span>السماح للشركة بالاطلاع على تفاصيل المشروع الكاملة</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <Users className=\"h-4 w-4 text-red-500 ml-2 mt-0.5 flex-shrink-0\" />\n                    <span>بناء الثقة المتبادلة بينك وبين الشركة المهتمة</span>\n                  </li>\n                </ul>\n              </div>\n              \n              <div className=\"flex flex-col sm:flex-row gap-3\">\n                <Button \n                  onClick={() => window.location.href = `/nda-complete?projectId=${projectId}&ndaId=${pendingNdaStatus.ndaId}`}\n                  className=\"bg-red-600 hover:bg-red-700 text-white font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all\"\n                  size=\"lg\"\n                >\n                  <Shield className=\"ml-2 h-5 w-5\" />\n                  إكمال البيانات الآن\n                </Button>\n                \n                <Button \n                  variant=\"outline\"\n                  onClick={() => window.location.href = '/notifications'}\n                  className=\"border-red-300 text-red-700 hover:bg-red-50\"\n                >\n                  عرض الإشعارات\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // إذا كان المستخدم صاحب المشروع، نعرض قائمة بالشركات التي وقعت اتفاقية عدم الإفصاح\n  if (isProjectOwner || isAdmin) {\n    return (\n      <div className=\"mb-8 bg-white p-5 rounded-lg border border-neutral-200\">\n        <div className=\"flex items-center mb-4\">\n          <Shield className=\"h-5 w-5 text-primary ml-2\" />\n          <h2 className=\"text-xl font-semibold\">اتفاقيات عدم الإفصاح</h2>\n        </div>\n        \n        {isLoadingProjectNdas ? (\n          <div className=\"text-neutral-600 text-sm\">جاري تحميل اتفاقيات عدم الإفصاح...</div>\n        ) : projectNdas && projectNdas.length > 0 ? (\n          <div>\n            <p className=\"text-neutral-700 mb-4 flex items-center\">\n              <Users className=\"h-4 w-4 ml-2\" />\n              {projectNdas.length} شركة تفاعلت مع اتفاقية عدم الإفصاح لهذا المشروع:\n            </p>\n            <div className=\"mt-3 space-y-3\">\n              {projectNdas?.map((nda: NdaAgreement) => {\n                const statusInfo = getStatusInfo(nda.status);\n                const StatusIcon = statusInfo.icon;\n                \n                return (\n                  <div \n                    key={nda.id} \n                    className={`border rounded-lg p-4 ${statusInfo.bgColor} ${statusInfo.borderColor}`}\n                  >\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <div className=\"flex items-center\">\n                        <StatusIcon className={`h-5 w-5 ${statusInfo.color} ml-2`} />\n                        <div className=\"font-medium text-lg\">\n                          {isAdmin \n                            ? nda.companySignatureInfo?.companyName || 'شركة غير محددة'\n                            : `شركة ${nda.companySignatureInfo?.companyName?.charAt(0) || \"G\"}...`}\n                        </div>\n                      </div>\n                      <Badge variant={statusInfo.badgeVariant} className={statusInfo.badgeClass}>\n                        {statusInfo.label}\n                      </Badge>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm\">\n                      {nda.companySignatureInfo && (\n                        <div>\n                          <span className=\"font-medium text-neutral-800\">ممثل الشركة:</span>\n                          <p className=\"text-neutral-600\">{nda.companySignatureInfo.name}</p>\n                        </div>\n                      )}\n                      \n                      {nda.status === 'signed' && nda.signedAt && (\n                        <div>\n                          <span className=\"font-medium text-neutral-800\">تاريخ التوقيع:</span>\n                          <p className=\"text-neutral-600\">\n                            {new Date(nda.signedAt).toLocaleDateString('ar-SA', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: 'numeric'\n                            })}\n                          </p>\n                        </div>\n                      )}\n                      \n                      {nda.status === 'invitations_sent' && (\n                        <div>\n                          <span className=\"font-medium text-neutral-800\">الحالة:</span>\n                          <p className=\"text-blue-600\">تم إرسال دعوات التوقيع عبر صادق</p>\n                        </div>\n                      )}\n                      \n                      <div>\n                        <span className=\"font-medium text-neutral-800\">تاريخ الإنشاء:</span>\n                        <p className=\"text-neutral-600\">\n                          {new Date(nda.createdAt).toLocaleDateString('ar-SA')}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    {nda.sadiqReferenceNumber && (\n                      <div className=\"mt-3 pt-3 border-t border-neutral-200\">\n                        <div className=\"text-xs text-neutral-500\">\n                          رقم المرجع في صادق: {nda.sadiqReferenceNumber}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <AlertCircle className=\"h-12 w-12 text-neutral-400 mx-auto mb-3\" />\n            <p className=\"text-neutral-600\">\n              لم يتم توقيع أي اتفاقية عدم إفصاح على هذا المشروع بعد.\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // إذا كان المستخدم شركة ويمكنه توقيع اتفاقية عدم الإفصاح\n  if (canSignNda) {\n    // Check if this company has already signed an NDA for this project\n    const currentCompanyNda = companyNda || (ndaId && hasSignedNda ? ndaData : null);\n    \n    return (\n      <div className=\"mb-8\">\n        <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-5\">\n          <div className=\"flex items-start\">\n            <Lock className=\"h-6 w-6 text-amber-600 mt-1 ml-3 flex-shrink-0\" />\n            <div className=\"w-full\">\n              <h3 className=\"font-semibold text-amber-800 text-lg mb-2\">هذا المشروع يتطلب اتفاقية عدم إفصاح</h3>\n              \n              {currentCompanyNda ? (\n                <div>\n                  {/* Company has signed - show status */}\n                  <div className=\"mb-4\">\n                    {currentCompanyNda.status === 'signed' ? (\n                      <div className=\"flex items-center mb-2\">\n                        <CheckCircle className=\"h-5 w-5 text-green-600 ml-2\" />\n                        <p className=\"text-green-700 font-medium\">\n                          تم توقيع الاتفاقية بنجاح! يمكنك الآن الاطلاع على تفاصيل المشروع وتقديم عرضك.\n                        </p>\n                      </div>\n                    ) : currentCompanyNda.status === 'invitations_sent' ? (\n                      <div className=\"flex items-center mb-2\">\n                        <Clock className=\"h-5 w-5 text-blue-600 ml-2\" />\n                        <p className=\"text-blue-700 font-medium\">\n                          تم إكمال بياناتك بنجاح. ننتظر رائد الأعمال لإكمال بياناته ثم سيتم إرسال دعوة الموافقة على الاتفاقية.\n                        </p>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center mb-2\">\n                        <AlertCircle className=\"h-5 w-5 text-amber-600 ml-2\" />\n                        <p className=\"text-amber-700 font-medium\">\n                          الاتفاقية قيد المعالجة...\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Status details */}\n                  <div className=\"bg-white rounded-lg p-4 border border-amber-200\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <span className=\"font-medium text-neutral-800\">حالة الاتفاقية:</span>\n                        <div className=\"mt-1\">\n                          {(() => {\n                            const statusInfo = getStatusInfo(currentCompanyNda.status);\n                            const StatusIcon = statusInfo.icon;\n                            return (\n                              <div className=\"flex items-center\">\n                                <StatusIcon className={`h-4 w-4 ${statusInfo.color} ml-2`} />\n                                <Badge variant={statusInfo.badgeVariant} className={statusInfo.badgeClass}>\n                                  {statusInfo.label}\n                                </Badge>\n                              </div>\n                            );\n                          })()}\n                        </div>\n                      </div>\n                      \n                      {currentCompanyNda.signedAt && (\n                        <div>\n                          <span className=\"font-medium text-neutral-800\">تاريخ التوقيع:</span>\n                          <p className=\"text-neutral-600 mt-1\">\n                            {new Date(currentCompanyNda.signedAt).toLocaleDateString('ar-SA', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: 'numeric'\n                            })}\n                          </p>\n                        </div>\n                      )}\n                      \n                      <div>\n                        <span className=\"font-medium text-neutral-800\">تاريخ الإنشاء:</span>\n                        <p className=\"text-neutral-600 mt-1\">\n                          {new Date(currentCompanyNda.createdAt).toLocaleDateString('ar-SA')}\n                        </p>\n                      </div>\n                      \n                      {currentCompanyNda.sadiqReferenceNumber && (\n                        <div>\n                          <span className=\"font-medium text-neutral-800\">رقم المرجع:</span>\n                          <p className=\"text-neutral-600 mt-1 text-xs font-mono\">\n                            {currentCompanyNda.sadiqReferenceNumber}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {currentCompanyNda.status === 'invitations_sent' && (\n                      <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                        <div className=\"flex items-start\">\n                          <Info className=\"h-5 w-5 text-blue-600 mt-0.5 ml-2 flex-shrink-0\" />\n                          <div className=\"text-sm text-blue-800\">\n                            <p className=\"font-medium mb-1\">الحالة الحالية:</p>\n                            <ul className=\"list-disc list-inside space-y-1 text-blue-700\">\n                              <li>✅ تم إكمال بياناتك بنجاح</li>\n                              <li>⏳ ننتظر رائد الأعمال لإكمال بياناته</li>\n                              <li>📧 سيتم إرسال دعوة الموافقة على الاتفاقية عبر صادق بعد إكمال جميع البيانات</li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <div>\n                  {/* Company hasn't signed - show sign option */}\n                  <p className=\"text-amber-700 mb-3\">\n                    يجب عليك توقيع اتفاقية عدم إفصاح قبل أن تتمكن من الاطلاع على كافة تفاصيل المشروع وتقديم عرضك.\n                  </p>\n                  \n                  <div className=\"flex items-start text-sm bg-white p-3 rounded border border-amber-200 mb-4\">\n                    <Info className=\"h-5 w-5 text-amber-600 ml-2 flex-shrink-0\" />\n                    <p className=\"text-neutral-700\">\n                      بتوقيع هذه الاتفاقية، أنت توافق على المحافظة على سرية جميع المعلومات المتعلقة بهذا المشروع وعدم مشاركتها مع أي طرف ثالث.\n                    </p>\n                  </div>\n                  \n                  <Button \n                    onClick={() => setIsNdaDialogOpen(true)}\n                    className=\"bg-gradient-to-l from-blue-600 to-primary hover:from-blue-700 hover:to-primary-dark\"\n                  >\n                    <Shield className=\"ml-2 h-5 w-5\" />\n                    إكمال بيانات اتفاقية عدم الإفصاح\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* مربع حوار توقيع اتفاقية عدم الإفصاح - only show if not signed */}\n        {!currentCompanyNda && (\n          <NdaDialog \n            projectId={projectId}\n            projectTitle={projectTitle}\n            isOpen={isNdaDialogOpen}\n            onOpenChange={setIsNdaDialogOpen}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return null;\n}","size_bytes":21370},"client/src/components/notifications/MessageNotification.tsx":{"content":"import React, { useEffect, useRef, useState } from 'react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Bell } from \"lucide-react\";\nimport { createNotificationSound } from './createNotificationSound';\n\ninterface MessageNotificationProps {\n  websocket: WebSocket | null;\n  onNewMessage?: (message: any) => void;\n}\n\nexport const MessageNotification: React.FC<MessageNotificationProps> = ({ \n  websocket,\n  onNewMessage\n}) => {\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const { toast } = useToast();\n  \n  useEffect(() => {\n    // إنشاء عنصر الصوت برمجياً (بدون الحاجة لملف خارجي)\n    try {\n      const soundUrl = createNotificationSound();\n      const audio = new Audio(soundUrl);\n      audio.preload = 'auto';\n      audioRef.current = audio;\n      \n      return () => {\n        // تنظيف عنصر الصوت عند إزالة المكون\n        if (audioRef.current) {\n          audioRef.current.pause();\n          audioRef.current = null;\n        }\n        \n        // تحرير الموارد\n        URL.revokeObjectURL(soundUrl);\n      };\n    } catch (error) {\n      console.error('خطأ في إنشاء صوت التنبيه:', error);\n      return () => {};\n    }\n  }, []);\n  \n  useEffect(() => {\n    if (!websocket) return;\n    \n    const handleNewMessage = (event: MessageEvent) => {\n      try {\n        const data = JSON.parse(event.data);\n        \n        // معالجة الرسائل الجديدة فقط\n        if (data.type === 'new_message') {\n          // استدعاء الدالة الخارجية لمعالجة الرسالة الجديدة\n          if (onNewMessage) {\n            onNewMessage(data.message);\n          }\n          \n          // تشغيل صوت الإشعار\n          if (audioRef.current) {\n            audioRef.current.play().catch(err => {\n              console.error('فشل تشغيل صوت الإشعار:', err);\n            });\n          }\n          \n          // عرض إشعار Toast\n          toast({\n            title: \"رسالة جديدة\",\n            description: `رسالة جديدة من ${data.message.senderName || 'مستخدم'}`,\n            action: (\n              <Bell className=\"h-4 w-4\" />\n            )\n          });\n        }\n      } catch (error) {\n        console.error('خطأ في معالجة رسالة WebSocket:', error);\n      }\n    };\n    \n    // إضافة مستمع للرسائل الجديدة\n    websocket.addEventListener('message', handleNewMessage);\n    \n    // تنظيف المستمع عند إزالة المكون\n    return () => {\n      websocket.removeEventListener('message', handleNewMessage);\n    };\n  }, [websocket, onNewMessage, toast]);\n  \n  // هذا المكون لا يعرض أي واجهة مستخدم\n  return null;\n};\n\nexport default MessageNotification;","size_bytes":2853},"client/src/components/notifications/UnreadIndicator.tsx":{"content":"import React from 'react';\n\ninterface UnreadIndicatorProps {\n  count: number;\n  onClick?: () => void;\n  className?: string;\n}\n\nconst UnreadIndicator: React.FC<UnreadIndicatorProps> = ({ \n  count, \n  onClick,\n  className = ''\n}) => {\n  if (count <= 0) return null;\n  \n  return (\n    <div \n      className={`inline-flex items-center justify-center w-5 h-5 text-xs font-bold text-white bg-red-500 rounded-full ${className}`}\n      onClick={onClick}\n    >\n      {count > 9 ? '9+' : count}\n    </div>\n  );\n};\n\nexport default UnreadIndicator;","size_bytes":536},"client/src/components/notifications/createNotificationSound.ts":{"content":"/**\n * إنشاء صوت التنبيه برمجياً (لا نحتاج لملف خارجي)\n * هذا يولد نغمة بسيطة ويعيدها كـ blob URL يمكن استخدامه في التنبيهات\n */\nexport const createNotificationSound = (): string => {\n  // إنشاء سياق الصوت\n  const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n  \n  // المدة الزمنية (بالثواني)\n  const duration = 0.2;\n  \n  // معدل العينات\n  const sampleRate = audioContext.sampleRate;\n  \n  // عدد العينات\n  const numSamples = Math.ceil(duration * sampleRate);\n  \n  // إنشاء buffer الصوت\n  const buffer = audioContext.createBuffer(1, numSamples, sampleRate);\n  \n  // الحصول على البيانات\n  const data = buffer.getChannelData(0);\n  \n  // ملء buffer بنغمة صافرة (2000Hz)\n  const frequency = 2000;\n  for (let i = 0; i < numSamples; i++) {\n    // استخدام دالة الجيب لإنشاء نغمة صافرة\n    data[i] = Math.sin(2 * Math.PI * frequency * (i / sampleRate));\n    \n    // تطبيق خافت تدريجي للصوت (fade out)\n    data[i] *= 1 - i / numSamples;\n  }\n  \n  // تحويل buffer الصوت إلى wav\n  const wavData = audioBufferToWav(buffer);\n  \n  // إنشاء Blob من بيانات WAV\n  const blob = new Blob([wavData], { type: 'audio/wav' });\n  \n  // إنشاء عنوان URL للبلوب\n  return URL.createObjectURL(blob);\n};\n\n// تحويل AudioBuffer إلى تنسيق WAV باستخدام تشفير PCM\nfunction audioBufferToWav(buffer: AudioBuffer): ArrayBuffer {\n  const numOfChannels = buffer.numberOfChannels;\n  const sampleRate = buffer.sampleRate;\n  const format = 1; // PCM\n  const bitDepth = 16;\n  \n  // احتساب حجم الملف\n  const bytesPerSample = bitDepth / 8;\n  const blockAlign = numOfChannels * bytesPerSample;\n  const byteRate = sampleRate * blockAlign;\n  const dataSize = buffer.length * blockAlign;\n  \n  // إنشاء ArrayBuffer للملف بأكمله\n  const arrayBuffer = new ArrayBuffer(44 + dataSize);\n  const view = new DataView(arrayBuffer);\n  \n  // كتابة رأس الملف WAV\n  // \"RIFF\" في little-endian\n  view.setUint8(0, 0x52);  // R\n  view.setUint8(1, 0x49);  // I\n  view.setUint8(2, 0x46);  // F\n  view.setUint8(3, 0x46);  // F\n  \n  // حجم الملف مطروحًا منه 8 بايت\n  view.setUint32(4, 36 + dataSize, true);\n  \n  // \"WAVE\" في little-endian\n  view.setUint8(8, 0x57);   // W\n  view.setUint8(9, 0x41);   // A\n  view.setUint8(10, 0x56);  // V\n  view.setUint8(11, 0x45);  // E\n  \n  // \"fmt \" في little-endian\n  view.setUint8(12, 0x66);  // f\n  view.setUint8(13, 0x6d);  // m\n  view.setUint8(14, 0x74);  // t\n  view.setUint8(15, 0x20);  // (space)\n  \n  // حجم قسم fmt (16 للPCM)\n  view.setUint32(16, 16, true);\n  \n  // صيغة الصوت (1 للPCM)\n  view.setUint16(20, format, true);\n  \n  // عدد القنوات\n  view.setUint16(22, numOfChannels, true);\n  \n  // معدل العينات\n  view.setUint32(24, sampleRate, true);\n  \n  // معدل البايتات\n  view.setUint32(28, byteRate, true);\n  \n  // محاذاة البايتات\n  view.setUint16(32, blockAlign, true);\n  \n  // عمق البت\n  view.setUint16(34, bitDepth, true);\n  \n  // \"data\" في little-endian\n  view.setUint8(36, 0x64);  // d\n  view.setUint8(37, 0x61);  // a\n  view.setUint8(38, 0x74);  // t\n  view.setUint8(39, 0x61);  // a\n  \n  // حجم بيانات الصوت\n  view.setUint32(40, dataSize, true);\n  \n  // كتابة بيانات الصوت\n  const offset = 44;\n  const buffers = [];\n  \n  for (let i = 0; i < numOfChannels; i++) {\n    buffers.push(buffer.getChannelData(i));\n  }\n  \n  for (let i = 0; i < buffer.length; i++) {\n    for (let channel = 0; channel < numOfChannels; channel++) {\n      const sample = Math.max(-1, Math.min(1, buffers[channel][i]));\n      const value = Math.floor(sample < 0 ? sample * 0x8000 : sample * 0x7FFF);\n      view.setInt16(offset + (i * blockAlign) + (channel * bytesPerSample), value, true);\n    }\n  }\n  \n  return arrayBuffer;\n}","size_bytes":4090},"client/src/components/offers/CreateOfferForm.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\n\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Loader2 } from \"lucide-react\";\n\n// تعريف نموذج التحقق من صحة البيانات\nconst offerSchema = z.object({\n  amount: z.string()\n    .min(1, \"مبلغ العرض مطلوب\")\n    .refine((val) => /^[0-9,]+$/.test(val), {\n      message: \"يجب أن يحتوي مبلغ العرض على أرقام فقط (يسمح بالفواصل)\"\n    })\n    .transform((val) => val.replace(/,/g, \"\")), // إزالة الفواصل للتخزين\n  duration: z.string()\n    .min(1, \"مدة التنفيذ مطلوبة\")\n    .max(100, \"مدة التنفيذ طويلة جداً\"),\n  description: z.string()\n    .min(20, \"وصف العرض يجب أن يحتوي على 20 حرف على الأقل\")\n    .max(5000, \"الوصف طويل جداً، الحد الأقصى 5000 حرف\"),\n});\n\ntype OfferFormValues = z.infer<typeof offerSchema>;\n\ninterface CreateOfferFormProps {\n  projectId: number;\n  onSuccess?: () => void;\n}\n\nexport function CreateOfferForm({ projectId, onSuccess }: CreateOfferFormProps) {\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const form = useForm<OfferFormValues>({\n    resolver: zodResolver(offerSchema),\n    defaultValues: {\n      amount: \"\",\n      duration: \"\",\n      description: \"\",\n    },\n  });\n\n  const onSubmit = async (data: OfferFormValues) => {\n    try {\n      setIsSubmitting(true);\n      \n      // إرسال العرض إلى الخادم\n      const res = await apiRequest(\"POST\", `/api/projects/${projectId}/offers`, data);\n      \n      if (!res.ok) {\n        const error = await res.json();\n        throw new Error(error.message || \"حدث خطأ أثناء إرسال العرض\");\n      }\n      \n      toast({\n        title: \"تم إرسال العرض بنجاح\",\n        description: \"سيتم إشعار صاحب المشروع بعرضك\",\n      });\n      \n      // تحديث البيانات المخزنة\n      queryClient.invalidateQueries({ queryKey: [`/api/projects/${projectId}/offers`] });\n      \n      // إعادة ضبط النموذج\n      form.reset();\n      \n      // تنفيذ دالة النجاح إذا كانت موجودة\n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (error) {\n      console.error(error);\n      toast({\n        title: \"فشل إرسال العرض\",\n        description: error instanceof Error ? error.message : \"حدث خطأ غير متوقع\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"text-center\">تقديم عرض سعر</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"amount\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>قيمة العرض (بالريال السعودي)</FormLabel>\n                  <FormControl>\n                    <Input {...field} dir=\"rtl\" placeholder=\"15,000\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"duration\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>مدة التنفيذ</FormLabel>\n                  <FormControl>\n                    <Input {...field} dir=\"rtl\" placeholder=\"شهرين\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <FormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>تفاصيل العرض</FormLabel>\n                  <FormControl>\n                    <Textarea \n                      {...field} \n                      placeholder=\"اشرح تفاصيل عرضك وكيفية تنفيذ المشروع واي ميزات إضافية تقدمها...\" \n                      rows={6}\n                      dir=\"rtl\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n              {isSubmitting ? (\n                <>\n                  <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                  جاري الإرسال...\n                </>\n              ) : (\n                \"إرسال العرض\"\n              )}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":5524},"client/src/components/offers/OffersList.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Loader2, CheckCircle, AlertCircle, Clock, Banknote, CalendarDays, MessageSquare } from \"lucide-react\";\nimport { PaymentDialog } from \"../offers/PaymentDialog\";\n\ninterface Offer {\n  id: number;\n  projectId: number;\n  companyId: number;\n  amount: string;\n  duration: string;\n  description: string;\n  status: string;\n  depositPaid: boolean;\n  depositAmount: string | null;\n  depositDate: string | null;\n  contactRevealed: boolean;\n  createdAt: string;\n  companyName?: string;\n  companyLogo?: string;\n  companyVerified?: boolean;\n  companyRating?: number;\n  companyEmail?: string;\n  companyUsername?: string;\n  companyUserId?: number;\n  companyContactRevealed?: boolean;\n}\n\ninterface OffersListProps {\n  projectId: number;\n  isOwner: boolean;\n}\n\nexport function OffersList({ projectId, isOwner }: OffersListProps) {\n  const { toast } = useToast();\n  const [selectedOffer, setSelectedOffer] = useState<Offer | null>(null);\n  const [showPaymentDialog, setShowPaymentDialog] = useState(false);\n\n  // جلب العروض الخاصة بالمشروع\n  const { data: offers, isLoading, error, refetch } = useQuery({\n    queryKey: [`/api/projects/${projectId}/offers`],\n    enabled: Boolean(projectId), // تفعيل الاستعلام فقط عندما يكون هناك معرف للمشروع\n    staleTime: 0, // جعل البيانات سريعة التقادم للحصول على أحدث البيانات دائماً\n  });\n\n  // قبول العرض\n  const acceptOffer = async (offerId: number) => {\n    try {\n      const res = await apiRequest(\"PATCH\", `/api/offers/${offerId}/accept`, {});\n      \n      if (!res.ok) {\n        const error = await res.json();\n        throw new Error(error.message || \"فشل قبول العرض\");\n      }\n      \n      const data = await res.json();\n      setSelectedOffer(data);\n      \n      // إذا كان العرض يتطلب دفع العربون، اعرض نافذة الدفع\n      if (data.paymentRequired) {\n        setShowPaymentDialog(true);\n      }\n      \n      // تحديث قائمة العروض\n      queryClient.invalidateQueries({ queryKey: [`/api/projects/${projectId}/offers`] });\n      \n      toast({\n        title: \"تم قبول العرض\",\n        description: data.paymentRequired \n          ? \"الرجاء دفع العربون لاستكمال العملية\"\n          : \"تم قبول العرض بنجاح\",\n      });\n    } catch (error) {\n      console.error(error);\n      toast({\n        title: \"فشل قبول العرض\",\n        description: error instanceof Error ? error.message : \"حدث خطأ غير متوقع\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // استعراض حالة العروض\n  const renderStatus = (status: string, depositPaid: boolean) => {\n    if (status === 'accepted' && depositPaid) {\n      return <Badge className=\"bg-green-500\">تم قبوله ودفع العربون</Badge>;\n    }\n    \n    if (status === 'accepted') {\n      return <Badge className=\"bg-yellow-500\">مقبول - بانتظار الدفع</Badge>;\n    }\n    \n    if (status === 'pending') {\n      return <Badge variant=\"outline\" className=\"text-blue-500 border-blue-500\">قيد المراجعة</Badge>;\n    }\n    \n    if (status === 'rejected') {\n      return <Badge variant=\"destructive\">مرفوض</Badge>;\n    }\n    \n    return <Badge>{status}</Badge>;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-10\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        <span className=\"mr-2\">جاري تحميل العروض...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center py-10 text-destructive\">\n        <AlertCircle className=\"h-6 w-6 ml-2\" />\n        <span>حدث خطأ أثناء تحميل العروض</span>\n      </div>\n    );\n  }\n\n  // إذا لم تكن هناك عروض\n  if (!offers || (Array.isArray(offers) && offers.length === 0)) {\n    if (!isOwner) {\n      // اعرض الإحصائيات إذا كانت متوفرة\n      if (offers && 'count' in offers) {\n        return (\n          <Card>\n            <CardHeader>\n              <CardTitle>إحصائيات العروض</CardTitle>\n              <CardDescription>\n                يوجد {offers.count || 0} عرض على هذا المشروع\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {offers.minAmount && offers.maxAmount ? (\n                <p className=\"text-lg font-medium\">\n                  تتراوح الأسعار بين {offers.minAmount} و {offers.maxAmount} ريال\n                </p>\n              ) : (\n                <p>لا توجد معلومات عن الأسعار حتى الآن</p>\n              )}\n            </CardContent>\n          </Card>\n        );\n      }\n      \n      return (\n        <div className=\"text-center py-8\">\n          <p>لا يمكن عرض تفاصيل العروض إلا للشركات المقدمة للعروض أو لصاحب المشروع</p>\n        </div>\n      );\n    }\n    \n    return (\n      <Card className=\"text-center py-12\">\n        <CardContent>\n          <p className=\"text-xl\">لا توجد عروض مقدمة على هذا المشروع حتى الآن</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // عرض قائمة العروض\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">العروض المقدمة على المشروع</h2>\n      \n      {/* عرض عدد العروض كاختبار */}\n      <div className=\"mb-4 p-3 bg-blue-50 rounded-lg\">\n        <p className=\"text-center\">\n          يوجد <strong>{Array.isArray(offers) ? offers.length : 0}</strong> عرض على هذا المشروع\n        </p>\n      </div>\n      \n      <div className=\"grid gap-6\">\n        {Array.isArray(offers) && offers.map((offer) => (\n          <Card key={offer.id} className=\"overflow-hidden hover:shadow-lg transition-shadow duration-300\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  {offer.companyLogo && (\n                    <Avatar className=\"h-10 w-10 ml-3\">\n                      <AvatarImage src={offer.companyLogo} alt={offer.companyName || \"\"} />\n                      <AvatarFallback>{offer.companyName?.charAt(0) || \"C\"}</AvatarFallback>\n                    </Avatar>\n                  )}\n                  <div>\n                    <CardTitle className=\"flex items-center\">\n                      {offer.companyName}\n                      {offer.companyVerified && <CheckCircle className=\"text-primary h-4 w-4 mr-1\" />}\n                    </CardTitle>\n                    {offer.companyRating && (\n                      <div className=\"flex items-center mt-1\">\n                        <span className=\"ml-1\">{offer.companyRating}</span>\n                        <div className=\"flex\">\n                          {Array.from({ length: 5 }).map((_, i) => (\n                            <span key={i} className={`text-sm ${i < Math.floor(offer.companyRating || 0) ? 'text-yellow-500' : 'text-gray-300'}`}>★</span>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div>\n                  {renderStatus(offer.status, offer.depositPaid)}\n                </div>\n              </div>\n            </CardHeader>\n            \n            <CardContent className=\"space-y-4\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex items-center\">\n                  <Banknote className=\"h-5 w-5 ml-2 text-primary\" />\n                  <span className=\"font-bold\">قيمة العرض:</span>\n                  <span className=\"mr-2\">{offer.amount} ريال</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <CalendarDays className=\"h-5 w-5 ml-2 text-primary\" />\n                  <span className=\"font-bold\">مدة التنفيذ:</span>\n                  <span className=\"mr-2\">{offer.duration}</span>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-bold mb-2\">تفاصيل العرض:</h4>\n                <p className=\"text-gray-700 whitespace-pre-line\">{offer.description}</p>\n              </div>\n              \n              <div className=\"flex items-center text-sm text-gray-500\">\n                <Clock className=\"h-4 w-4 ml-1\" />\n                <span>تم تقديم العرض منذ {new Date(offer.createdAt).toLocaleDateString('ar-SA')}</span>\n              </div>\n            </CardContent>\n            \n            <Separator />\n            \n            {isOwner && offer.status === 'pending' && (\n              <CardFooter className=\"flex justify-between p-4\">\n                <AlertDialog>\n                  <AlertDialogTrigger asChild>\n                    <Button variant=\"default\">قبول العرض</Button>\n                  </AlertDialogTrigger>\n                  <AlertDialogContent>\n                    <AlertDialogHeader>\n                      <AlertDialogTitle>تأكيد قبول العرض</AlertDialogTitle>\n                      <AlertDialogDescription>\n                        هل أنت متأكد من قبول هذا العرض؟ سيتطلب ذلك دفع عربون قدره 2.5% من قيمة العرض ({parseInt(offer.amount.replace(/[^0-9]/g, '')) * 0.025} ريال).\n                        <br />\n                        <br />\n                        بعد قبول العرض ودفع العربون، ستتمكن من رؤية معلومات التواصل مع الشركة.\n                      </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                      <AlertDialogCancel>إلغاء</AlertDialogCancel>\n                      <AlertDialogAction onClick={() => acceptOffer(offer.id)}>\n                        تأكيد القبول\n                      </AlertDialogAction>\n                    </AlertDialogFooter>\n                  </AlertDialogContent>\n                </AlertDialog>\n                \n                <Button variant=\"outline\">\n                  <MessageSquare className=\"ml-2 h-4 w-4\" />\n                  التواصل مع الشركة\n                </Button>\n              </CardFooter>\n            )}\n            \n            {/* قسم العروض المقبولة مع الدفع - تم تعديله لتبسيط شرط العرض وضمان ظهور معلومات الشركة */}\n            {offer.status === 'accepted' && offer.depositPaid && (\n              <CardFooter className=\"p-4 bg-green-50\">\n                <div className=\"w-full\">\n                  <h4 className=\"font-bold text-green-700 mb-2\">تم قبول هذا العرض</h4>\n                  <p className=\"mb-4\">\n                    تم دفع العربون وكشف معلومات التواصل. يمكنك الآن التواصل مباشرة مع الشركة.\n                  </p>\n                  \n                  {/* عرض معلومات التواصل مع الشركة - تم تحسين طريقة عرض المعلومات */}\n                  <div className=\"p-4 rounded-lg bg-white border border-green-200 mt-2\">\n                    <div className=\"flex items-center mb-2\">\n                      <h5 className=\"font-bold text-green-800\">معلومات التواصل:</h5>\n                    </div>\n                    <div className=\"grid gap-2\">\n                      <div className=\"flex items-center\">\n                        <span className=\"font-semibold ml-2\">الشركة:</span>\n                        <span>{offer.companyName}</span>\n                      </div>\n                      {offer.companyEmail && (\n                        <div className=\"flex items-center\">\n                          <span className=\"font-semibold ml-2\">البريد الإلكتروني:</span>\n                          <a href={`mailto:${offer.companyEmail}`} className=\"text-primary hover:underline\">\n                            {offer.companyEmail}\n                          </a>\n                        </div>\n                      )}\n                      {offer.companyUserId && (\n                        <div className=\"mt-2\">\n                          <Button \n                            variant=\"outline\" \n                            className=\"w-full\" \n                            onClick={() => window.location.href = `/messages?userId=${offer.companyUserId}&projectId=${projectId}`}\n                          >\n                            <MessageSquare className=\"ml-2 h-4 w-4\" />\n                            التواصل عبر الرسائل\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </CardFooter>\n            )}\n            \n            {offer.status === 'accepted' && !offer.depositPaid && (\n              <CardFooter className=\"p-4 bg-yellow-50\">\n                <div className=\"w-full flex justify-between items-center\">\n                  <div>\n                    <h4 className=\"font-bold text-yellow-700\">مطلوب دفع العربون</h4>\n                    <p>يرجى دفع العربون لاستكمال العملية وكشف معلومات التواصل</p>\n                  </div>\n                  <Button \n                    onClick={() => {\n                      setSelectedOffer(offer);\n                      setShowPaymentDialog(true);\n                    }}\n                  >\n                    دفع العربون\n                  </Button>\n                </div>\n              </CardFooter>\n            )}\n          </Card>\n        ))}\n      </div>\n      \n      {/* نافذة الدفع */}\n      {selectedOffer && (\n        <PaymentDialog\n          isOpen={showPaymentDialog}\n          onClose={() => {\n            setShowPaymentDialog(false);\n            // إعادة تحميل البيانات عند إغلاق النافذة أيضاً للتأكد من تحديث البيانات\n            refetch();\n          }}\n          offer={selectedOffer}\n          onPaymentSuccess={() => {\n            // إلغاء التخزين المؤقت وإعادة تحميل البيانات فوراً\n            queryClient.invalidateQueries({ queryKey: [`/api/projects/${projectId}/offers`] });\n            setTimeout(() => {\n              refetch();\n            }, 500);\n          }}\n        />\n      )}\n    </div>\n  );\n}","size_bytes":15523},"client/src/components/offers/PaymentDialog.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Loader2, CreditCard } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { \n  Card, \n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter \n} from \"@/components/ui/card\";\n\ninterface Offer {\n  id: number;\n  projectId: number;\n  companyId: number;\n  amount: string;\n  duration: string;\n  description: string;\n  status: string;\n  depositPaid: boolean;\n  depositAmount: string | null;\n  depositDate: string | null;\n  contactRevealed: boolean;\n  createdAt: string;\n  companyName?: string;\n  companyLogo?: string;\n  companyVerified?: boolean;\n  companyRating?: number;\n  companyEmail?: string;\n  companyUsername?: string;\n}\n\ninterface PaymentDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  offer: Offer;\n  onPaymentSuccess: () => void;\n}\n\nexport function PaymentDialog({\n  isOpen,\n  onClose,\n  offer,\n  onPaymentSuccess,\n}: PaymentDialogProps) {\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [paymentError, setPaymentError] = useState<string | null>(null);\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  \n  // بيانات البطاقة\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n  const [cardName, setCardName] = useState(\"\");\n\n  // حساب مبلغ العربون (2.5% من قيمة العرض) إذا لم يكن محدداً بالفعل\n  const depositAmount = offer.depositAmount || \n    Math.round(parseFloat(offer.amount.replace(/[^0-9.]/g, '')) * 0.025).toString();\n  \n  // عند إغلاق النافذة، نعيد تعيين الحالات\n  useEffect(() => {\n    if (!isOpen) {\n      setPaymentError(null);\n      setPaymentSuccess(false);\n      setCardNumber(\"\");\n      setExpiryDate(\"\");\n      setCvv(\"\");\n      setCardName(\"\");\n    }\n  }, [isOpen]);\n\n  // تنسيق رقم البطاقة أثناء الكتابة\n  const formatCardNumber = (value: string) => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n    const matches = v.match(/\\d{4,16}/g);\n    const match = matches && matches[0] || '';\n    const parts = [];\n    \n    for (let i = 0, len = match.length; i < len; i += 4) {\n      parts.push(match.substring(i, i + 4));\n    }\n    \n    if (parts.length) {\n      return parts.join(' ');\n    } else {\n      return value;\n    }\n  };\n  \n  // تنسيق تاريخ الانتهاء\n  const formatExpiryDate = (value: string) => {\n    // إزالة أي شيء ما عدا الأرقام\n    const v = value.replace(/[^0-9]/g, '');\n    \n    // إذا كان المستخدم قام بحذف آخر رقم عند \"/\"، نعود للنص دون \"/\"\n    if (value.endsWith('/')) {\n      return value.substring(0, value.length - 1);\n    }\n    \n    // تنسيق MM/YY\n    if (v.length >= 1 && v.length <= 2) {\n      return v;\n    } else if (v.length > 2) {\n      // إضافة \"/\" بعد أول رقمين\n      return `${v.substring(0, 2)}/${v.substring(2, 4)}`;\n    }\n    \n    return value;\n  };\n  \n  // التحقق من صلاحية البطاقة\n  const isValidCardDetails = () => {\n    const cleanCardNumber = cardNumber.replace(/\\s+/g, '');\n    \n    // التحقق من رقم البطاقة (يجب أن يكون 16 رقم)\n    if (!/^\\d{16}$/.test(cleanCardNumber)) {\n      setPaymentError(\"رقم البطاقة يجب أن يكون 16 رقم\");\n      return false;\n    }\n    \n    // التحقق من تاريخ الانتهاء (MM/YY)\n    if (!/^\\d{2}\\/\\d{2}$/.test(expiryDate)) {\n      setPaymentError(\"صيغة تاريخ الانتهاء غير صحيحة، يجب أن تكون MM/YY\");\n      return false;\n    }\n    \n    // التحقق من الشهر (01-12)\n    const month = parseInt(expiryDate.substring(0, 2));\n    if (month < 1 || month > 12) {\n      setPaymentError(\"الشهر يجب أن يكون بين 01 و 12\");\n      return false;\n    }\n    \n    // التحقق من السنة (مقارنة بالسنة الحالية)\n    const currentYear = new Date().getFullYear() % 100; // آخر رقمين من السنة الحالية\n    const year = parseInt(expiryDate.substring(3, 5));\n    \n    if (year < currentYear) {\n      setPaymentError(\"البطاقة منتهية الصلاحية\");\n      return false;\n    }\n    \n    // التحقق من رمز التحقق CVV (3-4 أرقام)\n    if (!/^\\d{3,4}$/.test(cvv)) {\n      setPaymentError(\"رمز التحقق يجب أن يكون 3 أو 4 أرقام\");\n      return false;\n    }\n    \n    // التحقق من اسم حامل البطاقة\n    if (cardName.trim().length < 3) {\n      setPaymentError(\"يرجى إدخال اسم حامل البطاقة بشكل صحيح\");\n      return false;\n    }\n    \n    return true;\n  };\n\n  // معالجة تقديم نموذج الدفع\n  const handlePaymentSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setPaymentError(null);\n    \n    // التحقق من البيانات سيقوم بتعيين رسالة الخطأ تلقائياً\n    if (!isValidCardDetails()) {\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    try {\n      // في بيئة الإنتاج، هنا سيتم إرسال البيانات لواجهة برمجة تطبيقات ميسر\n      // لكن لأغراض العرض التوضيحي سنقوم بمحاكاة نجاح عملية الدفع\n\n      // نعتبر أن الدفع نجح إذا كان رقم البطاقة هو رقم الاختبار\n      const isTestCard = cardNumber.replace(/\\s+/g, '') === '4111111111111111';\n      \n      if (!isTestCard) {\n        throw new Error(\"فشل الدفع. للتجربة، استخدم رقم البطاقة 4111111111111111\");\n      }\n\n      // محاكاة تأخير الشبكة\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // إرسال معلومات الدفع إلى الخادم\n      console.log(\"إرسال طلب دفع العربون للعرض رقم:\", offer.id);\n      const res = await apiRequest(\"POST\", `/api/offers/${offer.id}/pay-deposit`, {\n        paymentId: `test-${Date.now()}`,\n        depositAmount\n      });\n      \n      // التأكد من أن الاستجابة ناجحة\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.message || \"فشل تأكيد الدفع\");\n      }\n      \n      const data = await res.json().catch(() => ({}));\n      console.log(\"استجابة دفع العربون:\", data);\n      \n      // تحديث الواجهة بناءً على الاستجابة\n      if (data.companyContact) {\n        console.log(\"تم استلام معلومات الشركة:\", data.companyContact);\n        // تحديث بيانات العرض مع معلومات الشركة الجديدة\n        offer.companyEmail = data.companyContact.email;\n        offer.companyUsername = data.companyContact.username;\n      }\n      \n      setPaymentSuccess(true);\n      \n      toast({\n        title: \"تم الدفع بنجاح\",\n        description: \"تم دفع العربون وكشف معلومات التواصل مع الشركة\",\n      });\n      \n      // إعادة تحميل البيانات قبل إغلاق النافذة\n      onPaymentSuccess();\n      \n      // انتظار فترة لعرض رسالة النجاح ثم إغلاق النافذة\n      setTimeout(() => {\n        onClose();\n      }, 2000);\n      \n    } catch (error) {\n      console.error(error);\n      setPaymentError(error instanceof Error ? error.message : \"حدث خطأ أثناء معالجة الدفع\");\n      \n      toast({\n        title: \"فشل عملية الدفع\",\n        description: error instanceof Error ? error.message : \"حدث خطأ غير متوقع\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-md md:max-w-lg lg:max-w-xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>دفع العربون</DialogTitle>\n          <DialogDescription>\n            يرجى دفع مبلغ العربون (2.5% من قيمة العرض) لاستكمال عملية قبول العرض وكشف معلومات التواصل مع الشركة.\n            <br />\n            <strong className=\"block mt-2\">\n              المبلغ المطلوب: {depositAmount} ريال سعودي\n            </strong>\n          </DialogDescription>\n        </DialogHeader>\n\n        {isLoading ? (\n          <div className=\"flex flex-col items-center justify-center py-8\">\n            <Loader2 className=\"h-8 w-8 animate-spin mb-2\" />\n            <p>جاري معالجة الدفع...</p>\n          </div>\n        ) : paymentSuccess ? (\n          <div className=\"text-center py-6\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                width=\"32\" \n                height=\"32\" \n                viewBox=\"0 0 24 24\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                strokeWidth=\"2\" \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                className=\"text-green-600\"\n              >\n                <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">تم الدفع بنجاح</h3>\n            <p className=\"text-gray-600 mb-4\">\n              لقد تم خصم {depositAmount} ريال سعودي من بطاقتك بنجاح.\n              <br />\n              يمكنك الآن الاطلاع على معلومات التواصل مع الشركة.\n            </p>\n          </div>\n        ) : paymentError ? (\n          <div className=\"text-center py-6\">\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                width=\"32\" \n                height=\"32\" \n                viewBox=\"0 0 24 24\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                strokeWidth=\"2\" \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                className=\"text-red-600\"\n              >\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n                <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-bold mb-2\">فشل عملية الدفع</h3>\n            <p className=\"text-red-500 mb-4\">{paymentError}</p>\n            <Button onClick={() => setPaymentError(null)}>إعادة المحاولة</Button>\n          </div>\n        ) : (\n          <form onSubmit={handlePaymentSubmit}>\n            <Card className=\"mb-4 border-2 border-primary/10\">\n              <CardHeader className=\"bg-primary/5\">\n                <CardTitle className=\"flex items-center justify-between\">\n                  <span>بطاقة الدفع</span>\n                  <CreditCard className=\"h-5 w-5 text-primary\" />\n                </CardTitle>\n                <CardDescription>\n                  أدخل بيانات بطاقتك لإتمام عملية الدفع\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"p-4 space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cardName\">الاسم على البطاقة</Label>\n                  <Input \n                    id=\"cardName\" \n                    placeholder=\"محمد عبدالله\" \n                    value={cardName}\n                    onChange={(e) => setCardName(e.target.value)}\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cardNumber\">رقم البطاقة</Label>\n                  <Input \n                    id=\"cardNumber\" \n                    placeholder=\"0000 0000 0000 0000\" \n                    value={cardNumber}\n                    onChange={(e) => setCardNumber(formatCardNumber(e.target.value))}\n                    maxLength={19}\n                    required\n                  />\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"expiryDate\">تاريخ الانتهاء</Label>\n                    <Input \n                      id=\"expiryDate\" \n                      placeholder=\"MM/YY\" \n                      value={expiryDate}\n                      onChange={(e) => setExpiryDate(formatExpiryDate(e.target.value))}\n                      maxLength={5}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"cvv\">رمز التحقق (CVV)</Label>\n                    <Input \n                      id=\"cvv\" \n                      placeholder=\"123\" \n                      value={cvv}\n                      onChange={(e) => setCvv(e.target.value.replace(/[^0-9]/g, ''))}\n                      maxLength={4}\n                      required\n                    />\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"bg-primary/5 flex justify-between p-4\">\n                <div className=\"text-sm text-primary font-semibold\">\n                  المبلغ: {depositAmount} ريال سعودي\n                </div>\n                <Button type=\"submit\" disabled={isLoading}>\n                  {isLoading ? (\n                    <span className=\"flex items-center\">\n                      <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                      جاري الدفع...\n                    </span>\n                  ) : (\n                    <span>إتمام الدفع</span>\n                  )}\n                </Button>\n              </CardFooter>\n            </Card>\n            \n            <div className=\"text-sm text-gray-500 mt-4 p-4 bg-gray-50 rounded-lg\">\n              <p>ملاحظة: سيتم خصم هذا المبلغ من القيمة الإجمالية للعقد مع الشركة.</p>\n              <p className=\"mt-2 font-medium\">بيانات بطاقة الاختبار: <span className=\"text-primary font-bold\">4111111111111111</span>، أي تاريخ انتهاء مستقبلي، وأي رمز تحقق من ثلاثة أرقام.</p>\n            </div>\n          </form>\n        )}\n        \n        <DialogFooter className=\"mt-4\">\n          {!isLoading && !paymentSuccess && (\n            <Button variant=\"outline\" onClick={onClose}>\n              إلغاء\n            </Button>\n          )}\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":15544},"client/src/components/projects/ProjectCard.tsx":{"content":"import { Link } from \"wouter\";\nimport { CalendarIcon, Banknote } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { truncateText } from \"@/lib/utils\";\nimport { LazyImage } from \"@/components/ui/lazy-image\";\n\ntype ProjectProps = {\n  project: {\n    id: number;\n    title: string;\n    description: string;\n    budget: string;\n    duration: string;\n    skills: string[];\n    status: string;\n    highlightStatus?: string;\n  };\n};\n\nconst ProjectCard = ({ project }: ProjectProps) => {\n  const getHighlightBadgeColor = (status?: string) => {\n    if (!status) return null;\n    \n    if (status === \"عالي الطلب\") {\n      return \"bg-accent-light text-accent-dark\";\n    } else if (status === \"جديد\") {\n      return \"bg-primary-light text-primary-dark\";\n    } else {\n      return \"bg-neutral-100 text-neutral-700\";\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden hover-card-lift fade-in transform transition-all duration-300 hover:shadow-md\">\n      <div className=\"p-3 sm:p-4 md:p-6\">\n        <div className=\"flex justify-between items-start mb-3 md:mb-4\">\n          <div className=\"flex items-start\">\n            <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-primary-light/20 rounded-lg flex items-center justify-center mr-3 shadow-sm overflow-hidden\">\n              <LazyImage\n                src={`https://ui-avatars.com/api/?name=${encodeURIComponent(project.title)}&background=eefffc&color=0e8a65&size=60&font-size=0.33`}\n                alt={project.title}\n                className=\"w-full h-full object-cover\"\n                loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full\"\n              />\n            </div>\n            <h3 className=\"font-heading font-semibold text-base sm:text-lg md:text-xl transition-all duration-300 hover:text-primary hover:translate-x-1 leading-tight\">{project.title}</h3>\n          </div>\n          {project.highlightStatus && (\n            <span className={`text-xs sm:text-sm font-medium px-2 py-0.5 rounded-full ${getHighlightBadgeColor(project.highlightStatus)} transition-all duration-300 hover:shadow-md hover:scale-105 pulse-effect whitespace-nowrap mr-1`}>\n              {project.highlightStatus}\n            </span>\n          )}\n        </div>\n        <p className=\"text-neutral-600 text-xs sm:text-sm md:text-base mb-3 md:mb-4 transition-all duration-300 hover:text-neutral-800\">{truncateText(project.description, window.innerWidth < 640 ? 80 : 120)}</p>\n        <div className=\"flex flex-wrap gap-1 sm:gap-2 mb-3 md:mb-4\">\n          {(project.skills || []).slice(0, window.innerWidth < 640 ? 3 : undefined).map((skill, index) => (\n            <Badge \n              key={index} \n              variant=\"outline\" \n              className=\"bg-neutral-100 text-neutral-700 text-[10px] sm:text-xs font-medium px-1.5 sm:px-2.5 py-0.5 sm:py-1 rounded badge-pulse transition-all duration-300 hover:bg-neutral-200 hover:shadow-sm\"\n            >\n              {skill}\n            </Badge>\n          ))}\n          {window.innerWidth < 640 && (project.skills || []).length > 3 && (\n            <Badge \n              variant=\"outline\" \n              className=\"bg-neutral-100 text-neutral-600 text-[10px] px-1.5 py-0.5 rounded\"\n            >\n              +{(project.skills || []).length - 3}\n            </Badge>\n          )}\n        </div>\n        <div className=\"flex justify-between items-center text-xs sm:text-sm border-t border-neutral-200 pt-3 md:pt-4\">\n          <div className=\"text-neutral-600 flex items-center group transition-all duration-300 hover:translate-y-[-2px]\">\n            <Banknote className=\"text-[hsl(160,84%,39%)] h-3 w-3 sm:h-4 sm:w-4 ml-1 sm:ml-1.5 transition-transform duration-300 group-hover:scale-125\" />\n            <span className=\"transition-colors duration-300 group-hover:text-[hsl(160,84%,39%)] font-medium\">{project.budget}</span>\n          </div>\n          <div className=\"text-neutral-600 flex items-center group transition-all duration-300 hover:translate-y-[-2px]\">\n            <CalendarIcon className=\"h-3 w-3 sm:h-4 sm:w-4 ml-1 sm:ml-1.5 transition-transform duration-300 group-hover:scale-125\" />\n            <span className=\"transition-colors duration-300 group-hover:text-primary font-medium\">{project.duration}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-neutral-50 px-3 sm:px-4 md:px-6 py-2 sm:py-3 border-t border-neutral-200\">\n        <Link \n          href={`/projects/${project.id}`} \n          className=\"text-primary hover:text-primary-dark text-sm md:text-base font-medium inline-block relative overflow-hidden before:absolute before:bottom-0 before:right-0 before:h-[2px] before:w-full before:origin-bottom-right before:scale-x-0 before:bg-primary before:transition-transform before:duration-300 hover:before:origin-bottom-left hover:before:scale-x-100 transition-all duration-300 hover:translate-x-1\"\n        >\n          عرض التفاصيل\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","size_bytes":5052},"client/src/components/projects/ProjectExecutionStatus.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Loader2, CheckCircle, AlertCircle, Clock, Banknote, CalendarDays, MessageSquare, X } from \"lucide-react\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\n\ninterface Offer {\n  id: number;\n  projectId: number;\n  companyId: number;\n  amount: string;\n  duration: string;\n  description: string;\n  status: string;\n  depositPaid: boolean;\n  depositAmount: string | null;\n  depositDate: string | null;\n  contactRevealed: boolean;\n  createdAt: string;\n  companyName?: string;\n  companyLogo?: string;\n  companyVerified?: boolean;\n  companyRating?: number;\n  companyEmail?: string;\n  companyUsername?: string;\n  companyContactRevealed?: boolean;\n}\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  createdAt: string;\n  requiresNda?: boolean;\n  ndaId?: number;\n  selectedOfferId?: number | null;\n}\n\ninterface ProjectExecutionStatusProps {\n  projectId: number;\n}\n\nexport function ProjectExecutionStatus({ projectId }: ProjectExecutionStatusProps) {\n  const { toast } = useToast();\n\n  // جلب تفاصيل المشروع\n  const { data: project, isLoading: isProjectLoading } = useQuery<Project>({\n    queryKey: [`/api/projects/${projectId}`],\n    enabled: Boolean(projectId),\n  });\n\n  // جلب العروض الخاصة بالمشروع\n  const { data: offers, isLoading: isOffersLoading, error } = useQuery<Offer[]>({\n    queryKey: [`/api/projects/${projectId}/offers`],\n    enabled: Boolean(projectId),\n    staleTime: 0,\n  });\n\n  // التحقق من حالة التحميل\n  if (isProjectLoading || isOffersLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-6\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        <span className=\"mr-2\">جاري تحميل البيانات...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center py-6 text-destructive\">\n        <AlertCircle className=\"h-6 w-6 ml-2\" />\n        <span>حدث خطأ أثناء تحميل العروض</span>\n      </div>\n    );\n  }\n\n  // إذا كان المشروع غير متاح أو لا يوجد عروض\n  if (!project || !offers || offers.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>حالة المشروع: {project && project.status === \"in-progress\" ? \"قيد التنفيذ\" : \"مكتمل\"}</CardTitle>\n          <CardDescription>\n            {project && project.status === \"in-progress\" \n              ? \"المشروع قيد التنفيذ حالياً. يمكنك متابعة التقدم وإدارة المشروع من لوحة التحكم الخاصة بك.\" \n              : \"المشروع مكتمل. يمكنك الاطلاع على سجل المشروع من لوحة التحكم الخاصة بك.\"}\n          </CardDescription>\n        </CardHeader>\n        <CardFooter>\n          <Link href=\"/dashboard/entrepreneur?tab=projects\">\n            <Button variant=\"outline\">الذهاب للوحة التحكم</Button>\n          </Link>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  // الحصول على العرض المقبول\n  const acceptedOffer = offers.find(offer => \n    offer.status === 'accepted' && offer.depositPaid === true\n  );\n\n  // الحصول على العروض المرفوضة أو غير المختارة\n  const otherOffers = offers.filter(offer => \n    offer.status === 'rejected' || \n    (acceptedOffer ? offer.id !== acceptedOffer.id : offer.status !== 'accepted')\n  );\n\n  return (\n    <Card className=\"border-2 border-primary/10\">\n      <CardHeader className=\"bg-primary/5\">\n        <CardTitle className=\"text-xl text-primary\">حالة المشروع: قيد التنفيذ</CardTitle>\n        <CardDescription>\n          المشروع قيد التنفيذ حالياً. يمكنك متابعة التقدم وإدارة المشروع من لوحة التحكم الخاصة بك.\n        </CardDescription>\n      </CardHeader>\n      \n      <CardContent className=\"pt-6\">\n        {acceptedOffer ? (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-semibold mb-3\">الشركة المنفذة للمشروع</h3>\n            <div className=\"bg-green-50 rounded-lg p-4 border border-green-200\">\n              <div className=\"flex items-center\">\n                <Avatar className=\"h-12 w-12 ml-3\">\n                  <AvatarImage src={acceptedOffer.companyLogo} alt={acceptedOffer.companyName || \"\"} />\n                  <AvatarFallback>{acceptedOffer.companyName?.charAt(0) || \"ش\"}</AvatarFallback>\n                </Avatar>\n                <div>\n                  <div className=\"flex items-center\">\n                    <h4 className=\"font-bold text-lg\">{acceptedOffer.companyName}</h4>\n                    {acceptedOffer.companyVerified && <CheckCircle className=\"text-primary h-4 w-4 mr-1\" />}\n                  </div>\n                  {acceptedOffer.companyRating && (\n                    <div className=\"flex items-center mt-1\">\n                      <span className=\"ml-1\">{acceptedOffer.companyRating}</span>\n                      <div className=\"flex\">\n                        {Array.from({ length: 5 }).map((_, i) => (\n                          <span key={i} className={`text-sm ${i < Math.floor(acceptedOffer.companyRating || 0) ? 'text-yellow-500' : 'text-gray-300'}`}>★</span>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\n                <div className=\"p-3 bg-white rounded-lg border border-green-100\">\n                  <div className=\"flex items-center\">\n                    <Banknote className=\"h-5 w-5 ml-2 text-green-600\" />\n                    <span className=\"font-bold ml-1\">قيمة العقد:</span>\n                  </div>\n                  <div className=\"mt-1 text-center font-medium\">\n                    {acceptedOffer.amount} ريال\n                  </div>\n                </div>\n                <div className=\"p-3 bg-white rounded-lg border border-green-100\">\n                  <div className=\"flex items-center\">\n                    <CalendarDays className=\"h-5 w-5 ml-2 text-green-600\" />\n                    <span className=\"font-bold ml-1\">مدة التنفيذ:</span>\n                  </div>\n                  <div className=\"mt-1 text-center font-medium\">\n                    {acceptedOffer.duration}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 p-3 bg-white rounded-lg border border-green-100\">\n                <h5 className=\"font-bold text-green-800 mb-2\">معلومات التواصل:</h5>\n                <div className=\"grid gap-2\">\n                  {acceptedOffer.companyEmail && (\n                    <div className=\"flex flex-col\">\n                      <div className=\"flex items-center\">\n                        <span className=\"font-semibold ml-2\">البريد الإلكتروني:</span>\n                      </div>\n                      <div className=\"mt-1 w-full overflow-hidden text-ellipsis\">\n                        <a href={`mailto:${acceptedOffer.companyEmail}`} className=\"text-primary hover:underline break-all\">\n                          {acceptedOffer.companyEmail}\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                  {acceptedOffer.companyUsername && (\n                    <div className=\"mt-3 w-full\">\n                      <Button \n                        variant=\"outline\" \n                        className=\"w-full\" \n                        onClick={() => window.location.href = `/messages?userId=${acceptedOffer.companyUsername}`}\n                      >\n                        <MessageSquare className=\"ml-2 h-4 w-4\" />\n                        التواصل عبر الرسائل\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"mb-6 text-center\">\n            <p className=\"text-yellow-600\">\n              لم يتم اختيار أي شركة لتنفيذ المشروع بعد\n            </p>\n          </div>\n        )}\n        \n        {otherOffers.length > 0 && (\n          <div className=\"mt-8\">\n            <Accordion type=\"single\" collapsible>\n              <AccordionItem value=\"other-offers\">\n                <AccordionTrigger className=\"text-lg font-semibold\">\n                  العروض الأخرى ({otherOffers.length})\n                </AccordionTrigger>\n                <AccordionContent>\n                  <div className=\"grid gap-4 mt-2\">\n                    {otherOffers.map((offer: Offer) => (\n                      <div key={offer.id} className=\"bg-neutral-50 rounded-lg p-4 border border-neutral-200\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center\">\n                            <Avatar className=\"h-8 w-8 ml-2\">\n                              <AvatarImage src={offer.companyLogo} alt={offer.companyName || \"\"} />\n                              <AvatarFallback>{offer.companyName?.charAt(0) || \"C\"}</AvatarFallback>\n                            </Avatar>\n                            <div>\n                              <div className=\"flex items-center\">\n                                <h4 className=\"font-bold\">{offer.companyName || \"شركة\"}</h4>\n                                {offer.companyVerified && <CheckCircle className=\"text-primary h-3 w-3 mr-1\" />}\n                              </div>\n                            </div>\n                          </div>\n                          <Badge variant=\"secondary\">\n                            {offer.status === 'rejected' ? 'مرفوض' : 'غير مقبول'}\n                          </Badge>\n                        </div>\n                        \n                        <div className=\"grid grid-cols-2 gap-2 mt-3 text-sm\">\n                          <div className=\"flex items-center\">\n                            <Banknote className=\"h-4 w-4 ml-1 text-neutral-600\" />\n                            <span className=\"font-medium ml-1\">العرض:</span>\n                            <span>{offer.amount} ريال</span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <CalendarDays className=\"h-4 w-4 ml-1 text-neutral-600\" />\n                            <span className=\"font-medium ml-1\">المدة:</span>\n                            <span>{offer.duration}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </div>\n        )}\n      </CardContent>\n      \n      <CardFooter className=\"bg-primary/5 flex justify-center\">\n        <Link href=\"/dashboard/entrepreneur?tab=projects\">\n          <Button variant=\"default\">\n            الذهاب للوحة التحكم\n          </Button>\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n}","size_bytes":11991},"client/src/components/recommendations/AIMarketTrends.tsx":{"content":"import { FC, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { BrainCircuit, TrendingUp, Code, Bookmark } from 'lucide-react';\n\ninterface AIMarketTrendsProps {\n  limit?: number;\n}\n\ninterface DomainTrend {\n  domain: string;\n  count: number;\n  averageBudget: string;\n}\n\ninterface TechnologyTrend {\n  technology: string;\n  projectCount: number;\n  companies: number;\n}\n\nconst AIMarketTrends: FC<AIMarketTrendsProps> = ({ limit = 10 }) => {\n  const [activeTab, setActiveTab] = useState<string>(\"domains\");\n  \n  const { \n    data: domainsData, \n    isLoading: domainsLoading, \n    error: domainsError \n  } = useQuery<DomainTrend[]>({\n    queryKey: ['/api/ai-recommendations/market/domains'],\n    queryFn: async () => {\n      const response = await fetch(`/api/ai-recommendations/market/domains?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على اتجاهات السوق');\n      }\n      return response.json();\n    },\n  });\n\n  const { \n    data: technologiesData, \n    isLoading: technologiesLoading, \n    error: technologiesError \n  } = useQuery<TechnologyTrend[]>({\n    queryKey: ['/api/ai-recommendations/market/technologies'],\n    queryFn: async () => {\n      const response = await fetch(`/api/ai-recommendations/market/technologies?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على التقنيات الشائعة');\n      }\n      return response.json();\n    },\n    enabled: activeTab === \"technologies\",\n  });\n\n  const renderDomainsSkeleton = () => (\n    <>\n      {Array.from({ length: 5 }).map((_, i) => (\n        <div key={i} className=\"flex items-center justify-between p-3 border-b\">\n          <Skeleton className=\"h-5 w-1/3\" />\n          <div className=\"flex items-center\">\n            <Skeleton className=\"h-5 w-16 ml-2\" />\n            <Skeleton className=\"h-5 w-20\" />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n\n  const renderTechnologiesSkeleton = () => (\n    <>\n      {Array.from({ length: 5 }).map((_, i) => (\n        <div key={i} className=\"flex items-center justify-between p-3 border-b\">\n          <Skeleton className=\"h-5 w-1/3\" />\n          <div className=\"flex items-center\">\n            <Skeleton className=\"h-5 w-10 ml-2\" />\n            <Skeleton className=\"h-5 w-10\" />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n\n  return (\n    <Card className=\"overflow-hidden border border-gray-200\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex justify-between items-center\">\n          <CardTitle className=\"text-xl font-bold\">اتجاهات السوق</CardTitle>\n          <div className=\"flex items-center bg-blue-50 px-3 py-1 rounded-full border border-blue-200\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل متقدم</span>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <Tabs defaultValue=\"domains\" value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-2 mb-4\">\n            <TabsTrigger value=\"domains\" className=\"flex items-center\">\n              <Bookmark className=\"h-4 w-4 ml-2\" />\n              المجالات الشائعة\n            </TabsTrigger>\n            <TabsTrigger value=\"technologies\" className=\"flex items-center\">\n              <Code className=\"h-4 w-4 ml-2\" />\n              التقنيات المطلوبة\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"domains\" className=\"space-y-1\">\n            {domainsLoading ? (\n              renderDomainsSkeleton()\n            ) : domainsError ? (\n              <div className=\"p-3 text-red-500 text-center\">\n                حدث خطأ أثناء تحميل البيانات\n              </div>\n            ) : domainsData && domainsData.length > 0 ? (\n              <div className=\"max-h-[300px] overflow-auto\">\n                {domainsData.slice(0, limit).map((domain, index) => (\n                  <div \n                    key={index} \n                    className={`flex items-center justify-between p-3 ${\n                      index < domainsData.length - 1 ? 'border-b' : ''\n                    } hover:bg-blue-50 transition-colors duration-200`}\n                  >\n                    <div className=\"flex items-center\">\n                      <Badge \n                        className={`ml-2 ${index < 3 ? 'bg-amber-100 text-amber-800 hover:bg-amber-100' : 'bg-gray-100 text-gray-800 hover:bg-gray-100'}`}\n                      >\n                        {index + 1}\n                      </Badge>\n                      <span className=\"font-medium\">{domain.domain}</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <div className=\"flex items-center ml-4\">\n                        <TrendingUp className=\"w-4 h-4 text-green-600 ml-1\" />\n                        <span className=\"text-sm\">{domain.count} مشروع</span>\n                      </div>\n                      <Badge variant=\"outline\" className=\"font-medium\">\n                        {domain.averageBudget}\n                      </Badge>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"p-3 text-center text-gray-500\">\n                لا توجد بيانات متاحة\n              </div>\n            )}\n          </TabsContent>\n          \n          <TabsContent value=\"technologies\" className=\"space-y-1\">\n            {technologiesLoading ? (\n              renderTechnologiesSkeleton()\n            ) : technologiesError ? (\n              <div className=\"p-3 text-red-500 text-center\">\n                حدث خطأ أثناء تحميل البيانات\n              </div>\n            ) : technologiesData && technologiesData.length > 0 ? (\n              <div className=\"max-h-[300px] overflow-auto\">\n                {technologiesData.slice(0, limit).map((tech, index) => (\n                  <div \n                    key={index} \n                    className={`flex items-center justify-between p-3 ${\n                      index < technologiesData.length - 1 ? 'border-b' : ''\n                    } hover:bg-blue-50 transition-colors duration-200`}\n                  >\n                    <div className=\"flex items-center\">\n                      <Badge \n                        className={`ml-2 ${index < 3 ? 'bg-purple-100 text-purple-800 hover:bg-purple-100' : 'bg-gray-100 text-gray-800 hover:bg-gray-100'}`}\n                      >\n                        {index + 1}\n                      </Badge>\n                      <span className=\"font-medium\">{tech.technology}</span>\n                    </div>\n                    <div className=\"flex items-center text-sm\">\n                      <span className=\"ml-4\">{tech.projectCount} مشروع</span>\n                      <span>{tech.companies} شركة</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"p-3 text-center text-gray-500\">\n                لا توجد بيانات متاحة\n              </div>\n            )}\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AIMarketTrends;","size_bytes":7704},"client/src/components/recommendations/AIProjectAnalysis.tsx":{"content":"import { FC } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { BrainCircuit, Lightbulb, Zap, Code, FileSearch } from 'lucide-react';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\n\ninterface AIProjectAnalysisProps {\n  projectId: number;\n}\n\ninterface ProjectAnalysis {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  extractedKeywords: string[];\n  extractedTechnologies: string[];\n  extractedDomains: string[];\n  extractedFeatures: string[];\n}\n\nconst AIProjectAnalysis: FC<AIProjectAnalysisProps> = ({ projectId }) => {\n  const { data, isLoading, error } = useQuery<ProjectAnalysis>({\n    queryKey: [`/api/ai-recommendations/analyze/project/${projectId}`],\n    enabled: !!projectId,\n  });\n\n  if (isLoading) {\n    return (\n      <Card className=\"overflow-hidden border border-gray-200 hover:border-blue-200 hover:shadow-sm transition-all\">\n        <CardHeader className=\"pb-2\">\n          <div className=\"flex justify-between items-center\">\n            <CardTitle className=\"text-xl font-bold\">تحليل ذكي للمشروع</CardTitle>\n            <div className=\"flex items-center\">\n              <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n              <Skeleton className=\"h-5 w-20\" />\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <Skeleton className=\"h-20 w-full\" />\n            <div className=\"grid grid-cols-2 gap-2\">\n              <Skeleton className=\"h-16 w-full\" />\n              <Skeleton className=\"h-16 w-full\" />\n            </div>\n            <Skeleton className=\"h-20 w-full\" />\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className=\"overflow-hidden border border-gray-200\">\n        <CardHeader className=\"pb-2\">\n          <div className=\"flex justify-between items-center\">\n            <CardTitle className=\"text-xl font-bold\">تحليل ذكي للمشروع</CardTitle>\n            <div className=\"flex items-center\">\n              <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n              <span className=\"text-blue-600 text-sm font-semibold\">تحليل متقدم</span>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"p-4 text-red-500 text-center\">\n            حدث خطأ أثناء تحليل المشروع. يرجى المحاولة مرة أخرى لاحقاً.\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Card className=\"overflow-hidden border border-gray-200 hover:border-blue-200 hover:shadow-sm transition-all\">\n      <CardHeader className=\"pb-2\">\n        <div className=\"flex justify-between items-center\">\n          <CardTitle className=\"text-xl font-bold\">تحليل ذكي للمشروع</CardTitle>\n          <div className=\"flex items-center bg-blue-50 px-3 py-1 rounded-full border border-blue-200\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل متقدم</span>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"keywords\" className=\"border-b-0 mt-2\">\n            <AccordionTrigger className=\"py-3 hover:no-underline\">\n              <div className=\"flex items-center text-lg font-medium text-right\">\n                <Lightbulb className=\"w-5 h-5 ml-2 text-amber-500\" />\n                الكلمات المفتاحية\n              </div>\n            </AccordionTrigger>\n            <AccordionContent>\n              <div className=\"p-3 bg-amber-50 rounded-lg border border-amber-100\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {data.extractedKeywords.length > 0 ? (\n                    data.extractedKeywords.map((keyword, index) => (\n                      <Badge \n                        key={index} \n                        className=\"bg-amber-100 hover:bg-amber-200 text-amber-800 hover:text-amber-900 border-amber-200\"\n                      >\n                        {keyword}\n                      </Badge>\n                    ))\n                  ) : (\n                    <p className=\"text-gray-500 text-sm\">لم يتم العثور على كلمات مفتاحية</p>\n                  )}\n                </div>\n              </div>\n            </AccordionContent>\n          </AccordionItem>\n\n          <AccordionItem value=\"technologies\" className=\"border-b-0\">\n            <AccordionTrigger className=\"py-3 hover:no-underline\">\n              <div className=\"flex items-center text-lg font-medium text-right\">\n                <Code className=\"w-5 h-5 ml-2 text-blue-500\" />\n                التقنيات المكتشفة\n              </div>\n            </AccordionTrigger>\n            <AccordionContent>\n              <div className=\"p-3 bg-blue-50 rounded-lg border border-blue-100\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {data.extractedTechnologies.length > 0 ? (\n                    data.extractedTechnologies.map((tech, index) => (\n                      <Badge \n                        key={index} \n                        className=\"bg-blue-100 hover:bg-blue-200 text-blue-800 hover:text-blue-900 border-blue-200\"\n                      >\n                        {tech}\n                      </Badge>\n                    ))\n                  ) : (\n                    <p className=\"text-gray-500 text-sm\">لم يتم العثور على تقنيات محددة</p>\n                  )}\n                </div>\n              </div>\n            </AccordionContent>\n          </AccordionItem>\n\n          <AccordionItem value=\"domains\" className=\"border-b-0\">\n            <AccordionTrigger className=\"py-3 hover:no-underline\">\n              <div className=\"flex items-center text-lg font-medium text-right\">\n                <FileSearch className=\"w-5 h-5 ml-2 text-purple-500\" />\n                المجالات المرتبطة\n              </div>\n            </AccordionTrigger>\n            <AccordionContent>\n              <div className=\"p-3 bg-purple-50 rounded-lg border border-purple-100\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {data.extractedDomains.length > 0 ? (\n                    data.extractedDomains.map((domain, index) => (\n                      <Badge \n                        key={index} \n                        className=\"bg-purple-100 hover:bg-purple-200 text-purple-800 hover:text-purple-900 border-purple-200\"\n                      >\n                        {domain}\n                      </Badge>\n                    ))\n                  ) : (\n                    <p className=\"text-gray-500 text-sm\">لم يتم العثور على مجالات محددة</p>\n                  )}\n                </div>\n              </div>\n            </AccordionContent>\n          </AccordionItem>\n\n          <AccordionItem value=\"features\" className=\"border-b-0\">\n            <AccordionTrigger className=\"py-3 hover:no-underline\">\n              <div className=\"flex items-center text-lg font-medium text-right\">\n                <Zap className=\"w-5 h-5 ml-2 text-green-500\" />\n                الميزات المقترحة\n              </div>\n            </AccordionTrigger>\n            <AccordionContent>\n              <div className=\"p-3 bg-green-50 rounded-lg border border-green-100\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {data.extractedFeatures.length > 0 ? (\n                    data.extractedFeatures.map((feature, index) => (\n                      <Badge \n                        key={index} \n                        className=\"bg-green-100 hover:bg-green-200 text-green-800 hover:text-green-900 border-green-200\"\n                      >\n                        {feature}\n                      </Badge>\n                    ))\n                  ) : (\n                    <p className=\"text-gray-500 text-sm\">لم يتم العثور على ميزات محددة</p>\n                  )}\n                </div>\n              </div>\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AIProjectAnalysis;","size_bytes":8682},"client/src/components/recommendations/AIRecommendedCompanies.tsx":{"content":"import { FC, useState } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { skillsToString, truncateText, getInitials, stringToColor } from '@/lib/utils';\nimport { Link } from 'wouter';\nimport { Star, BrainCircuit, ChevronDown, ChevronUp, BotMessageSquare } from 'lucide-react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\n\ninterface AIRecommendedCompaniesProps {\n  projectId: number;\n  limit?: number;\n}\n\ntype Company = {\n  id: number;\n  userId: number;\n  description: string;\n  logo?: string;\n  coverPhoto?: string;\n  website?: string;\n  location?: string;\n  skills: string[];\n  rating?: number;\n  reviewCount?: number;\n  name?: string;\n  username?: string;\n  blurredName?: string;\n  verified?: boolean;\n};\n\ninterface MatchDetails {\n  skillsScore: number;\n  keywordsScore: number;\n  technologiesScore: number;\n  domainsScore: number;\n  featuresScore: number;\n}\n\ninterface AIRecommendedCompanyItem {\n  company: Company;\n  matchScore: number;\n  matchDetails: MatchDetails;\n}\n\nconst AIRecommendedCompanies: FC<AIRecommendedCompaniesProps> = ({ projectId, limit = 3 }) => {\n  const [activeTab, setActiveTab] = useState<string>(\"ai\");\n  \n  const { data, isLoading, error } = useQuery<AIRecommendedCompanyItem[]>({\n    queryKey: ['/api/ai-recommendations/projects', projectId, 'companies'],\n    queryFn: async () => {\n      const response = await fetch(`/api/ai-recommendations/projects/${projectId}/companies?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على الشركات الموصى بها من الذكاء الاصطناعي');\n      }\n      return response.json();\n    },\n    enabled: !!projectId,\n  });\n\n  const { data: traditionalData, isLoading: traditionalLoading } = useQuery<any[]>({\n    queryKey: ['/api/recommendations/projects', projectId, 'companies'],\n    queryFn: async () => {\n      const response = await fetch(`/api/recommendations/projects/${projectId}/companies?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على الشركات الموصى بها');\n      }\n      return response.json();\n    },\n    enabled: !!projectId && activeTab === \"traditional\",\n  });\n\n  // جمع عنصر التحميل\n  if (isLoading || (activeTab === \"traditional\" && traditionalLoading)) {\n    return (\n      <div className=\"space-y-3 rtl\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-xl font-bold text-right\">الشركات الموصى بها</h3>\n          <div className=\"flex items-center\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل ذكي</span>\n          </div>\n        </div>\n        {Array.from({ length: limit }).map((_, i) => (\n          <Card key={i} className=\"w-full\">\n            <CardHeader className=\"pb-2\">\n              <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-16 w-full\" />\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {Array.from({ length: 3 }).map((_, j) => (\n                  <Skeleton key={j} className=\"h-5 w-16\" />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"rtl text-right\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-xl font-bold\">الشركات الموصى بها</h3>\n          <div className=\"flex items-center\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل ذكي</span>\n          </div>\n        </div>\n        <p className=\"text-red-500\">حدث خطأ أثناء تحميل الشركات الموصى بها</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"rtl text-right\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-xl font-bold\">الشركات الموصى بها</h3>\n          <div className=\"flex items-center\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل ذكي</span>\n          </div>\n        </div>\n        <p className=\"text-gray-500\">لا توجد شركات موصى بها حالياً</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4 rtl\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-xl font-bold text-right\">الشركات الموصى بها</h3>\n        <div className=\"flex items-center bg-blue-50 px-3 py-1 rounded-full border border-blue-200\">\n          <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n          <span className=\"text-blue-600 text-sm font-semibold\">معزز بالذكاء الاصطناعي</span>\n        </div>\n      </div>\n      \n      <Tabs defaultValue=\"ai\" value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2 mb-4\">\n          <TabsTrigger value=\"ai\" className=\"flex items-center\">\n            <BotMessageSquare className=\"w-4 h-4 ml-2\" />\n            توصيات ذكية\n          </TabsTrigger>\n          <TabsTrigger value=\"traditional\">\n            توصيات عادية\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"ai\">\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {data.map(({ company, matchScore, matchDetails }) => (\n              <Card key={company.id} className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-md transition-all\">\n                <CardHeader className=\"pb-2\">\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex items-center\">\n                      {company.logo ? (\n                        <img \n                          src={company.logo} \n                          alt={company.blurredName || ''} \n                          className=\"w-10 h-10 rounded-md ml-2\" \n                        />\n                      ) : (\n                        <div \n                          className=\"w-10 h-10 rounded-md ml-2 flex items-center justify-center text-white\"\n                          style={{ backgroundColor: stringToColor(company.blurredName || '') }}\n                        >\n                          {getInitials(company.blurredName || '')}\n                        </div>\n                      )}\n                      <div>\n                        <CardTitle className=\"text-right font-bold text-lg\">\n                          {company.blurredName || 'شركة متخصصة'}\n                        </CardTitle>\n                        {company.verified && (\n                          <Badge className=\"bg-blue-100 text-blue-800 hover:bg-blue-100\">موثقة</Badge>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center\">\n                      {company.rating ? (\n                        <>\n                          <span className=\"text-amber-500 font-semibold ml-1\">{company.rating.toFixed(1)}</span>\n                          <Star className=\"w-4 h-4 fill-amber-500 text-amber-500\" />\n                        </>\n                      ) : null}\n                    </div>\n                  </div>\n                  <CardDescription className=\"text-right text-sm text-muted-foreground\">\n                    {company.location || 'غير محدد'}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"flex flex-wrap gap-1 mb-3\">\n                    {company.skills?.slice(0, 5).map((skill) => (\n                      <Badge key={skill} variant=\"outline\" className=\"text-xs bg-gray-100\">\n                        {skill}\n                      </Badge>\n                    ))}\n                    {company.skills?.length > 5 && (\n                      <Badge variant=\"outline\" className=\"text-xs bg-transparent border-dashed\">\n                        +{company.skills.length - 5}\n                      </Badge>\n                    )}\n                  </div>\n                  \n                  <div className=\"bg-gradient-to-l from-blue-50 to-gray-50 p-3 rounded-lg\">\n                    <div className=\"flex items-center mb-2\">\n                      <span className=\"text-sm font-semibold ml-2\">نسبة التطابق مع مشروعك:</span>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                        <div \n                          className=\"bg-gradient-to-l from-green-600 to-blue-600 h-2.5 rounded-full\" \n                          style={{ width: `${Math.round(matchScore * 100)}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"text-sm font-semibold text-blue-700 mr-2 min-w-[40px] text-center\">\n                        {Math.round(matchScore * 100)}%\n                      </span>\n                    </div>\n                    \n                    <Accordion type=\"single\" collapsible className=\"w-full\">\n                      <AccordionItem value=\"details\" className=\"border-0\">\n                        <AccordionTrigger className=\"py-1 text-sm text-blue-600 hover:text-blue-800 hover:no-underline\">\n                          تفاصيل التطابق\n                        </AccordionTrigger>\n                        <AccordionContent>\n                          <div className=\"space-y-2 text-sm\">\n                            <div className=\"flex items-center justify-between\">\n                              <span>المهارات:</span>\n                              <div className=\"flex items-center\">\n                                <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                                  <div \n                                    className=\"bg-blue-600 h-1.5 rounded-full\" \n                                    style={{ width: `${Math.round(matchDetails.skillsScore * 100)}%` }}\n                                  ></div>\n                                </div>\n                                <span>{Math.round(matchDetails.skillsScore * 100)}%</span>\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between\">\n                              <span>التقنيات:</span>\n                              <div className=\"flex items-center\">\n                                <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                                  <div \n                                    className=\"bg-green-600 h-1.5 rounded-full\" \n                                    style={{ width: `${Math.round(matchDetails.technologiesScore * 100)}%` }}\n                                  ></div>\n                                </div>\n                                <span>{Math.round(matchDetails.technologiesScore * 100)}%</span>\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between\">\n                              <span>المجال:</span>\n                              <div className=\"flex items-center\">\n                                <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                                  <div \n                                    className=\"bg-purple-600 h-1.5 rounded-full\" \n                                    style={{ width: `${Math.round(matchDetails.domainsScore * 100)}%` }}\n                                  ></div>\n                                </div>\n                                <span>{Math.round(matchDetails.domainsScore * 100)}%</span>\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between\">\n                              <span>الكلمات المفتاحية:</span>\n                              <div className=\"flex items-center\">\n                                <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                                  <div \n                                    className=\"bg-amber-600 h-1.5 rounded-full\" \n                                    style={{ width: `${Math.round(matchDetails.keywordsScore * 100)}%` }}\n                                  ></div>\n                                </div>\n                                <span>{Math.round(matchDetails.keywordsScore * 100)}%</span>\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between\">\n                              <span>الميزات:</span>\n                              <div className=\"flex items-center\">\n                                <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                                  <div \n                                    className=\"bg-orange-600 h-1.5 rounded-full\" \n                                    style={{ width: `${Math.round(matchDetails.featuresScore * 100)}%` }}\n                                  ></div>\n                                </div>\n                                <span>{Math.round(matchDetails.featuresScore * 100)}%</span>\n                              </div>\n                            </div>\n                          </div>\n                        </AccordionContent>\n                      </AccordionItem>\n                    </Accordion>\n                  </div>\n                </CardContent>\n                <CardFooter>\n                  <Link href={`/companies/${company.id}`}>\n                    <Button variant=\"outline\" className=\"w-full\">عرض الشركة</Button>\n                  </Link>\n                </CardFooter>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n        \n        <TabsContent value=\"traditional\">\n          {traditionalData && traditionalData.length > 0 ? (\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n              {traditionalData.map(({ company, matchScore }) => (\n                <Card key={company.id} className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-md transition-all\">\n                  <CardHeader className=\"pb-2\">\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex items-center\">\n                        {company.logo ? (\n                          <img \n                            src={company.logo} \n                            alt={company.blurredName || ''} \n                            className=\"w-10 h-10 rounded-md ml-2\" \n                          />\n                        ) : (\n                          <div \n                            className=\"w-10 h-10 rounded-md ml-2 flex items-center justify-center text-white\"\n                            style={{ backgroundColor: stringToColor(company.blurredName || '') }}\n                          >\n                            {getInitials(company.blurredName || '')}\n                          </div>\n                        )}\n                        <CardTitle className=\"text-right font-bold text-lg\">\n                          {company.blurredName || 'شركة متخصصة'}\n                        </CardTitle>\n                      </div>\n                      <div className=\"flex items-center\">\n                        {company.rating ? (\n                          <>\n                            <span className=\"text-amber-500 font-semibold ml-1\">{company.rating.toFixed(1)}</span>\n                            <Star className=\"w-4 h-4 fill-amber-500 text-amber-500\" />\n                          </>\n                        ) : null}\n                      </div>\n                    </div>\n                    <CardDescription className=\"text-right text-sm text-muted-foreground\">\n                      {company.location || 'غير محدد'}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"flex flex-wrap gap-1 mb-3\">\n                      {company.skills?.slice(0, 5).map((skill) => (\n                        <Badge key={skill} variant=\"outline\" className=\"text-xs bg-gray-100\">\n                          {skill}\n                        </Badge>\n                      ))}\n                    </div>\n                    \n                    <div className=\"mt-3 bg-gray-100 p-2 rounded-md\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xs font-semibold\">نسبة التطابق: </span>\n                        <div className=\"w-full bg-gray-300 rounded-full h-2 ml-2\">\n                          <div \n                            className=\"bg-green-600 h-2 rounded-full\" \n                            style={{ width: `${Math.round(matchScore * 100)}%` }}\n                          ></div>\n                        </div>\n                        <span className=\"text-xs font-semibold mr-2\">{Math.round(matchScore * 100)}%</span>\n                      </div>\n                    </div>\n                  </CardContent>\n                  <CardFooter>\n                    <Link href={`/companies/${company.id}`}>\n                      <Button variant=\"outline\" className=\"w-full\">عرض الشركة</Button>\n                    </Link>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n          ) : (\n            <p className=\"text-center text-gray-500\">لا توجد توصيات متاحة في الوضع التقليدي</p>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AIRecommendedCompanies;","size_bytes":18550},"client/src/components/recommendations/AISimilarProjects.tsx":{"content":"import { FC } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { truncateText } from '@/lib/utils';\nimport { Link } from 'wouter';\nimport { Calendar, Banknote, BrainCircuit } from 'lucide-react';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\n\ninterface AISimilarProjectsProps {\n  projectId: number;\n  limit?: number;\n}\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n};\n\ninterface SimilarityDetails {\n  skillsScore: number;\n  keywordsScore: number;\n  technologiesScore: number;\n  domainsScore: number;\n  featuresScore: number;\n}\n\ninterface AISimilarProjectItem {\n  project: Project;\n  similarityScore: number;\n  similarityDetails: SimilarityDetails;\n}\n\nconst AISimilarProjects: FC<AISimilarProjectsProps> = ({ projectId, limit = 3 }) => {\n  const { data, isLoading, error } = useQuery<AISimilarProjectItem[]>({\n    queryKey: ['/api/ai-recommendations/projects', projectId, 'similar'],\n    queryFn: async () => {\n      const response = await fetch(`/api/ai-recommendations/projects/${projectId}/similar?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على المشاريع المشابهة');\n      }\n      return response.json();\n    },\n    enabled: !!projectId,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-3 rtl\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-xl font-bold text-right\">مشاريع مشابهة</h3>\n          <div className=\"flex items-center\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل ذكي</span>\n          </div>\n        </div>\n        {Array.from({ length: limit }).map((_, i) => (\n          <Card key={i} className=\"w-full\">\n            <CardHeader className=\"pb-2\">\n              <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-16 w-full\" />\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {Array.from({ length: 3 }).map((_, j) => (\n                  <Skeleton key={j} className=\"h-5 w-16\" />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"rtl text-right\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-xl font-bold\">مشاريع مشابهة</h3>\n          <div className=\"flex items-center\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل ذكي</span>\n          </div>\n        </div>\n        <p className=\"text-red-500\">حدث خطأ أثناء تحميل المشاريع المشابهة</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"rtl text-right\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-xl font-bold\">مشاريع مشابهة</h3>\n          <div className=\"flex items-center\">\n            <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n            <span className=\"text-blue-600 text-sm font-semibold\">تحليل ذكي</span>\n          </div>\n        </div>\n        <p className=\"text-gray-500\">لا توجد مشاريع مشابهة حالياً</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-3 rtl\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"text-xl font-bold text-right\">مشاريع مشابهة</h3>\n        <div className=\"flex items-center bg-blue-50 px-3 py-1 rounded-full border border-blue-200\">\n          <BrainCircuit className=\"w-5 h-5 ml-1 text-blue-600\" />\n          <span className=\"text-blue-600 text-sm font-semibold\">معزز بالذكاء الاصطناعي</span>\n        </div>\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {data.map(({ project, similarityScore, similarityDetails }) => (\n          <Card key={project.id} className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-md transition-all\">\n            <CardHeader className=\"pb-2\">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <CardTitle className=\"text-right font-bold text-lg line-clamp-1\">\n                    {project.title}\n                  </CardTitle>\n                  {project.highlightStatus && (\n                    <Badge className=\"bg-accent text-white hover:bg-accent mt-1\">\n                      {project.highlightStatus}\n                    </Badge>\n                  )}\n                </div>\n                <Badge className={\n                  project.status === \"open\" \n                    ? \"bg-green-100 text-green-800 hover:bg-green-100\" \n                    : \"bg-neutral-100 text-neutral-800 hover:bg-neutral-100\"\n                }>\n                  {project.status === \"open\" ? \"مفتوح\" : \"مغلق\"}\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-right mb-3 text-sm text-gray-700\">{truncateText(project.description, 80)}</p>\n              \n              <div className=\"grid grid-cols-2 gap-2 mb-3 text-sm\">\n                <div className=\"bg-gray-50 p-2 rounded flex items-center\">\n                  <Banknote className=\"text-green-600 h-4 w-4 ml-1\" />\n                  <span>{project.budget}</span>\n                </div>\n                <div className=\"bg-gray-50 p-2 rounded flex items-center\">\n                  <Calendar className=\"text-blue-600 h-4 w-4 ml-1\" />\n                  <span>{project.duration}</span>\n                </div>\n              </div>\n\n              <div className=\"flex flex-wrap gap-1 mb-3\">\n                {project.skills?.slice(0, 3).map((skill) => (\n                  <Badge key={skill} variant=\"outline\" className=\"text-xs bg-gray-100\">\n                    {skill}\n                  </Badge>\n                ))}\n                {project.skills?.length > 3 && (\n                  <Badge variant=\"outline\" className=\"text-xs bg-transparent border-dashed\">\n                    +{project.skills.length - 3}\n                  </Badge>\n                )}\n              </div>\n              \n              <div className=\"bg-gradient-to-l from-purple-50 to-gray-50 p-3 rounded-lg\">\n                <div className=\"flex items-center mb-2\">\n                  <span className=\"text-sm font-semibold ml-2\">نسبة التشابه:</span>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-gradient-to-l from-purple-600 to-blue-600 h-2.5 rounded-full\" \n                      style={{ width: `${Math.round(similarityScore * 100)}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"text-sm font-semibold text-purple-700 mr-2 min-w-[40px] text-center\">\n                    {Math.round(similarityScore * 100)}%\n                  </span>\n                </div>\n                \n                <Accordion type=\"single\" collapsible className=\"w-full\">\n                  <AccordionItem value=\"details\" className=\"border-0\">\n                    <AccordionTrigger className=\"py-1 text-sm text-purple-600 hover:text-purple-800 hover:no-underline\">\n                      تفاصيل التشابه\n                    </AccordionTrigger>\n                    <AccordionContent>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex items-center justify-between\">\n                          <span>المهارات:</span>\n                          <div className=\"flex items-center\">\n                            <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                              <div \n                                className=\"bg-blue-600 h-1.5 rounded-full\" \n                                style={{ width: `${Math.round(similarityDetails.skillsScore * 100)}%` }}\n                              ></div>\n                            </div>\n                            <span>{Math.round(similarityDetails.skillsScore * 100)}%</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <span>التقنيات:</span>\n                          <div className=\"flex items-center\">\n                            <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                              <div \n                                className=\"bg-green-600 h-1.5 rounded-full\" \n                                style={{ width: `${Math.round(similarityDetails.technologiesScore * 100)}%` }}\n                              ></div>\n                            </div>\n                            <span>{Math.round(similarityDetails.technologiesScore * 100)}%</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <span>المجال:</span>\n                          <div className=\"flex items-center\">\n                            <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                              <div \n                                className=\"bg-purple-600 h-1.5 rounded-full\" \n                                style={{ width: `${Math.round(similarityDetails.domainsScore * 100)}%` }}\n                              ></div>\n                            </div>\n                            <span>{Math.round(similarityDetails.domainsScore * 100)}%</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <span>الكلمات المفتاحية:</span>\n                          <div className=\"flex items-center\">\n                            <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                              <div \n                                className=\"bg-amber-600 h-1.5 rounded-full\" \n                                style={{ width: `${Math.round(similarityDetails.keywordsScore * 100)}%` }}\n                              ></div>\n                            </div>\n                            <span>{Math.round(similarityDetails.keywordsScore * 100)}%</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <span>الميزات:</span>\n                          <div className=\"flex items-center\">\n                            <div className=\"w-24 bg-gray-200 rounded-full h-1.5 ml-2\">\n                              <div \n                                className=\"bg-orange-600 h-1.5 rounded-full\" \n                                style={{ width: `${Math.round(similarityDetails.featuresScore * 100)}%` }}\n                              ></div>\n                            </div>\n                            <span>{Math.round(similarityDetails.featuresScore * 100)}%</span>\n                          </div>\n                        </div>\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Link href={`/projects/${project.id}`}>\n                <Button variant=\"outline\" className=\"w-full\">عرض المشروع</Button>\n              </Link>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AISimilarProjects;","size_bytes":12367},"client/src/components/recommendations/RecommendedCompanies.tsx":{"content":"import { FC } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { skillsToString, truncateText, getInitials, stringToColor } from '@/lib/utils';\nimport { Link } from 'wouter';\nimport { Star } from 'lucide-react';\n\ninterface RecommendedCompaniesProps {\n  projectId: number;\n  limit?: number;\n}\n\ntype Company = {\n  id: number;\n  userId: number;\n  description: string;\n  logo?: string;\n  coverPhoto?: string;\n  website?: string;\n  location?: string;\n  skills: string[];\n  rating?: number;\n  reviewCount?: number;\n  name?: string;\n  username?: string;\n};\n\ninterface RecommendedCompanyItem {\n  company: Company;\n  matchScore: number;\n}\n\nconst RecommendedCompanies: FC<RecommendedCompaniesProps> = ({ projectId, limit = 3 }) => {\n  const { data, isLoading, error } = useQuery<RecommendedCompanyItem[]>({\n    queryKey: ['/api/recommendations/projects', projectId, 'companies'],\n    queryFn: async () => {\n      const response = await fetch(`/api/recommendations/projects/${projectId}/companies?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على الشركات الموصى بها');\n      }\n      return response.json();\n    },\n    enabled: !!projectId,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-3 rtl\">\n        <h3 className=\"text-xl font-bold text-right mb-4\">الشركات الموصى بها</h3>\n        {Array.from({ length: limit }).map((_, i) => (\n          <Card key={i} className=\"w-full\">\n            <CardHeader className=\"pb-2\">\n              <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-16 w-full\" />\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {Array.from({ length: 3 }).map((_, j) => (\n                  <Skeleton key={j} className=\"h-5 w-16\" />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"rtl text-right\">\n        <h3 className=\"text-xl font-bold mb-4\">الشركات الموصى بها</h3>\n        <p className=\"text-red-500\">حدث خطأ أثناء تحميل الشركات الموصى بها</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"rtl text-right\">\n        <h3 className=\"text-xl font-bold mb-4\">الشركات الموصى بها</h3>\n        <p className=\"text-gray-500\">لا توجد شركات موصى بها حالياً</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-3 rtl\">\n      <h3 className=\"text-xl font-bold text-right mb-4\">الشركات الموصى بها</h3>\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {data.map(({ company, matchScore }) => (\n          <Card key={company.id} className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-md transition-all\">\n            <CardHeader className=\"pb-2\">\n              <div className=\"flex justify-between items-start\">\n                <div className=\"flex items-center\">\n                  {company.logo ? (\n                    <img \n                      src={company.logo} \n                      alt={company.name || ''} \n                      className=\"w-10 h-10 rounded-md ml-2\" \n                    />\n                  ) : (\n                    <div \n                      className=\"w-10 h-10 rounded-md ml-2 flex items-center justify-center text-white\"\n                      style={{ backgroundColor: stringToColor(company.name || company.username || '') }}\n                    >\n                      {getInitials(company.name || company.username || '')}\n                    </div>\n                  )}\n                  <CardTitle className=\"text-right font-bold text-lg\">\n                    {company.name || company.username || 'شركة'}\n                  </CardTitle>\n                </div>\n                <div className=\"flex items-center\">\n                  {company.rating ? (\n                    <>\n                      <span className=\"text-amber-500 font-semibold ml-1\">{company.rating.toFixed(1)}</span>\n                      <Star className=\"w-4 h-4 fill-amber-500 text-amber-500\" />\n                    </>\n                  ) : null}\n                </div>\n              </div>\n              <CardDescription className=\"text-right text-sm text-muted-foreground\">\n                {company.location || 'غير محدد'}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-right mb-3\">{truncateText(company.description, 100)}</p>\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {company.skills?.map((skill) => (\n                  <Badge key={skill} variant=\"outline\" className=\"text-xs bg-gray-100\">\n                    {skill}\n                  </Badge>\n                ))}\n              </div>\n              <div className=\"mt-3 bg-gray-100 p-2 rounded-md\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-xs font-semibold\">نسبة التطابق: </span>\n                  <div className=\"w-full bg-gray-300 rounded-full h-2 ml-2\">\n                    <div \n                      className=\"bg-green-600 h-2 rounded-full\" \n                      style={{ width: `${Math.round(matchScore * 100)}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"text-xs font-semibold mr-2\">{Math.round(matchScore * 100)}%</span>\n                </div>\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Link href={`/companies/${company.id}`}>\n                <Button variant=\"outline\" className=\"w-full\">عرض الشركة</Button>\n              </Link>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendedCompanies;","size_bytes":6219},"client/src/components/recommendations/RecommendedProjects.tsx":{"content":"import { FC, useEffect, useState } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { skillsToString, truncateText } from '@/lib/utils';\nimport { Link } from 'wouter';\n\ninterface RecommendedProjectsProps {\n  companyId: number;\n  limit?: number;\n}\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  name?: string;\n  username?: string;\n};\n\ninterface RecommendedProjectItem {\n  project: Project;\n  matchScore: number;\n}\n\nconst RecommendedProjects: FC<RecommendedProjectsProps> = ({ companyId, limit = 3 }) => {\n  const { data, isLoading, error } = useQuery<RecommendedProjectItem[]>({\n    queryKey: ['/api/recommendations/companies', companyId, 'projects'],\n    queryFn: async () => {\n      const response = await fetch(`/api/recommendations/companies/${companyId}/projects?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على المشاريع الموصى بها');\n      }\n      return response.json();\n    },\n    enabled: !!companyId,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-3 rtl\">\n        <h3 className=\"text-xl font-bold text-right mb-4\">المشاريع الموصى بها</h3>\n        {Array.from({ length: limit }).map((_, i) => (\n          <Card key={i} className=\"w-full\">\n            <CardHeader className=\"pb-2\">\n              <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-16 w-full\" />\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {Array.from({ length: 3 }).map((_, j) => (\n                  <Skeleton key={j} className=\"h-5 w-16\" />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"rtl text-right\">\n        <h3 className=\"text-xl font-bold mb-4\">المشاريع الموصى بها</h3>\n        <p className=\"text-red-500\">حدث خطأ أثناء تحميل المشاريع الموصى بها</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"rtl text-right\">\n        <h3 className=\"text-xl font-bold mb-4\">المشاريع الموصى بها</h3>\n        <p className=\"text-gray-500\">لا توجد مشاريع موصى بها حالياً</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-3 rtl\">\n      <h3 className=\"text-xl font-bold text-right mb-4\">المشاريع الموصى بها</h3>\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {data.map(({ project, matchScore }) => (\n          <Card key={project.id} className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-md transition-all\">\n            <CardHeader className=\"pb-2\">\n              <div className=\"flex justify-between items-start\">\n                <CardTitle className=\"text-right font-bold text-lg\">{project.title}</CardTitle>\n                <Badge variant={project.highlightStatus === 'عالي الطلب' ? 'destructive' : 'secondary'}>\n                  {project.highlightStatus || project.status}\n                </Badge>\n              </div>\n              <CardDescription className=\"text-right text-sm text-muted-foreground\">\n                بواسطة {project.name || project.username || 'مستخدم'}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-right mb-3\">{truncateText(project.description, 100)}</p>\n              <div className=\"flex justify-between text-sm mb-3 text-gray-500\">\n                <div>\n                  <span className=\"font-bold\">الميزانية:</span> {project.budget}\n                </div>\n                <div>\n                  <span className=\"font-bold\">المدة:</span> {project.duration}\n                </div>\n              </div>\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {project.skills?.map((skill) => (\n                  <Badge key={skill} variant=\"outline\" className=\"text-xs bg-gray-100\">\n                    {skill}\n                  </Badge>\n                ))}\n              </div>\n              <div className=\"mt-3 bg-gray-100 p-2 rounded-md\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-xs font-semibold\">نسبة التطابق: </span>\n                  <div className=\"w-full bg-gray-300 rounded-full h-2 ml-2\">\n                    <div \n                      className=\"bg-green-600 h-2 rounded-full\" \n                      style={{ width: `${Math.round(matchScore * 100)}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"text-xs font-semibold mr-2\">{Math.round(matchScore * 100)}%</span>\n                </div>\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Link href={`/projects/${project.id}`}>\n                <Button variant=\"outline\" className=\"w-full\">عرض التفاصيل</Button>\n              </Link>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendedProjects;","size_bytes":5588},"client/src/components/recommendations/SimilarProjects.tsx":{"content":"import { FC } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { skillsToString, truncateText } from '@/lib/utils';\nimport { Link } from 'wouter';\n\ninterface SimilarProjectsProps {\n  projectId: number;\n  limit?: number;\n}\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  name?: string;\n  username?: string;\n};\n\ninterface SimilarProjectItem {\n  project: Project;\n  similarityScore: number;\n}\n\nconst SimilarProjects: FC<SimilarProjectsProps> = ({ projectId, limit = 3 }) => {\n  const { data, isLoading, error } = useQuery<SimilarProjectItem[]>({\n    queryKey: ['/api/recommendations/projects', projectId, 'similar'],\n    queryFn: async () => {\n      const response = await fetch(`/api/recommendations/projects/${projectId}/similar?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على المشاريع المشابهة');\n      }\n      return response.json();\n    },\n    enabled: !!projectId,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-3 rtl\">\n        <h3 className=\"text-xl font-bold text-right mb-4\">مشاريع مشابهة</h3>\n        {Array.from({ length: limit }).map((_, i) => (\n          <Card key={i} className=\"w-full\">\n            <CardHeader className=\"pb-2\">\n              <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-16 w-full\" />\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {Array.from({ length: 3 }).map((_, j) => (\n                  <Skeleton key={j} className=\"h-5 w-16\" />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"rtl text-right\">\n        <h3 className=\"text-xl font-bold mb-4\">مشاريع مشابهة</h3>\n        <p className=\"text-red-500\">حدث خطأ أثناء تحميل المشاريع المشابهة</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"rtl text-right\">\n        <h3 className=\"text-xl font-bold mb-4\">مشاريع مشابهة</h3>\n        <p className=\"text-gray-500\">لا توجد مشاريع مشابهة حالياً</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-3 rtl\">\n      <h3 className=\"text-xl font-bold text-right mb-4\">مشاريع مشابهة</h3>\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {data.map(({ project, similarityScore }) => (\n          <Card key={project.id} className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-md transition-all\">\n            <CardHeader className=\"pb-2\">\n              <div className=\"flex justify-between items-start\">\n                <CardTitle className=\"text-right font-bold text-lg\">{project.title}</CardTitle>\n                <Badge variant={project.highlightStatus === 'عالي الطلب' ? 'destructive' : 'secondary'}>\n                  {project.highlightStatus || project.status}\n                </Badge>\n              </div>\n              <CardDescription className=\"text-right text-sm text-muted-foreground\">\n                بواسطة {project.name || project.username || 'مستخدم'}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-right mb-3\">{truncateText(project.description, 100)}</p>\n              <div className=\"flex justify-between text-sm mb-3 text-gray-500\">\n                <div>\n                  <span className=\"font-bold\">الميزانية:</span> {project.budget}\n                </div>\n                <div>\n                  <span className=\"font-bold\">المدة:</span> {project.duration}\n                </div>\n              </div>\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {project.skills?.map((skill) => (\n                  <Badge key={skill} variant=\"outline\" className=\"text-xs bg-gray-100\">\n                    {skill}\n                  </Badge>\n                ))}\n              </div>\n              <div className=\"mt-3 bg-gray-100 p-2 rounded-md\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-xs font-semibold\">نسبة التشابه: </span>\n                  <div className=\"w-full bg-gray-300 rounded-full h-2 ml-2\">\n                    <div \n                      className=\"bg-blue-600 h-2 rounded-full\" \n                      style={{ width: `${Math.round(similarityScore * 100)}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"text-xs font-semibold mr-2\">{Math.round(similarityScore * 100)}%</span>\n                </div>\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Link href={`/projects/${project.id}`}>\n                <Button variant=\"outline\" className=\"w-full\">عرض التفاصيل</Button>\n              </Link>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SimilarProjects;","size_bytes":5505},"client/src/components/recommendations/TrendingProjects.tsx":{"content":"import { FC } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useQuery } from '@tanstack/react-query';\nimport { skillsToString, truncateText } from '@/lib/utils';\nimport { Link } from 'wouter';\nimport { TrendingUp } from 'lucide-react';\n\ninterface TrendingProjectsProps {\n  limit?: number;\n}\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  name?: string;\n  username?: string;\n};\n\nconst TrendingProjects: FC<TrendingProjectsProps> = ({ limit = 5 }) => {\n  const { data, isLoading, error } = useQuery<Project[]>({\n    queryKey: ['/api/recommendations/trending-projects'],\n    queryFn: async () => {\n      const response = await fetch(`/api/recommendations/trending-projects?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على المشاريع الرائجة');\n      }\n      return response.json();\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-3 rtl\">\n        <div className=\"flex items-center mb-4\">\n          <TrendingUp className=\"ml-2 text-primary\" />\n          <h3 className=\"text-xl font-bold text-right\">المشاريع الرائجة</h3>\n        </div>\n        {Array.from({ length: limit }).map((_, i) => (\n          <Card key={i} className=\"w-full\">\n            <CardHeader className=\"pb-2\">\n              <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-16 w-full\" />\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {Array.from({ length: 3 }).map((_, j) => (\n                  <Skeleton key={j} className=\"h-5 w-16\" />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"rtl text-right\">\n        <div className=\"flex items-center mb-4\">\n          <TrendingUp className=\"ml-2 text-primary\" />\n          <h3 className=\"text-xl font-bold\">المشاريع الرائجة</h3>\n        </div>\n        <p className=\"text-red-500\">حدث خطأ أثناء تحميل المشاريع الرائجة</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"rtl text-right\">\n        <div className=\"flex items-center mb-4\">\n          <TrendingUp className=\"ml-2 text-primary\" />\n          <h3 className=\"text-xl font-bold\">المشاريع الرائجة</h3>\n        </div>\n        <p className=\"text-gray-500\">لا توجد مشاريع رائجة حالياً</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-3 rtl\">\n      <div className=\"flex items-center mb-4\">\n        <TrendingUp className=\"ml-2 text-primary\" />\n        <h3 className=\"text-xl font-bold\">المشاريع ذات الطلب العالي</h3>\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {data.map((project) => (\n          <Card key={project.id} className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-md transition-all\">\n            <CardHeader className=\"pb-2\">\n              <div className=\"flex justify-between items-start\">\n                <CardTitle className=\"text-right font-bold text-lg\">{project.title}</CardTitle>\n                <Badge variant={project.highlightStatus === 'عالي الطلب' ? 'destructive' : 'secondary'}>\n                  {project.highlightStatus || project.status}\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-wrap gap-1 mt-2\">\n                {project.skills?.map((skill) => (\n                  <Badge key={skill} variant=\"outline\" className=\"text-xs bg-gray-100\">\n                    {skill}\n                  </Badge>\n                ))}\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Link href=\"/auth/register\">\n                <Button className=\"w-full\">اطلب مشروع مماثل</Button>\n              </Link>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TrendingProjects;","size_bytes":4501},"client/src/components/recommendations/index.ts":{"content":"export { default as RecommendedProjects } from './RecommendedProjects';\nexport { default as RecommendedCompanies } from './RecommendedCompanies';\nexport { default as SimilarProjects } from './SimilarProjects';\nexport { default as TrendingProjects } from './TrendingProjects';\n\n// المكونات المعززة بالذكاء الاصطناعي\nexport { default as AIRecommendedCompanies } from './AIRecommendedCompanies';\nexport { default as AISimilarProjects } from './AISimilarProjects';\nexport { default as AIMarketTrends } from './AIMarketTrends';\nexport { default as AIProjectAnalysis } from './AIProjectAnalysis';","size_bytes":621},"client/src/components/seo/ArticleSchema.tsx":{"content":"import { Helmet } from \"react-helmet\";\n\n/**\n * مكون ArticleSchema لإضافة البيانات المنظمة للمقالات\n * يحسن ظهور المقالات في نتائج محركات البحث عن طريق إضافة الوصف الهيكلي\n * مع معلومات المؤلف وتواريخ النشر والتعديل\n */\ninterface ArticleSchemaProps {\n  title: string;\n  description: string;\n  image?: string;\n  url: string;\n  authorName: string;\n  publishDate: string; // ISO format date string: YYYY-MM-DD\n  modifiedDate?: string; // ISO format date string: YYYY-MM-DD\n  categoryName?: string;\n  tags?: string[];\n  siteUrl?: string;\n  siteName?: string;\n  logoUrl?: string;\n}\n\nconst ArticleSchema = ({\n  title,\n  description,\n  image,\n  url,\n  authorName,\n  publishDate,\n  modifiedDate,\n  categoryName,\n  tags = [],\n  siteUrl = \"https://linktech.app\",\n  siteName = \"لينكتك - منصة لربط رواد الأعمال بشركات التطوير التقني\",\n  logoUrl = \"https://linktech.app/logo.png\"\n}: ArticleSchemaProps) => {\n  // إنشاء الوصف الهيكلي للمقال وفق معايير Schema.org\n  const articleSchema: Record<string, any> = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Article\",\n    \"headline\": title,\n    \"description\": description,\n    \"image\": image,\n    \"datePublished\": publishDate,\n    \"dateModified\": modifiedDate || publishDate,\n    \"author\": {\n      \"@type\": \"Person\",\n      \"name\": authorName\n    },\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": siteName,\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": logoUrl\n      }\n    },\n    \"mainEntityOfPage\": {\n      \"@type\": \"WebPage\",\n      \"@id\": url\n    },\n    \"url\": url\n  };\n\n  // إضافة الفئة إذا كانت متوفرة\n  if (categoryName) {\n    articleSchema.articleSection = categoryName;\n  }\n\n  // إضافة الوسوم إذا كانت متوفرة\n  if (tags.length > 0) {\n    articleSchema.keywords = tags.join(\",\");\n  }\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(articleSchema)}\n      </script>\n    </Helmet>\n  );\n};\n\nexport default ArticleSchema;","size_bytes":2185},"client/src/components/seo/SEO.tsx":{"content":"import React from 'react';\nimport { Helmet } from 'react-helmet';\n\ninterface SEOProps {\n  title: string;\n  description: string;\n  keywords?: string;\n  ogImage?: string;\n  ogType?: 'website' | 'article' | 'profile' | 'book';\n  ogUrl?: string;\n  noIndex?: boolean;\n  noFollow?: boolean;\n  canonicalUrl?: string;\n  children?: React.ReactNode;\n}\n\n/**\n * مكون لإدارة العلامات الوصفية لمحسنات محركات البحث (SEO)\n * مهم: استخدم هذا المكون في جميع الصفحات لضمان تحسين الظهور في نتائج البحث\n */\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  description,\n  keywords,\n  ogImage = 'https://linktech.app/images/og-image.jpg',\n  ogType = 'website',\n  ogUrl,\n  noIndex = false,\n  noFollow = false,\n  canonicalUrl,\n  children\n}) => {\n  const fullTitle = `${title} | لينكتك - منصة ربط رواد الأعمال بشركات البرمجة`;\n  const robots = `${noIndex ? 'noindex' : 'index'}, ${noFollow ? 'nofollow' : 'follow'}`;\n  const currentUrl = ogUrl || (typeof window !== 'undefined' ? window.location.href : '');\n\n  return (\n    <Helmet>\n      {/* العلامات الأساسية */}\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {keywords && <meta name=\"keywords\" content={keywords} />}\n      <meta name=\"robots\" content={robots} />\n      \n      {/* علامات Open Graph للمشاركة على وسائل التواصل الاجتماعي */}\n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content={ogType} />\n      <meta property=\"og:url\" content={currentUrl} />\n      <meta property=\"og:image\" content={ogImage} />\n      <meta property=\"og:locale\" content=\"ar_SA\" />\n      <meta property=\"og:site_name\" content=\"لينكتك\" />\n\n      {/* علامات Twitter Card */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@linktech_sa\" />\n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={ogImage} />\n\n      {/* علامات أخرى مهمة */}\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n      <meta name=\"language\" content=\"Arabic\" />\n      <meta name=\"revisit-after\" content=\"7 days\" />\n      <meta name=\"author\" content=\"لينكتك\" />\n\n      {/* الرابط القانوني (Canonical URL) لتجنب محتوى مكرر */}\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n\n      {/* روابط بديلة متعددة اللغات */}\n      <link rel=\"alternate\" href={currentUrl} hrefLang=\"ar-sa\" />\n      <link rel=\"alternate\" href={currentUrl} hrefLang=\"x-default\" />\n\n      {/* هيكلة إضافية من المستدعي */}\n      {children}\n    </Helmet>\n  );\n};\n\nexport default SEO;","size_bytes":3065},"client/src/components/seo/ServiceSchema.tsx":{"content":"import { Helmet } from \"react-helmet\";\n\ninterface ServiceSchemaProps {\n  name: string;\n  description: string;\n  url: string;\n  provider: string;\n  providerUrl: string;\n  imageUrl?: string;\n  serviceArea?: string;\n  price?: {\n    amount: number;\n    currency: string;\n  };\n}\n\n/**\n * مكون ServiceSchema \n * ينشئ بيانات منظمة لنوع Service حسب معايير schema.org\n * لتحسين ظهور معلومات الخدمة في نتائج البحث\n */\nconst ServiceSchema = ({\n  name,\n  description,\n  url,\n  provider,\n  providerUrl,\n  imageUrl,\n  serviceArea = \"المملكة العربية السعودية\",\n  price\n}: ServiceSchemaProps) => {\n  const schemaData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Service\",\n    \"name\": name,\n    \"description\": description,\n    \"url\": url,\n    \"provider\": {\n      \"@type\": \"Organization\",\n      \"name\": provider,\n      \"url\": providerUrl\n    },\n    \"areaServed\": serviceArea,\n    ...(imageUrl && { \"image\": imageUrl }),\n    ...(price && {\n      \"offers\": {\n        \"@type\": \"Offer\",\n        \"price\": price.amount,\n        \"priceCurrency\": price.currency\n      }\n    })\n  };\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaData)}\n      </script>\n    </Helmet>\n  );\n};\n\nexport default ServiceSchema;","size_bytes":1327},"client/src/components/seo/StaticPageLayout.tsx":{"content":"import { ReactNode } from \"react\";\nimport { Link } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\nimport SEO from \"@/components/seo/SEO\";\nimport { WebpageStructuredData, BreadcrumbStructuredData } from \"@/components/seo/StructuredData\";\n\ninterface StaticPageLayoutProps {\n  title: string;\n  description: string;\n  keywords: string;\n  breadcrumbs: Array<{ name: string; url: string }>;\n  children: ReactNode;\n  canonicalUrl?: string;\n  structuredData?: ReactNode;\n}\n\nconst StaticPageLayout = ({\n  title,\n  description,\n  keywords,\n  breadcrumbs,\n  children,\n  canonicalUrl,\n  structuredData\n}: StaticPageLayoutProps) => {\n  // الصفحة الأخيرة في التسلسل هي الصفحة الحالية\n  const currentPage = breadcrumbs[breadcrumbs.length - 1];\n  \n  // استخراج اسم الصفحة من عنوان الصفحة (إزالة اسم الموقع إذا كان موجوداً)\n  const pageName = currentPage.name.split('|')[0].trim();\n  \n  // بناء URL كامل\n  const fullUrl = canonicalUrl || `https://linktech.app${currentPage.url}`;\n\n  return (\n    <>\n      <SEO\n        title={title}\n        description={description}\n        keywords={keywords}\n        canonicalUrl={fullUrl}\n      >\n        <WebpageStructuredData\n          name={pageName}\n          description={description}\n          url={fullUrl}\n        />\n        <BreadcrumbStructuredData items={breadcrumbs} />\n        {structuredData}\n      </SEO>\n\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"mb-6\">\n          <Link href=\"/\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n            <ArrowLeft className=\"ml-1 h-4 w-4 rtl-flip\" />\n            العودة إلى الرئيسية\n          </Link>\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto\">\n          <nav className=\"flex text-sm text-neutral-600 mb-6\" aria-label=\"التنقل التسلسلي\">\n            <ol className=\"flex rtl space-x-2 space-x-reverse\">\n              {breadcrumbs.map((item, index) => (\n                <li key={index}>\n                  {index < breadcrumbs.length - 1 ? (\n                    <>\n                      <Link href={item.url} className=\"hover:text-primary hover:underline\">\n                        {item.name}\n                      </Link>\n                      <span className=\"mx-2\">/</span>\n                    </>\n                  ) : (\n                    <span className=\"font-semibold\">{item.name}</span>\n                  )}\n                </li>\n              ))}\n            </ol>\n          </nav>\n\n          {children}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StaticPageLayout;","size_bytes":2686},"client/src/components/seo/StructuredData.tsx":{"content":"import React from 'react';\n\ninterface OrganizationStructuredDataProps {\n  name: string;\n  url: string;\n  logo: string;\n  description: string;\n}\n\ninterface ProjectStructuredDataProps {\n  name: string;\n  description: string;\n  datePublished: string;\n  author: string;\n  category?: string;\n}\n\ninterface WebpageStructuredDataProps {\n  name: string;\n  description: string;\n  url: string;\n}\n\ninterface BreadcrumbStructuredDataProps {\n  items: Array<{name: string; url: string}>;\n}\n\ninterface FAQStructuredDataProps {\n  questions: Array<{\n    question: string;\n    answer: string;\n  }>;\n}\n\n/**\n * مكون لإضافة البيانات المنظمة للمنظمة/الشركة\n * يساعد محركات البحث في فهم معلومات المنصة\n */\nexport const OrganizationStructuredData: React.FC<OrganizationStructuredDataProps> = ({ \n  name, \n  url, \n  logo, \n  description \n}) => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'Organization',\n    name,\n    url,\n    logo,\n    description,\n    sameAs: [\n      'https://twitter.com/linktech_sa',\n      'https://facebook.com/linktech_sa',\n      'https://linkedin.com/company/linktech_sa'\n    ]\n  };\n\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n    />\n  );\n};\n\n/**\n * مكون لإضافة البيانات المنظمة للمشاريع\n * يساعد محركات البحث في فهم محتوى المشروع\n */\nexport const ProjectStructuredData: React.FC<ProjectStructuredDataProps> = ({ \n  name, \n  description, \n  datePublished, \n  author,\n  category\n}) => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'Project',\n    name,\n    description,\n    datePublished,\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    ...(category && { category })\n  };\n\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n    />\n  );\n};\n\n/**\n * مكون لإضافة البيانات المنظمة للصفحة\n * يساعد محركات البحث في فهم محتوى الصفحة\n */\nexport const WebpageStructuredData: React.FC<WebpageStructuredDataProps> = ({ \n  name, \n  description, \n  url \n}) => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'WebPage',\n    name,\n    description,\n    url\n  };\n\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n    />\n  );\n};\n\n/**\n * مكون لإضافة بيانات منظمة لمسار التنقل\n * يساعد محركات البحث في فهم تسلسل التنقل في الموقع\n */\nexport const BreadcrumbStructuredData: React.FC<BreadcrumbStructuredDataProps> = ({ items }) => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    itemListElement: items.map((item, index) => ({\n      '@type': 'ListItem',\n      position: index + 1,\n      name: item.name,\n      item: item.url\n    }))\n  };\n\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n    />\n  );\n};\n\n/**\n * مكون لإضافة بيانات منظمة لصفحة الاتصال\n * يساعد محركات البحث في فهم معلومات الاتصال\n */\nexport const ContactPageStructuredData: React.FC<{url: string}> = ({ url }) => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'ContactPage',\n    url,\n    description: 'صفحة الاتصال بمنصة لينكتك - تواصل معنا لأي استفسارات',\n    mainEntity: {\n      '@type': 'Organization',\n      name: 'لينكتك',\n      email: 'contact@linktech.app',\n      telephone: '+966000000000',\n      address: {\n        '@type': 'PostalAddress',\n        addressCountry: 'SA',\n        addressLocality: 'الرياض',\n        addressRegion: 'الرياض'\n      }\n    }\n  };\n\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n    />\n  );\n};\n\n/**\n * مكون لإضافة بيانات منظمة للأسئلة الشائعة\n * يساعد محركات البحث في فهم الأسئلة والأجوبة المتوفرة\n */\nexport const FAQStructuredData: React.FC<FAQStructuredDataProps> = ({ questions }) => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'FAQPage',\n    mainEntity: questions.map(q => ({\n      '@type': 'Question',\n      name: q.question,\n      acceptedAnswer: {\n        '@type': 'Answer',\n        text: q.answer\n      }\n    }))\n  };\n\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n    />\n  );\n};","size_bytes":4888},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent, DialogTitle } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n        {/* Hidden DialogTitle for accessibility */}\n        <div className=\"sr-only\">\n          <DialogTitle>بحث</DialogTitle>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":5044},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/dropzone-uploader.tsx":{"content":"import { useState, useCallback, forwardRef } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { cn } from '@/lib/utils';\nimport { CloudUpload, File, X, CheckCircle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\nexport interface UploadedFile {\n  id: string;\n  name: string;\n  url: string; \n  type: string;\n  size: number;\n  uploadedAt: string;\n}\n\nexport interface DropzoneUploaderProps {\n  value?: UploadedFile[];\n  onChange?: (files: UploadedFile[]) => void;\n  onFilesChange?: (files: UploadedFile[]) => void;\n  initialFiles?: UploadedFile[];\n  maxFiles?: number;\n  maxSize?: number; // in bytes\n  acceptedFileTypes?: Record<string, string[]>;\n  uploadPath?: string;\n  className?: string;\n  disabled?: boolean;\n}\n\nconst generateUniqueId = () => `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n// Simulate file upload to server\nconst uploadFileToServer = async (file: File): Promise<string> => {\n  // In a real implementation, this would be a request to your server to upload the file\n  // For now, we'll convert to a data URL as a placeholder\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      if (e.target?.result) {\n        resolve(e.target.result as string);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\nexport const DropzoneUploader = forwardRef<HTMLDivElement, DropzoneUploaderProps>(({\n  value = [],\n  onChange,\n  onFilesChange,\n  initialFiles = [],\n  maxFiles = 5,\n  maxSize = 5 * 1024 * 1024, // 5MB default\n  acceptedFileTypes = {\n    'image/jpeg': ['.jpg', '.jpeg'],\n    'image/png': ['.png'],\n    'image/gif': ['.gif'],\n    'application/pdf': ['.pdf'],\n    'application/msword': ['.doc', '.docx'],\n    'application/vnd.ms-excel': ['.xls', '.xlsx']\n  },\n  uploadPath = '/upload',\n  className,\n  disabled = false\n}, ref) => {\n  const [isUploading, setIsUploading] = useState(false);\n  const [files, setFiles] = useState<UploadedFile[]>(initialFiles.length > 0 ? initialFiles : value);\n\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    if (disabled) return;\n    \n    // Validate maximum files\n    const remainingSlots = maxFiles - files.length;\n    if (remainingSlots <= 0) return;\n    \n    // Only take what we can fit\n    const filesToProcess = acceptedFiles.slice(0, remainingSlots);\n    \n    setIsUploading(true);\n    \n    try {\n      const newFiles = await Promise.all(\n        filesToProcess.map(async (file) => {\n          const url = await uploadFileToServer(file);\n          const newFile: UploadedFile = {\n            id: generateUniqueId(),\n            name: file.name,\n            url,\n            type: file.type,\n            size: file.size,\n            uploadedAt: new Date().toISOString()\n          };\n          return newFile;\n        })\n      );\n      \n      const updatedFiles = [...files, ...newFiles];\n      setFiles(updatedFiles);\n      if (onChange) onChange(updatedFiles);\n      if (onFilesChange) onFilesChange(updatedFiles);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  }, [files, maxFiles, disabled, onChange, onFilesChange]);\n\n  const removeFile = (fileId: string) => {\n    if (disabled) return;\n    \n    const updatedFiles = files.filter(file => file.id !== fileId);\n    setFiles(updatedFiles);\n    if (onChange) onChange(updatedFiles);\n    if (onFilesChange) onFilesChange(updatedFiles);\n  };\n  \n  const { getRootProps, getInputProps, isDragActive, open } = useDropzone({ \n    onDrop,\n    maxSize,\n    disabled: disabled || isUploading || files.length >= maxFiles,\n    accept: acceptedFileTypes,\n    noClick: true, // Disable click to avoid double triggers\n    noKeyboard: true\n  });\n\n  const getFileIcon = (fileType: string) => {\n    if (fileType.startsWith('image/')) {\n      return null; // Will display a thumbnail\n    }\n    return <File className=\"h-6 w-6 text-gray-500\" />;\n  };\n\n  return (\n    <div className={cn(\"space-y-4\", className)} ref={ref}>\n      <div \n        {...getRootProps()} \n        className={cn(\n          \"border-2 border-dashed rounded-lg p-6 text-center transition-colors\",\n          isDragActive \n            ? \"border-primary bg-primary/10\" \n            : \"border-gray-300 hover:border-primary\",\n          disabled && \"opacity-50 cursor-not-allowed\",\n          files.length >= maxFiles && \"opacity-50\"\n        )}\n      >\n        <Input {...getInputProps()} />\n        \n        <div className=\"flex flex-col items-center justify-center space-y-3\">\n          <CloudUpload className=\"h-12 w-12 text-gray-400\" />\n          \n          <div className=\"text-gray-600\">\n            {isDragActive ? (\n              <p className=\"font-medium text-primary\">أفلت الملفات هنا للرفع</p>\n            ) : (\n              <div>\n                <p className=\"font-medium\">اسحب وأفلت الملفات هنا، أو</p>\n                <Button \n                  variant=\"ghost\" \n                  type=\"button\" \n                  onClick={open}\n                  disabled={disabled || files.length >= maxFiles}\n                  className=\"mx-1\"\n                >\n                  تصفح ملفاتك\n                </Button>\n              </div>\n            )}\n          </div>\n          \n          <p className=\"text-xs text-gray-500 mt-2\">\n            بحد أقصى {maxFiles} ملفات. الحد الأقصى: {(maxSize / (1024 * 1024)).toFixed(0)} ميجابايت لكل ملف.\n            <br />\n            الصيغ المقبولة: jpg, png, gif, pdf, doc, xls\n          </p>\n        </div>\n      </div>\n\n      {isUploading && (\n        <div className=\"bg-gray-100 rounded-lg p-3 flex items-center justify-center\">\n          <div className=\"loading-spinner ml-2\" aria-label=\"جاري الرفع...\"></div>\n          <span>جاري رفع الملفات...</span>\n        </div>\n      )}\n\n      {files.length > 0 && (\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium\">الملفات المرفقة ({files.length}/{maxFiles})</h4>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n            {files.map((file) => (\n              <div\n                key={file.id}\n                className=\"flex items-center space-x-4 rtl:space-x-reverse bg-gray-50 rounded-lg p-3 border border-gray-200\"\n              >\n                <div className=\"flex-shrink-0 w-12 h-12 rounded overflow-hidden bg-white border flex items-center justify-center\">\n                  {file.type.startsWith('image/') ? (\n                    <img\n                      src={file.url}\n                      alt={file.name}\n                      className=\"h-full w-full object-cover\"\n                    />\n                  ) : (\n                    getFileIcon(file.type)\n                  )}\n                </div>\n                \n                <div className=\"min-w-0 flex-1\">\n                  <p className=\"text-sm font-medium text-gray-900 truncate\" title={file.name}>\n                    {file.name}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">\n                    {(file.size / 1024).toFixed(0)} كيلوبايت\n                  </p>\n                </div>\n                \n                <div className=\"flex-shrink-0\">\n                  {!disabled && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeFile(file.id)}\n                      className=\"text-red-500 hover:text-red-700 hover:bg-red-50 p-1 h-auto\"\n                    >\n                      <X className=\"h-4 w-4\" />\n                      <span className=\"sr-only\">إزالة الملف</span>\n                    </Button>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nDropzoneUploader.displayName = 'DropzoneUploader';","size_bytes":8008},"client/src/components/ui/file-upload.tsx":{"content":"import React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Button } from \"@/components/ui/button\";\nimport { Upload, X, FileText, AlertCircle } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\ninterface FileUploadProps {\n  value?: File | null;\n  onChange: (file: File | null) => void;\n  accept?: Record<string, string[]>;\n  maxSize?: number;\n  multiple?: boolean;\n  label?: string;\n  helperText?: string;\n  error?: string;\n  maxFiles?: number;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({\n  value,\n  onChange,\n  accept = {\n    \"image/*\": [\".jpg\", \".jpeg\", \".png\", \".gif\", \".webp\"],\n  },\n  maxSize = 5 * 1024 * 1024, // 5MB\n  multiple = false,\n  label = \"رفع ملف\",\n  helperText = \"اسحب وأفلت الملف هنا، أو انقر للاختيار\",\n  error,\n  maxFiles = 1,\n}) => {\n  const [preview, setPreview] = useState<string | null>(null);\n  const [fileError, setFileError] = useState<string | null>(null);\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      setFileError(null);\n\n      if (acceptedFiles.length > 0) {\n        const file = acceptedFiles[0];\n        onChange(file);\n\n        // Create a preview URL for image files\n        if (file.type.startsWith(\"image/\")) {\n          const objectUrl = URL.createObjectURL(file);\n          setPreview(objectUrl);\n        } else {\n          setPreview(null);\n        }\n      }\n    },\n    [onChange]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept,\n    maxSize,\n    multiple,\n    maxFiles,\n    onDropRejected: (fileRejections) => {\n      const rejection = fileRejections[0];\n      if (rejection.errors[0].code === \"file-too-large\") {\n        setFileError(`الملف كبير جداً، الحد الأقصى هو ${maxSize / (1024 * 1024)} ميجابايت`);\n      } else if (rejection.errors[0].code === \"file-invalid-type\") {\n        setFileError(\"نوع الملف غير مدعوم\");\n      } else {\n        setFileError(\"حدث خطأ أثناء رفع الملف\");\n      }\n    },\n  });\n\n  const removeFile = () => {\n    if (preview) {\n      URL.revokeObjectURL(preview);\n    }\n    onChange(null);\n    setPreview(null);\n    setFileError(null);\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      {label && <div className=\"text-sm font-medium\">{label}</div>}\n\n      {value || preview ? (\n        <div className=\"border border-gray-200 dark:border-gray-800 rounded-lg p-4\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center space-x-2 space-x-reverse\">\n              <FileText className=\"h-5 w-5 text-primary\" />\n              <span className=\"text-sm font-medium\">\n                {value?.name || \"ملف مرفق\"}\n              </span>\n            </div>\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={removeFile}\n              className=\"text-gray-500 hover:text-red-500\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n          {preview && value?.type.startsWith(\"image/\") && (\n            <div className=\"mt-2\">\n              <img\n                src={preview}\n                alt=\"Preview\"\n                className=\"max-h-48 rounded border border-gray-200 mx-auto\"\n              />\n            </div>\n          )}\n        </div>\n      ) : (\n        <div\n          {...getRootProps({\n            className: `border-2 border-dashed border-gray-300 dark:border-gray-700 rounded-lg p-8 \n              ${isDragActive ? \"border-primary bg-primary/10\" : \"\"}\n              ${error || fileError ? \"border-red-500 dark:border-red-500\" : \"\"}\n              transition-colors duration-200 cursor-pointer`,\n          })}\n        >\n          <input {...getInputProps()} />\n          <div className=\"flex flex-col items-center justify-center text-center\">\n            <Upload className=\"h-10 w-10 text-gray-400 mb-2\" />\n            <p className=\"text-sm font-medium mb-1\">{helperText}</p>\n            <p className=\"text-xs text-gray-500\">\n              أقصى حجم للملف: {maxSize / (1024 * 1024)} ميجابايت\n            </p>\n          </div>\n        </div>\n      )}\n\n      {(error || fileError) && (\n        <Alert variant=\"destructive\" className=\"mt-2\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>{error || fileError}</AlertDescription>\n        </Alert>\n      )}\n    </div>\n  );\n};\n\nexport { FileUpload };","size_bytes":4562},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/lazy-image.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface LazyImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  src: string;\n  alt: string;\n  placeholder?: string;\n  blurDataURL?: string;\n  width?: number;\n  height?: number;\n  aspectRatio?: string;\n  className?: string;\n  wrapperClassName?: string;\n  loadingClassname?: string;\n  loading?: \"lazy\" | \"eager\";\n  fetchPriority?: \"high\" | \"low\" | \"auto\";\n  decoding?: \"async\" | \"sync\" | \"auto\";\n}\n\n/**\n * مكون LazyImage للتحميل البطيء للصور\n * يستخدم Intersection Observer API لتحميل الصور فقط عندما تصبح مرئية في نافذة العرض\n * يوفر صورة placeholder أو تأثير تمويه للصور أثناء التحميل\n */\nexport function LazyImage({\n  src,\n  alt,\n  placeholder = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 40 40'%3E%3Cpath d='M20 33.33c7.36 0 13.33-5.97 13.33-13.33S27.36 6.67 20 6.67 6.67 12.64 6.67 20 12.64 33.33 20 33.33zm0-4.44c-4.91 0-8.89-3.98-8.89-8.89S15.09 11.11 20 11.11 28.89 15.09 28.89 20 24.91 28.89 20 28.89z' fill='%23cccccc'/%3E%3C/svg%3E\",\n  blurDataURL,\n  width,\n  height,\n  aspectRatio = \"auto\",\n  className,\n  wrapperClassName,\n  loadingClassname,\n  loading = \"lazy\",\n  fetchPriority = \"auto\",\n  decoding = \"async\",\n  ...props\n}: LazyImageProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  // إعداد Intersection Observer لتتبع رؤية الصورة\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          setIsInView(true);\n          // إلغاء المراقبة بعد دخول الصورة في العرض\n          observer.disconnect();\n        }\n      },\n      { rootMargin: \"200px\" } // بداية التحميل عندما تكون الصورة على بعد 200 بكسل من نافذة العرض\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  const handleLoad = () => {\n    setIsLoaded(true);\n  };\n\n  // تحديد أسلوب الحاوية بناءً على نسبة العرض إلى الارتفاع المحددة\n  const wrapperStyle = {\n    position: \"relative\" as const,\n    width: \"100%\",\n    paddingBottom:\n      aspectRatio !== \"auto\"\n        ? `calc(100% / (${aspectRatio.split(\":\")[0]} / ${\n            aspectRatio.split(\":\")[1]\n          }))`\n        : undefined,\n    height: aspectRatio === \"auto\" ? \"auto\" : undefined,\n    overflow: \"hidden\" as const,\n    background: blurDataURL\n      ? `url(${blurDataURL}) no-repeat center center / cover`\n      : undefined,\n  };\n\n  return (\n    <div\n      className={cn(\"relative overflow-hidden bg-neutral-100\", wrapperClassName)}\n      style={wrapperStyle}\n    >\n      {/* صورة مؤقتة أثناء التحميل */}\n      {!isLoaded && (\n        <div\n          className={cn(\"absolute inset-0 flex items-center justify-center\", loadingClassname)}\n          aria-hidden=\"true\"\n        >\n          <img\n            src={placeholder}\n            alt=\"\"\n            className=\"w-full h-full object-cover opacity-30\"\n          />\n        </div>\n      )}\n\n      {/* الصورة الفعلية */}\n      {isInView && (\n        <img\n          ref={imgRef}\n          src={src}\n          alt={alt}\n          width={width}\n          height={height}\n          onLoad={handleLoad}\n          loading={loading}\n          fetchPriority={fetchPriority}\n          decoding={decoding}\n          className={cn(\n            \"w-full h-full object-cover transition-opacity duration-300\",\n            isLoaded ? \"opacity-100\" : \"opacity-0\",\n            className\n          )}\n          {...props}\n        />\n      )}\n    </div>\n  );\n}","size_bytes":3937},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import { useMemo } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\ninterface PaginationProps {\n  totalItems: number;\n  itemsPerPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  maxPageButtons?: number;\n}\n\nexport function Pagination({\n  totalItems,\n  itemsPerPage,\n  currentPage,\n  onPageChange,\n  maxPageButtons = 5\n}: PaginationProps) {\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  const pageNumbers = useMemo(() => {\n    // Calculate which page numbers to show\n    let startPage = Math.max(1, currentPage - Math.floor(maxPageButtons / 2));\n    let endPage = startPage + maxPageButtons - 1;\n\n    if (endPage > totalPages) {\n      endPage = totalPages;\n      startPage = Math.max(1, endPage - maxPageButtons + 1);\n    }\n\n    return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n  }, [currentPage, maxPageButtons, totalPages]);\n\n  if (totalPages <= 1) return null;\n\n  return (\n    <nav className=\"flex justify-center mt-8\" aria-label=\"التنقل بين الصفحات\">\n      <ul className=\"flex items-center gap-1\">\n        {/* Previous Page Button */}\n        <li>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            onClick={() => onPageChange(currentPage - 1)}\n            disabled={currentPage === 1}\n            aria-label=\"الصفحة السابقة\"\n            className=\"rtl-flip\"\n          >\n            <ChevronLeft className=\"h-4 w-4\" />\n          </Button>\n        </li>\n\n        {/* First Page Button (if not in range) */}\n        {pageNumbers[0] > 1 && (\n          <>\n            <li>\n              <Button\n                variant={currentPage === 1 ? \"default\" : \"outline\"}\n                size=\"icon\"\n                onClick={() => onPageChange(1)}\n                aria-label=\"الصفحة الأولى\"\n                aria-current={currentPage === 1 ? \"page\" : undefined}\n              >\n                1\n              </Button>\n            </li>\n            {pageNumbers[0] > 2 && (\n              <li className=\"px-2 text-neutral-500\">...</li>\n            )}\n          </>\n        )}\n\n        {/* Page Numbers */}\n        {pageNumbers.map(number => (\n          <li key={number}>\n            <Button\n              variant={currentPage === number ? \"default\" : \"outline\"}\n              size=\"icon\"\n              onClick={() => onPageChange(number)}\n              aria-label={`الصفحة ${number}`}\n              aria-current={currentPage === number ? \"page\" : undefined}\n            >\n              {number}\n            </Button>\n          </li>\n        ))}\n\n        {/* Last Page Button (if not in range) */}\n        {pageNumbers[pageNumbers.length - 1] < totalPages && (\n          <>\n            {pageNumbers[pageNumbers.length - 1] < totalPages - 1 && (\n              <li className=\"px-2 text-neutral-500\">...</li>\n            )}\n            <li>\n              <Button\n                variant={currentPage === totalPages ? \"default\" : \"outline\"}\n                size=\"icon\"\n                onClick={() => onPageChange(totalPages)}\n                aria-label=\"الصفحة الأخيرة\"\n                aria-current={currentPage === totalPages ? \"page\" : undefined}\n              >\n                {totalPages}\n              </Button>\n            </li>\n          </>\n        )}\n\n        {/* Next Page Button */}\n        <li>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            onClick={() => onPageChange(currentPage + 1)}\n            disabled={currentPage === totalPages}\n            aria-label=\"الصفحة التالية\"\n            className=\"rtl-flip\"\n          >\n            <ChevronRight className=\"h-4 w-4\" />\n          </Button>\n        </li>\n      </ul>\n    </nav>\n  );\n}","size_bytes":3824},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden max-h-screen overflow-y-auto\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23596},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/admin/blog-management.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport BlogEditor from '@/components/cms/BlogEditor';\nimport CategoryManager from '@/components/cms/CategoryManager';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { useAuth } from '@/App';\nimport { useQuery } from '@tanstack/react-query';\nimport { Helmet } from 'react-helmet';\nimport { Loader2, FileText, FolderTree, Settings } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLocation } from 'wouter';\n\n/**\n * صفحة إدارة المدونة\n * تتيح للمسؤولين إدارة فئات المدونة وإنشاء وتحرير المقالات\n */\nexport default function BlogManagement() {\n  const { user, isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState('posts');\n  const [editingPostId, setEditingPostId] = useState<number | null>(null);\n  \n  // وظيفة تمرير الصفحة إلى الأعلى\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // استعلام لجلب مقالات المدونة\n  const { data: posts, isLoading: loadingPosts, refetch: refetchPosts } = useQuery({\n    queryKey: ['/api/blog/posts/all'],\n  });\n\n  // Ya no necesitamos el navigate porque ProtectedRoute maneja la autenticación\n  const [_] = useLocation();\n  \n  // لا نحتاج إلى التحقق من الصلاحيات هنا، فقد تم التحقق من خلال مكون ProtectedRoute\n  \n  // تمرير الصفحة إلى الأعلى عند تغيير التبويب\n  useEffect(() => {\n    scrollToTop();\n  }, [activeTab]);\n\n  // إرسال إشعار تحديث sitemap إلى محركات البحث\n  const handlePingSitemap = async () => {\n    try {\n      const res = await fetch('/api/sitemap/ping', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await res.json();\n      \n      if (data.success) {\n        toast({\n          title: 'تم إرسال الإشعار بنجاح',\n          description: 'تم إرسال إشعار تحديث خريطة الموقع إلى محركات البحث بنجاح',\n        });\n      } else {\n        throw new Error(data.message || 'حدث خطأ أثناء إرسال الإشعار');\n      }\n    } catch (error: any) {\n      toast({\n        title: 'فشل إرسال الإشعار',\n        description: error.message || 'حدث خطأ غير معروف',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // حالة التحميل\n  if (loadingPosts) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        <span className=\"mr-2\">جاري تحميل البيانات...</span>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>إدارة المدونة | لوحة التحكم</title>\n      </Helmet>\n      <div className=\"container mx-auto p-4 py-8\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">إدارة المدونة</h1>\n            <p className=\"text-muted-foreground mt-1\">\n              إدارة محتوى المدونة وتحسين محركات البحث\n            </p>\n          </div>\n          <Button onClick={handlePingSitemap}>\n            إرسال إشعار تحديث sitemap لمحركات البحث\n          </Button>\n        </div>\n\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"w-full justify-start border-b rounded-none px-0 h-auto\">\n            <TabsTrigger\n              value=\"posts\"\n              className=\"data-[state=active]:border-b-2 data-[state=active]:border-primary data-[state=active]:shadow-none rounded-none px-4 py-2\"\n            >\n              <FileText className=\"h-5 w-5 ml-2\" />\n              المقالات\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"categories\"\n              className=\"data-[state=active]:border-b-2 data-[state=active]:border-primary data-[state=active]:shadow-none rounded-none px-4 py-2\"\n            >\n              <FolderTree className=\"h-5 w-5 ml-2\" />\n              الفئات\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"settings\"\n              className=\"data-[state=active]:border-b-2 data-[state=active]:border-primary data-[state=active]:shadow-none rounded-none px-4 py-2\"\n            >\n              <Settings className=\"h-5 w-5 ml-2\" />\n              إعدادات SEO\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"posts\" className=\"space-y-6\">\n            {editingPostId ? (\n              <>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h2 className=\"text-2xl font-bold\">تحرير المقال</h2>\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setEditingPostId(null)}\n                  >\n                    العودة إلى قائمة المقالات\n                  </Button>\n                </div>\n                <BlogEditor\n                  postId={editingPostId}\n                  onSuccess={() => {\n                    setEditingPostId(null);\n                    refetchPosts();\n                  }}\n                />\n              </>\n            ) : (\n              <>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h2 className=\"text-2xl font-bold\">مقالات المدونة</h2>\n                  <Button\n                    onClick={() => {\n                      setActiveTab('new-post'); \n                      scrollToTop();\n                    }}\n                  >\n                    إضافة مقال جديد\n                  </Button>\n                </div>\n                {posts?.length === 0 ? (\n                  <Card>\n                    <CardContent className=\"pt-6 text-center\">\n                      <div className=\"text-muted-foreground mb-4\">\n                        لا توجد مقالات في المدونة حتى الآن\n                      </div>\n                      <Button onClick={() => {\n                        setActiveTab('new-post');\n                        scrollToTop();\n                      }}>\n                        إضافة أول مقال\n                      </Button>\n                    </CardContent>\n                  </Card>\n                ) : (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {posts?.map((post: any) => (\n                      <Card key={post.id} className=\"overflow-hidden flex flex-col\">\n                        {post.featuredImage && (\n                          <div className=\"h-40 w-full overflow-hidden\">\n                            <img\n                              src={post.featuredImage}\n                              alt={post.title}\n                              className=\"h-full w-full object-cover transition-transform duration-300 hover:scale-105\"\n                            />\n                          </div>\n                        )}\n                        <CardHeader>\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <span\n                              className={`text-xs font-medium px-2.5 py-0.5 rounded ${\n                                post.status === 'published'\n                                  ? 'bg-green-100 text-green-800'\n                                  : 'bg-yellow-100 text-yellow-800'\n                              }`}\n                            >\n                              {post.status === 'published' ? 'منشور' : 'مسودة'}\n                            </span>\n                            <span className=\"text-xs text-muted-foreground\">\n                              {new Date(post.createdAt).toLocaleDateString('ar-SA')}\n                            </span>\n                          </div>\n                          <CardTitle className=\"line-clamp-2\">{post.title}</CardTitle>\n                          <CardDescription className=\"line-clamp-3\">\n                            {post.excerpt}\n                          </CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"pt-0 mt-auto\">\n                          <div className=\"flex justify-end space-x-2 space-x-reverse\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              asChild\n                            >\n                              <a\n                                href={`/blog/${post.slug}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                معاينة\n                              </a>\n                            </Button>\n                            <Button\n                              size=\"sm\"\n                              onClick={() => {\n                                setEditingPostId(post.id);\n                                scrollToTop();\n                              }}\n                            >\n                              تحرير\n                            </Button>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                )}\n              </>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"new-post\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-2xl font-bold\">إضافة مقال جديد</h2>\n              <Button\n                variant=\"outline\"\n                onClick={() => setActiveTab('posts')}\n              >\n                إلغاء\n              </Button>\n            </div>\n            <BlogEditor\n              onSuccess={() => {\n                setActiveTab('posts');\n                refetchPosts();\n              }}\n            />\n          </TabsContent>\n\n          <TabsContent value=\"categories\">\n            <CategoryManager\n              onSuccess={() => {\n                refetchPosts();\n              }}\n            />\n          </TabsContent>\n\n          <TabsContent value=\"settings\">\n            <Card>\n              <CardHeader>\n                <CardTitle>إعدادات تحسين محركات البحث (SEO)</CardTitle>\n                <CardDescription>\n                  إعدادات تحسين محركات البحث الخاصة بالمدونة\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  <div className=\"grid gap-6 grid-cols-1 md:grid-cols-2\">\n                    <div className=\"space-y-4\">\n                      <h3 className=\"text-lg font-medium\">خريطة الموقع</h3>\n                      <div className=\"flex items-center gap-4\">\n                        <Button\n                          variant=\"outline\"\n                          asChild\n                        >\n                          <a\n                            href=\"/sitemap.xml\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            معاينة خريطة الموقع\n                          </a>\n                        </Button>\n                        <Button onClick={handlePingSitemap}>\n                          إرسال إشعار التحديث\n                        </Button>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">\n                        يتم إنشاء خريطة الموقع تلقائيًا وتحديثها عند إضافة محتوى جديد.\n                        يمكنك إرسال إشعار تحديث لمحركات البحث يدويًا.\n                      </p>\n                    </div>\n                    <div className=\"space-y-4\">\n                      <h3 className=\"text-lg font-medium\">ملف robots.txt</h3>\n                      <Button\n                        variant=\"outline\"\n                        asChild\n                      >\n                        <a\n                          href=\"/robots.txt\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          معاينة ملف robots.txt\n                        </a>\n                      </Button>\n                      <p className=\"text-sm text-muted-foreground\">\n                        يتم تكوين ملف robots.txt تلقائيًا لمنع فهرسة المناطق الخاصة من الموقع\n                        مثل صفحات المشاريع ولوحات التحكم.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </>\n  );\n}","size_bytes":13493},"client/src/pages/admin/contact-messages.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, Mail, RefreshCcw, Trash2, Edit, Check, X, Reply, AlertCircle, CheckCircle, Archive, Send } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Input } from \"@/components/ui/input\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Link, useLocation } from \"wouter\";\nimport AdminLayout from \"@/components/layout/AdminLayout\";\nimport SEO from \"@/components/seo/SEO\";\n\n// تعريف نوع البيانات لرسائل الاتصال\ninterface ContactMessage {\n  id: number;\n  name: string;\n  email: string;\n  phone: string | null;\n  message: string;\n  status: string;\n  notes: string | null;\n  reply: string | null;\n  createdAt: string;\n  messageDetails: {\n    subject: string;\n  } | null;\n}\n\nconst ContactMessagesPage = () => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [location] = useLocation();\n  const [activeTab, setActiveTab] = useState(\"all\");\n  const [selectedMessage, setSelectedMessage] = useState<ContactMessage | null>(null);\n  const [replyText, setReplyText] = useState(\"\");\n  const [notesText, setNotesText] = useState(\"\");\n  const [isReplyDialogOpen, setIsReplyDialogOpen] = useState(false);\n  const [isNotesDialogOpen, setIsNotesDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n\n  // استعلام لجلب رسائل الاتصال\n  const { data: messages, isLoading, isError, refetch } = useQuery({\n    queryKey: ['/api/contact-messages'],\n    queryFn: async () => {\n      const response = await fetch('/api/contact-messages', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        if (response.status === 403) {\n          throw new Error('يجب تسجيل الدخول كمدير للوصول إلى هذه الصفحة');\n        }\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'فشل في تحميل رسائل الاتصال');\n      }\n      return response.json();\n    },\n    retry: 1,\n  });\n\n\n\n  // تحويل الرسائل حسب حالتها (الكل، جديد، مقروء، تم الرد، مؤرشف)\n  const filteredMessages = messages ? messages.filter((message: ContactMessage) => {\n    if (activeTab === \"all\") return true;\n    if (activeTab === \"new\") return message.status === \"new\";\n    if (activeTab === \"read\") return message.status === \"read\";\n    if (activeTab === \"replied\") return message.status === \"replied\";\n    if (activeTab === \"archived\") return message.status === \"archived\";\n    return true;\n  }) : [];\n\n\n\n  // تحديث حالة الرسالة\n  const updateStatusMutation = useMutation({\n    mutationFn: async ({ id, status }: { id: number; status: string }) => {\n      const response = await fetch(`/api/contact-messages/${id}/status`, {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ status }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('فشل في تحديث حالة الرسالة');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-messages'] });\n      toast({\n        title: \"تم تحديث الحالة\",\n        description: \"تم تحديث حالة الرسالة بنجاح\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"خطأ في تحديث الحالة\",\n        description: error instanceof Error ? error.message : \"حدث خطأ أثناء تحديث حالة الرسالة\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // إضافة ملاحظة للرسالة\n  const addNotesMutation = useMutation({\n    mutationFn: async ({ id, notes }: { id: number; notes: string }) => {\n      const response = await fetch(`/api/contact-messages/${id}/notes`, {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ notes }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('فشل في إضافة الملاحظة');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-messages'] });\n      setIsNotesDialogOpen(false);\n      setNotesText(\"\");\n      toast({\n        title: \"تمت إضافة الملاحظات\",\n        description: \"تمت إضافة الملاحظات بنجاح\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"خطأ في إضافة الملاحظات\",\n        description: error instanceof Error ? error.message : \"حدث خطأ أثناء إضافة الملاحظات\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n\n\n  // حذف الرسالة\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await fetch(`/api/contact-messages/${id}`, {\n        method: 'DELETE',\n        credentials: 'include',\n      });\n      \n      if (!response.ok) {\n        throw new Error('فشل في حذف الرسالة');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-messages'] });\n      setIsDeleteDialogOpen(false);\n      toast({\n        title: \"تم حذف الرسالة\",\n        description: \"تم حذف الرسالة بنجاح\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"خطأ في حذف الرسالة\", \n        description: error instanceof Error ? error.message : \"حدث خطأ أثناء حذف الرسالة\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // الرد على الرسالة\n  const replyMutation = useMutation({\n    mutationFn: async ({ id, replyMessage }: { id: number; replyMessage: string }) => {\n      const response = await fetch(`/api/contact-messages/${id}/reply`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ replyMessage }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('فشل في إرسال الرد');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-messages'] });\n      setIsReplyDialogOpen(false);\n      setReplyText(\"\");\n      toast({\n        title: \"تم إرسال الرد\",\n        description: \"تم إرسال الرد بنجاح\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"خطأ في إرسال الرد\",\n        description: error instanceof Error ? error.message : \"حدث خطأ أثناء إرسال الرد\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // تعامل مع تغيير حالة الرسالة\n  const handleStatusChange = (id: number, status: string) => {\n    updateStatusMutation.mutate({ id, status });\n  };\n\n  // تعامل مع إضافة ملاحظات\n  const handleAddNotes = () => {\n    if (selectedMessage && notesText.trim()) {\n      addNotesMutation.mutate({ id: selectedMessage.id, notes: notesText });\n    }\n  };\n\n  // تعامل مع الرد على الرسالة\n  const handleReply = () => {\n    if (selectedMessage && replyText.trim()) {\n      replyMutation.mutate({ id: selectedMessage.id, replyMessage: replyText });\n    }\n  };\n\n  // تعامل مع حذف الرسالة\n  const handleDelete = () => {\n    if (selectedMessage) {\n      deleteMutation.mutate(selectedMessage.id);\n    }\n  };\n\n  // استخراج لون شارة الحالة\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status) {\n      case \"new\": return \"default\";\n      case \"read\": return \"secondary\";\n      case \"replied\": return \"secondary\";\n      case \"archived\": return \"outline\";\n      default: return \"default\";\n    }\n  };\n\n  // استخراج نص حالة الرسالة بالعربية\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case \"new\": return \"جديدة\";\n      case \"read\": return \"مقروءة\";\n      case \"replied\": return \"تم الرد\";\n      case \"archived\": return \"مؤرشفة\";\n      default: return status;\n    }\n  };\n\n  // تنسيق التاريخ\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('ar-SA', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    }).format(date);\n  };\n\n  return (\n    <AdminLayout>\n      <SEO\n        title=\"إدارة رسائل الاتصال | لوحة التحكم | لينكتك\"\n        description=\"إدارة رسائل الاتصال الواردة من نموذج الاتصال في موقع لينكتك\"\n      />\n\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">إدارة رسائل الاتصال</h1>\n        \n        <div className=\"flex gap-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => refetch()}\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n            ) : (\n              <RefreshCcw className=\"ml-2 h-4 w-4\" />\n            )}\n            تحديث\n          </Button>\n        </div>\n      </div>\n\n\n\n      <Tabs\n        defaultValue=\"all\"\n        value={activeTab}\n        onValueChange={setActiveTab}\n        className=\"mb-6\"\n      >\n        <TabsList className=\"grid grid-cols-5 mb-4\">\n          <TabsTrigger value=\"all\">الكل</TabsTrigger>\n          <TabsTrigger value=\"new\">جديدة</TabsTrigger>\n          <TabsTrigger value=\"read\">مقروءة</TabsTrigger>\n          <TabsTrigger value=\"replied\">تم الرد</TabsTrigger>\n          <TabsTrigger value=\"archived\">مؤرشفة</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value={activeTab} className=\"mt-0\">\n          {isLoading ? (\n            <div className=\"flex justify-center items-center p-12\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            </div>\n          ) : isError ? (\n            <div className=\"text-center p-12\">\n              <p className=\"text-destructive mb-4\">حدث خطأ أثناء تحميل رسائل الاتصال</p>\n              <Button onClick={() => refetch()} variant=\"outline\">\n                إعادة المحاولة\n              </Button>\n            </div>\n          ) : filteredMessages.length === 0 ? (\n            <div className=\"text-center p-12\">\n              <p className=\"text-muted-foreground\">لا توجد رسائل {activeTab !== \"all\" ? `بحالة \"${getStatusText(activeTab)}\"` : \"\"}</p>\n            </div>\n          ) : (\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n              {filteredMessages.map((message: ContactMessage) => (\n                <Card key={message.id} className=\"overflow-hidden\">\n                  <CardHeader className=\"pb-2\">\n                    <div className=\"flex justify-between items-start\">\n                      <Badge variant={getStatusBadgeVariant(message.status)}>\n                        {getStatusText(message.status)}\n                      </Badge>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n                            <span className=\"sr-only\">إجراءات</span>\n                            <Edit className=\"h-4 w-4\" />\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>إجراءات</DropdownMenuLabel>\n                          <DropdownMenuSeparator />\n                          {message.status === \"new\" && (\n                            <DropdownMenuItem onClick={() => handleStatusChange(message.id, \"read\")}>\n                              <Check className=\"ml-2 h-4 w-4\" />\n                              <span>تعليم كمقروءة</span>\n                            </DropdownMenuItem>\n                          )}\n                          <DropdownMenuItem\n                            onClick={() => {\n                              setSelectedMessage(message);\n                              setIsReplyDialogOpen(true);\n                            }}\n                          >\n                            <Reply className=\"ml-2 h-4 w-4\" />\n                            <span>الرد</span>\n                          </DropdownMenuItem>\n                          <DropdownMenuItem\n                            onClick={() => {\n                              setSelectedMessage(message);\n                              setNotesText(message.notes || \"\");\n                              setIsNotesDialogOpen(true);\n                            }}\n                          >\n                            <Edit className=\"ml-2 h-4 w-4\" />\n                            <span>إضافة ملاحظات</span>\n                          </DropdownMenuItem>\n                          <DropdownMenuSeparator />\n                          {message.status !== \"archived\" ? (\n                            <DropdownMenuItem onClick={() => handleStatusChange(message.id, \"archived\")}>\n                              <Archive className=\"ml-2 h-4 w-4\" />\n                              <span>أرشفة</span>\n                            </DropdownMenuItem>\n                          ) : (\n                            <DropdownMenuItem onClick={() => handleStatusChange(message.id, \"read\")}>\n                              <Check className=\"ml-2 h-4 w-4\" />\n                              <span>إعادة تنشيط</span>\n                            </DropdownMenuItem>\n                          )}\n                          <DropdownMenuSeparator />\n                          <DropdownMenuItem\n                            className=\"text-destructive focus:text-destructive\"\n                            onClick={() => {\n                              setSelectedMessage(message);\n                              setIsDeleteDialogOpen(true);\n                            }}\n                          >\n                            <Trash2 className=\"ml-2 h-4 w-4\" />\n                            <span>حذف</span>\n                          </DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </div>\n                    <CardTitle className=\"text-lg mt-2 mb-1\">{message.name}</CardTitle>\n                    <CardDescription className=\"flex items-center\">\n                      <Mail className=\"ml-1 h-3 w-3\" />\n                      {message.email}\n                    </CardDescription>\n                    {message.phone && (\n                      <CardDescription className=\"flex items-center mt-1\">\n                        <span>هاتف: {message.phone}</span>\n                      </CardDescription>\n                    )}\n                    <CardDescription className=\"flex items-center mt-1\">\n                      <span>موضوع: {message.messageDetails?.subject || \"استفسار عام\"}</span>\n                    </CardDescription>\n                    <CardDescription className=\"mt-1\">\n                      {formatDate(message.createdAt)}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"pb-2\">\n                    <div className=\"max-h-24 overflow-y-auto mb-2\">\n                      <p className=\"text-sm\">{message.message}</p>\n                    </div>\n                    {message.reply && (\n                      <div className=\"mt-2 p-2 bg-muted rounded-md\">\n                        <p className=\"text-xs font-semibold\">الرد:</p>\n                        <p className=\"text-sm\">{message.reply}</p>\n                      </div>\n                    )}\n                    {message.notes && (\n                      <div className=\"mt-2 p-2 bg-muted/50 rounded-md\">\n                        <p className=\"text-xs font-semibold\">ملاحظات:</p>\n                        <p className=\"text-sm\">{message.notes}</p>\n                      </div>\n                    )}\n                  </CardContent>\n                  <CardFooter className=\"pt-0 flex justify-between\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => {\n                        setSelectedMessage(message);\n                        setIsReplyDialogOpen(true);\n                      }}\n                    >\n                      <Reply className=\"ml-2 h-4 w-4\" />\n                      رد\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => {\n                        setSelectedMessage(message);\n                        setNotesText(message.notes || \"\");\n                        setIsNotesDialogOpen(true);\n                      }}\n                    >\n                      <Edit className=\"ml-2 h-4 w-4\" />\n                      ملاحظات\n                    </Button>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n          )}\n        </TabsContent>\n      </Tabs>\n\n      {/* مربع حوار الرد على الرسالة */}\n      <Dialog open={isReplyDialogOpen} onOpenChange={setIsReplyDialogOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>الرد على رسالة</DialogTitle>\n            <DialogDescription>\n              إرسال رد إلى {selectedMessage?.name} على بريد {selectedMessage?.email}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"grid gap-2\">\n              <div className=\"p-3 bg-muted rounded-md text-sm max-h-32 overflow-y-auto\">\n                {selectedMessage?.message}\n              </div>\n            </div>\n            <div className=\"grid gap-2\">\n              <Textarea\n                placeholder=\"اكتب رسالتك هنا...\"\n                value={replyText}\n                onChange={(e) => setReplyText(e.target.value)}\n                rows={5}\n              />\n            </div>\n          </div>\n          <DialogFooter className=\"sm:justify-between\">\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              onClick={() => setIsReplyDialogOpen(false)}\n            >\n              إلغاء\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={handleReply}\n              disabled={!replyText.trim() || replyMutation.isPending}\n            >\n              {replyMutation.isPending ? (\n                <>\n                  <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                  جاري الإرسال...\n                </>\n              ) : (\n                <>\n                  <Send className=\"ml-2 h-4 w-4\" />\n                  إرسال الرد\n                </>\n              )}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* مربع حوار إضافة ملاحظات */}\n      <Dialog open={isNotesDialogOpen} onOpenChange={setIsNotesDialogOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>إضافة ملاحظات</DialogTitle>\n            <DialogDescription>\n              إضافة ملاحظات داخلية للرسالة من {selectedMessage?.name}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n            <Textarea\n              placeholder=\"اكتب ملاحظاتك هنا...\"\n              value={notesText}\n              onChange={(e) => setNotesText(e.target.value)}\n              rows={4}\n            />\n          </div>\n          <DialogFooter className=\"sm:justify-between\">\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              onClick={() => setIsNotesDialogOpen(false)}\n            >\n              إلغاء\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={handleAddNotes}\n              disabled={!notesText.trim() || addNotesMutation.isPending}\n            >\n              {addNotesMutation.isPending ? (\n                <>\n                  <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                  جاري الحفظ...\n                </>\n              ) : (\n                <>\n                  <CheckCircle className=\"ml-2 h-4 w-4\" />\n                  حفظ الملاحظات\n                </>\n              )}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* مربع حوار حذف الرسالة */}\n      <Dialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>تأكيد الحذف</DialogTitle>\n            <DialogDescription>\n              هل أنت متأكد من رغبتك في حذف هذه الرسالة نهائيًا؟ لا يمكن التراجع عن هذا الإجراء.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"py-4\">\n            <div className=\"p-3 bg-destructive/10 rounded-md flex items-center gap-3\">\n              <AlertCircle className=\"h-5 w-5 text-destructive\" />\n              <p className=\"text-sm\">سيتم حذف الرسالة بشكل دائم من قاعدة البيانات.</p>\n            </div>\n          </div>\n          <DialogFooter className=\"sm:justify-between\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => setIsDeleteDialogOpen(false)}\n            >\n              إلغاء\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"destructive\"\n              onClick={handleDelete}\n              disabled={deleteMutation.isPending}\n            >\n              {deleteMutation.isPending ? (\n                <>\n                  <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                  جاري الحذف...\n                </>\n              ) : (\n                <>\n                  <Trash2 className=\"ml-2 h-4 w-4\" />\n                  حذف نهائي\n                </>\n              )}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </AdminLayout>\n  );\n};\n\nexport default ContactMessagesPage;","size_bytes":23709},"client/src/pages/admin/featured-clients-management.tsx":{"content":"import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Switch } from '@/components/ui/switch';\nimport { Separator } from '@/components/ui/separator';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { Plus, Edit, Trash2, Eye, Globe, Image } from 'lucide-react';\nimport { apiRequest } from '@/lib/queryClient';\n\n// تعريف نوع العميل المميز\ninterface FeaturedClient {\n  id: number;\n  name: string;\n  logo: string;\n  website?: string;\n  description?: string;\n  category?: string;\n  order: number;\n  active: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// مخطط التحقق من صحة البيانات\nconst featuredClientSchema = z.object({\n  name: z.string().min(1, 'اسم العميل مطلوب'),\n  logo: z.string().url('رابط الشعار يجب أن يكون صالحاً'),\n  website: z.string().url('رابط الموقع يجب أن يكون صالحاً').optional().or(z.literal('')),\n  description: z.string().optional(),\n  category: z.string().optional(),\n  order: z.number().min(0).default(0),\n  active: z.boolean().default(true),\n});\n\ntype FeaturedClientFormData = z.infer<typeof featuredClientSchema>;\n\nconst FeaturedClientsManagement = () => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [editingClient, setEditingClient] = useState<FeaturedClient | null>(null);\n\n  // استرجاع العملاء المميزين\n  const { data: clients = [], isLoading, error } = useQuery<FeaturedClient[]>({\n    queryKey: ['/api/admin/featured-clients'],\n    refetchOnWindowFocus: false,\n  });\n\n  // نموذج إضافة/تحديث عميل\n  const form = useForm<FeaturedClientFormData>({\n    resolver: zodResolver(featuredClientSchema),\n    defaultValues: {\n      name: '',\n      logo: '',\n      website: '',\n      description: '',\n      category: '',\n      order: 0,\n      active: true,\n    },\n  });\n\n  // طفرة إضافة عميل جديد\n  const createMutation = useMutation({\n    mutationFn: (data: FeaturedClientFormData) => apiRequest('/api/admin/featured-clients', 'POST', data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/featured-clients'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/featured-clients'] });\n      toast({\n        title: 'تم بنجاح',\n        description: 'تم إضافة العميل المميز بنجاح',\n      });\n      setIsDialogOpen(false);\n      form.reset();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'خطأ',\n        description: error.message || 'حدث خطأ أثناء إضافة العميل',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // طفرة تحديث عميل\n  const updateMutation = useMutation({\n    mutationFn: ({ id, data }: { id: number; data: Partial<FeaturedClientFormData> }) => \n      apiRequest(`/api/admin/featured-clients/${id}`, 'PUT', data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/featured-clients'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/featured-clients'] });\n      toast({\n        title: 'تم بنجاح',\n        description: 'تم تحديث العميل المميز بنجاح',\n      });\n      setIsDialogOpen(false);\n      setEditingClient(null);\n      form.reset();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'خطأ',\n        description: error.message || 'حدث خطأ أثناء تحديث العميل',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // طفرة حذف عميل\n  const deleteMutation = useMutation({\n    mutationFn: (id: number) => apiRequest(`/api/admin/featured-clients/${id}`, 'DELETE'),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/featured-clients'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/featured-clients'] });\n      toast({\n        title: 'تم بنجاح',\n        description: 'تم حذف العميل المميز بنجاح',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'خطأ',\n        description: error.message || 'حدث خطأ أثناء حذف العميل',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // معالج إرسال النموذج\n  const onSubmit = (data: FeaturedClientFormData) => {\n    if (editingClient) {\n      updateMutation.mutate({ id: editingClient.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  // معالج تحديد عميل للتحديث\n  const handleEdit = (client: FeaturedClient) => {\n    setEditingClient(client);\n    form.reset({\n      name: client.name,\n      logo: client.logo,\n      website: client.website || '',\n      description: client.description || '',\n      category: client.category || '',\n      order: client.order,\n      active: client.active,\n    });\n    setIsDialogOpen(true);\n  };\n\n  // معالج حذف عميل\n  const handleDelete = (id: number) => {\n    if (window.confirm('هل أنت متأكد من حذف هذا العميل المميز؟')) {\n      deleteMutation.mutate(id);\n    }\n  };\n\n  // معالج إغلاق النافذة المنبثقة\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    setEditingClient(null);\n    form.reset();\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-lg\">جاري التحميل...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-lg text-red-600\">حدث خطأ أثناء تحميل البيانات</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h1 className=\"text-2xl font-bold\">إدارة عملاء نفخر بهم</h1>\n          <p className=\"text-gray-600\">إدارة العملاء الذين نفخر بهم والذين يظهرون في الصفحة الرئيسية</p>\n        </div>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => setEditingClient(null)}>\n              <Plus className=\"w-4 h-4 mr-2\" />\n              إضافة عميل نفخر به\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[425px]\">\n            <DialogHeader>\n              <DialogTitle>\n                {editingClient ? 'تحديث عميل نفخر به' : 'إضافة عميل نفخر به جديد'}\n              </DialogTitle>\n              <DialogDescription>\n                {editingClient ? 'تحديث بيانات العميل الذي نفخر به' : 'إضافة عميل نفخر به جديد لعرضه في الصفحة الرئيسية'}\n              </DialogDescription>\n            </DialogHeader>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>اسم العميل *</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"مثال: شركة الرياض للتقنية\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"logo\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>رابط الشعار *</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"https://example.com/logo.png\" {...field} />\n                      </FormControl>\n                      <FormDescription>\n                        رابط مباشر لصورة شعار العميل\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"website\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>موقع العميل</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"https://example.com\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"description\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>وصف العميل</FormLabel>\n                      <FormControl>\n                        <Textarea placeholder=\"وصف موجز عن العميل...\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"category\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>فئة العميل</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"مثال: التقنية، الطب، التجارة\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"order\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>ترتيب العرض</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          min=\"0\"\n                          placeholder=\"0\"\n                          {...field}\n                          onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        رقم الترتيب (0 = الأول)\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"active\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex items-center justify-between rounded-lg border p-4\">\n                      <div className=\"space-y-0.5\">\n                        <FormLabel className=\"text-base\">نشط</FormLabel>\n                        <FormDescription>\n                          عرض العميل في الصفحة الرئيسية\n                        </FormDescription>\n                      </div>\n                      <FormControl>\n                        <Switch\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n                <div className=\"flex justify-end space-x-2\">\n                  <Button type=\"button\" variant=\"outline\" onClick={handleDialogClose}>\n                    إلغاء\n                  </Button>\n                  <Button \n                    type=\"submit\" \n                    disabled={createMutation.isPending || updateMutation.isPending}\n                  >\n                    {editingClient ? 'تحديث' : 'إضافة'}\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {clients.map((client) => (\n          <Card key={client.id} className=\"relative\">\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center overflow-hidden\">\n                    {client.logo ? (\n                      <img \n                        src={client.logo} \n                        alt={client.name}\n                        className=\"w-full h-full object-contain\"\n                      />\n                    ) : (\n                      <Image className=\"w-6 h-6 text-gray-400\" />\n                    )}\n                  </div>\n                  <div>\n                    <CardTitle className=\"text-lg\">{client.name}</CardTitle>\n                    <div className=\"flex items-center space-x-2\">\n                      <Badge variant={client.active ? \"default\" : \"secondary\"}>\n                        {client.active ? 'نشط' : 'غير نشط'}\n                      </Badge>\n                      {client.category && (\n                        <Badge variant=\"outline\">{client.category}</Badge>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              {client.description && (\n                <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">\n                  {client.description}\n                </p>\n              )}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  {client.website && (\n                    <a\n                      href={client.website}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-600 hover:text-blue-800\"\n                    >\n                      <Globe className=\"w-4 h-4\" />\n                    </a>\n                  )}\n                  <span className=\"text-sm text-gray-500\">\n                    ترتيب: {client.order}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => handleEdit(client)}\n                  >\n                    <Edit className=\"w-4 h-4\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => handleDelete(client.id)}\n                    className=\"text-red-600 hover:text-red-800\"\n                  >\n                    <Trash2 className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {clients.length === 0 && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-500 text-lg mb-4\">لا توجد عملاء نفخر بهم حالياً</div>\n          <p className=\"text-gray-400 mb-6\">ابدأ بإضافة عملاء نفخر بهم لعرضهم في الصفحة الرئيسية</p>\n          <Button onClick={() => setIsDialogOpen(true)}>\n            <Plus className=\"w-4 h-4 mr-2\" />\n            إضافة أول عميل نفخر به\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FeaturedClientsManagement;","size_bytes":16686},"client/src/pages/admin/premium-clients-management.tsx":{"content":"import React, { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Loader2, Trash2, PenLine, Plus, ImagePlus } from \"lucide-react\";\nimport { Helmet } from \"react-helmet\";\nimport { Redirect } from \"wouter\";\n\ntype PremiumClient = {\n  id: number;\n  name: string;\n  description: string;\n  logo: string;\n  category: string;\n  website?: string;\n  featured?: boolean;\n  active?: boolean;\n  benefits?: string[];\n  createdAt: string;\n  updatedAt: string;\n};\n\ntype PremiumClientFormData = Omit<PremiumClient, \"id\" | \"createdAt\" | \"updatedAt\">;\n\nconst PremiumClientsManagement = () => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [selectedClient, setSelectedClient] = useState<PremiumClient | null>(null);\n  const [formData, setFormData] = useState<PremiumClientFormData>({\n    name: \"\",\n    description: \"\",\n    logo: \"\",\n    category: \"تكنولوجيا\",\n    website: \"\",\n    featured: false,\n    active: true,\n    benefits: [],\n  });\n\n  // الاستعلام لجلب عملاء التميز\n  const {\n    data: clients,\n    isLoading: isLoadingClients,\n    error: clientsError,\n  } = useQuery({\n    queryKey: [\"/api/premium-clients\"],\n  });\n\n  // طلب إضافة عميل جديد\n  const addClientMutation = useMutation({\n    mutationFn: async (newClient: PremiumClientFormData) => {\n      const response = await apiRequest(\"POST\", \"/api/premium-clients\", newClient);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"فشل في إضافة العميل\");\n      }\n      return await response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/premium-clients\"] });\n      setIsAddDialogOpen(false);\n      resetForm();\n      toast({\n        title: \"تمت الإضافة بنجاح\",\n        description: \"تم إضافة العميل المميز بنجاح\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"خطأ في الإضافة\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // طلب تحديث عميل موجود\n  const updateClientMutation = useMutation({\n    mutationFn: async ({\n      id,\n      data,\n    }: {\n      id: number;\n      data: PremiumClientFormData;\n    }) => {\n      // تحسين شكل البيانات قبل الإرسال\n      const fixedData = { ...data };\n      \n      // تصحيح رابط الموقع وإضافة https:// إذا لزم الأمر\n      if (fixedData.website && fixedData.website.trim() !== '') {\n        // إزالة / من بداية الرابط إذا كانت موجودة\n        const cleanWebsite = fixedData.website.replace(/^\\/+/, '');\n        \n        // إضافة https:// إذا لم يكن الرابط يبدأ بـ http:// أو https://\n        if (!cleanWebsite.startsWith('http://') && !cleanWebsite.startsWith('https://')) {\n          fixedData.website = 'https://' + cleanWebsite;\n        } else {\n          fixedData.website = cleanWebsite;\n        }\n      }\n      \n      // تصحيح رابط الشعار بنفس الطريقة\n      if (fixedData.logo && fixedData.logo.trim() !== '') {\n        // إزالة / من بداية الرابط إذا كانت موجودة\n        const cleanLogo = fixedData.logo.replace(/^\\/+/, '');\n        \n        // إضافة https:// إذا لم يكن الرابط يبدأ بـ http:// أو https://\n        if (!cleanLogo.startsWith('http://') && !cleanLogo.startsWith('https://')) {\n          fixedData.logo = 'https://' + cleanLogo;\n        } else {\n          fixedData.logo = cleanLogo;\n        }\n      }\n      \n      try {\n        console.log(\"إرسال البيانات المصححة:\", fixedData);\n        \n        // استخدام POST بدلاً من PUT مع الطريقة override للتوافق مع الخادم\n        const response = await fetch(`/api/premium-clients/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(fixedData),\n          credentials: 'include'\n        });\n        \n        if (!response.ok) {\n          const text = await response.text();\n          console.error(\"نص الخطأ من الخادم:\", text);\n          throw new Error(\"فشل في تحديث العميل: \" + (response.statusText || \"خطأ غير معروف\"));\n        }\n        \n        // قراءة البيانات من الاستجابة\n        const text = await response.text();\n        // التعامل مع حالة إذا كان النص فارغًا\n        if (!text.trim()) {\n          console.log(\"استجابة فارغة من الخادم، إرجاع البيانات المرسلة\");\n          return { id, ...fixedData };\n        }\n        \n        // محاولة تحليل النص كـ JSON\n        try {\n          const data = JSON.parse(text);\n          return data;\n        } catch (e) {\n          console.error(\"خطأ في تحليل استجابة JSON:\", e);\n          // في حالة فشل تحليل JSON، إرجاع البيانات المرسلة\n          return { id, ...fixedData };\n        }\n      } catch (error) {\n        console.error(\"خطأ في تحديث العميل:\", error);\n        throw error;\n      }\n    },\n    onSuccess: (data) => {\n      // إعادة تحميل البيانات بشكل صريح\n      queryClient.invalidateQueries({ queryKey: [\"/api/premium-clients\"] });\n      \n      // تحديث البيانات مباشرة في حالة التخزين المؤقت\n      queryClient.setQueryData([\"/api/premium-clients\"], (oldData: any) => {\n        if (!oldData) return oldData;\n        return oldData.map((client: PremiumClient) => \n          client.id === data.id ? data : client\n        );\n      });\n      \n      setIsEditDialogOpen(false);\n      setSelectedClient(null);\n      resetForm();\n      toast({\n        title: \"تم التحديث بنجاح\",\n        description: \"تم تحديث بيانات العميل المميز بنجاح\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"خطأ في التحديث\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // طلب حذف عميل\n  const deleteClientMutation = useMutation({\n    mutationFn: async (id: number) => {\n      const response = await apiRequest(\"DELETE\", `/api/premium-clients/${id}`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"فشل في حذف العميل\");\n      }\n      return true;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/premium-clients\"] });\n      toast({\n        title: \"تم الحذف بنجاح\",\n        description: \"تم حذف العميل المميز بنجاح\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"خطأ في الحذف\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // معالجة التغييرات في النموذج\n  const handleInputChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    setFormData({ ...formData, [name]: checked });\n  };\n\n  // إعادة ضبط النموذج\n  const resetForm = () => {\n    setFormData({\n      name: \"\",\n      description: \"\",\n      logo: \"\",\n      category: \"تكنولوجيا\",\n      website: \"\",\n      featured: false,\n      active: true,\n      benefits: [],\n    });\n  };\n\n  // إرسال نموذج الإضافة\n  const handleAddSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    addClientMutation.mutate(formData);\n  };\n\n  // إرسال نموذج التحديث\n  const handleEditSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (selectedClient) {\n      updateClientMutation.mutate({\n        id: selectedClient.id,\n        data: formData,\n      });\n    }\n  };\n\n  // تعبئة بيانات النموذج للتحرير\n  const handleEditClient = (client: PremiumClient) => {\n    setSelectedClient(client);\n    setFormData({\n      name: client.name,\n      description: client.description,\n      logo: client.logo,\n      category: client.category,\n      website: client.website || \"\",\n      featured: client.featured || false,\n      active: client.active !== false, // true by default\n      benefits: client.benefits || [],\n    });\n    setIsEditDialogOpen(true);\n  };\n\n  // حذف عميل بعد تأكيد المستخدم\n  const handleDeleteClient = (client: PremiumClient) => {\n    if (confirm(`هل أنت متأكد من حذف العميل: ${client.name}؟`)) {\n      deleteClientMutation.mutate(client.id);\n    }\n  };\n\n  // التحقق من دور المستخدم من خلال خادم التفويض\n  const { data: authData, isLoading: isAuthLoading } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n  });\n\n  if (isAuthLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  // إعادة توجيه إذا لم يكن المستخدم مسؤولاً\n  if (!isAuthLoading && (!authData || authData?.user?.role !== \"admin\")) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container mx-auto py-8 px-4\">\n      <Helmet>\n        <title>إدارة عملاء التميز | لينكتك</title>\n      </Helmet>\n\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">إدارة عملاء التميز</h1>\n        <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>\n          <DialogTrigger asChild>\n            <Button>\n              <Plus className=\"ml-2 h-4 w-4\" /> إضافة عميل مميز جديد\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-md\">\n            <DialogHeader>\n              <DialogTitle>إضافة عميل مميز جديد</DialogTitle>\n              <DialogDescription>\n                أدخل بيانات العميل المميز الجديد هنا. اضغط على حفظ عندما تنتهي.\n              </DialogDescription>\n            </DialogHeader>\n            <form onSubmit={handleAddSubmit}>\n              <div className=\"grid gap-4 py-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"name\">اسم العميل</Label>\n                  <Input\n                    id=\"name\"\n                    name=\"name\"\n                    required\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    placeholder=\"اسم العميل أو المؤسسة\"\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"description\">وصف</Label>\n                  <Textarea\n                    id=\"description\"\n                    name=\"description\"\n                    required\n                    value={formData.description}\n                    onChange={handleInputChange}\n                    placeholder=\"وصف مختصر للعميل\"\n                    rows={3}\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"logo\">رابط الشعار</Label>\n                  <Input\n                    id=\"logo\"\n                    name=\"logo\"\n                    required\n                    value={formData.logo}\n                    onChange={handleInputChange}\n                    placeholder=\"رابط URL لشعار العميل\"\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"category\">الفئة</Label>\n                  <select\n                    id=\"category\"\n                    name=\"category\"\n                    className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    value={formData.category}\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"تكنولوجيا\">تكنولوجيا</option>\n                    <option value=\"تعليم\">تعليم</option>\n                    <option value=\"صحة\">صحة</option>\n                    <option value=\"تمويل\">تمويل</option>\n                    <option value=\"ترفيه\">ترفيه</option>\n                    <option value=\"أخرى\">أخرى</option>\n                  </select>\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"website\">الموقع الإلكتروني (اختياري)</Label>\n                  <Input\n                    id=\"website\"\n                    name=\"website\"\n                    value={formData.website}\n                    onChange={handleInputChange}\n                    placeholder=\"https://example.com\"\n                  />\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"featured\"\n                    name=\"featured\"\n                    checked={formData.featured}\n                    onChange={handleCheckboxChange}\n                    className=\"h-4 w-4 rounded border-gray-300\"\n                  />\n                  <Label htmlFor=\"featured\">عرض بشكل مميز</Label>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"active\"\n                    name=\"active\"\n                    checked={formData.active}\n                    onChange={handleCheckboxChange}\n                    className=\"h-4 w-4 rounded border-gray-300\"\n                  />\n                  <Label htmlFor=\"active\">نشط حاليًا</Label>\n                </div>\n              </div>\n              <DialogFooter>\n                <Button\n                  type=\"submit\"\n                  disabled={addClientMutation.isPending}\n                  className=\"w-full\"\n                >\n                  {addClientMutation.isPending ? (\n                    <>\n                      <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" /> جاري الإضافة...\n                    </>\n                  ) : (\n                    \"إضافة\"\n                  )}\n                </Button>\n              </DialogFooter>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {isLoadingClients ? (\n        <div className=\"flex justify-center py-20\">\n          <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        </div>\n      ) : clientsError ? (\n        <div className=\"text-center py-12 text-red-500\">\n          <p>عذراً، حدث خطأ أثناء تحميل بيانات العملاء المميزين</p>\n        </div>\n      ) : clients && clients.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {clients.map((client: PremiumClient) => (\n            <Card key={client.id}>\n              <CardHeader className=\"pb-2\">\n                <div className=\"flex justify-between items-start\">\n                  <CardTitle className=\"text-lg\">{client.name}</CardTitle>\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => handleEditClient(client)}\n                      title=\"تعديل\"\n                    >\n                      <PenLine className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => handleDeleteClient(client)}\n                      className=\"text-red-500 hover:text-red-700 hover:bg-red-50\"\n                      title=\"حذف\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n                <CardDescription>{client.category}</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"mb-4 flex justify-center\">\n                  <img\n                    src={client.logo}\n                    alt={client.name}\n                    className=\"h-16 w-auto object-contain\"\n                  />\n                </div>\n                <p className=\"text-sm text-gray-600 line-clamp-3\">{client.description}</p>\n                <div className=\"mt-2 flex flex-wrap gap-1\">\n                  {client.featured && (\n                    <span className=\"px-2 py-1 bg-amber-100 text-amber-800 text-xs rounded\">\n                      مميز\n                    </span>\n                  )}\n                  {client.active === false && (\n                    <span className=\"px-2 py-1 bg-gray-100 text-gray-800 text-xs rounded\">\n                      غير نشط\n                    </span>\n                  )}\n                </div>\n              </CardContent>\n              <CardFooter className=\"pt-0\">\n                {client.website && (\n                  <a\n                    href={client.website}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-xs text-primary hover:underline\"\n                  >\n                    {client.website}\n                  </a>\n                )}\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12 bg-gray-50 rounded-lg\">\n          <h3 className=\"text-xl font-medium mb-2\">لا يوجد عملاء مميزين حالياً</h3>\n          <p className=\"text-gray-500 mb-4\">قم بإضافة عملاء مميزين باستخدام الزر أعلاه</p>\n        </div>\n      )}\n\n      {/* نافذة تعديل العميل */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle>تعديل العميل المميز</DialogTitle>\n            <DialogDescription>\n              قم بتعديل بيانات العميل المميز. اضغط على حفظ عندما تنتهي.\n            </DialogDescription>\n          </DialogHeader>\n          <form onSubmit={handleEditSubmit}>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"edit-name\">اسم العميل</Label>\n                <Input\n                  id=\"edit-name\"\n                  name=\"name\"\n                  required\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"اسم الشركة أو المؤسسة\"\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"edit-description\">وصف</Label>\n                <Textarea\n                  id=\"edit-description\"\n                  name=\"description\"\n                  required\n                  value={formData.description}\n                  onChange={handleInputChange}\n                  placeholder=\"وصف مختصر للعميل\"\n                  rows={3}\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"edit-logo\">رابط الشعار</Label>\n                <Input\n                  id=\"edit-logo\"\n                  name=\"logo\"\n                  required\n                  value={formData.logo}\n                  onChange={handleInputChange}\n                  placeholder=\"رابط URL لشعار العميل\"\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"edit-category\">الفئة</Label>\n                <select\n                  id=\"edit-category\"\n                  name=\"category\"\n                  className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                  value={formData.category}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"تكنولوجيا\">تكنولوجيا</option>\n                  <option value=\"تعليم\">تعليم</option>\n                  <option value=\"صحة\">صحة</option>\n                  <option value=\"تمويل\">تمويل</option>\n                  <option value=\"ترفيه\">ترفيه</option>\n                  <option value=\"أخرى\">أخرى</option>\n                </select>\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"edit-website\">الموقع الإلكتروني (اختياري)</Label>\n                <Input\n                  id=\"edit-website\"\n                  name=\"website\"\n                  value={formData.website}\n                  onChange={handleInputChange}\n                  placeholder=\"https://example.com\"\n                />\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"edit-featured\"\n                  name=\"featured\"\n                  checked={formData.featured}\n                  onChange={handleCheckboxChange}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                />\n                <Label htmlFor=\"edit-featured\">مميز</Label>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"edit-active\"\n                  name=\"active\"\n                  checked={formData.active}\n                  onChange={handleCheckboxChange}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                />\n                <Label htmlFor=\"edit-active\">نشط</Label>\n              </div>\n            </div>\n            <DialogFooter>\n              <Button\n                type=\"submit\"\n                disabled={updateClientMutation.isPending}\n                className=\"w-full\"\n              >\n                {updateClientMutation.isPending ? (\n                  <>\n                    <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" /> جاري التحديث...\n                  </>\n                ) : (\n                  \"حفظ التغييرات\"\n                )}\n              </Button>\n            </DialogFooter>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PremiumClientsManagement;","size_bytes":24250},"client/src/pages/admin/site-settings.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  FormDescription\n} from \"@/components/ui/form\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Mail, Phone, MapPin, Save, Loader2, Settings } from \"lucide-react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\n\n// نموذج التحقق لإعدادات التواصل\nconst contactSettingsSchema = z.object({\n  email: z.string().email({ message: \"يرجى إدخال بريد إلكتروني صحيح\" }),\n  phone: z.string().min(1, { message: \"يرجى إدخال رقم الهاتف\" }),\n  address: z.string().min(1, { message: \"يرجى إدخال العنوان\" }),\n  whatsapp: z.string().optional(),\n  businessHours: z.string().optional(),\n});\n\ntype ContactSettingsValues = z.infer<typeof contactSettingsSchema>;\n\nconst SiteSettingsPage = () => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<ContactSettingsValues>({\n    resolver: zodResolver(contactSettingsSchema),\n    defaultValues: {\n      email: \"\",\n      phone: \"\",\n      address: \"\",\n      whatsapp: \"\",\n      businessHours: \"\",\n    },\n  });\n\n  // جلب الإعدادات الحالية\n  const { data: settings, isLoading: isLoadingSettings, error: settingsError } = useQuery({\n    queryKey: ['/api/admin/site-settings'],\n    queryFn: async () => {\n      console.log('جلب إعدادات الموقع...');\n      const response = await fetch('/api/admin/site-settings', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          throw new Error('يرجى تسجيل الدخول كمدير');\n        }\n        throw new Error('فشل في جلب الإعدادات');\n      }\n      const data = await response.json();\n      console.log('إعدادات الموقع المستلمة:', data);\n      return data;\n    },\n    retry: 1,\n  });\n\n  // تحديث القيم عند جلب الإعدادات\n  useEffect(() => {\n    if (settings && Array.isArray(settings)) {\n      console.log('تحديث نموذج الإعدادات:', settings);\n      \n      const settingsMap = settings.reduce((acc: any, setting: any) => {\n        acc[setting.key] = setting.value;\n        return acc;\n      }, {});\n\n      console.log('خريطة الإعدادات:', settingsMap);\n\n      const formData = {\n        email: settingsMap.contact_email || \"\",\n        phone: settingsMap.contact_phone || \"\",\n        address: settingsMap.contact_address || \"\",\n        whatsapp: settingsMap.contact_whatsapp || \"\",\n        businessHours: settingsMap.business_hours || \"\",\n      };\n\n      console.log('بيانات النموذج المحدثة:', formData);\n      form.reset(formData);\n    }\n  }, [settings, form]);\n\n  // طفرة لحفظ الإعدادات\n  const saveSettingsMutation = useMutation({\n    mutationFn: async (data: ContactSettingsValues) => {\n      const settingsToUpdate = [\n        { key: 'contact_email', value: data.email, description: 'البريد الإلكتروني للتواصل', category: 'contact' },\n        { key: 'contact_phone', value: data.phone, description: 'رقم الهاتف للتواصل', category: 'contact' },\n        { key: 'contact_address', value: data.address, description: 'عنوان الشركة', category: 'contact' },\n        { key: 'contact_whatsapp', value: data.whatsapp || '', description: 'رقم الواتساب', category: 'contact' },\n        { key: 'business_hours', value: data.businessHours || '', description: 'ساعات العمل', category: 'contact' },\n      ];\n\n      // حفظ في نظام الإعدادات العام\n      const response1 = await fetch('/api/admin/site-settings', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ settings: settingsToUpdate }),\n      });\n\n      // حفظ إعدادات التواصل في قاعدة البيانات\n      const contactSettings = [\n        { category: 'contact', key: 'contact_email', value: data.email },\n        { category: 'contact', key: 'contact_phone', value: data.phone },\n        { category: 'contact', key: 'contact_address', value: data.address },\n        { category: 'contact', key: 'contact_whatsapp', value: data.whatsapp || '' },\n        { category: 'contact', key: 'business_hours', value: data.businessHours }\n      ];\n\n      // حفظ إعدادات التواصل كدفعة واحدة\n      const contactResponse = await fetch('/api/admin/site-settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ settings: contactSettings }),\n      });\n\n      if (!response1.ok || !contactResponse.ok) {\n        throw new Error('فشل في حفظ الإعدادات');\n      }\n\n      return { success: true };\n    },\n    onSuccess: () => {\n      toast({\n        title: \"تم حفظ الإعدادات بنجاح\",\n        description: \"تم تحديث معلومات التواصل بنجاح\",\n      });\n      // إعادة تحديث كاش الإعدادات ومعلومات التواصل\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/site-settings'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-info'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/contact-info'] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"خطأ في حفظ الإعدادات\",\n        description: error instanceof Error ? error.message : \"حدث خطأ غير متوقع\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = async (data: ContactSettingsValues) => {\n    setIsLoading(true);\n    try {\n      await saveSettingsMutation.mutateAsync(data);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoadingSettings) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"flex items-center space-x-2\">\n          <Loader2 className=\"h-6 w-6 animate-spin\" />\n          <span>جاري تحميل الإعدادات...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (settingsError) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-red-500 mb-4\">خطأ في تحميل الإعدادات</p>\n          <p className=\"text-gray-600 mb-4\">{settingsError instanceof Error ? settingsError.message : 'حدث خطأ غير متوقع'}</p>\n          <Button onClick={() => window.location.reload()}>إعادة تحميل الصفحة</Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\n            <Settings className=\"h-8 w-8 ml-3\" />\n            إعدادات الموقع\n          </h1>\n          <p className=\"mt-2 text-gray-600\">\n            إدارة معلومات التواصل والإعدادات العامة للموقع\n          </p>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Mail className=\"h-5 w-5 ml-2\" />\n              معلومات التواصل\n            </CardTitle>\n            <CardDescription>\n              قم بتحديث معلومات التواصل التي ستظهر للزوار في الموقع\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"flex items-center\">\n                          <Mail className=\"h-4 w-4 ml-2\" />\n                          البريد الإلكتروني *\n                        </FormLabel>\n                        <FormControl>\n                          <Input\n                            {...field}\n                            type=\"email\"\n                            placeholder=\"admin@linktech.sa\"\n                            dir=\"ltr\"\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          البريد الإلكتروني الرئيسي للتواصل مع العملاء\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"phone\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"flex items-center\">\n                          <Phone className=\"h-4 w-4 ml-2\" />\n                          رقم الهاتف *\n                        </FormLabel>\n                        <FormControl>\n                          <Input\n                            {...field}\n                            placeholder=\"+966 50 123 4567\"\n                            dir=\"ltr\"\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          رقم الهاتف الرئيسي للتواصل\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"address\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center\">\n                        <MapPin className=\"h-4 w-4 ml-2\" />\n                        العنوان *\n                      </FormLabel>\n                      <FormControl>\n                        <Textarea\n                          {...field}\n                          placeholder=\"الرياض، المملكة العربية السعودية\"\n                          rows={3}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        عنوان الشركة الذي سيظهر للعملاء\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"whatsapp\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>\n                          رقم الواتساب (اختياري)\n                        </FormLabel>\n                        <FormControl>\n                          <Input\n                            {...field}\n                            placeholder=\"+966 50 123 4567\"\n                            dir=\"ltr\"\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          رقم الواتساب للتواصل السريع\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"businessHours\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>\n                          ساعات العمل (اختياري)\n                        </FormLabel>\n                        <FormControl>\n                          <Input\n                            {...field}\n                            placeholder=\"الأحد - الخميس: 9:00 ص - 6:00 م\"\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          أوقات العمل الرسمية\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <div className=\"flex justify-end pt-6\">\n                  <Button\n                    type=\"submit\"\n                    disabled={isLoading || saveSettingsMutation.isPending}\n                    className=\"min-w-[120px]\"\n                  >\n                    {(isLoading || saveSettingsMutation.isPending) ? (\n                      <>\n                        <Loader2 className=\"h-4 w-4 animate-spin ml-2\" />\n                        جاري الحفظ...\n                      </>\n                    ) : (\n                      <>\n                        <Save className=\"h-4 w-4 ml-2\" />\n                        حفظ الإعدادات\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default SiteSettingsPage;","size_bytes":14127},"client/src/pages/auth/forgot-password.tsx":{"content":"import { useState } from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Loader2, Mail, ArrowRight, ExternalLink } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\n// Schema validation for email\nconst forgotPasswordSchema = z.object({\n  email: z.string().email(\"يرجى إدخال بريد إلكتروني صحيح\")\n});\n\ntype ForgotPasswordData = z.infer<typeof forgotPasswordSchema>;\n\nexport default function ForgotPasswordPage() {\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [resetLink, setResetLink] = useState<string | null>(null);\n\n  const form = useForm<ForgotPasswordData>({\n    resolver: zodResolver(forgotPasswordSchema),\n    defaultValues: {\n      email: \"\"\n    }\n  });\n\n  async function onSubmit(data: ForgotPasswordData) {\n    setIsSubmitting(true);\n    try {\n      const response = await apiRequest(\"POST\", \"/api/auth/forgot-password\", data);\n      const result = await response.json();\n      \n      if (result.success) {\n        setSuccess(true);\n        \n        // في وضع التطوير، قد يكون هناك رابط إعادة تعيين في الاستجابة\n        if (result.resetLink) {\n          setResetLink(result.resetLink);\n          console.log(\"رابط إعادة التعيين للتطوير:\", result.resetLink);\n          \n          toast({\n            title: \"تم إنشاء رابط إعادة تعيين كلمة المرور\",\n            description: \"تم عرض الرابط في الصفحة (وضع التطوير فقط)\",\n            variant: \"default\",\n          });\n        } else {\n          toast({\n            title: \"تم إرسال رابط إعادة تعيين كلمة المرور\",\n            description: \"يرجى التحقق من بريدك الإلكتروني\",\n            variant: \"default\",\n          });\n        }\n      } else {\n        toast({\n          title: \"حدث خطأ\",\n          description: result.message || \"فشل في إرسال رابط إعادة تعيين كلمة المرور\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error(\"خطأ في طلب إعادة تعيين كلمة المرور:\", error);\n      toast({\n        title: \"حدث خطأ\",\n        description: \"فشل في إرسال طلب إعادة تعيين كلمة المرور\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-b from-slate-50 to-slate-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1 text-center\">\n          <CardTitle className=\"text-2xl font-bold tracking-tight text-primary\">\n            استعادة كلمة المرور\n          </CardTitle>\n          <CardDescription className=\"text-slate-500 dark:text-slate-400\">\n            أدخل بريدك الإلكتروني وسنرسل لك رابطاً لإعادة تعيين كلمة المرور\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {success ? (\n            <div className=\"text-center space-y-4\">\n              <div className=\"mx-auto w-12 h-12 rounded-full bg-green-100 flex items-center justify-center\">\n                <Mail className=\"h-6 w-6 text-green-600\" />\n              </div>\n              \n              {resetLink ? (\n                <>\n                  <h3 className=\"text-lg font-medium text-slate-900\">تم إنشاء رابط إعادة التعيين</h3>\n                  <p className=\"text-slate-500\">\n                    في وضع التطوير، نعرض الرابط مباشرة هنا بدلاً من إرساله بالبريد الإلكتروني.\n                  </p>\n                  \n                  <Alert className=\"bg-amber-50 border-amber-200 mt-4 mb-2 text-right\">\n                    <AlertDescription className=\"text-amber-800 text-sm\">\n                      ملاحظة: يظهر هذا الرابط فقط في بيئة التطوير.\n                    </AlertDescription>\n                  </Alert>\n                  \n                  <div className=\"mt-2 p-3 bg-slate-50 border border-slate-200 rounded-md text-left break-all\">\n                    <a \n                      href={resetLink} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-600 hover:text-blue-800 hover:underline flex items-center justify-between\"\n                    >\n                      <span className=\"text-sm\">{resetLink}</span>\n                      <ExternalLink className=\"h-4 w-4 flex-shrink-0 mr-1\" />\n                    </a>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <h3 className=\"text-lg font-medium text-slate-900\">تم إرسال البريد الإلكتروني</h3>\n                  <p className=\"text-slate-500\">\n                    لقد أرسلنا لك بريداً إلكترونياً يحتوي على رابط لإعادة تعيين كلمة المرور الخاصة بك.\n                    يرجى التحقق من بريدك الإلكتروني.\n                  </p>\n                </>\n              )}\n              \n              <div className=\"pt-4\">\n                <Link href=\"/auth/login\">\n                  <Button variant=\"link\" className=\"text-primary\">\n                    العودة إلى صفحة تسجيل الدخول <ArrowRight className=\"mr-2 h-4 w-4\" />\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          ) : (\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-slate-700\">البريد الإلكتروني</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"email@example.com\"\n                          type=\"email\"\n                          autoComplete=\"email\"\n                          className=\"border-slate-300\"\n                          {...field}\n                          dir=\"ltr\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n                  {isSubmitting ? (\n                    <>\n                      <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                      جاري الإرسال...\n                    </>\n                  ) : (\n                    \"إرسال رابط إعادة التعيين\"\n                  )}\n                </Button>\n                <div className=\"text-center mt-4\">\n                  <Link href=\"/auth/login\">\n                    <Button variant=\"link\" className=\"text-primary px-0\">\n                      العودة إلى صفحة تسجيل الدخول\n                    </Button>\n                  </Link>\n                </div>\n              </form>\n            </Form>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":8064},"client/src/pages/auth/login.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Helmet } from \"react-helmet\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { AlertCircle } from \"lucide-react\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\n// إزالة استيراد مكتبات علامات التبويب\nimport { Badge } from \"@/components/ui/badge\";\n\n// Define our form schema\nconst loginSchema = z.object({\n  username: z.string().min(1, \"اسم المستخدم مطلوب\"),\n  password: z.string().min(1, \"كلمة المرور مطلوبة\"),\n});\n\ntype LoginFormValues = z.infer<typeof loginSchema>;\n\ntype LoginProps = {\n  auth: {\n    login: (user: any) => void;\n  };\n};\n\nconst Login = ({ auth }: LoginProps) => {\n  const [_, navigate] = useLocation();\n  const { toast } = useToast();\n  const [serverError, setServerError] = useState(\"\");\n  const [data, setData] = useState<any>(null);\n  // واجهة تسجيل دخول موحدة\n\n  const form = useForm<LoginFormValues>({\n    resolver: zodResolver(loginSchema),\n  \n  });\n\n  const loginMutation = useMutation({\n    mutationFn: async (data: LoginFormValues) => {\n      try {\n        console.log(\"محاولة تسجيل الدخول للمستخدم:\", data.username);\n        const response = await apiRequest(\"POST\", \"/api/auth/login\", data);\n        \n        if (!response.ok) {\n          // للتعامل مع أخطاء HTTP بشكل صحيح\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"فشل تسجيل الدخول\");\n        }\n        \n        return await response.json();\n      } catch (error) {\n        console.error(\"خطأ أثناء تسجيل الدخول:\", error);\n        throw error;\n      }\n    },\n    onSuccess: (responseData) => {\n      console.log(\"تسجيل دخول ناجح، البيانات المستلمة:\", responseData);\n      \n      // تحسين استخراج بيانات المستخدم والتوكن\n      if (!responseData || !responseData.user || !responseData.token) {\n        console.error(\"خطأ: البيانات المستلمة غير صالحة:\", responseData);\n        toast({\n          title: \"خطأ في النظام\",\n          description: \"تم تسجيل الدخول ولكن البيانات المستلمة غير صالحة.\",\n          variant: \"destructive\"\n        });\n        return;\n      }\n      \n      // حفظ التوكن في localStorage\n      localStorage.setItem('auth_token', responseData.token);\n      \n      // استخراج بيانات المستخدم من الاستجابة\n      const userData = responseData.user;\n      setData(responseData);\n      \n      console.log(\"بيانات المستخدم المستخرجة:\", userData);\n      console.log(\"تم حفظ JWT token في localStorage\");\n      \n      // عرض رسالة نجاح\n      toast({\n        title: \"تم تسجيل الدخول بنجاح\",\n        description: `مرحباً بعودتك، ${userData.name || userData.username}!`,\n      });\n      \n      // تحديث حالة المصادقة فوراً\n      auth.login(userData);\n      \n      // تنظيف ذاكرة التخزين المؤقت وإعادة تحميل البيانات\n      import(\"@/lib/queryClient\").then(({ queryClient }) => {\n        // إزالة جميع استعلامات المصادقة من الكاش\n        queryClient.removeQueries({ queryKey: ['/api/auth/user'] });\n        queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n        \n        // توجيه المستخدم حسب دوره فوراً\n        const role = userData.role;\n        console.log(\"توجيه المستخدم بدور:\", role);\n        \n        // استخدام window.location.href لضمان إعادة التحميل الكامل والتوجيه الصحيح\n        if (role === \"admin\") {\n          console.log(\"بدء التوجيه للوحة المسؤول...\");\n          window.location.href = \"/dashboard/admin\";\n        } else if (role === \"entrepreneur\") {\n          console.log(\"بدء التوجيه لداشبورد ريادي الأعمال...\");\n          window.location.href = \"/dashboard/entrepreneur\";\n        } else if (role === \"company\") {\n          console.log(\"بدء التوجيه لداشبورد الشركة...\");\n          window.location.href = \"/dashboard/company\";\n        } else {\n          console.log(\"دور غير معروف، التوجيه إلى الصفحة الرئيسية\");\n          window.location.href = \"/\";\n        }\n      });\n    },\n    onError: (error: any) => {\n      console.error(\"خطأ تسجيل الدخول:\", error);\n      setServerError(\"اسم المستخدم أو كلمة المرور غير صحيحة. الرجاء المحاولة مرة أخرى.\");\n      \n      toast({\n        title: \"فشل تسجيل الدخول\",\n        description: \"تعذر تسجيل الدخول بالبيانات المدخلة. الرجاء التحقق والمحاولة مرة أخرى.\",\n        variant: \"destructive\"\n      });\n    },\n  });\n\n  const onSubmit = (data: LoginFormValues) => {\n    setServerError(\"\");\n    loginMutation.mutate(data);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>تسجيل الدخول | لينكتك</title>\n        <meta name=\"description\" content=\"تسجيل الدخول إلى منصة لينكتك للتواصل بين رواد الأعمال وشركات البرمجة\" />\n      </Helmet>\n\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"w-full max-w-md space-y-8 bg-white p-8 rounded-xl shadow-sm\">\n          <div className=\"text-center\">\n            <Link href=\"/\">\n              <span className=\"inline-block text-primary font-heading font-bold text-3xl mb-4\">لينك<span className=\"text-accent\">تك</span></span>\n            </Link>\n            <h2 className=\"text-2xl font-bold font-heading\">تسجيل الدخول</h2>\n            <p className=\"mt-2 text-sm text-neutral-600\">\n              ليس لديك حساب؟{\" \"}\n              <Link href=\"/auth/register\" className=\"text-primary hover:text-primary-dark font-medium\">\n                إنشاء حساب\n              </Link>\n            </p>\n          </div>\n          \n          {serverError && (\n            <Alert variant=\"destructive\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertTitle>خطأ</AlertTitle>\n              <AlertDescription>{serverError}</AlertDescription>\n            </Alert>\n          )}\n          \n          <div className=\"mt-2 mb-3 px-3 py-2 bg-blue-50 rounded-lg border border-blue-100\">\n            <p className=\"text-sm text-blue-700 mb-1 font-medium\">معلومات هامة:</p>\n            <p className=\"text-xs text-blue-600 mb-2\">سيتم توجيهك تلقائياً حسب نوع حسابك بعد تسجيل الدخول</p>\n            {data?.user && data.user.role === \"admin\" && (\n              <div className=\"mt-2\">\n                <p className=\"text-xs text-blue-700 mb-1\">تم تسجيل دخولك كمسؤول، اضغط هنا للوصول إلى لوحة التحكم:</p>\n                <Link \n                  href=\"/dashboard/admin\" \n                  className=\"block w-full text-center bg-primary text-white text-xs py-2 px-3 rounded-lg hover:bg-primary-dark\"\n                >\n                  لوحة تحكم المسؤول\n                </Link>\n              </div>\n            )}\n          </div>\n\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"username\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>اسم المستخدم</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"أدخل اسم المستخدم\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>كلمة المرور</FormLabel>\n                    <FormControl>\n                      <Input type=\"password\" placeholder=\"أدخل كلمة المرور\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"flex items-center justify-end\">\n                <div className=\"text-sm\">\n                  <Link href=\"/auth/forgot-password\" className=\"text-primary hover:text-primary-dark font-medium\">\n                    نسيت كلمة المرور؟\n                  </Link>\n                </div>\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={loginMutation.isPending}\n              >\n                {loginMutation.isPending ? \"جاري تسجيل الدخول...\" : \"تسجيل الدخول\"}\n              </Button>\n            </form>\n          </Form>\n\n          <div className=\"mt-4 text-center text-sm text-neutral-500\">\n            بتسجيل الدخول، فإنك توافق على{\" \"}\n            <Link href=\"/terms\" className=\"text-primary hover:text-primary-dark\">\n              شروط الخدمة\n            </Link>{\" \"}\n            و{\" \"}\n            <Link href=\"/privacy\" className=\"text-primary hover:text-primary-dark\">\n              سياسة الخصوصية\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","size_bytes":10330},"client/src/pages/auth/register.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Helmet } from \"react-helmet\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { AlertCircle } from \"lucide-react\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { FileUpload } from \"@/components/ui/file-upload\";\n\n// Define interface for the registration payload\ninterface RegisterPayload {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: \"entrepreneur\" | \"company\";\n  companyProfile?: {\n    description: string;\n    skills: string[];\n    website?: string;\n    location?: string;\n    registrationDocument?: File;\n  };\n}\n\n// Define our form schema\nconst registerSchema = z.object({\n  name: z.string().min(2, \"الاسم مطلوب ويجب أن يكون أكثر من حرفين\"),\n  username: z.string().min(3, \"اسم المستخدم مطلوب ويجب أن يكون أكثر من 3 أحرف\"),\n  email: z.string().email(\"يرجى إدخال بريد إلكتروني صحيح\"),\n  password: z.string().min(6, \"كلمة المرور مطلوبة ويجب أن تكون أكثر من 6 أحرف\"),\n  role: z.enum([\"entrepreneur\", \"company\"], {\n    invalid_type_error: \"يرجى اختيار نوع الحساب\",\n    required_error: \"نوع الحساب مطلوب\",\n  }),\n  // Company profile fields (optional based on role)\n  companyDescription: z.string().optional(),\n  companySkills: z.string().optional(),\n  companyWebsite: z.string().optional(),\n  companyLocation: z.string().optional(),\n}).refine(data => {\n  // If role is company, companyDescription is required\n  if (data.role === \"company\" && (!data.companyDescription || data.companyDescription.length < 10)) {\n    return false;\n  }\n  return true;\n}, {\n  message: \"وصف الشركة مطلوب ويجب أن يكون أكثر من 10 أحرف\",\n  path: [\"companyDescription\"],\n});\n\ntype RegisterFormValues = z.infer<typeof registerSchema>;\n\ntype RegisterProps = {\n  auth: {\n    login: (user: any) => void;\n  };\n};\n\nconst Register = ({ auth }: RegisterProps) => {\n  const [_, navigate] = useLocation();\n  const { toast } = useToast();\n  const [serverError, setServerError] = useState(\"\");\n  const [registrationDocument, setRegistrationDocument] = useState<File | null>(null);\n  const [documentError, setDocumentError] = useState<string | null>(null);\n\n  const form = useForm<RegisterFormValues>({\n    resolver: zodResolver(registerSchema),\n    defaultValues: {\n      name: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"entrepreneur\",\n      companyDescription: \"\",\n      companySkills: \"\",\n      companyWebsite: \"\",\n      companyLocation: \"\",\n    },\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: async (data: RegisterFormValues) => {\n      const payload: RegisterPayload = {\n        name: data.name,\n        username: data.username,\n        email: data.email,\n        password: data.password,\n        role: data.role,\n      };\n\n      // Add company profile data if role is company\n      if (data.role === \"company\") {\n        const skills = data.companySkills ? data.companySkills.split(\",\").map(s => s.trim()) : [];\n        \n        payload.companyProfile = {\n          description: data.companyDescription || \"\",\n          skills: skills,\n          website: data.companyWebsite,\n          location: data.companyLocation,\n        };\n        \n        // إذا كان هناك ملف registrationDocument في البيانات (من التحويل السابق في الـ onSubmit)\n        if ('registrationDocument' in data && typeof data.registrationDocument === 'string') {\n          // @ts-ignore - نضيف هذا التعليق لتجاوز خطأ TypeScript لأن registrationDocument ليس جزءاً من نوع RegisterFormValues\n          payload.companyProfile.registrationDocument = data.registrationDocument;\n        }\n      }\n\n      const response = await apiRequest(\"POST\", \"/api/auth/register\", payload);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      auth.login(data.user);\n      toast({\n        title: \"تم إنشاء الحساب بنجاح\",\n        description: \"مرحباً بك في منصة لينكتك\",\n      });\n\n      // Redirect based on role\n      if (data.user.role === \"entrepreneur\") {\n        navigate(\"/dashboard/entrepreneur\");\n      } else {\n        navigate(\"/dashboard/company\");\n      }\n    },\n    onError: (error: any) => {\n      setServerError(error.message || \"حدث خطأ أثناء إنشاء الحساب، يرجى المحاولة مرة أخرى.\");\n    },\n  });\n\n  const onSubmit = (data: RegisterFormValues) => {\n    setServerError(\"\");\n    setDocumentError(null);\n    \n    // إذا كان نوع الحساب شركة، يجب وجود صورة السجل التجاري\n    if (data.role === \"company\" && !registrationDocument) {\n      setDocumentError(\"يجب رفع صورة السجل التجاري للشركة\");\n      return;\n    }\n    \n    // إضافة ملف السجل التجاري إلى البيانات\n    if (data.role === \"company\" && registrationDocument) {\n      // Convert file to base64 and append to payload\n      const reader = new FileReader();\n      reader.readAsDataURL(registrationDocument);\n      reader.onload = () => {\n        const payload = { \n          ...data, \n          registrationDocument: reader.result as string \n        };\n        registerMutation.mutate(payload);\n      };\n      reader.onerror = () => {\n        setServerError(\"حدث خطأ أثناء قراءة ملف السجل التجاري\");\n      };\n    } else {\n      registerMutation.mutate(data);\n    }\n  };\n\n  const roleType = form.watch(\"role\");\n\n  return (\n    <>\n      <Helmet>\n        <title>إنشاء حساب جديد | لينكتك</title>\n        <meta name=\"description\" content=\"إنشاء حساب جديد في منصة لينكتك للتواصل بين رواد الأعمال وشركات البرمجة\" />\n      </Helmet>\n\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"w-full max-w-md md:max-w-lg space-y-8 bg-white p-8 rounded-xl shadow-sm\">\n          <div className=\"text-center\">\n            <Link href=\"/\">\n              <span className=\"inline-block text-primary font-heading font-bold text-3xl mb-4\">لينك<span className=\"text-accent\">تك</span></span>\n            </Link>\n            <h2 className=\"text-2xl font-bold font-heading\">إنشاء حساب جديد</h2>\n            <p className=\"mt-2 text-sm text-neutral-600\">\n              لديك حساب بالفعل؟{\" \"}\n              <Link href=\"/auth/login\" className=\"text-primary hover:text-primary-dark font-medium\">\n                تسجيل الدخول\n              </Link>\n            </p>\n          </div>\n\n          {serverError && (\n            <Alert variant=\"destructive\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertTitle>خطأ</AlertTitle>\n              <AlertDescription>{serverError}</AlertDescription>\n            </Alert>\n          )}\n\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"role\"\n                  render={({ field }) => (\n                    <FormItem className=\"space-y-3\">\n                      <FormLabel className=\"text-lg font-medium\">اختر نوع الحساب</FormLabel>\n                      <FormControl>\n                        <RadioGroup\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                          className=\"grid grid-cols-1 md:grid-cols-2 gap-4\"\n                        >\n                          <div className={`relative overflow-hidden rounded-lg border-2 transition-all ${field.value === 'entrepreneur' ? 'border-primary bg-primary/5 shadow-md' : 'border-neutral-200 hover:border-neutral-300'}`}>\n                            <label \n                              htmlFor=\"entrepreneur\" \n                              className=\"flex flex-col items-center p-4 cursor-pointer h-full\"\n                            >\n                              <div className={`w-12 h-12 rounded-full flex items-center justify-center mb-3 transition-colors ${field.value === 'entrepreneur' ? 'bg-primary text-white' : 'bg-neutral-100 text-neutral-600'}`}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                                </svg>\n                              </div>\n                              <span className=\"font-bold text-lg mb-1\">رائد أعمال</span>\n                              <span className=\"text-sm text-center text-neutral-600\">أبحث عن شركة لتنفيذ مشروعي</span>\n                              <RadioGroupItem value=\"entrepreneur\" id=\"entrepreneur\" className=\"sr-only\" />\n                            </label>\n                          </div>\n                          \n                          <div className={`relative overflow-hidden rounded-lg border-2 transition-all ${field.value === 'company' ? 'border-primary bg-primary/5 shadow-md' : 'border-neutral-200 hover:border-neutral-300'}`}>\n                            <label \n                              htmlFor=\"company\" \n                              className=\"flex flex-col items-center p-4 cursor-pointer h-full\"\n                            >\n                              <div className={`w-12 h-12 rounded-full flex items-center justify-center mb-3 transition-colors ${field.value === 'company' ? 'bg-primary text-white' : 'bg-neutral-100 text-neutral-600'}`}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                                </svg>\n                              </div>\n                              <span className=\"font-bold text-lg mb-1\">شركة برمجة</span>\n                              <span className=\"text-sm text-center text-neutral-600\">أقدم خدمات برمجية للمشاريع</span>\n                              <RadioGroupItem value=\"company\" id=\"company\" className=\"sr-only\" />\n                            </label>\n                          </div>\n                        </RadioGroup>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        {roleType === \"entrepreneur\" ? \"الاسم الكامل\" : \"اسم الشركة\"}\n                      </FormLabel>\n                      <FormControl>\n                        <Input placeholder={roleType === \"entrepreneur\" ? \"أدخل اسمك الكامل\" : \"أدخل اسم الشركة\"} {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"username\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>اسم المستخدم</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"أدخل اسم المستخدم\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>البريد الإلكتروني</FormLabel>\n                      <FormControl>\n                        <Input type=\"email\" placeholder=\"أدخل البريد الإلكتروني\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>كلمة المرور</FormLabel>\n                      <FormControl>\n                        <Input type=\"password\" placeholder=\"أدخل كلمة المرور\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                {roleType === \"company\" && (\n                  <>\n                    <FormField\n                      control={form.control}\n                      name=\"companyDescription\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>وصف الشركة</FormLabel>\n                          <FormControl>\n                            <Textarea \n                              placeholder=\"قدم وصفاً مختصراً عن شركتك وخدماتها\" \n                              {...field} \n                              rows={4}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"companySkills\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>التخصصات والمهارات</FormLabel>\n                          <FormControl>\n                            <Input \n                              placeholder=\"مثال: تطبيقات الويب، تطبيقات الجوال، الذكاء الاصطناعي (مفصولة بفواصل)\" \n                              {...field} \n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"companyWebsite\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>الموقع الإلكتروني</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"example.com\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"companyLocation\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>الموقع الجغرافي</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"مثال: الرياض، السعودية\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n                    \n                    {/* حقل رفع السجل التجاري */}\n                    <div>\n                      <FormLabel className=\"block mb-2\">السجل التجاري</FormLabel>\n                      <FileUpload\n                        value={registrationDocument}\n                        onChange={setRegistrationDocument}\n                        label=\"رفع ملف\"\n                        helperText=\"قم برفع نسخة من السجل التجاري للشركة (مطلوب)\"\n                        error={documentError || \"\"}\n                        accept={{\n                          \"image/*\": [\".jpg\", \".jpeg\", \".png\", \".gif\", \".webp\"],\n                          \"application/pdf\": [\".pdf\"],\n                        }}\n                        maxSize={5 * 1024 * 1024} // 5MB\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full hover-button-scale transition-all duration-300 hover:shadow-lg\"\n                disabled={registerMutation.isPending}\n              >\n                {registerMutation.isPending ? (\n                  <div className=\"flex items-center justify-center\">\n                    <svg className=\"animate-spin ml-2 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    <span>جاري إنشاء الحساب...</span>\n                  </div>\n                ) : (\n                  <span className=\"flex items-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1.5 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\" />\n                    </svg>\n                    إنشاء حساب\n                  </span>\n                )}\n              </Button>\n            </form>\n          </Form>\n\n          <div className=\"mt-4 text-center text-sm text-neutral-500\">\n            بإنشاء حساب، فإنك توافق على{\" \"}\n            <Link href=\"/terms\" className=\"text-primary hover:text-primary-dark link-underline\">\n              شروط الخدمة\n            </Link>{\" \"}\n            و{\" \"}\n            <Link href=\"/privacy\" className=\"text-primary hover:text-primary-dark link-underline\">\n              سياسة الخصوصية\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","size_bytes":19855},"client/src/pages/auth/reset-password.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useParams, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2 } from \"lucide-react\";\n\n// مخطط إعادة تعيين كلمة المرور\nconst resetPasswordSchema = z.object({\n  password: z\n    .string()\n    .min(8, { message: \"يجب أن تكون كلمة المرور 8 أحرف على الأقل\" })\n    .max(100, { message: \"يجب أن تكون كلمة المرور 100 حرف كحد أقصى\" }),\n  confirmPassword: z.string(),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"كلمات المرور غير متطابقة\",\n  path: [\"confirmPassword\"],\n});\n\ntype ResetPasswordData = z.infer<typeof resetPasswordSchema>;\n\nexport default function ResetPasswordPage() {\n  const { token } = useParams<{ token: string }>();\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const [isTokenValid, setIsTokenValid] = useState<boolean | null>(null);\n  const [email, setEmail] = useState<string | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const form = useForm<ResetPasswordData>({\n    resolver: zodResolver(resetPasswordSchema),\n    defaultValues: {\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  // التحقق من صلاحية الرمز عند تحميل الصفحة\n  useEffect(() => {\n    const verifyToken = async () => {\n      try {\n        const response = await apiRequest(\"GET\", `/api/auth/reset-password/${token}`);\n        const data = await response.json();\n        \n        if (response.ok && data.valid) {\n          setIsTokenValid(true);\n          setEmail(data.email);\n        } else {\n          setIsTokenValid(false);\n          toast({\n            title: \"رمز غير صالح\",\n            description: \"رمز إعادة تعيين كلمة المرور غير صالح أو منتهي الصلاحية\",\n            variant: \"destructive\",\n          });\n        }\n      } catch (error) {\n        console.error(\"خطأ في التحقق من الرمز:\", error);\n        setIsTokenValid(false);\n        toast({\n          title: \"خطأ\",\n          description: \"حدث خطأ أثناء التحقق من صلاحية الرمز\",\n          variant: \"destructive\",\n        });\n      }\n    };\n\n    verifyToken();\n  }, [token, toast]);\n\n  async function onSubmit(data: ResetPasswordData) {\n    if (!token) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      const response = await apiRequest(\"POST\", `/api/auth/reset-password/${token}`, {\n        password: data.password,\n      });\n      \n      const responseData = await response.json();\n      \n      if (response.ok) {\n        toast({\n          title: \"تم بنجاح!\",\n          description: \"تم إعادة تعيين كلمة المرور بنجاح، يمكنك الآن تسجيل الدخول\",\n          variant: \"default\",\n        });\n        // التوجيه إلى صفحة تسجيل الدخول\n        navigate(\"/auth/login\");\n      } else {\n        toast({\n          title: \"فشل في إعادة تعيين كلمة المرور\",\n          description: responseData.message || \"حدث خطأ أثناء إعادة تعيين كلمة المرور\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error(\"خطأ في إرسال طلب إعادة تعيين كلمة المرور:\", error);\n      toast({\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء إعادة تعيين كلمة المرور\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  if (isTokenValid === null) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <Loader2 className=\"h-8 w-8 animate-spin mx-auto text-primary\" />\n          <p className=\"mt-2 text-gray-600\">جاري التحقق من صلاحية الرمز...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (isTokenValid === false) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <Card className=\"w-full max-w-md shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl text-center text-red-600\">رمز غير صالح</CardTitle>\n            <CardDescription className=\"text-center\">\n              رمز إعادة تعيين كلمة المرور غير صالح أو منتهي الصلاحية\n            </CardDescription>\n          </CardHeader>\n          <CardFooter className=\"flex justify-center\">\n            <Button \n              variant=\"default\" \n              onClick={() => navigate(\"/auth/forgot-password\")}\n            >\n              طلب رمز جديد\n            </Button>\n          </CardFooter>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n      <Card className=\"w-full max-w-md shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl text-center\">إعادة تعيين كلمة المرور</CardTitle>\n          <CardDescription className=\"text-center\">\n            {email && `للحساب: ${email}`}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>كلمة المرور الجديدة</FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        placeholder=\"أدخل كلمة المرور الجديدة\" \n                        type=\"password\" \n                        className=\"text-right\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"confirmPassword\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>تأكيد كلمة المرور</FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        placeholder=\"أدخل كلمة المرور مرة أخرى\" \n                        type=\"password\" \n                        className=\"text-right\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n                {isSubmitting ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    جاري إعادة تعيين كلمة المرور...\n                  </>\n                ) : (\n                  \"إعادة تعيين كلمة المرور\"\n                )}\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n        <CardFooter className=\"flex justify-center\">\n          <Button \n            variant=\"link\" \n            onClick={() => navigate(\"/auth/login\")}\n          >\n            العودة إلى تسجيل الدخول\n          </Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}","size_bytes":8070},"client/src/pages/blog/[slug].tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLocation, Link } from 'wouter';\nimport { Helmet } from 'react-helmet';\nimport { \n  Card,\n  CardContent,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  ArrowRight,\n  Calendar, \n  User, \n  Tag, \n  Loader2, \n  Eye, \n  Clock, \n  ArrowLeft,\n  MessageCircle,\n  Share2,\n  Facebook,\n  Twitter,\n  Linkedin,\n  ChevronLeft\n} from \"lucide-react\";\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\nimport { Form, FormControl, FormField, FormItem, FormMessage } from \"@/components/ui/form\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuth } from \"../../App\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { BlogPost, BlogComment, BlogCategory } from '@shared/schema';\n\n/**\n * صفحة عرض مقال واحد مع التعليقات\n */\nexport default function BlogPostPage({ params }: { params: { slug: string } }) {\n  const { slug } = params;\n  const [_, navigate] = useLocation();\n  const { toast } = useToast();\n  const { user, isAuthenticated } = useAuth();\n  const [activeTab, setActiveTab] = useState<string>('comments');\n  \n  // استعلام لجلب المقال\n  const { \n    data: post, \n    isLoading: loadingPost,\n    isError: postError,\n    refetch: refetchPost\n  } = useQuery({\n    queryKey: ['/api/blog/posts/slug', slug],\n    queryFn: () => {\n      // تشفير الـ slug في حالة أنه يحتوي على أحرف عربية أو خاصة\n      const encodedSlug = encodeURIComponent(slug);\n      return apiRequest('GET', `/api/blog/posts/slug/${encodedSlug}`)\n        .then(res => res.json());\n    },\n  });\n  \n  // استعلام لجلب فئات المدونة\n  const { data: categories } = useQuery({\n    queryKey: ['/api/blog/categories'],\n  });\n  \n  // استعلام لجلب تعليقات المقال\n  const { \n    data: comments, \n    isLoading: loadingComments,\n    refetch: refetchComments\n  } = useQuery({\n    queryKey: ['/api/blog/posts', post?.id, 'comments'],\n    queryFn: () => {\n      if (!post?.id) return [];\n      \n      return apiRequest('GET', `/api/blog/posts/${post.id}/comments`)\n        .then(res => res.json());\n    },\n    enabled: !!post?.id,\n  });\n  \n  // مخطط تحقق من صحة التعليق\n  const commentSchema = z.object({\n    content: z.string().min(3, { \n      message: \"التعليق يجب أن يحتوي على الأقل 3 أحرف\" \n    }).max(500, { \n      message: \"التعليق يجب ألا يتجاوز 500 حرف\" \n    }),\n  });\n  \n  // نموذج التعليق\n  const form = useForm<z.infer<typeof commentSchema>>({\n    resolver: zodResolver(commentSchema),\n    defaultValues: {\n      content: '',\n    },\n  });\n  \n  // تقديم التعليق\n  const onSubmitComment = async (values: z.infer<typeof commentSchema>) => {\n    if (!post?.id) return;\n    \n    try {\n      await apiRequest('POST', '/api/blog/comments', {\n        postId: post.id,\n        content: values.content,\n      });\n      \n      toast({\n        title: \"تم إضافة التعليق بنجاح\",\n        description: \"سيظهر تعليقك بعد مراجعته من قبل المسؤولين\",\n      });\n      \n      form.reset();\n      refetchComments();\n    } catch (error) {\n      toast({\n        title: \"فشل إضافة التعليق\",\n        description: \"حدث خطأ أثناء إضافة التعليق. يرجى المحاولة مرة أخرى\",\n        variant: \"destructive\",\n      });\n    }\n  };\n  \n  // تنسيق التاريخ\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ar-SA', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  \n  // العودة إلى صفحة المدونة\n  const goBack = () => {\n    navigate('/blog');\n  };\n  \n  // التوجه إلى صفحة الفئة\n  const goToCategory = (categoryId: number) => {\n    navigate(`/blog?category=${categoryId}`);\n  };\n  \n  // فلترة التعليقات المعتمدة فقط\n  const approvedComments = comments?.filter((comment: BlogComment) => \n    comment.status === 'approved'\n  ) || [];\n  \n  // الحصول على اسم الفئة\n  const getCategoryName = (categoryId: number) => {\n    return categories?.find((c: BlogCategory) => c.id === categoryId)?.name || 'عام';\n  };\n  \n  // إذا كان هناك خطأ في تحميل المقال\n  if (postError) {\n    return (\n      <div className=\"container mx-auto py-20 text-center\">\n        <h1 className=\"text-4xl font-bold mb-6\">لم يتم العثور على المقال</h1>\n        <p className=\"text-muted-foreground mb-8\">\n          المقال الذي تبحث عنه غير موجود أو تم حذفه\n        </p>\n        <Button onClick={goBack}>\n          <ArrowRight className=\"ml-2 h-4 w-4\" />\n          العودة إلى المدونة\n        </Button>\n      </div>\n    );\n  }\n  \n  return (\n    <>\n      <Helmet>\n        <title>{post?.title ? `${post.title} | لينكتك` : \"تحميل المقال...\"}</title>\n        {post?.seoDescription && (\n          <meta name=\"description\" content={post.seoDescription} />\n        )}\n        {post?.seoKeywords && (\n          <meta name=\"keywords\" content={post.seoKeywords} />\n        )}\n        {post && (\n          <meta property=\"og:title\" content={post.title} />\n        )}\n        {post?.seoDescription && (\n          <meta property=\"og:description\" content={post.seoDescription} />\n        )}\n        {post?.featuredImage && (\n          <meta property=\"og:image\" content={post.featuredImage} />\n        )}\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={`https://linktech.app/blog/${slug}`} />\n      </Helmet>\n\n      <div className=\"container mx-auto py-8\">\n        <Button \n          variant=\"ghost\" \n          onClick={goBack}\n          className=\"mb-6\"\n        >\n          <ChevronLeft className=\"ml-2 h-4 w-4\" />\n          العودة إلى المدونة\n        </Button>\n        \n        {loadingPost ? (\n          <div className=\"flex items-center justify-center min-h-[400px]\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            <span className=\"mr-2\">جاري تحميل المقال...</span>\n          </div>\n        ) : post ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-12 gap-8\">\n            <div className=\"md:col-span-8 space-y-6\">\n              {post.featuredImage && (\n                <div className=\"w-full h-[300px] md:h-[400px] rounded-lg overflow-hidden mb-6\">\n                  <img\n                    src={post.featuredImage}\n                    alt={post.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              )}\n              \n              <div>\n                <div className=\"flex flex-wrap gap-2 mb-4\">\n                  <Badge \n                    variant=\"secondary\"\n                    className=\"cursor-pointer\"\n                    onClick={() => post.categoryId && goToCategory(post.categoryId)}\n                  >\n                    {post.categoryId ? getCategoryName(post.categoryId) : 'عام'}\n                  </Badge>\n                  \n                  {post.tags && Array.isArray(post.tags) ? (\n                    post.tags.map((tag, index) => (\n                      <Badge key={index} variant=\"outline\">\n                        {tag}\n                      </Badge>\n                    ))\n                  ) : (\n                    post.tags && typeof post.tags === 'string' && post.tags.split(',').map((tag, index) => (\n                      <Badge key={index} variant=\"outline\">\n                        {tag.trim()}\n                      </Badge>\n                    ))\n                  )}\n                </div>\n                \n                <h1 className=\"text-3xl md:text-4xl font-bold mb-6\">{post.title}</h1>\n                \n                <div className=\"flex items-center justify-between mb-6 text-sm text-muted-foreground\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center\">\n                      <Calendar className=\"ml-1 h-4 w-4\" />\n                      {formatDate(post.createdAt)}\n                    </div>\n                    \n                    <div className=\"flex items-center\">\n                      <Eye className=\"ml-1 h-4 w-4\" />\n                      {post.viewCount} مشاهدة\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"prose prose-lg max-w-none rtl\" dangerouslySetInnerHTML={{ __html: post.content }} />\n              </div>\n              \n              <Separator className=\"my-8\" />\n              \n              <div>\n                <Tabs value={activeTab} onValueChange={setActiveTab}>\n                  <TabsList className=\"mb-6\">\n                    <TabsTrigger value=\"comments\">\n                      التعليقات ({approvedComments.length})\n                    </TabsTrigger>\n                    <TabsTrigger value=\"share\">\n                      مشاركة المقال\n                    </TabsTrigger>\n                  </TabsList>\n                  \n                  <TabsContent value=\"comments\">\n                    <div className=\"space-y-8\">\n                      {isAuthenticated ? (\n                        <Card>\n                          <CardHeader>\n                            <CardTitle className=\"text-xl\">إضافة تعليق</CardTitle>\n                          </CardHeader>\n                          <CardContent>\n                            <Form {...form}>\n                              <form onSubmit={form.handleSubmit(onSubmitComment)} className=\"space-y-4\">\n                                <FormField\n                                  control={form.control}\n                                  name=\"content\"\n                                  render={({ field }) => (\n                                    <FormItem>\n                                      <FormControl>\n                                        <Textarea\n                                          placeholder=\"اكتب تعليقك هنا...\"\n                                          className=\"min-h-[100px]\"\n                                          {...field}\n                                        />\n                                      </FormControl>\n                                      <FormMessage />\n                                    </FormItem>\n                                  )}\n                                />\n                                <div className=\"flex justify-end\">\n                                  <Button type=\"submit\" disabled={form.formState.isSubmitting}>\n                                    {form.formState.isSubmitting ? (\n                                      <>\n                                        <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                                        جاري الإرسال\n                                      </>\n                                    ) : (\n                                      <>إرسال التعليق</>\n                                    )}\n                                  </Button>\n                                </div>\n                              </form>\n                            </Form>\n                          </CardContent>\n                        </Card>\n                      ) : (\n                        <Card>\n                          <CardContent className=\"pt-6\">\n                            <p className=\"text-center text-muted-foreground mb-4\">\n                              يجب تسجيل الدخول للتمكن من إضافة تعليق\n                            </p>\n                            <div className=\"flex justify-center\">\n                              <Button asChild>\n                                <Link to=\"/auth/login\">\n                                  تسجيل الدخول\n                                </Link>\n                              </Button>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      )}\n                      \n                      {loadingComments ? (\n                        <div className=\"flex justify-center py-8\">\n                          <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                        </div>\n                      ) : approvedComments.length === 0 ? (\n                        <div className=\"text-center py-8\">\n                          <MessageCircle className=\"h-12 w-12 mx-auto text-muted-foreground/50 mb-4\" />\n                          <p className=\"text-muted-foreground\">\n                            لا توجد تعليقات على هذا المقال بعد. كن أول من يعلق!\n                          </p>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-6\">\n                          {approvedComments.map((comment: BlogComment) => (\n                            <Card key={comment.id}>\n                              <CardHeader className=\"pb-2\">\n                                <div className=\"flex items-start gap-4\">\n                                  <Avatar>\n                                    <AvatarFallback>\n                                      {comment.userName ? comment.userName.substring(0, 2).toUpperCase() : 'UN'}\n                                    </AvatarFallback>\n                                  </Avatar>\n                                  <div>\n                                    <div className=\"font-medium\">{comment.userName || \"مستخدم\"}</div>\n                                    <div className=\"text-xs text-muted-foreground\">\n                                      {formatDate(comment.createdAt)}\n                                    </div>\n                                  </div>\n                                </div>\n                              </CardHeader>\n                              <CardContent className=\"pt-2\">\n                                <p>{comment.content}</p>\n                              </CardContent>\n                            </Card>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </TabsContent>\n                  \n                  <TabsContent value=\"share\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle>مشاركة المقال</CardTitle>\n                        <CardDescription>\n                          يمكنك مشاركة هذا المقال على مواقع التواصل الاجتماعي\n                        </CardDescription>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"flex flex-wrap gap-4\">\n                          <Button\n                            variant=\"outline\"\n                            className=\"flex items-center gap-2\"\n                            asChild\n                          >\n                            <a\n                              href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                                `https://linktech.app/blog/${slug}`\n                              )}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <Facebook className=\"h-4 w-4\" />\n                              فيسبوك\n                            </a>\n                          </Button>\n                          \n                          <Button\n                            variant=\"outline\"\n                            className=\"flex items-center gap-2\"\n                            asChild\n                          >\n                            <a\n                              href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                                post.title\n                              )}&url=${encodeURIComponent(\n                                `https://linktech.app/blog/${slug}`\n                              )}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <Twitter className=\"h-4 w-4\" />\n                              تويتر\n                            </a>\n                          </Button>\n                          \n                          <Button\n                            variant=\"outline\"\n                            className=\"flex items-center gap-2\"\n                            asChild\n                          >\n                            <a\n                              href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(\n                                `https://linktech.app/blog/${slug}`\n                              )}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <Linkedin className=\"h-4 w-4\" />\n                              لينكد إن\n                            </a>\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                </Tabs>\n              </div>\n            </div>\n            \n            <div className=\"md:col-span-4 space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>مقالات ذات صلة</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {loadingPost ? (\n                    <div className=\"flex justify-center py-4\">\n                      <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-4\">\n                      <p className=\"text-muted-foreground\">\n                        جاري تطوير هذه الميزة...\n                      </p>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n              \n              {categories && categories.length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>فئات المدونة</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {categories.map((category: BlogCategory) => (\n                        <Badge\n                          key={category.id}\n                          variant={post.categoryId === category.id ? \"default\" : \"outline\"}\n                          className=\"cursor-pointer\"\n                          onClick={() => goToCategory(category.id)}\n                        >\n                          {category.name}\n                        </Badge>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}","size_bytes":19884},"client/src/pages/blog/index.tsx":{"content":"import { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Link, useLocation } from 'wouter';\nimport { Helmet } from 'react-helmet';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  Calendar, \n  Search, \n  Clock, \n  ArrowRight, \n  Tag, \n  Filter,\n  Loader2,\n  RefreshCw\n} from \"lucide-react\";\nimport { BlogPost, BlogCategory } from '@shared/schema';\n\n/**\n * صفحة المدونة الرئيسية\n * تعرض قائمة بالمقالات المنشورة ووسائل التصفية والبحث\n */\nexport default function BlogPage() {\n  const [_, navigate] = useLocation();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  \n  // استعلام لجلب المقالات المنشورة\n  const { \n    data: posts, \n    isLoading: loadingPosts,\n    isError: postsError,\n    refetch: refetchPosts\n  } = useQuery({\n    queryKey: ['/api/blog/posts', { categoryId: selectedCategory }],\n  });\n  \n  // استعلام لجلب فئات المدونة\n  const { \n    data: categories, \n    isLoading: loadingCategories \n  } = useQuery({\n    queryKey: ['/api/blog/categories'],\n  });\n  \n  // تصفية المقالات حسب كلمة البحث\n  const filteredPosts = Array.isArray(posts) ? posts.filter((post: BlogPost) => {\n    const searchLower = searchTerm.toLowerCase();\n    return (post.title.toLowerCase().includes(searchLower) || \n           (post.excerpt ? post.excerpt.toLowerCase().includes(searchLower) : false) ||\n           (post.tags && typeof post.tags === 'string' ? post.tags.toLowerCase().includes(searchLower) : false));\n  }) : [];\n  \n  // تنسيق التاريخ\n  const formatDate = (dateString: string | Date) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ar-SA', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  \n  // وظيفة تغيير الفئة المحددة\n  const handleCategoryChange = (value: string) => {\n    setSelectedCategory(value === \"all\" ? \"\" : value);\n  };\n  \n  // وظيفة التوجه إلى مقال\n  const goToPost = (slug: string) => {\n    navigate(`/blog/${slug}`);\n  };\n  \n  // وظيفة التوجه إلى صفحة فئة\n  const goToCategory = (category: BlogCategory) => {\n    navigate(`/blog/category/${category.slug}`);\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <title>المدونة | لينكتك</title>\n        <meta\n          name=\"description\"\n          content=\"مدونة لينكتك - آخر الأخبار والمقالات في مجال تطوير البرمجيات والتقنية في المملكة العربية السعودية\"\n        />\n        <meta\n          name=\"keywords\"\n          content=\"مدونة تقنية, مقالات برمجية, تطوير البرمجيات, لينكتك\"\n        />\n      </Helmet>\n\n      <div className=\"container mx-auto py-12\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold mb-4\">مدونة لينكتك</h1>\n          <p className=\"text-muted-foreground text-lg mx-auto max-w-2xl\">\n            آخر الأخبار والمقالات في مجال تطوير البرمجيات والتقنية في المملكة العربية السعودية\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-12\">\n          <div className=\"md:col-span-3\">\n            <div className=\"relative\">\n              <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n              <Input\n                placeholder=\"ابحث في المدونة...\"\n                className=\"pr-10\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Select value={selectedCategory} onValueChange={handleCategoryChange}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"جميع الفئات\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">جميع الفئات</SelectItem>\n                {Array.isArray(categories) ? categories.map((category: BlogCategory) => (\n                  <SelectItem key={category.id} value={category.id.toString()}>\n                    {category.name}\n                  </SelectItem>\n                )) : null}\n              </SelectContent>\n            </Select>\n            <Button \n              variant=\"outline\" \n              size=\"icon\"\n              onClick={() => refetchPosts()}\n              disabled={loadingPosts}\n            >\n              {loadingPosts ? (\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                <RefreshCw className=\"h-4 w-4\" />\n              )}\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          {/* القائمة الجانبية */}\n          <div className=\"order-2 md:order-1\">\n            <Card>\n              <CardHeader>\n                <CardTitle>فئات المدونة</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <Button\n                  variant={selectedCategory === \"\" ? \"secondary\" : \"ghost\"}\n                  className=\"w-full justify-start\"\n                  onClick={() => handleCategoryChange(\"all\")}\n                >\n                  جميع المقالات\n                </Button>\n                <Separator className=\"my-2\" />\n                {loadingCategories ? (\n                  <div className=\"flex justify-center py-2\">\n                    <Loader2 className=\"h-5 w-5 animate-spin text-primary\" />\n                  </div>\n                ) : Array.isArray(categories) && categories.length > 0 ? (\n                  categories.map((category: BlogCategory) => (\n                    <Button\n                      key={category.id}\n                      variant={selectedCategory === category.id.toString() ? \"secondary\" : \"ghost\"}\n                      className=\"w-full justify-start\"\n                      onClick={() => goToCategory(category)}\n                    >\n                      {category.name}\n                    </Button>\n                  ))\n                ) : (\n                  <p className=\"text-sm text-muted-foreground text-center py-2\">\n                    لا توجد فئات\n                  </p>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* محتوى المقالات */}\n          <div className=\"order-1 md:order-2 md:col-span-3\">\n            {loadingPosts ? (\n              <div className=\"flex items-center justify-center min-h-[300px]\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                <span className=\"mr-2\">جاري تحميل المقالات...</span>\n              </div>\n            ) : postsError ? (\n              <div className=\"text-center py-12 bg-red-50 rounded-md\">\n                <p className=\"text-red-500 mb-4\">حدث خطأ أثناء تحميل المقالات</p>\n                <Button onClick={() => refetchPosts()}>إعادة المحاولة</Button>\n              </div>\n            ) : filteredPosts.length === 0 ? (\n              <div className=\"text-center py-12 bg-muted/40 rounded-md\">\n                <p className=\"text-muted-foreground mb-4\">لا توجد مقالات تطابق معايير البحث</p>\n                {searchTerm && (\n                  <Button \n                    variant=\"outline\" \n                    onClick={() => setSearchTerm('')}\n                  >\n                    إلغاء البحث\n                  </Button>\n                )}\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {filteredPosts.map((post: BlogPost) => (\n                  <Card \n                    key={post.id} \n                    className=\"overflow-hidden flex flex-col cursor-pointer transition-all duration-300 hover:shadow-md\"\n                    onClick={() => goToPost(post.slug)}\n                  >\n                    {post.featuredImage && (\n                      <div className=\"h-48 overflow-hidden\">\n                        <img\n                          src={post.featuredImage}\n                          alt={post.title}\n                          className=\"h-full w-full object-cover transition-transform duration-300 hover:scale-105\"\n                        />\n                      </div>\n                    )}\n                    <CardHeader>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <Badge \n                          variant=\"secondary\"\n                          className=\"cursor-pointer\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            const category = Array.isArray(categories) ? \n                              categories.find((c: BlogCategory) => c.id === post.categoryId) : null;\n                            if (category) {\n                              goToCategory(category);\n                            }\n                          }}\n                        >\n                          {Array.isArray(categories) ? \n                            categories.find((c: BlogCategory) => c.id === post.categoryId)?.name || 'عام'\n                            : 'عام'}\n                        </Badge>\n                        <div className=\"flex items-center text-xs text-muted-foreground\">\n                          <Calendar className=\"h-3 w-3 ml-1\" />\n                          {formatDate(post.createdAt)}\n                        </div>\n                      </div>\n                      <CardTitle className=\"line-clamp-2\">{post.title}</CardTitle>\n                      <CardDescription className=\"line-clamp-3 mt-2\">\n                        {post.excerpt}\n                      </CardDescription>\n                    </CardHeader>\n                    <CardFooter className=\"pt-0 mt-auto\">\n                      <div className=\"w-full flex justify-between items-center\">\n                        {post.tags && (\n                          <div className=\"flex items-center\">\n                            <Tag className=\"h-3 w-3 ml-1\" />\n                            <span className=\"text-xs text-muted-foreground truncate max-w-[150px]\">\n                              {post.tags}\n                            </span>\n                          </div>\n                        )}\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\" \n                          className=\"text-primary\"\n                        >\n                          اقرأ المزيد\n                          <ArrowRight className=\"mr-1 h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </CardFooter>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}","size_bytes":11677},"client/src/pages/companies/[id].tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { useParams, Link, useLocation } from \"wouter\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { RecommendedProjects } from \"@/components/recommendations\";\nimport { useAuth } from \"@/App\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { \n  ArrowLeft, \n  Star, \n  MapPin, \n  Globe, \n  MessageSquare, \n  AlertCircle,\n  Lock,\n  CreditCard,\n  CheckCircle2,\n  Info,\n  Loader2\n} from \"lucide-react\";\n\ntype CompanyProfile = {\n  id: number;\n  userId: number;\n  description: string;\n  logo?: string;\n  coverPhoto?: string;\n  website?: string;\n  location?: string;\n  skills: string[];\n  rating?: number;\n  reviewCount?: number;\n  name?: string;\n  email?: string;\n  username?: string;\n};\n\ninterface CompanyPaymentStatus {\n  companyId: number;\n  hasPaid: boolean;\n  paymentDate?: string;\n}\n\nconst CompanyDetails = () => {\n  const { id } = useParams<{ id: string }>();\n  const companyId = parseInt(id);\n  const [_, navigate] = useLocation();\n  const { toast } = useToast();\n  const [hasPaid, setHasPaid] = useState(false);\n  const [isPaymentModalOpen, setIsPaymentModalOpen] = useState(false);\n  const [paymentProcessing, setPaymentProcessing] = useState(false);\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  const auth = useAuth();\n  const isAdmin = auth?.user?.role === \"admin\";\n\n  // We don't need mandatory authentication for viewing company profiles\n  // Company profiles should be public and accessible without login\n  // Only contact/messaging features require authentication\n\n  // فحص حالة الدفع للشركة عند تحميل الصفحة\n  useEffect(() => {\n    if (companyId) {\n      // التحقق من وجود سجل للدفع في التخزين المحلي\n      const savedPayments = localStorage.getItem('companyPayments');\n      if (savedPayments) {\n        const payments: CompanyPaymentStatus[] = JSON.parse(savedPayments);\n        const companyPayment = payments.find(p => p.companyId === companyId);\n        if (companyPayment) {\n          setHasPaid(companyPayment.hasPaid);\n        }\n      }\n    }\n  }, [companyId]);\n\n  const {\n    data: company,\n    isLoading,\n    error,\n  } = useQuery<CompanyProfile>({\n    queryKey: [`/api/companies/${companyId}`],\n    enabled: !!companyId && !isNaN(companyId),\n  });\n  \n  // Check for invalid company ID\n  useEffect(() => {\n    if (!id || isNaN(parseInt(id))) {\n      navigate(\"/not-found\");\n    }\n  }, [id, navigate]);\n\n  const renderStars = (rating?: number) => {\n    if (!rating) return null;\n    \n    const stars = [];\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n    \n    for (let i = 0; i < fullStars; i++) {\n      stars.push(<Star key={`full-${i}`} className=\"fill-amber-500 text-amber-500 h-5 w-5\" />);\n    }\n    \n    if (hasHalfStar) {\n      stars.push(\n        <svg key=\"half\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-amber-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <defs>\n            <linearGradient id=\"halfFill\">\n              <stop offset=\"50%\" stopColor=\"#F59E0B\" />\n              <stop offset=\"50%\" stopColor=\"transparent\" />\n            </linearGradient>\n          </defs>\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" fill=\"url(#halfFill)\" stroke=\"currentColor\" />\n        </svg>\n      );\n    }\n    \n    const remainingStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    for (let i = 0; i < remainingStars; i++) {\n      stars.push(<Star key={`empty-${i}`} className=\"text-amber-500 h-5 w-5\" />);\n    }\n    \n    return stars;\n  };\n\n  const getCoverGradient = (id: number) => {\n    const colors = [\n      \"from-blue-400 to-blue-600\",\n      \"from-purple-400 to-purple-600\",\n      \"from-green-400 to-green-600\",\n      \"from-red-400 to-red-600\",\n      \"from-indigo-400 to-indigo-600\"\n    ];\n    \n    return `bg-gradient-to-r ${colors[id % colors.length]}`;\n  };\n  \n  // وظيفة معالجة الدفع\n  const handlePayment = async () => {\n    // للمسؤول، نمنح الوصول الفوري دون دفع\n    if (isAdmin) {\n      setHasPaid(true);\n      setIsPaymentModalOpen(false);\n      \n      toast({\n        title: \"صلاحيات المسؤول\",\n        description: \"لديك وصول كامل كمسؤول دون الحاجة للدفع\",\n      });\n      \n      return;\n    }\n    \n    setPaymentProcessing(true);\n    try {\n      // في البيئة الحقيقية، سنرسل طلب إلى الخادم وننتظر استجابة ميسر\n      // هنا نحاكي عملية دفع ناجحة لأغراض العرض التجريبي\n      \n      // محاكاة تأخير شبكة لمدة ثانية\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // إرسال طلب API لإعلام الخادم بأن الدفع قد اكتمل\n      try {\n        const res = await apiRequest(\"POST\", `/api/companies/${companyId}/reveal-contact`, {\n          paymentId: `test-${Date.now()}`,\n          amount: \"100\" // مبلغ افتراضي لكشف معلومات الشركة\n        });\n        \n        if (!res.ok) {\n          throw new Error(\"فشل تسجيل الدفع على الخادم\");\n        }\n        \n        console.log(\"تم تسجيل الدفع بنجاح على الخادم\");\n      } catch (apiError) {\n        console.error(\"خطأ في تسجيل الدفع على الخادم:\", apiError);\n        // حتى لو فشل الطلب، سنستمر في عرض المعلومات\n      }\n      \n      // تحديث حالة الدفع للشركة في التخزين المحلي\n      savePaymentStatus(companyId, true);\n      \n      setHasPaid(true);\n      setPaymentSuccess(true);\n      setPaymentProcessing(false);\n      \n      toast({\n        title: \"تم الدفع بنجاح\",\n        description: \"يمكنك الآن الوصول إلى معلومات التواصل كاملة\",\n      });\n      \n      // إعادة تحميل بيانات الشركة\n      queryClient.invalidateQueries({ queryKey: [`/api/companies/${companyId}`] });\n      \n      // إغلاق نافذة الدفع بعد ثانيتين\n      setTimeout(() => {\n        setIsPaymentModalOpen(false);\n        setPaymentSuccess(false);\n      }, 2000);\n      \n    } catch (error) {\n      setPaymentProcessing(false);\n      toast({\n        title: \"فشلت عملية الدفع\",\n        description: \"يرجى المحاولة مرة أخرى أو التواصل مع الدعم الفني\",\n        variant: \"destructive\",\n      });\n    }\n  };\n  \n  // وظيفة حفظ حالة الدفع في التخزين المحلي\n  const savePaymentStatus = (companyId: number, paid: boolean) => {\n    const now = new Date().toISOString();\n    const savedPayments = localStorage.getItem('companyPayments');\n    let payments: CompanyPaymentStatus[] = [];\n    \n    if (savedPayments) {\n      payments = JSON.parse(savedPayments);\n      // تحديث السجل الموجود أو إضافة سجل جديد\n      const existingIndex = payments.findIndex(p => p.companyId === companyId);\n      if (existingIndex >= 0) {\n        payments[existingIndex] = { ...payments[existingIndex], hasPaid: paid, paymentDate: now };\n      } else {\n        payments.push({ companyId, hasPaid: paid, paymentDate: now });\n      }\n    } else {\n      payments = [{ companyId, hasPaid: paid, paymentDate: now }];\n    }\n    \n    localStorage.setItem('companyPayments', JSON.stringify(payments));\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{company ? `${company.name} | لينكتك` : 'ملف الشركة | لينكتك'}</title>\n        <meta name=\"description\" content={company?.description || 'ملف شركة البرمجة'} />\n      </Helmet>\n\n      <div className=\"container mx-auto px-4 py-8 sm:px-6 lg:px-8\">\n        <div className=\"mb-6\">\n          <Link href=\"/companies\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n            <ArrowLeft className=\"ml-1 h-4 w-4 rtl-flip\" />\n            العودة إلى الشركات\n          </Link>\n          \n          {isAdmin && (\n            <div className=\"mt-2 flex items-center text-primary font-medium\">\n              <Badge variant=\"outline\" className=\"bg-primary/10 border-primary/25 text-primary ml-1\">مشرف</Badge>\n              عرض بصلاحيات المشرف - جميع المعلومات مكشوفة\n            </div>\n          )}\n        </div>\n\n        {isLoading ? (\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n            <Skeleton className=\"w-full h-48\" />\n            <div className=\"relative px-6 md:px-8\">\n              <div className=\"absolute -top-16 right-8\">\n                <Skeleton className=\"w-32 h-32 rounded-xl\" />\n              </div>\n              <div className=\"pt-20 pb-8\">\n                <Skeleton className=\"h-8 w-1/3 mb-2\" />\n                <Skeleton className=\"h-5 w-1/4 mb-6\" />\n                <Skeleton className=\"h-20 w-full mb-6\" />\n                <div className=\"flex flex-wrap gap-2 mb-6\">\n                  <Skeleton className=\"h-7 w-24 rounded\" />\n                  <Skeleton className=\"h-7 w-20 rounded\" />\n                  <Skeleton className=\"h-7 w-28 rounded\" />\n                </div>\n                <div className=\"flex flex-wrap gap-4 mb-6\">\n                  <Skeleton className=\"h-6 w-36\" />\n                  <Skeleton className=\"h-6 w-40\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"bg-white p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n            <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold mb-2\">لا يمكن تحميل بيانات الشركة</h2>\n            <p className=\"text-neutral-600 mb-6\">حدث خطأ أثناء محاولة تحميل بيانات الشركة. يرجى المحاولة مرة أخرى لاحقًا.</p>\n            <Button onClick={() => window.location.reload()} variant=\"outline\">إعادة المحاولة</Button>\n          </div>\n        ) : company ? (\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n            {/* Cover photo */}\n            <div className={`w-full h-48 ${company.coverPhoto ? '' : getCoverGradient(company.id)}`}>\n              {company.coverPhoto && (\n                <img \n                  src={company.coverPhoto} \n                  alt={company.name || ''} \n                  className=\"w-full h-full object-cover\"\n                />\n              )}\n            </div>\n            \n            {/* Company details */}\n            <div className=\"relative px-6 md:px-8\">\n              {/* Logo */}\n              <div className=\"absolute -top-16 right-8\">\n                <div className=\"w-32 h-32 rounded-xl bg-white shadow-md flex items-center justify-center overflow-hidden p-2\">\n                  {company.logo ? (\n                    <img \n                      src={company.logo} \n                      alt={company.name || ''} \n                      className=\"w-full h-full object-cover rounded-lg\"\n                    />\n                  ) : (\n                    <div className={`w-full h-full flex items-center justify-center rounded-lg ${getCoverGradient(company.id)} text-white text-4xl font-bold`}>\n                      {company.name?.charAt(0) || ''}\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"pt-20 pb-8\">\n                {/* Company name and rating */}\n                <div className=\"mb-6 relative\">\n                  <div className={!hasPaid && !isAdmin ? \"blur-sm select-none\" : \"\"}>\n                    <h1 className=\"text-3xl font-bold font-heading mb-2\">{company.name}</h1>\n                    <div className=\"flex items-center\">\n                      <div className=\"flex items-center text-amber-500 ml-2\">\n                        {renderStars(company.rating)}\n                      </div>\n                      <span className=\"text-neutral-600\">\n                        ({company.rating?.toFixed(1)}) - {company.reviewCount} مراجعة\n                      </span>\n                    </div>\n                  </div>\n                  \n                  {/* قفل اسم الشركة */}\n                  {!hasPaid && !isAdmin && (\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <div className=\"bg-white/80 rounded-lg p-2 shadow-sm border flex items-center\">\n                        <Lock className=\"text-primary h-4 w-4 ml-1\" />\n                        <span className=\"text-xs font-medium\">اسم الشركة محمي</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Description */}\n                <div className=\"mb-8\">\n                  <p className=\"text-neutral-700 whitespace-pre-line\">{company.description}</p>\n                </div>\n\n                {/* Admin indicator */}\n                {isAdmin && (\n                  <div className=\"mb-4 p-2 bg-primary/10 border border-primary/20 rounded-lg\">\n                    <div className=\"flex items-center text-primary\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                      </svg>\n                      <span className=\"font-medium\">أنت تتصفح هذه الصفحة بصلاحيات المسؤول - كل المعلومات مرئية</span>\n                    </div>\n                  </div>\n                )}\n\n                {/* Skills */}\n                <div className=\"mb-8\">\n                  <h2 className=\"text-xl font-semibold font-heading mb-3\">التخصصات</h2>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {company.skills.map((skill, index) => (\n                      <Badge key={index} variant=\"outline\" className=\"bg-neutral-100 text-neutral-700 px-3 py-1 rounded-lg\">\n                        {skill}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Contact details */}\n                <div className=\"relative mb-6\">\n                  <div className={`flex flex-col md:flex-row md:items-center gap-4 md:gap-6 ${!hasPaid && !isAdmin ? \"blur-sm select-none\" : \"\"}`}>\n                    {company.location && (\n                      <div className=\"flex items-center text-neutral-700\">\n                        <MapPin className=\"ml-1 h-5 w-5 text-neutral-500\" />\n                        <span>{company.location}</span>\n                      </div>\n                    )}\n                    {company.website && (\n                      <div className=\"flex items-center text-neutral-700\">\n                        <Globe className=\"ml-1 h-5 w-5 text-neutral-500\" />\n                        <a href={company.website.startsWith('http') ? company.website : `https://${company.website}`} \n                           target=\"_blank\" \n                           rel=\"noopener noreferrer\"\n                           className={`text-primary hover:underline ${!hasPaid && !isAdmin ? \"pointer-events-none\" : \"\"}`}>\n                          {company.website.replace(/^https?:\\/\\//, '')}\n                        </a>\n                      </div>\n                    )}\n                    {company.email && (\n                      <div className=\"flex items-center text-neutral-700\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5 text-neutral-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                        </svg>\n                        <span>{company.email}</span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* قفل معلومات الاتصال */}\n                  {!hasPaid && !isAdmin && (\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <div className=\"bg-white/80 rounded-lg p-4 shadow-sm border flex flex-col items-center\">\n                        <Lock className=\"text-primary h-6 w-6 mb-2\" />\n                        <p className=\"text-sm font-medium mb-2\">معلومات التواصل محمية</p>\n                        <Button onClick={() => setIsPaymentModalOpen(true)} size=\"sm\" className=\"flex items-center\">\n                          <CreditCard className=\"ml-1 h-4 w-4\" />\n                          <span>ادفع للوصول</span>\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Contact button */}\n                <div className=\"mt-6\">\n                  <Button \n                    onClick={() => {\n                      // التحقق من تسجيل الدخول باستخدام حالة المصادقة الحالية\n                      if (auth?.isAuthenticated && auth?.user) {\n                        // المستخدم مسجل الدخول، الانتقال إلى صفحة الدردشة\n                        navigate(`/messages?userId=${company.userId}`);\n                      } else {\n                        // المستخدم غير مسجل، توجيهه إلى صفحة تسجيل الدخول\n                        toast({\n                          title: \"تسجيل الدخول مطلوب\",\n                          description: \"يجب تسجيل الدخول أولاً للتواصل مع الشركة\",\n                        });\n                        navigate(\"/auth/login\");\n                      }\n                    }} \n                    className=\"w-full md:w-auto\"\n                  >\n                    <MessageSquare className=\"ml-2 h-4 w-4\" />\n                    تواصل مع الشركة\n                  </Button>\n                </div>\n                \n                {/* نافذة الدفع */}\n                <Dialog open={isPaymentModalOpen} onOpenChange={setIsPaymentModalOpen}>\n                  <DialogContent className=\"sm:max-w-[425px] max-h-[90vh] overflow-y-auto\">\n                    <DialogHeader>\n                      <DialogTitle>ادفع للوصول إلى معلومات الشركة</DialogTitle>\n                      <DialogDescription>\n                        بعد إتمام عملية الدفع، ستتمكن من الاطلاع على معلومات التواصل الخاصة بالشركة.\n                      </DialogDescription>\n                    </DialogHeader>\n                    \n                    <div className=\"py-6\">\n                      {paymentSuccess ? (\n                        <div className=\"text-center\">\n                          <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-green-100 mb-4\">\n                            <CheckCircle2 className=\"h-8 w-8 text-green-600\" />\n                          </div>\n                          <h3 className=\"text-lg font-semibold text-neutral-900 mb-1\">تم الدفع بنجاح</h3>\n                          <p className=\"text-neutral-600 mb-4\">يمكنك الآن الوصول إلى كافة معلومات التواصل</p>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-4\">\n                          <div className=\"bg-neutral-50 p-4 rounded-lg border border-neutral-200\">\n                            <div className=\"flex justify-between items-center mb-2\">\n                              <span className=\"font-medium\">عمولة الوصول</span>\n                              <span className=\"font-bold\">50 ريال</span>\n                            </div>\n                            <p className=\"text-sm text-neutral-600\">تتيح لك هذه العمولة الوصول المباشر إلى معلومات التواصل الخاصة بالشركة والتواصل معها خارج المنصة.</p>\n                          </div>\n                          \n                          <div className=\"border rounded-lg p-4\">\n                            <div className=\"text-center\">\n                              <div className=\"bg-amber-50 p-3 rounded-lg border border-amber-200 mb-4\">\n                                <p className=\"text-sm text-amber-700 flex gap-2 items-center\">\n                                  <Info className=\"h-4 w-4 shrink-0\" />\n                                  <span>هذا نموذج اختباري للدفع. اضغط على \"إتمام الدفع\" لمحاكاة عملية دفع ناجحة.</span>\n                                </p>\n                              </div>\n                              \n                              <div className=\"bg-neutral-50 rounded-lg p-3 border flex items-center mb-4\">\n                                <div className=\"w-12 h-8 bg-[#1A1F71] rounded flex items-center justify-center ml-2\">\n                                  <span className=\"text-white font-bold text-xs\">VISA</span>\n                                </div>\n                                <span className=\"text-neutral-600\">4111 1111 1111 1111</span>\n                              </div>\n                              \n                              <Button \n                                onClick={handlePayment} \n                                disabled={paymentProcessing} \n                                className=\"w-full\"\n                              >\n                                {paymentProcessing ? (\n                                  <div className=\"flex items-center\">\n                                    <svg className=\"animate-spin ml-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                    </svg>\n                                    <span>جاري إتمام الدفع...</span>\n                                  </div>\n                                ) : (\n                                  <span>إتمام الدفع - 50 ريال</span>\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <DialogFooter>\n                      {!paymentSuccess && (\n                        <Button variant=\"outline\" disabled={paymentProcessing} onClick={() => setIsPaymentModalOpen(false)}>\n                          إلغاء\n                        </Button>\n                      )}\n                    </DialogFooter>\n                  </DialogContent>\n                </Dialog>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-white p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n            <AlertCircle className=\"h-12 w-12 text-amber-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold mb-2\">لم يتم العثور على الشركة</h2>\n            <p className=\"text-neutral-600 mb-6\">لا يمكن العثور على الشركة المطلوبة. قد يكون تم حذفها أو أن الرابط غير صحيح.</p>\n            <Link href=\"/companies\">\n              <Button>عرض جميع الشركات</Button>\n            </Link>\n          </div>\n        )}\n\n        {/* Recommended Projects */}\n        {company && (\n          <div className=\"mt-10\">\n            <RecommendedProjects companyId={company.id} limit={3} />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CompanyDetails;\n","size_bytes":25371},"client/src/pages/dashboard/admin.tsx":{"content":"import { useEffect, useState, useRef } from \"react\";\nimport { useAuth } from \"@/App\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link, useLocation } from \"wouter\";\nimport { Loader2, Users, Briefcase, Building2, CheckCircle2, XCircle, Eye, Pencil, Trash2, Settings, Upload, Image, \n  DollarSign, Clock, Award, MessageSquare, FileText, X } from \"lucide-react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { \n  Tabs, \n  TabsContent, \n  TabsList, \n  TabsTrigger \n} from \"@/components/ui/tabs\";\n\ntype AdminDashboardStats = {\n  users: {\n    total: number;\n    entrepreneurs: number;\n    companies: number;\n    admins: number;\n  };\n  projects: {\n    total: number;\n    open: number;\n    closed: number;\n  };\n  companies: {\n    total: number;\n    verified: number;\n  };\n  contact: {\n    totalMessages: number;\n    newMessages: number;\n    readMessages: number;\n    repliedMessages: number;\n    thisWeek: number;\n    thisMonth: number;\n    responseRate: number;\n    unverified: number;\n  };\n};\n\ninterface AdminDashboardProps {\n  auth: any;\n}\n\nexport default function AdminDashboard({ auth }: AdminDashboardProps) {\n  const { user, isAuthenticated } = auth;\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  \n  // تحقق من صلاحية المستخدم لعرض لوحة المسؤول\n  useEffect(() => {\n    console.log(\"فحص حالة المصادقة:\", { isAuthenticated, user });\n    if (!isAuthenticated) {\n      toast({\n        title: \"غير مصرح\",\n        description: \"يجب تسجيل الدخول للوصول إلى هذه الصفحة\",\n        variant: \"destructive\",\n      });\n      navigate(\"/auth/login\");\n      return;\n    }\n    \n    if (user?.role !== \"admin\") {\n      toast({\n        title: \"غير مصرح\",\n        description: \"ليس لديك صلاحية الوصول إلى لوحة المسؤول\",\n        variant: \"destructive\",\n      });\n      navigate(\"/\");\n      return;\n    }\n    \n    console.log(\"المستخدم مصرح للوصول إلى لوحة المسؤول\");\n  }, [isAuthenticated, user, navigate, toast]);\n  \n  // متغيرات لمراقبة المحادثات\n  const [selectedUser1Id, setSelectedUser1Id] = useState<number | null>(null);\n  const [selectedUser2Id, setSelectedUser2Id] = useState<number | null>(null);\n  const [conversation, setConversation] = useState<any[]>([]);\n  const [conversationLoading, setConversationLoading] = useState(false);\n  const [conversationLoaded, setConversationLoaded] = useState(false);\n  const [conversationError, setConversationError] = useState<string | null>(null);\n  \n  // متغيرات لإعدادات الموقع\n  const [headerImageUrl, setHeaderImageUrl] = useState<string>(\"\");\n  const [headerImageFile, setHeaderImageFile] = useState<File | null>(null);\n  const [uploadingImage, setUploadingImage] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  \n  // متغيرات لصورة الجانب\n  const [sideImageUrl, setSideImageUrl] = useState<string>(\"\");\n  const [sideImageFile, setSideImageFile] = useState<File | null>(null);\n  const [uploadingSideImage, setUploadingSideImage] = useState(false);\n  const sideImageInputRef = useRef<HTMLInputElement>(null);\n  \n  // متغيرات لتوثيق الشركات\n  const [processingVerification, setProcessingVerification] = useState(false);\n  const [verificationNotes, setVerificationNotes] = useState(\"\");\n  const [verificationDocuments, setVerificationDocuments] = useState<Array<{\n    name: string;\n    type: string;\n    size: number;\n    content: string;\n  }>>([]);\n\n  // ملاحظة: تم نقل التحقق من صلاحية المستخدم إلى فوق\n\n  // استعلام لجلب جميع المستخدمين\n  const {\n    data: users,\n    isLoading: usersLoading,\n    refetch: refetchUsers,\n  } = useQuery({\n    queryKey: [\"/api/users/all\"],\n    // تمكين الاستعلام فقط عند وجود مصادقة كمسؤول\n    enabled: isAuthenticated && user?.role === \"admin\",\n  });\n\n  // استعلام لجلب كل المشاريع\n  const {\n    data: projects,\n    isLoading: projectsLoading,\n    refetch: refetchProjects,\n  } = useQuery({\n    queryKey: [\"/api/projects\"],\n    enabled: isAuthenticated && user?.role === \"admin\",\n  });\n\n  // استعلام لجلب كل الشركات\n  const {\n    data: companies,\n    isLoading: companiesLoading,\n    refetch: refetchCompanies,\n  } = useQuery({\n    queryKey: [\"/api/companies\"],\n    enabled: isAuthenticated && user?.role === \"admin\",\n  });\n  \n  // استعلام لجلب إعدادات الموقع\n  const {\n    data: siteSettings,\n    isLoading: settingsLoading,\n    refetch: refetchSettings,\n  } = useQuery({\n    queryKey: [\"/api/site-settings\"],\n    enabled: isAuthenticated && user?.role === \"admin\"\n  });\n\n  // جلب إحصائيات التواصل\n  const { data: contactStats, isLoading: contactStatsLoading, error: contactStatsError } = useQuery({\n    queryKey: ['/api/contact-stats'],\n    enabled: isAuthenticated && user?.role === \"admin\",\n    retry: 2\n  });\n  \n  // استعلام لجلب كافة العروض المقدمة على المشاريع\n  const {\n    data: allOffers,\n    isLoading: offersLoading,\n    refetch: refetchOffers,\n  } = useQuery({\n    queryKey: [\"/api/offers/all\"],\n    queryFn: async () => {\n      // جمع العروض من جميع المشاريع\n      if (!projects || projects.length === 0) return [];\n      \n      const token = localStorage.getItem('auth_token');\n      const projectOffersPromises = projects.map(async (project: any) => {\n        const response = await fetch(`/api/projects/${project.id}/offers`, {\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n          },\n        });\n        if (!response.ok) {\n          console.error(`فشل في جلب عروض المشروع ${project.id}`);\n          return [];\n        }\n        const offers = await response.json();\n        // إضافة معلومات المشروع لكل عرض\n        return offers.map((offer: any) => ({\n          ...offer,\n          projectTitle: project.title,\n          projectId: project.id\n        }));\n      });\n      \n      const allProjectOffers = await Promise.all(projectOffersPromises);\n      // دمج كل العروض في مصفوفة واحدة\n      return allProjectOffers.flat();\n    },\n    enabled: isAuthenticated && user?.role === \"admin\" && Boolean(projects?.length)\n  });\n  \n  // استخراج رابط صور الهيدر والجانب عند تحميل البيانات\n  useEffect(() => {\n    if (siteSettings) {\n      const headerImage = siteSettings.find((setting: any) => setting.key === \"header_image\");\n      if (headerImage) {\n        setHeaderImageUrl(headerImage.value);\n      }\n      \n      const sideImage = siteSettings.find((setting: any) => setting.key === \"side_image\");\n      if (sideImage) {\n        setSideImageUrl(sideImage.value);\n      }\n    }\n  }, [siteSettings]);\n  \n  // تعديل باستخدام: useMutation لتحديث إعدادات الموقع\n  const updateSiteSettingMutation = useMutation({\n    mutationFn: async ({ key, value }: { key: string, value: string }) => {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`/api/site-settings/${key}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify({ value }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"فشل في تحديث إعدادات الموقع\");\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"تم التحديث\",\n        description: \"تم تحديث إعدادات الموقع بنجاح\",\n      });\n      refetchSettings();\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"خطأ\",\n        description: error.message || \"حدث خطأ أثناء تحديث إعدادات الموقع\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // حساب الإحصائيات\n  const stats: AdminDashboardStats = {\n    users: {\n      total: users?.length || 0,\n      entrepreneurs: users?.filter((u: any) => u.role === \"entrepreneur\").length || 0,\n      companies: users?.filter((u: any) => u.role === \"company\").length || 0,\n      admins: users?.filter((u: any) => u.role === \"admin\").length || 0,\n    },\n    projects: {\n      total: projects?.length || 0,\n      open: projects?.filter((p: any) => p.status === \"open\").length || 0,\n      closed: projects?.filter((p: any) => p.status === \"closed\").length || 0,\n    },\n    companies: {\n      total: companies?.length || 0,\n      verified: companies?.filter((c: any) => c.verified).length || 0,\n      unverified: companies?.filter((c: any) => !c.verified).length || 0,\n    },\n    contact: contactStats || {\n      totalMessages: 0,\n      newMessages: 0,\n      readMessages: 0,\n      repliedMessages: 0,\n      thisWeek: 0,\n      thisMonth: 0,\n      responseRate: 0\n    }\n  };\n\n  // دالة لمعالجة اختيار صورة الهيدر\n  const handleImageSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setHeaderImageFile(file);\n      \n      // قراءة الملف وتحويله إلى URL مؤقت للعرض\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setHeaderImageUrl(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  // دالة لمعالجة اختيار صورة الجانب\n  const handleSideImageSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setSideImageFile(file);\n      \n      // قراءة الملف وتحويله إلى URL مؤقت للعرض\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setSideImageUrl(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  // دالة لرفع صورة الهيدر وتحديث الإعدادات\n  const handleImageUpload = async () => {\n    if (!headerImageFile) {\n      toast({\n        title: \"خطأ\",\n        description: \"الرجاء اختيار صورة أولاً\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    setUploadingImage(true);\n    \n    try {\n      // تحويل الصورة إلى Base64\n      const reader = new FileReader();\n      \n      reader.onload = async (e) => {\n        const base64String = e.target?.result as string;\n        // استخراج البيانات فقط دون معلومات النوع\n        const base64Data = base64String.split(',')[1];\n        \n        // تحديث إعدادات الموقع باستخدام الـ mutation\n        await updateSiteSettingMutation.mutateAsync({\n          key: \"header_image\",\n          value: base64String,\n        });\n        \n        setUploadingImage(false);\n        toast({\n          title: \"تم رفع الصورة\",\n          description: \"تم تحديث صورة الهيدر بنجاح\",\n        });\n      };\n      \n      reader.onerror = () => {\n        setUploadingImage(false);\n        toast({\n          title: \"خطأ\",\n          description: \"فشل في قراءة الصورة\",\n          variant: \"destructive\",\n        });\n      };\n      \n      reader.readAsDataURL(headerImageFile);\n      \n    } catch (error) {\n      setUploadingImage(false);\n      toast({\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء رفع الصورة\",\n        variant: \"destructive\",\n      });\n      console.error(error);\n    }\n  };\n  \n  // دالة لرفع صورة الجانب وتحديث الإعدادات\n  const handleSideImageUpload = async () => {\n    if (!sideImageFile) {\n      toast({\n        title: \"خطأ\",\n        description: \"الرجاء اختيار صورة أولاً\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    setUploadingSideImage(true);\n    \n    try {\n      // تحويل الصورة إلى Base64\n      const reader = new FileReader();\n      \n      reader.onload = async (e) => {\n        const base64String = e.target?.result as string;\n        \n        // تحديث إعدادات الموقع باستخدام الـ mutation\n        await updateSiteSettingMutation.mutateAsync({\n          key: \"side_image\",\n          value: base64String,\n        });\n        \n        setUploadingSideImage(false);\n        toast({\n          title: \"تم رفع الصورة\",\n          description: \"تم تحديث صورة الجانب بنجاح\",\n        });\n      };\n      \n      reader.onerror = () => {\n        setUploadingSideImage(false);\n        toast({\n          title: \"خطأ\",\n          description: \"فشل في قراءة الصورة\",\n          variant: \"destructive\",\n        });\n      };\n      \n      reader.readAsDataURL(sideImageFile);\n      \n    } catch (error) {\n      setUploadingSideImage(false);\n      toast({\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء رفع الصورة\",\n        variant: \"destructive\",\n      });\n      console.error(error);\n    }\n  };\n  \n  // لتحميل البيانات\n  const isLoading = usersLoading || projectsLoading || companiesLoading || settingsLoading;\n\n  // تحديث حالة مستخدم (تفعيل/تعطيل)\n  const handleToggleUserStatus = async (userId: number, currentStatus: boolean) => {\n    try {\n      // هنا سيتم إضافة طلب API لتحديث حالة المستخدم\n      toast({\n        title: \"تم تحديث الحالة\",\n        description: `تم ${currentStatus ? \"تعطيل\" : \"تفعيل\"} المستخدم بنجاح`,\n      });\n      refetchUsers();\n    } catch (error) {\n      toast({\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء تحديث حالة المستخدم\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // حالة حوار تفاصيل التوثيق\n  const [verificationDialogOpen, setVerificationDialogOpen] = useState(false);\n  const [selectedCompanyForVerification, setSelectedCompanyForVerification] = useState<{\n    id: number,\n    name: string,\n    verified: boolean\n  } | null>(null);\n  \n  // عرض حوار التوثيق\n  const openVerificationDialog = (company: any) => {\n    setSelectedCompanyForVerification({\n      id: company.id,\n      name: company.name,\n      verified: company.verified\n    });\n    setVerificationNotes('');\n    setVerificationDocuments([]);\n    setVerificationDialogOpen(true);\n  };\n  \n  // توثيق أو إلغاء توثيق شركة\n  const handleToggleCompanyVerification = async (companyId: number, currentVerified: boolean) => {\n    // للإلغاء التوثيق، لا نحتاج لحوار\n    if (currentVerified) {\n      await processVerification(companyId, false);\n    } else {\n      // للتوثيق، نعرض حوار تفاصيل التوثيق\n      const company = companies?.find((c: any) => c.id === companyId);\n      if (company) {\n        openVerificationDialog(company);\n      } else {\n        toast({\n          title: \"خطأ\",\n          description: \"لم يتم العثور على الشركة\",\n          variant: \"destructive\",\n        });\n      }\n    }\n  };\n  \n  // معالجة التوثيق مع التفاصيل\n  const processVerification = async (companyId: number, verified: boolean, notes: string = '') => {\n    try {\n      setProcessingVerification(true);\n      \n      // تحضير بيانات التوثيق\n      const verificationData = {\n        verified,\n        verificationNotes: notes,\n        verificationDocuments: verificationDocuments.length > 0 ? verificationDocuments : null\n      };\n      \n      console.log('إرسال طلب توثيق الشركة:', verificationData);\n      \n      const response = await fetch(`/api/companies/${companyId}/verify`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(verificationData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'فشل تحديث حالة توثيق الشركة');\n      }\n\n      toast({\n        title: `تم ${verified ? \"توثيق\" : \"إلغاء توثيق\"} الشركة`,\n        description: `تم ${verified ? \"توثيق\" : \"إلغاء توثيق\"} الشركة بنجاح`,\n      });\n      \n      // إغلاق الحوار وتحديث قائمة الشركات\n      setVerificationDialogOpen(false);\n      setVerificationNotes('');\n      setVerificationDocuments([]);\n      refetchCompanies();\n    } catch (error: any) {\n      toast({\n        title: \"خطأ\",\n        description: error.message || \"حدث خطأ أثناء تحديث حالة توثيق الشركة\",\n        variant: \"destructive\",\n      });\n      console.error('خطأ في عملية التوثيق:', error);\n    } finally {\n      setProcessingVerification(false);\n    }\n  };\n\n  // تغيير حالة المشروع (مفتوح/مغلق)\n  const handleToggleProjectStatus = async (projectId: number, currentStatus: string) => {\n    try {\n      const newStatus = currentStatus === \"open\" ? \"closed\" : \"open\";\n      \n      const response = await fetch(`/api/projects/${projectId}/status`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ status: newStatus }),\n      });\n\n      if (!response.ok) {\n        throw new Error('فشل تحديث حالة المشروع');\n      }\n\n      toast({\n        title: `تم ${newStatus === \"open\" ? \"فتح\" : \"إغلاق\"} المشروع`,\n        description: `تم ${newStatus === \"open\" ? \"فتح\" : \"إغلاق\"} المشروع بنجاح`,\n      });\n      \n      // تحديث قائمة المشاريع\n      refetchProjects();\n    } catch (error) {\n      toast({\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء تحديث حالة المشروع\",\n        variant: \"destructive\",\n      });\n      console.error(error);\n    }\n  };\n\n  // تحميل محادثة بين مستخدمين\n  const loadConversation = async () => {\n    if (!selectedUser1Id || !selectedUser2Id) {\n      setConversationError(\"يرجى اختيار مستخدمين لعرض المحادثة بينهما\");\n      return;\n    }\n\n    setConversationLoading(true);\n    setConversationError(null);\n    console.log(`جاري تحميل المحادثة بين المستخدمين: ${selectedUser1Id} و ${selectedUser2Id}`);\n    \n    try {\n      // استخدام طريقة المسؤول لعرض المحادثات بواسطة معلمات الاستعلام otherUserId\n      const response = await fetch(`/api/messages/conversation/${selectedUser1Id}?otherUserId=${selectedUser2Id}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"فشل تحميل المحادثة\");\n      }\n      \n      const messages = await response.json();\n      console.log(`تم تحميل ${messages.length} رسالة بين المستخدمين`);\n      \n      // إضافة أسماء المستخدمين للعرض\n      const user1 = users?.find((u: any) => u.id === selectedUser1Id);\n      const user2 = users?.find((u: any) => u.id === selectedUser2Id);\n      \n      if (!user1 || !user2) {\n        throw new Error(\"لم يتم العثور على معلومات أحد المستخدمين\");\n      }\n      \n      const enhancedMessages = messages.map((msg: any) => ({\n        ...msg,\n        fromUserName: msg.fromUserId === selectedUser1Id ? user1?.name : user2?.name,\n        toUserName: msg.toUserId === selectedUser1Id ? user1?.name : user2?.name,\n        // تحويل التاريخ إلى كائن Date إذا كان نصيًا\n        createdAt: typeof msg.createdAt === 'string' ? new Date(msg.createdAt) : msg.createdAt\n      }));\n      \n      // ترتيب الرسائل تصاعديًا حسب التاريخ\n      const sortedMessages = enhancedMessages.sort((a: any, b: any) => {\n        return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n      });\n      \n      setConversation(sortedMessages);\n      setConversationLoaded(true);\n    } catch (error) {\n      console.error(\"Error loading conversation:\", error);\n      setConversationError(error instanceof Error ? error.message : \"حدث خطأ أثناء تحميل المحادثة\");\n    } finally {\n      setConversationLoading(false);\n    }\n  };\n\n  // حذف مستخدم\n  const handleDeleteUser = async () => {\n    if (!selectedUserId) return;\n    \n    try {\n      // هنا سيتم إضافة طلب API لحذف المستخدم\n      toast({\n        title: \"تم الحذف\",\n        description: \"تم حذف المستخدم بنجاح\",\n      });\n      setDeleteDialogOpen(false);\n      refetchUsers();\n    } catch (error) {\n      toast({\n        title: \"خطأ\",\n        description: \"حدث خطأ أثناء حذف المستخدم\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // تعطيل التحقق مؤقتاً\n  /*\n  if (!isAuthenticated || user?.role !== \"admin\") {\n    return null;\n  }\n  */\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-6\">\n      <Helmet>\n        <title>لوحة تحكم المسؤول | لينكتك</title>\n      </Helmet>\n      \n      <div className=\"flex flex-col space-y-4\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <h1 className=\"text-3xl font-bold\">لوحة تحكم المسؤول</h1>\n          <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n            <Button onClick={() => navigate(\"/\")} variant=\"outline\">\n              العودة للرئيسية\n            </Button>\n          </div>\n        </div>\n        \n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <div className=\"overflow-x-auto pb-2 -mb-2\">\n            <TabsList className=\"flex lg:grid lg:grid-cols-9 min-w-[600px] w-max lg:w-full\">\n              <TabsTrigger value=\"overview\">نظرة عامة</TabsTrigger>\n              <TabsTrigger value=\"users\">المستخدمون</TabsTrigger>\n              <TabsTrigger value=\"companies\">الشركات</TabsTrigger>\n              <TabsTrigger value=\"projects\">المشاريع</TabsTrigger>\n              <TabsTrigger value=\"offers\">العروض</TabsTrigger>\n              <TabsTrigger value=\"messages\">المحادثات</TabsTrigger>\n              <TabsTrigger value=\"contact\">إدارة التواصل</TabsTrigger>\n              <TabsTrigger value=\"premium-clients\">عملاء التميز</TabsTrigger>\n              <TabsTrigger value=\"blog\">المدونة</TabsTrigger>\n              <TabsTrigger value=\"settings\">الإعدادات</TabsTrigger>\n            </TabsList>\n          </div>\n\n          {/* نظرة عامة - الإحصائيات */}\n          <TabsContent value=\"overview\" className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                  <CardTitle className=\"text-lg font-medium\">المستخدمون</CardTitle>\n                  <Users className=\"h-5 w-5 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold\">{stats.users.total}</div>\n                  <div className=\"text-xs text-muted-foreground mt-1\">\n                    {stats.users.entrepreneurs} رواد أعمال, {stats.users.companies} شركات, {stats.users.admins} مسؤولين\n                  </div>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                  <CardTitle className=\"text-lg font-medium\">المشاريع</CardTitle>\n                  <Briefcase className=\"h-5 w-5 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold\">{stats.projects.total}</div>\n                  <div className=\"text-xs text-muted-foreground mt-1\">\n                    {stats.projects.open} نشطة, {stats.projects.closed} مغلقة\n                  </div>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                  <CardTitle className=\"text-lg font-medium\">الشركات</CardTitle>\n                  <Building2 className=\"h-5 w-5 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold\">{stats.companies.total}</div>\n                  <div className=\"text-xs text-muted-foreground mt-1\">\n                    {stats.companies.verified} موثقة, {stats.companies.unverified} غير موثقة\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            \n            {/* إحصائيات التواصل */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">إجمالي الرسائل</CardTitle>\n                  <MessageSquare className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  {contactStatsLoading ? (\n                    <div className=\"flex items-center\">\n                      <Loader2 className=\"h-4 w-4 animate-spin ml-2\" />\n                      <span className=\"text-sm\">جاري التحميل...</span>\n                    </div>\n                  ) : contactStatsError ? (\n                    <div className=\"text-sm text-red-500\">خطأ في التحميل</div>\n                  ) : (\n                    <>\n                      <div className=\"text-2xl font-bold\">{stats.contact.totalMessages}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">\n                        {stats.contact.thisWeek} رسالة هذا الأسبوع\n                      </div>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">رسائل جديدة</CardTitle>\n                  <div className=\"h-4 w-4 bg-orange-500 rounded-full\" />\n                </CardHeader>\n                <CardContent>\n                  {contactStatsLoading ? (\n                    <div className=\"flex items-center\">\n                      <Loader2 className=\"h-4 w-4 animate-spin ml-2\" />\n                      <span className=\"text-sm\">جاري التحميل...</span>\n                    </div>\n                  ) : contactStatsError ? (\n                    <div className=\"text-sm text-red-500\">يجب تسجيل الدخول كمدير</div>\n                  ) : (\n                    <>\n                      <div className=\"text-2xl font-bold text-orange-600\">{stats.contact.newMessages}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">\n                        تحتاج للمراجعة\n                      </div>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">تم الرد عليها</CardTitle>\n                  <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                </CardHeader>\n                <CardContent>\n                  {contactStatsLoading ? (\n                    <div className=\"flex items-center\">\n                      <Loader2 className=\"h-4 w-4 animate-spin ml-2\" />\n                      <span className=\"text-sm\">جاري التحميل...</span>\n                    </div>\n                  ) : contactStatsError ? (\n                    <div className=\"text-sm text-red-500\">يجب تسجيل الدخول كمدير</div>\n                  ) : (\n                    <>\n                      <div className=\"text-2xl font-bold text-green-600\">{stats.contact.repliedMessages}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">\n                        معدل الاستجابة {stats.contact.responseRate}%\n                      </div>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">هذا الشهر</CardTitle>\n                  <Clock className=\"h-4 w-4 text-blue-600\" />\n                </CardHeader>\n                <CardContent>\n                  {contactStatsLoading ? (\n                    <div className=\"flex items-center\">\n                      <Loader2 className=\"h-4 w-4 animate-spin ml-2\" />\n                      <span className=\"text-sm\">جاري التحميل...</span>\n                    </div>\n                  ) : contactStatsError ? (\n                    <div className=\"text-sm text-red-500\">يجب تسجيل الدخول كمدير</div>\n                  ) : (\n                    <>\n                      <div className=\"text-2xl font-bold text-blue-600\">{stats.contact.thisMonth}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">\n                        {stats.contact.readMessages} مقروءة\n                      </div>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                  <CardTitle>آخر المشاريع</CardTitle>\n                  <Button \n                    variant=\"outline\" \n                    size=\"sm\" \n                    className=\"gap-1\"\n                    onClick={() => setActiveTab(\"contact\")}\n                  >\n                    <MessageSquare className=\"h-4 w-4\" />\n                    رسائل الاتصال\n                  </Button>\n                </CardHeader>\n                <CardContent>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>اسم المشروع</TableHead>\n                        <TableHead>الحالة</TableHead>\n                        <TableHead>رائد الأعمال</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {projects?.slice(0, 5).map((project: any) => (\n                        <TableRow key={project.id}>\n                          <TableCell className=\"font-medium\">{project.title}</TableCell>\n                          <TableCell>\n                            <span className={`inline-flex items-center justify-center px-2 py-1 text-xs font-medium rounded-full ${\n                              project.status === \"open\" ? \"bg-green-100 text-green-800\" : \"bg-gray-100 text-gray-800\"\n                            }`}>\n                              {project.status === \"open\" ? \"مفتوح\" : \"مغلق\"}\n                            </span>\n                          </TableCell>\n                          <TableCell>{project.name}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader>\n                  <CardTitle>آخر الشركات المضافة</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>اسم الشركة</TableHead>\n                        <TableHead>التقييم</TableHead>\n                        <TableHead>الحالة</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {companies?.slice(0, 5).map((company: any) => (\n                        <TableRow key={company.id}>\n                          <TableCell className=\"font-medium\">{company.name}</TableCell>\n                          <TableCell>{company.rating || \"لا يوجد\"}</TableCell>\n                          <TableCell>\n                            {company.verified ? (\n                              <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                            ) : (\n                              <XCircle className=\"h-4 w-4 text-amber-600\" />\n                            )}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* إدارة المستخدمين */}\n          <TabsContent value=\"users\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>إدارة المستخدمين</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>اسم المستخدم</TableHead>\n                      <TableHead>البريد الإلكتروني</TableHead>\n                      <TableHead>الدور</TableHead>\n                      <TableHead>تاريخ التسجيل</TableHead>\n                      <TableHead className=\"text-left\">الإجراءات</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {users?.map((user: any) => (\n                      <TableRow key={user.id}>\n                        <TableCell className=\"font-medium\">{user.name}</TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>\n                          <span className={`inline-flex items-center justify-center px-2 py-1 text-xs font-medium rounded-full ${\n                            user.role === \"admin\" \n                              ? \"bg-purple-100 text-purple-800\" \n                              : user.role === \"company\" \n                                ? \"bg-blue-100 text-blue-800\" \n                                : \"bg-green-100 text-green-800\"\n                          }`}>\n                            {user.role === \"admin\" \n                              ? \"مسؤول\" \n                              : user.role === \"company\" \n                                ? \"شركة\" \n                                : \"رائد أعمال\"}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          {new Date(user.createdAt).toLocaleDateString(\"ar-SA\")}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => navigate(`/users/${user.id}`)}\n                            >\n                              <Eye className=\"h-4 w-4\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => handleToggleUserStatus(user.id, user.active)}\n                            >\n                              {user.active ? (\n                                <XCircle className=\"h-4 w-4 text-red-600\" />\n                              ) : (\n                                <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                              )}\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => {\n                                setSelectedUserId(user.id);\n                                setDeleteDialogOpen(true);\n                              }}\n                            >\n                              <Trash2 className=\"h-4 w-4 text-red-600\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* إدارة الشركات */}\n          <TabsContent value=\"companies\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>إدارة الشركات</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>اسم الشركة</TableHead>\n                      <TableHead>الموقع</TableHead>\n                      <TableHead>التقييم</TableHead>\n                      <TableHead>الحالة</TableHead>\n                      <TableHead className=\"text-left\">الإجراءات</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {companies?.map((company: any) => (\n                      <TableRow key={company.id}>\n                        <TableCell className=\"font-medium\">\n                          {/* جلب اسم الشركة من user أو عرض معرف المستخدم */}\n                          {users?.find((u: any) => u.id === company.userId)?.name || `شركة #${company.id}`}\n                        </TableCell>\n                        <TableCell>{company.location || \"غير محدد\"}</TableCell>\n                        <TableCell>{company.rating || \"لا يوجد\"}</TableCell>\n                        <TableCell>\n                          {company.verified ? (\n                            <span className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full\">\n                              موثقة\n                            </span>\n                          ) : (\n                            <span className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-amber-100 text-amber-800 rounded-full\">\n                              غير موثقة\n                            </span>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => navigate(`/companies/${company.id}`)}\n                            >\n                              <Eye className=\"h-4 w-4\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => handleToggleCompanyVerification(company.id, company.verified)}\n                            >\n                              {company.verified ? (\n                                <XCircle className=\"h-4 w-4 text-red-600\" />\n                              ) : (\n                                <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                              )}\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* إدارة المشاريع */}\n          <TabsContent value=\"projects\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>إدارة المشاريع</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>اسم المشروع</TableHead>\n                      <TableHead>رائد الأعمال</TableHead>\n                      <TableHead>التاريخ</TableHead>\n                      <TableHead>الحالة</TableHead>\n                      <TableHead>العروض</TableHead>\n                      <TableHead className=\"text-left\">الإجراءات</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {projects?.map((project: any) => (\n                      <TableRow key={project.id}>\n                        <TableCell className=\"font-medium\">{project.title}</TableCell>\n                        <TableCell>{project.name}</TableCell>\n                        <TableCell>\n                          {new Date(project.createdAt).toLocaleDateString(\"ar-SA\")}\n                        </TableCell>\n                        <TableCell>\n                          <span className={`inline-flex items-center px-2 py-1 text-xs font-medium rounded-full ${\n                            project.status === \"open\" \n                              ? \"bg-green-100 text-green-800\" \n                              : \"bg-gray-100 text-gray-800\"\n                          }`}>\n                            {project.status === \"open\" ? \"مفتوح\" : \"مغلق\"}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <Button\n                            variant=\"ghost\"\n                            className=\"text-primary hover:text-primary-dark\"\n                            onClick={() => navigate(`/projects/${project.id}#offers`)}\n                          >\n                            عرض العروض\n                          </Button>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => navigate(`/projects/${project.id}`)}\n                            >\n                              <Eye className=\"h-4 w-4\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => navigate(`/dashboard/entrepreneur?tab=projects&action=edit&projectId=${project.id}`)}\n                            >\n                              <Pencil className=\"h-4 w-4\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => handleToggleProjectStatus(project.id, project.status)}\n                            >\n                              {project.status === \"open\" ? (\n                                <XCircle className=\"h-4 w-4 text-red-600\" />\n                              ) : (\n                                <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                              )}\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* قسم إدارة العروض */}\n          <TabsContent value=\"offers\" className=\"space-y-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between\">\n                <CardTitle>إدارة العروض</CardTitle>\n                <Button \n                  size=\"sm\" \n                  onClick={() => refetchOffers()}\n                  disabled={offersLoading}\n                >\n                  {offersLoading ? <Loader2 className=\"h-4 w-4 animate-spin mr-2\" /> : null}\n                  تحديث\n                </Button>\n              </CardHeader>\n              <CardContent>\n                {offersLoading ? (\n                  <div className=\"flex justify-center items-center py-10\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                  </div>\n                ) : allOffers && allOffers.length > 0 ? (\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>المشروع</TableHead>\n                        <TableHead>الشركة</TableHead>\n                        <TableHead>المبلغ المعروض</TableHead>\n                        <TableHead>المدة المتوقعة</TableHead>\n                        <TableHead>تاريخ العرض</TableHead>\n                        <TableHead>الحالة</TableHead>\n                        <TableHead>تفاصيل</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {allOffers.map((offer: any) => (\n                        <TableRow key={offer.id}>\n                          <TableCell className=\"font-medium\">{offer.projectTitle}</TableCell>\n                          <TableCell>{offer.companyName || \"غير معروف\"}</TableCell>\n                          <TableCell>\n                            <div className=\"flex items-center\">\n                              <DollarSign className=\"h-4 w-4 text-green-600 mr-1 rtl:ml-1 rtl:mr-0\" /> \n                              {offer.amount} ريال\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex items-center\">\n                              <Clock className=\"h-4 w-4 text-blue-600 mr-1 rtl:ml-1 rtl:mr-0\" /> \n                              {offer.timeline}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            {new Date(offer.createdAt).toLocaleDateString(\"ar-SA\")}\n                          </TableCell>\n                          <TableCell>\n                            <span className={`inline-flex items-center px-2 py-1 text-xs font-medium rounded-full ${\n                              offer.status === \"pending\" \n                                ? \"bg-amber-100 text-amber-800\" \n                                : offer.status === \"accepted\" \n                                  ? \"bg-green-100 text-green-800\" \n                                  : offer.status === \"rejected\" \n                                    ? \"bg-red-100 text-red-800\" \n                                    : offer.status === \"paid\" \n                                      ? \"bg-blue-100 text-blue-800\" \n                                      : \"bg-gray-100 text-gray-800\"\n                            }`}>\n                              {offer.status === \"pending\" \n                                ? \"قيد الانتظار\" \n                                : offer.status === \"accepted\" \n                                  ? \"مقبول\" \n                                  : offer.status === \"rejected\" \n                                    ? \"مرفوض\" \n                                    : offer.status === \"paid\" \n                                      ? \"مدفوع\" \n                                      : \"غير معروف\"}\n                            </span>\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => navigate(`/projects/${offer.projectId}#offers`)}\n                            >\n                              <Eye className=\"h-4 w-4 mr-1 rtl:ml-1 rtl:mr-0\" />\n                              عرض التفاصيل\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                ) : (\n                  <div className=\"text-center py-10\">\n                    <Award className=\"h-10 w-10 text-muted-foreground mx-auto mb-3\" />\n                    <p className=\"text-muted-foreground\">لا توجد عروض مقدمة حتى الآن</p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* إدارة المحادثات */}\n          <TabsContent value=\"messages\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>مراقبة المحادثات</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"mb-4\">\n                  <h3 className=\"text-sm font-medium mb-1\">اختر المستخدمين لعرض محادثاتهم</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"text-sm font-medium mb-1 block\">المستخدم الأول</label>\n                      <select \n                        className=\"w-full p-2 border border-gray-300 rounded-md\"\n                        value={selectedUser1Id?.toString() || \"\"}\n                        onChange={(e) => setSelectedUser1Id(Number(e.target.value) || null)}\n                      >\n                        <option value=\"\">-- اختر مستخدم --</option>\n                        {users?.map((user: any) => (\n                          <option key={user.id} value={user.id}>\n                            {user.name} ({user.role === \"admin\" ? \"مسؤول\" : user.role === \"company\" ? \"شركة\" : \"رائد أعمال\"})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium mb-1 block\">المستخدم الثاني</label>\n                      <select \n                        className=\"w-full p-2 border border-gray-300 rounded-md\"\n                        value={selectedUser2Id?.toString() || \"\"}\n                        onChange={(e) => setSelectedUser2Id(Number(e.target.value) || null)}\n                      >\n                        <option value=\"\">-- اختر مستخدم --</option>\n                        {users?.map((user: any) => (\n                          <option key={user.id} value={user.id}>\n                            {user.name} ({user.role === \"admin\" ? \"مسؤول\" : user.role === \"company\" ? \"شركة\" : \"رائد أعمال\"})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"mt-2\">\n                    <Button \n                      onClick={() => loadConversation()} \n                      disabled={!selectedUser1Id || !selectedUser2Id || conversationLoading}\n                      className=\"w-full md:w-auto\"\n                    >\n                      {conversationLoading ? (\n                        <>\n                          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                          جاري التحميل...\n                        </>\n                      ) : (\n                        \"عرض المحادثة\"\n                      )}\n                    </Button>\n                  </div>\n                </div>\n\n                {conversationError && (\n                  <div className=\"bg-red-50 text-red-600 p-3 rounded-md mb-4\">\n                    {conversationError}\n                  </div>\n                )}\n\n                {conversation && conversation.length > 0 ? (\n                  <div className=\"border rounded-md\">\n                    <div className=\"p-4 border-b bg-muted/30 flex justify-between items-center\">\n                      <h3 className=\"font-medium\">المحادثة بين {conversation[0]?.fromUserName} و {conversation[0]?.toUserName}</h3>\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\"\n                        onClick={() => {\n                          // تنزيل المحادثة كملف نصي\n                          const conversationText = conversation.map(msg => \n                            `[${new Date(msg.createdAt).toLocaleString('ar-SA')}] ${msg.fromUserName}: ${msg.content}`\n                          ).join('\\n\\n');\n                          \n                          const blob = new Blob([conversationText], { type: 'text/plain;charset=utf-8' });\n                          const url = URL.createObjectURL(blob);\n                          const a = document.createElement('a');\n                          a.href = url;\n                          a.download = `محادثة-${selectedUser1Id}-${selectedUser2Id}-${new Date().toISOString().slice(0, 10)}.txt`;\n                          document.body.appendChild(a);\n                          a.click();\n                          document.body.removeChild(a);\n                          URL.revokeObjectURL(url);\n                          \n                          toast({\n                            title: \"تم التنزيل\",\n                            description: \"تم تنزيل نسخة من المحادثة بنجاح\",\n                          });\n                        }}\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                        </svg>\n                        تنزيل المحادثة\n                      </Button>\n                    </div>\n                    <div className=\"p-4 max-h-[400px] overflow-y-auto space-y-3\">\n                      {conversation.map((message: any) => (\n                        <div\n                          key={message.id}\n                          className={`flex ${message.fromUserId === selectedUser1Id ? 'justify-start' : 'justify-end'}`}\n                        >\n                          <div\n                            className={`max-w-[80%] p-3 rounded-lg ${\n                              message.fromUserId === selectedUser1Id\n                                ? 'bg-muted text-foreground rounded-tr-lg rounded-bl-lg rounded-br-lg'\n                                : 'bg-primary text-primary-foreground rounded-tl-lg rounded-bl-lg rounded-br-lg'\n                            }`}\n                          >\n                            <div className=\"text-sm mb-1 opacity-70\">\n                              {message.fromUserId === selectedUser1Id ? 'من: ' : 'من: '}\n                              <strong>{message.fromUserName}</strong> - {new Date(message.createdAt).toLocaleString('ar-SA')}\n                            </div>\n                            {/* التحقق مما إذا كانت الرسالة محظورة */}\n                            {message.content.includes('[تم حظر هذه الرسالة') ? (\n                              <div className=\"text-red-500 italic\">\n                                {message.content}\n                                <div className=\"mt-1 text-xs bg-red-50 p-1 rounded\">\n                                  <strong>ملاحظة للمسؤول:</strong> تم رصد محتوى محظور في هذه الرسالة\n                                </div>\n                              </div>\n                            ) : (\n                              <div>{message.content}</div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ) : conversationLoaded && !conversationLoading ? (\n                  <div className=\"text-center p-8 text-muted-foreground\">\n                    لا توجد رسائل بين هذين المستخدمين\n                  </div>\n                ) : null}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* إعدادات الموقع */}\n          <TabsContent value=\"settings\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>إعدادات الموقع</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  <div className=\"mb-10\">\n                    <h3 className=\"text-lg font-medium mb-2\">صورة الهيدر</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <div className=\"bg-gray-100 rounded-lg p-4 mb-4 aspect-[3/1] overflow-hidden relative\">\n                          {headerImageUrl ? (\n                            <img \n                              src={headerImageUrl} \n                              alt=\"صورة الهيدر\" \n                              className=\"w-full h-full object-cover rounded\"\n                            />\n                          ) : (\n                            <div className=\"flex items-center justify-center h-full\">\n                              <Image className=\"h-24 w-24 text-muted-foreground opacity-25\" />\n                            </div>\n                          )}\n                        </div>\n                        \n                        <div className=\"flex flex-col space-y-2\">\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleImageSelect}\n                            className=\"hidden\"\n                            ref={fileInputRef}\n                          />\n                          \n                          <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                            <Button\n                              variant=\"outline\"\n                              onClick={() => fileInputRef.current?.click()}\n                              className=\"flex-1\"\n                            >\n                              <Upload className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0\" />\n                              اختيار صورة\n                            </Button>\n                            \n                            <Button\n                              onClick={handleImageUpload}\n                              disabled={!headerImageFile || uploadingImage}\n                              className=\"flex-1\"\n                            >\n                              {uploadingImage ? (\n                                <Loader2 className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0 animate-spin\" />\n                              ) : (\n                                <Image className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0\" />\n                              )}\n                              {uploadingImage ? \"جارِ الرفع...\" : \"تحديث الصورة\"}\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-4\">\n                        <div>\n                          <h4 className=\"text-sm font-medium mb-1\">تعليمات</h4>\n                          <ul className=\"list-disc list-inside text-sm text-muted-foreground\">\n                            <li>يجب أن تكون الصورة بنسبة عرض إلى ارتفاع 3:1 للحصول على أفضل نتيجة</li>\n                            <li>الحد الأقصى لحجم الملف هو 2 ميجابايت</li>\n                            <li>الصيغ المدعومة: JPG، PNG، WebP</li>\n                            <li>استخدم صورة ذات دقة عالية</li>\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"text-sm font-medium mb-1\">معاينة</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            ستظهر الصورة في صفحة الرئيسية للموقع كخلفية لقسم الهيدر.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-lg font-medium mb-2\">صورة الجانب</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <div className=\"bg-gray-100 rounded-lg p-4 mb-4 aspect-[3/2] overflow-hidden relative\">\n                          {sideImageUrl ? (\n                            <img \n                              src={sideImageUrl} \n                              alt=\"صورة الجانب\" \n                              className=\"w-full h-full object-cover rounded\"\n                            />\n                          ) : (\n                            <div className=\"flex items-center justify-center h-full\">\n                              <Image className=\"h-24 w-24 text-muted-foreground opacity-25\" />\n                            </div>\n                          )}\n                        </div>\n                        \n                        <div className=\"flex flex-col space-y-2\">\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleSideImageSelect}\n                            className=\"hidden\"\n                            ref={sideImageInputRef}\n                          />\n                          \n                          <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                            <Button\n                              variant=\"outline\"\n                              onClick={() => sideImageInputRef.current?.click()}\n                              className=\"flex-1\"\n                            >\n                              <Upload className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0\" />\n                              اختيار صورة\n                            </Button>\n                            \n                            <Button\n                              onClick={handleSideImageUpload}\n                              disabled={!sideImageFile || uploadingSideImage}\n                              className=\"flex-1\"\n                            >\n                              {uploadingSideImage ? (\n                                <Loader2 className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0 animate-spin\" />\n                              ) : (\n                                <Image className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0\" />\n                              )}\n                              {uploadingSideImage ? \"جارِ الرفع...\" : \"تحديث الصورة\"}\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-4\">\n                        <div>\n                          <h4 className=\"text-sm font-medium mb-1\">تعليمات</h4>\n                          <ul className=\"list-disc list-inside text-sm text-muted-foreground\">\n                            <li>يفضل أن تكون الصورة بنسبة عرض إلى ارتفاع 3:2 للحصول على أفضل نتيجة</li>\n                            <li>الحد الأقصى لحجم الملف هو 2 ميجابايت</li>\n                            <li>الصيغ المدعومة: JPG، PNG، WebP</li>\n                            <li>استخدم صورة ذات دقة عالية</li>\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"text-sm font-medium mb-1\">معاينة</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            ستظهر الصورة في الجانب الأيمن من قسم الهيدر في الصفحة الرئيسية.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* يمكن إضافة إعدادات أخرى هنا في المستقبل */}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* إدارة التواصل */}\n          <TabsContent value=\"contact\" className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <MessageSquare className=\"h-5 w-5\" />\n                    رسائل التواصل الواردة\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <p className=\"text-muted-foreground text-sm\">\n                      عرض وإدارة جميع رسائل التواصل الواردة من الزوار والعملاء\n                    </p>\n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-medium\">الميزات المتاحة:</h4>\n                      <ul className=\"list-disc list-inside text-sm text-muted-foreground space-y-1\">\n                        <li>عرض جميع الرسائل الواردة</li>\n                        <li>الرد على الرسائل</li>\n                        <li>تغيير حالة الرسالة</li>\n                        <li>إضافة ملاحظات إدارية</li>\n                        <li>حذف الرسائل غير المرغوبة</li>\n                      </ul>\n                    </div>\n                    <Button \n                      className=\"w-full\" \n                      onClick={() => navigate(\"/admin/contact-messages\")}\n                    >\n                      <MessageSquare className=\"h-4 w-4 ml-2\" />\n                      إدارة رسائل التواصل\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Settings className=\"h-5 w-5\" />\n                    إعدادات معلومات الاتصال\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <p className=\"text-muted-foreground text-sm\">\n                      تحديث معلومات الاتصال المعروضة في صفحة \"تواصل معنا\"\n                    </p>\n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-medium\">الإعدادات المتاحة:</h4>\n                      <ul className=\"list-disc list-inside text-sm text-muted-foreground space-y-1\">\n                        <li>تحديث البريد الإلكتروني</li>\n                        <li>تحديث رقم الهاتف</li>\n                        <li>تحديث رقم الواتساب</li>\n                        <li>تحديث العنوان</li>\n                        <li>تحديث ساعات العمل</li>\n                      </ul>\n                    </div>\n                    <Button \n                      className=\"w-full\" \n                      onClick={() => navigate(\"/admin/site-settings\")}\n                    >\n                      <Settings className=\"h-4 w-4 ml-2\" />\n                      إعدادات الاتصال\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>إحصائيات التواصل</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {contactStatsLoading ? (\n                  <div className=\"flex justify-center items-center p-8\">\n                    <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                    <span className=\"mr-2\">جاري تحميل الإحصائيات...</span>\n                  </div>\n                ) : contactStatsError ? (\n                  <div className=\"text-center p-8\">\n                    <p className=\"text-red-500 mb-2\">خطأ في تحميل الإحصائيات</p>\n                    <p className=\"text-sm text-muted-foreground\">تأكد من تسجيل الدخول كمدير</p>\n                  </div>\n                ) : (\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                    <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">\n                        {stats?.contact?.totalMessages || 0}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">إجمالي الرسائل</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-orange-600\">\n                        {stats?.contact?.newMessages || 0}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">الرسائل الجديدة</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">\n                        {stats?.contact?.readMessages || 0}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">الرسائل المقروءة</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-emerald-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-emerald-600\">\n                        {stats?.contact?.repliedMessages || 0}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">الرسائل المجاب عليها</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">\n                        معدل الاستجابة: {stats?.contact?.responseRate || 0}%\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* قسم إدارة المدونة */}\n          {/* عملاء التميز */}\n          <TabsContent value=\"premium-clients\" className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-bold\">إدارة عملاء التميز</h2>\n              <Link href=\"/admin/premium-clients\">\n                <Button variant=\"default\">\n                  الانتقال إلى لوحة إدارة عملاء التميز\n                </Button>\n              </Link>\n            </div>\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n              <p className=\"mb-4\">يمكنك إدارة قائمة عملاء التميز والشركاء الاستراتيجيين لمنصة لينكتك من خلال لوحة الإدارة الخاصة.</p>\n              <ul className=\"list-disc list-inside space-y-2 text-gray-600 dark:text-gray-300 mb-4\">\n                <li>إضافة شركاء استراتيجيين جدد</li>\n                <li>تعديل بيانات الشركاء الحاليين</li>\n                <li>إزالة الشركاء غير النشطين</li>\n                <li>تحديد الشركاء المميزين للعرض بشكل بارز</li>\n              </ul>\n            </div>\n          </TabsContent>\n          \n          <TabsContent value=\"blog\" className=\"space-y-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between\">\n                <CardTitle>إدارة المدونة</CardTitle>\n                <Button className=\"mr-2\" onClick={() => {\n                  // توجيه إلى صفحة إدارة المدونة\n                  navigate(\"/admin/blog-management\");\n                }}>\n                  <FileText className=\"h-4 w-4 ml-2\" />\n                  فتح نظام إدارة المدونة\n                </Button>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"text-center p-6\">\n                    <p className=\"text-muted-foreground\">\n                      اضغط على الزر أعلاه للوصول إلى نظام إدارة المدونة الكامل مع إمكانية إضافة وتحرير المقالات والفئات.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* مربع حوار تأكيد الحذف */}\n      <Dialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n        <DialogContent className=\"max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>تأكيد حذف المستخدم</DialogTitle>\n            <DialogDescription>\n              هل أنت متأكد من رغبتك في حذف هذا المستخدم؟ هذا الإجراء لا يمكن التراجع عنه.\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setDeleteDialogOpen(false)}>\n              إلغاء\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteUser}>\n              حذف\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* حوار تفاصيل التوثيق */}\n      <Dialog open={verificationDialogOpen} onOpenChange={setVerificationDialogOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>توثيق الشركة: {selectedCompanyForVerification?.name}</DialogTitle>\n            <DialogDescription>\n              أدخل ملاحظات التوثيق ومعلومات KYC\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex flex-col space-y-4 py-4\">\n            <div className=\"grid w-full gap-1.5\">\n              <Label htmlFor=\"verification-notes\">ملاحظات التوثيق</Label>\n              <Textarea\n                id=\"verification-notes\"\n                placeholder=\"أدخل أي ملاحظات متعلقة بعملية التوثيق\"\n                value={verificationNotes}\n                onChange={(e) => setVerificationNotes(e.target.value)}\n                className=\"h-24\"\n              />\n            </div>\n            \n            <div className=\"grid w-full gap-1.5\">\n              <Label>معلومات KYC</Label>\n              <div className=\"border rounded-md p-3 bg-muted/50\">\n                <div className=\"flex flex-col space-y-2\">\n                  <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n                    <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">تم التحقق من هوية الشركة</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n                    <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">تم التحقق من السجل التجاري</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n                    <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">تم التحقق من المعلومات الضريبية</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"grid w-full gap-1.5\">\n              <Label>المستندات المرفقة</Label>\n              <div className=\"border rounded-md p-3 bg-muted/50\">\n                <div className=\"flex flex-col space-y-3\">\n                  {verificationDocuments.length > 0 ? (\n                    <div className=\"space-y-2\">\n                      {verificationDocuments.map((doc, index) => (\n                        <div key={index} className=\"flex items-center justify-between bg-background rounded p-2\">\n                          <div className=\"flex items-center\">\n                            <FileText className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0 text-primary\" />\n                            <span className=\"text-sm font-medium truncate max-w-[200px]\">\n                              {doc.name}\n                            </span>\n                          </div>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"icon\"\n                            onClick={() => {\n                              setVerificationDocuments(\n                                verificationDocuments.filter((_, i) => i !== index)\n                              );\n                            }}\n                          >\n                            <X className=\"h-4 w-4 text-muted-foreground\" />\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-muted-foreground\">\n                      لم يتم إضافة أي مستندات بعد\n                    </p>\n                  )}\n                  \n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"file\"\n                      id=\"document-upload\"\n                      className=\"hidden\"\n                      onChange={(e) => {\n                        if (e.target.files && e.target.files[0]) {\n                          const file = e.target.files[0];\n                          // تحويل الملف إلى Base64 لتخزينه\n                          const reader = new FileReader();\n                          reader.onload = () => {\n                            const newDoc = {\n                              name: file.name,\n                              type: file.type,\n                              size: file.size,\n                              content: reader.result as string\n                            };\n                            setVerificationDocuments([...verificationDocuments, newDoc]);\n                          };\n                          reader.readAsDataURL(file);\n                        }\n                        // إعادة تعيين حقل الإدخال\n                        e.target.value = '';\n                      }}\n                      accept=\".pdf,.jpg,.jpeg,.png\"\n                    />\n                    <Button\n                      variant=\"outline\"\n                      type=\"button\"\n                      onClick={() => document.getElementById('document-upload')?.click()}\n                      className=\"w-full\"\n                    >\n                      <Upload className=\"h-4 w-4 mr-2 rtl:ml-2 rtl:mr-0\" />\n                      إضافة مستند\n                    </Button>\n                  </div>\n                </div>\n              </div>\n              <p className=\"text-xs text-muted-foreground mt-1\">\n                يمكنك تحميل مستندات بصيغة PDF أو صور (JPG، PNG) بحجم أقصى 5MB لكل ملف.\n              </p>\n            </div>\n          </div>\n          <DialogFooter className=\"sm:justify-between\">\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              onClick={() => setVerificationDialogOpen(false)}\n            >\n              إلغاء\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={() => {\n                if (selectedCompanyForVerification) {\n                  processVerification(\n                    selectedCompanyForVerification.id,\n                    true,\n                    verificationNotes\n                  );\n                }\n              }}\n              disabled={processingVerification}\n            >\n              تأكيد التوثيق\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}","size_bytes":83096},"client/src/pages/dashboard/company.tsx":{"content":"import { useState, useEffect, useMemo } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/components/ui/tabs\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Link } from \"wouter\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  LayoutDashboard,\n  Building,\n  MessagesSquare,\n  AlertCircle,\n  Edit,\n  Star,\n  MapPin,\n  Globe,\n} from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { getInitials } from \"@/lib/utils\";\n\ntype CompanyProfile = {\n  id: number;\n  userId: number;\n  description: string;\n  logo?: string;\n  coverPhoto?: string;\n  website?: string;\n  location?: string;\n  skills: string[];\n  rating?: number;\n  reviewCount?: number;\n  // معلومات شخصية إضافية\n  fullName?: string;\n  nationalId?: string;\n  phone?: string;\n  birthDate?: string;\n  address?: string;\n};\n\ntype User = {\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n  avatar?: string;\n};\n\ntype CompanyDashboardProps = {\n  auth: {\n    user: User;\n    isAuthenticated: boolean;\n    isCompany: boolean;\n  };\n};\n\n// Profile update form schema\nconst profileSchema = z.object({\n  description: z.string().min(20, \"وصف الشركة مطلوب ويجب أن يكون مفصلاً (20 حرف على الأقل)\"),\n  skills: z.string().min(1, \"التخصصات والمهارات مطلوبة\"),\n  website: z.string().optional(),\n  location: z.string().optional(),\n  email: z.string().email(\"البريد الإلكتروني غير صالح\").min(1, \"البريد الإلكتروني مطلوب\"),\n});\n\n// Personal info form schema\nconst personalInfoSchema = z.object({\n  fullName: z.string().min(3, \"الاسم الكامل مطلوب (3 أحرف على الأقل)\"),\n  nationalId: z.string().min(10, \"رقم الهوية الوطنية مطلوب (10 أرقام على الأقل)\"),\n  phone: z.string().min(10, \"رقم الجوال مطلوب (10 أرقام على الأقل)\"),\n  birthDate: z.string().min(1, \"تاريخ الميلاد مطلوب\"),\n  address: z.string().min(10, \"العنوان الوطني مطلوب (10 أحرف على الأقل)\"),\n});\n\ntype ProfileFormValues = z.infer<typeof profileSchema>;\ntype PersonalInfoFormValues = z.infer<typeof personalInfoSchema>;\n\nconst CompanyDashboard = ({ auth }: CompanyDashboardProps) => {\n  const [location, navigate] = useLocation();\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [isPersonalInfoMode, setIsPersonalInfoMode] = useState(false);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  \n  // قراءة معلمة التبويب من URL عند تحميل الصفحة\n  useEffect(() => {\n    // الحصول على معلمات URL\n    const searchParams = new URLSearchParams(window.location.search);\n    const tabParam = searchParams.get('tab');\n    \n    // تحديث التبويب النشط إذا كان موجودًا في URL\n    if (tabParam && ['dashboard', 'profile', 'messages'].includes(tabParam)) {\n      setActiveTab(tabParam);\n      \n      // إذا كان التبويب هو profile، قد نحتاج لضبط وضع التعديل\n      if (tabParam === 'profile') {\n        setIsEditMode(true);\n      }\n    }\n  }, []);\n\n  // Fetch company profile\n  const {\n    data: profile,\n    isLoading: isLoadingProfile,\n    error: profileError,\n    refetch: refetchProfile\n  } = useQuery<CompanyProfile>({\n    queryKey: [`/api/companies/user/${auth.user?.id}`],\n    enabled: !!auth.user?.id,\n    staleTime: 0, // دائماً اعتبر البيانات قديمة لضمان التحديث عند الطلب\n  });\n\n  // Form for updating the profile\n  const form = useForm<ProfileFormValues>({\n    resolver: zodResolver(profileSchema),\n    defaultValues: {\n      description: \"\",\n      skills: \"\",\n      website: \"\",\n      location: \"\",\n    },\n  });\n  \n  // نموذج البيانات الشخصية\n  const personalInfoForm = useForm<PersonalInfoFormValues>({\n    resolver: zodResolver(personalInfoSchema),\n    defaultValues: {\n      fullName: \"\",\n      nationalId: \"\",\n      phone: \"\",\n      birthDate: \"\",\n      address: \"\",\n    },\n  });\n  \n  // تحديث البيانات الشخصية (نسخة 1)\n  const updatePersonalInfoMutation1 = useMutation({\n    mutationFn: async (data: PersonalInfoFormValues) => {\n      if (!profile?.id) throw new Error(\"Profile ID is missing\");\n      \n      console.log('Sending personal info update to server:', JSON.stringify(data));\n      \n      // في الواقع، سنستخدم نفس نقطة النهاية لتحديث ملف الشركة ولكن نضيف البيانات الشخصية\n      const response = await apiRequest(\"PATCH\", `/api/companies/${profile.id}`, data);\n      const result = await response.json();\n      console.log('Server response:', JSON.stringify(result));\n      return result;\n    },\n    onSuccess: async (data) => {\n      console.log('تم استلام بيانات شخصية محدثة من الخادم:', JSON.stringify(data));\n      \n      // تحديث البيانات في الكاش\n      queryClient.setQueryData([`/api/companies/user/${auth.user?.id}`], (oldData: any) => {\n        return { ...oldData, ...data };\n      });\n      \n      // إعادة تحميل البيانات\n      try {\n        await refetchProfile();\n        console.log('تم إعادة تحميل بيانات الملف بنجاح');\n      } catch (error) {\n        console.error('خطأ في إعادة تحميل بيانات الملف:', error);\n      }\n      \n      toast({\n        title: \"تم تحديث البيانات الشخصية بنجاح\",\n        description: \"تم تحديث بياناتك الشخصية المطلوبة لاتفاقيات عدم الإفصاح بنجاح.\",\n      });\n      \n      setIsPersonalInfoMode(false);\n    },\n    onError: (error) => {\n      toast({\n        title: \"حدث خطأ\",\n        description: \"لم نتمكن من تحديث البيانات الشخصية، يرجى المحاولة مرة أخرى.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Set form values when profile data is loaded\n  useEffect(() => {\n    if (profile) {\n      form.setValue(\"description\", profile.description);\n      form.setValue(\"skills\", profile.skills.join(\", \"));\n      form.setValue(\"website\", profile.website || \"\");\n      form.setValue(\"location\", profile.location || \"\");\n      form.setValue(\"email\", auth.user?.email || \"\");\n      \n      // ضبط قيم البيانات الشخصية إذا كانت موجودة\n      personalInfoForm.setValue(\"fullName\", profile.fullName || \"\");\n      personalInfoForm.setValue(\"nationalId\", profile.nationalId || \"\");\n      personalInfoForm.setValue(\"phone\", profile.phone || \"\");\n      personalInfoForm.setValue(\"birthDate\", profile.birthDate || \"\");\n      personalInfoForm.setValue(\"address\", profile.address || \"\");\n    }\n  }, [profile, form, personalInfoForm, auth.user?.email]);\n\n  // Update profile mutation\n  // تحديث بيانات الملف الشخصي للشركة\n  const updateProfileMutation = useMutation({\n    mutationFn: async (data: ProfileFormValues) => {\n      if (!profile?.id) throw new Error(\"Profile ID is missing\");\n      \n      const skills = data.skills.split(\",\").map((skill) => skill.trim()).filter(skill => skill !== \"\");\n      const { email, ...profileData } = data;\n      const updatedProfileData = {\n        ...profileData,\n        skills,\n      };\n      \n      console.log('Sending update to server:', JSON.stringify(updatedProfileData));\n      console.log('Profile ID:', profile.id);\n      \n      // Update company profile\n      const profileResponse = await apiRequest(\"PATCH\", `/api/companies/${profile.id}`, updatedProfileData);\n      const profileResult = await profileResponse.json();\n      \n      // Update user email if it changed\n      if (email && email !== auth.user?.email) {\n        console.log('Updating user email:', email);\n        const userResponse = await apiRequest(\"PATCH\", `/api/users/${auth.user?.id}`, { email });\n        \n        if (!userResponse.ok) {\n          throw new Error(\"Failed to update email\");\n        }\n        \n        // Refresh auth data to reflect email change\n        await queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n      }\n      \n      console.log('Server response:', JSON.stringify(profileResult));\n      return profileResult;\n    },\n    onSuccess: async (data) => {\n      console.log('تم استلام بيانات محدثة من الخادم:', JSON.stringify(data));\n      \n      // 1. إلغاء صحة البيانات في الكاش لإجبار إعادة التحميل\n      await queryClient.invalidateQueries({\n        queryKey: [`/api/companies/user/${auth.user?.id}`]\n      });\n      \n      // 2. إعادة تحميل البيانات من الخادم مباشرة للتأكد من تحديث الواجهة\n      try {\n        await refetchProfile();\n        console.log('تم إعادة تحميل بيانات الملف بنجاح');\n      } catch (error) {\n        console.error('خطأ في إعادة تحميل بيانات الملف:', error);\n      }\n      \n      toast({\n        title: \"تم تحديث الملف بنجاح\",\n        description: \"تم تحديث بيانات شركتك بنجاح.\",\n      });\n      \n      setIsEditMode(false);\n    },\n    onError: (error) => {\n      toast({\n        title: \"حدث خطأ\",\n        description: \"لم نتمكن من تحديث بيانات الشركة، يرجى المحاولة مرة أخرى.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // تحديث البيانات الشخصية (نسخة محسنة)\n  const updatePersonalInfoMutation2 = useMutation({\n    mutationFn: async (data: PersonalInfoFormValues) => {\n      if (!profile?.id) throw new Error(\"Profile ID is missing\");\n      \n      console.log('Sending personal info update to server:', JSON.stringify(data));\n      console.log('Profile ID:', profile.id);\n      \n      // استخدام نقطة النهاية العادية لتحديث ملف الشركة مع البيانات الشخصية\n      const response = await apiRequest(\"PATCH\", `/api/companies/${profile.id}`, data);\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Server error response:', errorText);\n        throw new Error(`فشل في تحديث البيانات: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log('Server response:', JSON.stringify(result));\n      return result;\n    },\n    onSuccess: async (data) => {\n      console.log('تم استلام بيانات شخصية محدثة من الخادم:', JSON.stringify(data));\n      \n      // إلغاء صحة جميع الاستعلامات المتعلقة بالشركة\n      await queryClient.invalidateQueries({\n        queryKey: [`/api/companies/user/${auth.user?.id}`]\n      });\n      \n      // حذف البيانات من الكاش تماماً لإجبار إعادة التحميل\n      queryClient.removeQueries({\n        queryKey: [`/api/companies/user/${auth.user?.id}`]\n      });\n      \n      // إعادة تحميل البيانات فوراً\n      setTimeout(async () => {\n        try {\n          const freshData = await refetchProfile();\n          console.log('=== تم إعادة تحميل بيانات الملف بعد التحديث ===');\n          console.log('البيانات الجديدة:', freshData);\n          console.log('حالة البيانات الشخصية بعد التحديث:', {\n            fullName: freshData?.data?.fullName,\n            nationalId: freshData?.data?.nationalId,\n            phone: freshData?.data?.phone,\n            birthDate: freshData?.data?.birthDate,\n            address: freshData?.data?.address\n          });\n        } catch (error) {\n          console.error('خطأ في إعادة تحميل بيانات الملف:', error);\n        }\n        \n        // إجبار إعادة تحديث البيانات بدلاً من إعادة تحميل الصفحة\n        setTimeout(async () => {\n          try {\n            await queryClient.invalidateQueries({\n              queryKey: [`/api/companies/user/${auth.user?.id}`],\n              exact: true\n            });\n            await refetchProfile();\n          } catch (error) {\n            console.error('خطأ في إعادة تحميل البيانات:', error);\n            // في حالة فشل إعادة التحميل، نعيد تحميل الصفحة كحل احتياطي\n            window.location.reload();\n          }\n        }, 500);\n      }, 100);\n      \n      toast({\n        title: \"تم تحديث البيانات الشخصية بنجاح\",\n        description: \"سيتم إعادة تحميل الصفحة لعرض التحديثات.\",\n      });\n      \n      setIsPersonalInfoMode(false);\n    },\n    onError: (error) => {\n      toast({\n        title: \"حدث خطأ\",\n        description: \"لم نتمكن من تحديث البيانات الشخصية، يرجى المحاولة مرة أخرى.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ProfileFormValues) => {\n    updateProfileMutation.mutate(data);\n  };\n  \n  const onSubmitPersonalInfo = (data: PersonalInfoFormValues) => {\n    updatePersonalInfoMutation2.mutate(data);\n  };\n\n  // فحص اكتمال البيانات الشخصية بدقة أكبر\n  const isPersonalInfoComplete = useMemo(() => {\n    if (!profile) return false;\n    \n    const requiredFields = ['fullName', 'nationalId', 'phone', 'birthDate', 'address'];\n    const isComplete = requiredFields.every(field => {\n      const value = profile[field as keyof typeof profile];\n      return value && typeof value === 'string' && value.trim() !== \"\";\n    });\n\n    console.log('Personal Info Completion Check:', {\n      profile: !!profile,\n      fullName: profile?.fullName,\n      nationalId: profile?.nationalId,\n      phone: profile?.phone,\n      birthDate: profile?.birthDate,\n      address: profile?.address,\n      isComplete\n    });\n\n    return isComplete;\n  }, [profile]);\n\n  // Redirect if not authenticated or not a company\n  useEffect(() => {\n    if (!auth.isAuthenticated || !auth.isCompany) {\n      navigate(\"/\");\n    }\n  }, [auth, navigate]);\n\n  if (!auth.isAuthenticated || !auth.isCompany) {\n    return null;\n  }\n\n  const renderStars = (rating?: number) => {\n    if (!rating) return null;\n    \n    const stars = [];\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n    \n    for (let i = 0; i < fullStars; i++) {\n      stars.push(<Star key={`full-${i}`} className=\"fill-amber-500 text-amber-500 h-4 w-4\" />);\n    }\n    \n    if (hasHalfStar) {\n      stars.push(\n        <svg key=\"half\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-amber-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <defs>\n            <linearGradient id=\"halfFill\">\n              <stop offset=\"50%\" stopColor=\"#F59E0B\" />\n              <stop offset=\"50%\" stopColor=\"transparent\" />\n            </linearGradient>\n          </defs>\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" fill=\"url(#halfFill)\" stroke=\"currentColor\" />\n        </svg>\n      );\n    }\n    \n    const remainingStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    for (let i = 0; i < remainingStars; i++) {\n      stars.push(<Star key={`empty-${i}`} className=\"text-amber-500 h-4 w-4\" />);\n    }\n    \n    return stars;\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>لوحة التحكم | لينكتك</title>\n        <meta name=\"description\" content=\"لوحة تحكم شركة البرمجة في منصة لينكتك\" />\n      </Helmet>\n\n      <div className=\"container mx-auto px-4 py-8 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold font-heading mb-2\">لوحة التحكم</h1>\n          <p className=\"text-neutral-600\">إدارة ملف شركتك والتواصل مع العملاء</p>\n        </div>\n\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-8\" dir=\"rtl\">\n          <TabsList className=\"bg-neutral-100 p-1 flex-row-reverse\">\n            <TabsTrigger value=\"dashboard\" className=\"flex items-center\">\n              <LayoutDashboard className=\"ml-2 h-4 w-4\" />\n              <span>الرئيسية</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"profile\" className=\"flex items-center\">\n              <Building className=\"ml-2 h-4 w-4\" />\n              <span>ملف الشركة</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"messages\" className=\"flex items-center\">\n              <MessagesSquare className=\"ml-2 h-4 w-4\" />\n              <span>الرسائل</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Dashboard Overview */}\n          <TabsContent value=\"dashboard\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle>التقييم</CardTitle>\n                  <CardDescription>متوسط تقييم الشركة</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  {isLoadingProfile ? (\n                    <Skeleton className=\"h-10 w-10\" />\n                  ) : profile ? (\n                    <div className=\"flex items-center\">\n                      <div className=\"text-3xl font-bold ml-2\">\n                        {profile.rating?.toFixed(1) || \"0.0\"}\n                      </div>\n                      <div className=\"flex text-amber-500\">\n                        {renderStars(profile.rating || 0)}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-3xl font-bold\">0.0</div>\n                  )}\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle>المراجعات</CardTitle>\n                  <CardDescription>عدد مراجعات العملاء</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  {isLoadingProfile ? (\n                    <Skeleton className=\"h-10 w-10\" />\n                  ) : (\n                    <div className=\"text-3xl font-bold\">\n                      {profile?.reviewCount || 0}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle>التخصصات</CardTitle>\n                  <CardDescription>عدد التخصصات</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  {isLoadingProfile ? (\n                    <Skeleton className=\"h-10 w-10\" />\n                  ) : (\n                    <div className=\"text-3xl font-bold\">\n                      {profile?.skills.length || 0}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>ملخص الشركة</CardTitle>\n                <CardDescription>نظرة عامة على ملف شركتك</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {isLoadingProfile ? (\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-4\">\n                      <Skeleton className=\"h-16 w-16 rounded-lg\" />\n                      <div className=\"space-y-2\">\n                        <Skeleton className=\"h-5 w-40\" />\n                        <Skeleton className=\"h-4 w-24\" />\n                      </div>\n                    </div>\n                    <Skeleton className=\"h-20 w-full\" />\n                    <div className=\"flex flex-wrap gap-2\">\n                      <Skeleton className=\"h-6 w-16 rounded-full\" />\n                      <Skeleton className=\"h-6 w-20 rounded-full\" />\n                      <Skeleton className=\"h-6 w-24 rounded-full\" />\n                    </div>\n                  </div>\n                ) : profileError ? (\n                  <div className=\"text-center p-4\">\n                    <AlertCircle className=\"h-8 w-8 text-red-500 mx-auto mb-2\" />\n                    <p>حدث خطأ أثناء تحميل بيانات الشركة</p>\n                    <Button \n                      onClick={() => queryClient.invalidateQueries({queryKey: [`/api/companies/user/${auth.user?.id}`]})}\n                      variant=\"outline\"\n                      className=\"mt-2\"\n                    >\n                      إعادة المحاولة\n                    </Button>\n                  </div>\n                ) : profile ? (\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-4\">\n                      <Avatar className=\"h-16 w-16 rounded-lg\">\n                        <AvatarImage src={auth.user.avatar} />\n                        <AvatarFallback className=\"rounded-lg bg-primary text-primary-foreground\">\n                          {getInitials(auth.user.name)}\n                        </AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <h3 className=\"text-lg font-semibold\">{auth.user.name}</h3>\n                        <div className=\"flex items-center text-sm text-neutral-600\">\n                          <div className=\"flex text-amber-500 ml-1\">\n                            {renderStars(profile.rating || 0)}\n                          </div>\n                          <span>({profile.rating?.toFixed(1) || \"0.0\"}) - {profile.reviewCount} مراجعة</span>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-neutral-700\">{profile.description}</p>\n                    \n                    <div className=\"flex flex-wrap gap-2 mb-4\">\n                      {profile.skills.map((skill, index) => (\n                        <Badge key={index} variant=\"outline\" className=\"bg-neutral-100 text-neutral-700\">\n                          {skill}\n                        </Badge>\n                      ))}\n                    </div>\n                    \n                    <div className=\"flex flex-col md:flex-row gap-4\">\n                      {profile.location && (\n                        <div className=\"flex items-center text-neutral-700\">\n                          <MapPin className=\"ml-1 h-4 w-4 text-neutral-500\" />\n                          <span>{profile.location}</span>\n                        </div>\n                      )}\n                      \n                      {profile.website && (\n                        <div className=\"flex items-center text-neutral-700\">\n                          <Globe className=\"ml-1 h-4 w-4 text-neutral-500\" />\n                          <a \n                            href={profile.website.startsWith('http') ? profile.website : `https://${profile.website}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-primary hover:underline\"\n                          >\n                            {profile.website.replace(/^https?:\\/\\//, '')}\n                          </a>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"pt-4 border-t flex justify-between\">\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\" \n                        onClick={() => {\n                          // استخدام نظام التنقل wouter للحفاظ على حالة التطبيق وتجنب تحميل الصفحة بالكامل\n                          navigate(`/companies/${profile.id}`);\n                        }}\n                      >\n                        عرض الملف العام\n                      </Button>\n                      <Button \n                        size=\"sm\" \n                        onClick={() => {\n                          setActiveTab(\"profile\");\n                          setIsEditMode(true);\n                        }}\n                      >\n                        <Edit className=\"ml-2 h-4 w-4\" />\n                        تعديل الملف\n                      </Button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center p-8\">\n                    <p className=\"text-neutral-600 mb-4\">لم يتم العثور على ملف للشركة</p>\n                    <Button onClick={() => setActiveTab(\"profile\")}>\n                      إنشاء ملف الشركة\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Company Profile Tab */}\n          <TabsContent value=\"profile\" className=\"space-y-6\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <div>\n                  <CardTitle>ملف الشركة</CardTitle>\n                  <CardDescription>إدارة معلومات وتفاصيل شركتك</CardDescription>\n                </div>\n                {profile && !isEditMode && (\n                  <Button variant=\"outline\" onClick={() => setIsEditMode(true)}>\n                    <Edit className=\"ml-2 h-4 w-4\" />\n                    تعديل\n                  </Button>\n                )}\n              </CardHeader>\n              <CardContent className=\"pt-6\">\n                {isLoadingProfile ? (\n                  <div className=\"space-y-4\">\n                    <Skeleton className=\"h-10 w-full\" />\n                    <Skeleton className=\"h-32 w-full\" />\n                    <Skeleton className=\"h-10 w-full\" />\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <Skeleton className=\"h-10 w-full\" />\n                      <Skeleton className=\"h-10 w-full\" />\n                    </div>\n                  </div>\n                ) : profileError ? (\n                  <div className=\"text-center p-4\">\n                    <AlertCircle className=\"h-8 w-8 text-red-500 mx-auto mb-2\" />\n                    <p>حدث خطأ أثناء تحميل بيانات الشركة</p>\n                    <Button \n                      onClick={() => queryClient.invalidateQueries({queryKey: [`/api/companies/user/${auth.user?.id}`]})}\n                      variant=\"outline\"\n                      className=\"mt-2\"\n                    >\n                      إعادة المحاولة\n                    </Button>\n                  </div>\n                ) : isEditMode ? (\n                  <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>البريد الإلكتروني</FormLabel>\n                            <FormControl>\n                              <Input \n                                type=\"email\" \n                                placeholder=\"company@example.com\" \n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"description\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>وصف الشركة</FormLabel>\n                            <FormControl>\n                              <Textarea \n                                placeholder=\"قدم وصفاً مفصلاً عن شركتك وخدماتها وخبراتها\"\n                                {...field}\n                                rows={5}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"skills\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>التخصصات والمهارات</FormLabel>\n                            <FormControl>\n                              <Input\n                                placeholder=\"مثال: تطبيقات الويب، تطبيقات الجوال، الذكاء الاصطناعي (مفصولة بفواصل)\"\n                                {...field}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <FormField\n                          control={form.control}\n                          name=\"website\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>الموقع الإلكتروني</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"example.com\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        \n                        <FormField\n                          control={form.control}\n                          name=\"location\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>الموقع الجغرافي</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"مثال: الرياض، السعودية\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                      \n                      <div className=\"flex justify-end space-x-4 space-x-reverse\">\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          onClick={() => setIsEditMode(false)}\n                        >\n                          إلغاء\n                        </Button>\n                        <Button \n                          type=\"submit\"\n                          disabled={updateProfileMutation.isPending}\n                        >\n                          {updateProfileMutation.isPending ? \"جاري الحفظ...\" : \"حفظ التغييرات\"}\n                        </Button>\n                      </div>\n                    </form>\n                  </Form>\n                ) : profile ? (\n                  <div className=\"space-y-6\">\n                    <div>\n                      <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">وصف الشركة</h3>\n                      <p className=\"text-neutral-700 whitespace-pre-line\">{profile.description}</p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">التخصصات والمهارات</h3>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {profile.skills.map((skill, index) => (\n                          <Badge key={index} variant=\"outline\" className=\"bg-neutral-100 text-neutral-700\">\n                            {skill}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">الموقع الإلكتروني</h3>\n                        {profile.website ? (\n                          <a\n                            href={profile.website.startsWith('http') ? profile.website : `https://${profile.website}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-primary hover:underline\"\n                          >\n                            {profile.website}\n                          </a>\n                        ) : (\n                          <p className=\"text-neutral-500\">غير متوفر</p>\n                        )}\n                      </div>\n                      \n                      <div>\n                        <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">الموقع الجغرافي</h3>\n                        {profile.location ? (\n                          <p className=\"text-neutral-700\">{profile.location}</p>\n                        ) : (\n                          <p className=\"text-neutral-500\">غير متوفر</p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center p-8\">\n                    <p className=\"text-neutral-600 mb-4\">لا يوجد ملف للشركة، قم بإنشاء ملف الشركة الآن</p>\n                    <Button onClick={() => setIsEditMode(true)}>\n                      إنشاء ملف الشركة\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Personal Information for NDA */}\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <div>\n                  <CardTitle>البيانات الشخصية لوثائق عدم الإفصاح</CardTitle>\n                  <CardDescription>معلومات مطلوبة لتوقيع اتفاقيات عدم الإفصاح مع أصحاب المشاريع</CardDescription>\n                </div>\n                {profile && !isPersonalInfoMode && (\n                  <Button variant=\"outline\" onClick={() => setIsPersonalInfoMode(true)}>\n                    <Edit className=\"ml-2 h-4 w-4\" />\n                    تعديل البيانات الشخصية\n                  </Button>\n                )}\n              </CardHeader>\n              <CardContent className=\"pt-6\">\n                {isLoadingProfile ? (\n                  <div className=\"space-y-4\">\n                    <Skeleton className=\"h-10 w-full\" />\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <Skeleton className=\"h-10 w-full\" />\n                      <Skeleton className=\"h-10 w-full\" />\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <Skeleton className=\"h-10 w-full\" />\n                      <Skeleton className=\"h-10 w-full\" />\n                    </div>\n                  </div>\n                ) : profileError ? (\n                  <div className=\"text-center p-4\">\n                    <AlertCircle className=\"h-8 w-8 text-red-500 mx-auto mb-2\" />\n                    <p>حدث خطأ أثناء تحميل البيانات الشخصية</p>\n                    <Button \n                      onClick={() => queryClient.invalidateQueries({queryKey: [`/api/companies/user/${auth.user?.id}`]})}\n                      variant=\"outline\"\n                      className=\"mt-2\"\n                    >\n                      إعادة المحاولة\n                    </Button>\n                  </div>\n                ) : isPersonalInfoMode ? (\n                  <Form {...personalInfoForm}>\n                    <form onSubmit={personalInfoForm.handleSubmit(onSubmitPersonalInfo)} className=\"space-y-6\">\n                      <FormField\n                        control={personalInfoForm.control}\n                        name=\"fullName\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>الاسم الكامل للمفوض بالتوقيع *</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"أدخل الاسم الكامل كما هو في الهوية الوطنية\"\n                                {...field}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <FormField\n                          control={personalInfoForm.control}\n                          name=\"nationalId\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>رقم الهوية الوطنية *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  placeholder=\"1234567890\"\n                                  {...field}\n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        \n                        <FormField\n                          control={personalInfoForm.control}\n                          name=\"phone\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>رقم الجوال *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  placeholder=\"05xxxxxxxx\"\n                                  {...field}\n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <FormField\n                          control={personalInfoForm.control}\n                          name=\"birthDate\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>تاريخ الميلاد *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  type=\"date\"\n                                  {...field}\n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        \n                        <FormField\n                          control={personalInfoForm.control}\n                          name=\"address\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>العنوان الوطني *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  placeholder=\"مثال: الرياض، حي النخيل، شارع الملك فهد\"\n                                  {...field}\n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                      \n                      <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n                        <div className=\"flex items-center\">\n                          <AlertCircle className=\"h-5 w-5 text-amber-600 ml-2\" />\n                          <div className=\"text-sm text-amber-800\">\n                            <p className=\"font-medium mb-1\">ملاحظة مهمة:</p>\n                            <p>هذه البيانات مطلوبة لإنشاء وتوقيع اتفاقيات عدم الإفصاح مع أصحاب المشاريع. تأكد من صحة البيانات لأنها ستظهر في المستندات القانونية.</p>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex justify-end space-x-4 space-x-reverse\">\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          onClick={() => setIsPersonalInfoMode(false)}\n                        >\n                          إلغاء\n                        </Button>\n                        <Button \n                          type=\"submit\"\n                          disabled={updatePersonalInfoMutation2.isPending}\n                        >\n                          {updatePersonalInfoMutation2.isPending ? \"جاري الحفظ...\" : \"حفظ البيانات الشخصية\"}\n                        </Button>\n                      </div>\n                    </form>\n                  </Form>\n                ) : profile ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">الاسم الكامل</h3>\n                        {profile.fullName ? (\n                          <p className=\"text-neutral-700\">{profile.fullName}</p>\n                        ) : (\n                          <p className=\"text-red-500\">غير مكتمل - مطلوب لتوقيع NDA</p>\n                        )}\n                      </div>\n                      \n                      <div>\n                        <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">رقم الهوية الوطنية</h3>\n                        {profile.nationalId ? (\n                          <p className=\"text-neutral-700\">{profile.nationalId}</p>\n                        ) : (\n                          <p className=\"text-red-500\">غير مكتمل - مطلوب لتوقيع NDA</p>\n                        )}\n                      </div>\n                      \n                      <div>\n                        <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">رقم الجوال</h3>\n                        {profile.phone ? (\n                          <p className=\"text-neutral-700\">{profile.phone}</p>\n                        ) : (\n                          <p className=\"text-red-500\">غير مكتمل - مطلوب لتوقيع NDA</p>\n                        )}\n                      </div>\n                      \n                      <div>\n                        <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">تاريخ الميلاد</h3>\n                        {profile.birthDate ? (\n                          <p className=\"text-neutral-700\">{new Date(profile.birthDate).toLocaleDateString('ar-SA')}</p>\n                        ) : (\n                          <p className=\"text-red-500\">غير مكتمل - مطلوب لتوقيع NDA</p>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-sm font-medium text-neutral-500 mb-1\">العنوان الوطني</h3>\n                      {profile.address ? (\n                        <p className=\"text-neutral-700\">{profile.address}</p>\n                      ) : (\n                        <p className=\"text-red-500\">غير مكتمل - مطلوب لتوقيع NDA</p>\n                      )}\n                    </div>\n                    \n                    {!isPersonalInfoComplete && (\n                      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                        <div className=\"flex items-center\">\n                          <AlertCircle className=\"h-5 w-5 text-red-600 ml-2\" />\n                          <div className=\"text-sm text-red-800\">\n                            <p className=\"font-medium mb-1\">بيانات ناقصة:</p>\n                            <p>لا يمكنك توقيع اتفاقيات عدم الإفصاح حتى تكمل جميع البيانات الشخصية المطلوبة.</p>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"text-center p-8\">\n                    <p className=\"text-neutral-600 mb-4\">قم بإكمال البيانات الشخصية المطلوبة لتوقيع اتفاقيات عدم الإفصاح</p>\n                    <Button onClick={() => setIsPersonalInfoMode(true)}>\n                      إضافة البيانات الشخصية\n                    </Button>\n                  </div>\n                )}\n\n                {/* NDA Section - عرض قسم توقيع اتفاقيات عدم الإفصاح عند اكتمال البيانات */}\n                {isPersonalInfoComplete && (\n                  <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n                    <div className=\"flex items-center mb-3\">\n                      <div className=\"h-5 w-5 bg-green-600 rounded-full flex items-center justify-center ml-2\">\n                        <svg className=\"h-3 w-3 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                      </div>\n                      <h3 className=\"text-lg font-medium text-green-800\">البيانات الشخصية مكتملة</h3>\n                    </div>\n                    <p className=\"text-green-700 mb-4\">\n                      تم إكمال جميع البيانات الشخصية المطلوبة. يمكنك الآن توقيع اتفاقيات عدم الإفصاح مع المشاريع.\n                    </p>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center text-sm text-green-600\">\n                        <svg className=\"h-4 w-4 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        متاح للتوقيع على اتفاقيات عدم الإفصاح\n                      </div>\n                      <Button \n                        onClick={() => navigate(\"/projects\")}\n                        className=\"bg-green-600 hover:bg-green-700 text-white\"\n                      >\n                        <svg className=\"h-4 w-4 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                        </svg>\n                        استعراض المشاريع لتوقيع NDA\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Messages Tab */}\n          <TabsContent value=\"messages\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>الرسائل</CardTitle>\n                <CardDescription>تواصل مع العملاء المهتمين بخدماتك</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-center p-8\">\n                  <p className=\"text-neutral-600 mb-4\">لمتابعة محادثاتك مع العملاء وأصحاب المشاريع</p>\n                  <Button \n                    onClick={() => {\n                      // استخدام نظام التنقل wouter للحفاظ على حالة التطبيق وتجنب تحميل الصفحة بالكامل\n                      navigate(\"/messages\");\n                    }}\n                  >\n                    <MessagesSquare className=\"ml-2 h-4 w-4\" />\n                    الانتقال إلى صفحة الرسائل\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default CompanyDashboard;\n","size_bytes":51049},"client/src/pages/dashboard/entrepreneur.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { formatDate } from \"@/lib/dateFormatter\";\n\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/components/ui/tabs\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Link } from \"wouter\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport {\n  LayoutDashboard,\n  FileEdit,\n  MessagesSquare,\n  PlusCircle,\n  X,\n  AlertCircle,\n  Calendar,\n  Clock,\n  Banknote,\n  Loader2,\n  Edit,\n  Trash2,\n} from \"lucide-react\";\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  createdAt: string;\n  requiresNda?: boolean;\n  ndaId?: number;\n};\n\ntype User = {\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n};\n\ntype EntrepreneurDashboardProps = {\n  auth: {\n    user: User;\n    isAuthenticated: boolean;\n    isEntrepreneur: boolean;\n  };\n};\n\n// Create project form schema\nconst projectSchema = z.object({\n  title: z.string()\n    .min(5, \"عنوان المشروع مطلوب ويجب أن يكون أكثر من 5 أحرف\")\n    .max(100, \"عنوان المشروع طويل جداً، الحد الأقصى 100 حرف\"),\n  description: z.string()\n    .min(20, \"وصف المشروع مطلوب ويجب أن يكون مفصلاً (20 حرف على الأقل)\")\n    .max(10000, \"وصف المشروع طويل جداً، الحد الأقصى 10000 حرف\"),\n  budget: z.string()\n    .min(1, \"الميزانية المتوقعة مطلوبة\")\n    .refine((val) => /^[0-9,\\s\\-]+(\\s*ريال)?$/i.test(val), {\n      message: \"يجب أن تحتوي الميزانية على أرقام فقط (يسمح بالفواصل والشرطات والمسافات وكلمة ريال)\"\n    }),\n  duration: z.string()\n    .min(1, \"المدة المتوقعة مطلوبة\")\n    .max(100, \"المدة المتوقعة طويلة جداً\"),\n  skills: z.string().min(1, \"المهارات المطلوبة مطلوبة\"),\n  requiresNda: z.boolean().optional().default(false),\n  status: z.string().optional(),\n});\n\ntype ProjectFormValues = z.infer<typeof projectSchema>;\n\nconst EntrepreneurDashboard = ({ auth }: EntrepreneurDashboardProps) => {\n  const [location, navigate] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editProjectId, setEditProjectId] = useState<number | null>(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState<number | null>(null);\n  // تم إزالة متغير المرفقات وكذلك متغير مرفقات التعديل\n\n  // Check URL query parameters for actions (create or edit project)\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const action = urlParams.get(\"action\");\n    const tab = urlParams.get(\"tab\");\n    \n    // Set the active tab based on URL parameter\n    if (tab) {\n      setActiveTab(tab);\n    }\n    \n    if (action === \"create-project\") {\n      setActiveTab(\"projects\");\n      setIsCreateDialogOpen(true);\n      // Clean up the URL\n      navigate(\"/dashboard/entrepreneur\", { replace: true });\n    } \n    else if (action === \"edit\" && urlParams.get(\"projectId\")) {\n      // Handle project editing\n      const projectId = parseInt(urlParams.get(\"projectId\") || \"0\");\n      if (projectId > 0) {\n        setActiveTab(\"projects\");\n        setEditProjectId(projectId);\n        setIsEditDialogOpen(true);\n        // Clean up the URL after setting up the dialog\n        setTimeout(() => {\n          navigate(\"/dashboard/entrepreneur?tab=projects\", { replace: true });\n        }, 100);\n      }\n    }\n  }, [navigate, location]);\n\n  // Fetch projects for this entrepreneur\n  const {\n    data: projects,\n    isLoading: isLoadingProjects,\n    error: projectsError,\n  } = useQuery<Project[]>({\n    queryKey: [`/api/users/${auth.user?.id}/projects`],\n    enabled: !!auth.user?.id,\n  });\n\n  // Form for creating a new project\n  const form = useForm<ProjectFormValues>({\n    resolver: zodResolver(projectSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      budget: \"\",\n      duration: \"\",\n      skills: \"\",\n      requiresNda: false,\n    },\n  });\n\n  // Create project mutation\n  const createProjectMutation = useMutation({\n    mutationFn: async (data: ProjectFormValues) => {\n      const skills = data.skills.split(\",\").map((skill) => skill.trim());\n      const projectData = {\n        ...data,\n        skills,\n      };\n      \n      const response = await apiRequest(\"POST\", \"/api/projects\", projectData);\n      return response.json();\n    },\n    onSuccess: () => {\n      // Invalidate all project-related queries to refresh the lists\n      queryClient.invalidateQueries({queryKey: [`/api/users/${auth.user?.id}/projects`]});\n      queryClient.invalidateQueries({queryKey: ['/api/projects']});\n      queryClient.invalidateQueries({queryKey: ['/api/recommendations/trending-projects']});\n      \n      toast({\n        title: \"تم إنشاء المشروع بنجاح\",\n        description: \"تم نشر مشروعك وأصبح متاحاً للشركات للاطلاع عليه.\",\n      });\n      form.reset();\n      setIsCreateDialogOpen(false);\n    },\n    onError: (error) => {\n      toast({\n        title: \"حدث خطأ\",\n        description: \"لم نتمكن من إنشاء المشروع، يرجى المحاولة مرة أخرى.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ProjectFormValues) => {\n    createProjectMutation.mutate(data);\n  };\n\n  // Delete project mutation\n  const deleteProjectMutation = useMutation({\n    mutationFn: async (projectId: number) => {\n      const response = await apiRequest(\"DELETE\", `/api/projects/${projectId}`);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to delete project');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      // Invalidate project queries to refresh the lists\n      queryClient.invalidateQueries({queryKey: [`/api/users/${auth.user?.id}/projects`]});\n      queryClient.invalidateQueries({queryKey: ['/api/projects']});\n      \n      toast({\n        title: \"تم حذف المشروع بنجاح\",\n        description: \"تم حذف المشروع من قائمة مشاريعك.\",\n      });\n      setDeleteDialogOpen(false);\n      setProjectToDelete(null);\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"فشل في حذف المشروع\",\n        description: error.message || \"حدث خطأ أثناء محاولة حذف المشروع.\",\n        variant: \"destructive\",\n      });\n      setDeleteDialogOpen(false);\n      setProjectToDelete(null);\n    },\n  });\n\n  const handleDeleteProject = (projectId: number) => {\n    setProjectToDelete(projectId);\n    setDeleteDialogOpen(true);\n  };\n\n  const confirmDelete = () => {\n    if (projectToDelete) {\n      deleteProjectMutation.mutate(projectToDelete);\n    }\n  };\n\n  // If user is not authenticated or not an entrepreneur, redirect to home\n  useEffect(() => {\n    if (!auth.isAuthenticated || !auth.isEntrepreneur) {\n      navigate(\"/\");\n    }\n  }, [auth, navigate]);\n\n  if (!auth.isAuthenticated || !auth.isEntrepreneur) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>لوحة التحكم | لينكتك</title>\n        <meta name=\"description\" content=\"لوحة تحكم رائد الأعمال في منصة لينكتك\" />\n      </Helmet>\n\n      <div className=\"container mx-auto px-4 py-8 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold font-heading mb-2\">لوحة التحكم</h1>\n          <p className=\"text-neutral-600\">إدارة مشاريعك ومتابعة تطورها</p>\n        </div>\n\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-8\">\n          <TabsList className=\"bg-neutral-100 p-1\">\n            <TabsTrigger value=\"dashboard\" className=\"flex items-center\">\n              <LayoutDashboard className=\"ml-2 h-4 w-4\" />\n              <span>الرئيسية</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"projects\" className=\"flex items-center\">\n              <FileEdit className=\"ml-2 h-4 w-4\" />\n              <span>المشاريع</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"messages\" className=\"flex items-center\">\n              <MessagesSquare className=\"ml-2 h-4 w-4\" />\n              <span>الرسائل</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Dashboard Overview */}\n          <TabsContent value=\"dashboard\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle>المشاريع النشطة</CardTitle>\n                  <CardDescription>المشاريع المفتوحة حالياً</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  {isLoadingProjects ? (\n                    <Skeleton className=\"h-10 w-10\" />\n                  ) : (\n                    <div className=\"text-3xl font-bold\">\n                      {projects?.filter(p => p.status === \"open\").length || 0}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle>المشاريع المنجزة</CardTitle>\n                  <CardDescription>المشاريع التي تم إنجازها</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  {isLoadingProjects ? (\n                    <Skeleton className=\"h-10 w-10\" />\n                  ) : (\n                    <div className=\"text-3xl font-bold\">\n                      {projects?.filter(p => p.status !== \"open\").length || 0}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle>مجموع المشاريع</CardTitle>\n                  <CardDescription>إجمالي عدد المشاريع</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  {isLoadingProjects ? (\n                    <Skeleton className=\"h-10 w-10\" />\n                  ) : (\n                    <div className=\"text-3xl font-bold\">\n                      {projects?.length || 0}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>أحدث المشاريع</CardTitle>\n                <CardDescription>آخر المشاريع التي قمت بإضافتها</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {isLoadingProjects ? (\n                  <div className=\"space-y-4\">\n                    <Skeleton className=\"h-16 w-full\" />\n                    <Skeleton className=\"h-16 w-full\" />\n                    <Skeleton className=\"h-16 w-full\" />\n                  </div>\n                ) : projectsError ? (\n                  <div className=\"text-center p-4\">\n                    <AlertCircle className=\"h-8 w-8 text-red-500 mx-auto mb-2\" />\n                    <p>حدث خطأ أثناء تحميل المشاريع</p>\n                  </div>\n                ) : projects && projects.length > 0 ? (\n                  <div className=\"space-y-4\">\n                    {projects.slice(0, 3).map((project) => (\n                      <div key={project.id} className=\"border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <div>\n                            <Link href={`/projects/${project.id}`} className=\"text-lg font-semibold text-primary hover:underline\">\n                              {project.title}\n                            </Link>\n                            <div className=\"flex items-center text-sm text-neutral-600\">\n                              <Clock className=\"ml-1 h-3 w-3\" />\n                              <span>{formatDate(project.createdAt)}</span>\n                            </div>\n                          </div>\n                          <Badge variant={project.status === \"open\" ? \"outline\" : \"secondary\"}>\n                            {project.status === \"open\" ? \"مفتوح\" : \"مغلق\"}\n                          </Badge>\n                        </div>\n                        <p className=\"text-neutral-600 line-clamp-2 text-sm mb-2\">{project.description}</p>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm text-neutral-600 flex items-center\">\n                            <Banknote className=\"ml-1 h-3 w-3 text-[hsl(160,84%,39%)]\" />\n                            {project.budget}\n                          </span>\n                          <span className=\"text-sm text-neutral-600 flex items-center\">\n                            <Calendar className=\"ml-1 h-3 w-3\" />\n                            {project.duration}\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                    <div className=\"text-center\">\n                      <Button variant=\"outline\" asChild>\n                        <Link href=\"#\" onClick={() => setActiveTab(\"projects\")}>\n                          عرض جميع المشاريع\n                        </Link>\n                      </Button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center p-8\">\n                    <p className=\"text-neutral-600 mb-4\">ليس لديك أي مشاريع بعد</p>\n                    <Button onClick={() => {\n                      setActiveTab(\"projects\");\n                      setIsCreateDialogOpen(true);\n                    }}>\n                      <PlusCircle className=\"ml-2 h-4 w-4\" />\n                      إنشاء مشروع جديد\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Projects Tab */}\n          <TabsContent value=\"projects\" className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-2xl font-bold font-heading\">مشاريعي</h2>\n              <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n                <DialogTrigger asChild>\n                  <Button className=\"hover-button-scale transition-all duration-300 hover:shadow-md\">\n                    <PlusCircle className=\"ml-2 h-4 w-4\" />\n                    إضافة مشروع جديد\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>إنشاء مشروع جديد</DialogTitle>\n                    <DialogDescription>\n                      أضف تفاصيل مشروعك ليتمكن المطورون من الاطلاع عليه وتقديم عروضهم.\n                    </DialogDescription>\n                  </DialogHeader>\n                  <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"title\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>عنوان المشروع</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"مثال: تطبيق متجر إلكتروني\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <FormField\n                        control={form.control}\n                        name=\"description\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>وصف المشروع</FormLabel>\n                            <FormControl>\n                              <Textarea \n                                placeholder=\"اشرح تفاصيل مشروعك، متطلباته، وأهدافه\" \n                                {...field} \n                                rows={5}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <FormField\n                          control={form.control}\n                          name=\"budget\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>الميزانية المتوقعة</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"مثال: 5,000 - 10,000 ريال\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        <FormField\n                          control={form.control}\n                          name=\"duration\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>المدة المتوقعة</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"مثال: 2-3 أشهر\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                      <FormField\n                        control={form.control}\n                        name=\"skills\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>المهارات المطلوبة</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"مثال: React, Node.js, تصميم واجهات (مفصولة بفواصل)\" \n                                {...field}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"requiresNda\"\n                        render={({ field }) => (\n                          <FormItem className=\"flex flex-row items-center space-x-2 space-x-reverse space-y-0 rounded-md border p-4\">\n                            <FormControl>\n                              <Checkbox\n                                checked={field.value}\n                                onCheckedChange={field.onChange}\n                              />\n                            </FormControl>\n                            <div className=\"space-y-1 leading-none\">\n                              <FormLabel className=\"text-sm font-medium\">\n                                طلب اتفاقية عدم إفصاح\n                              </FormLabel>\n                              <FormDescription className=\"text-xs\">\n                                سيُطلب من الشركات توقيع اتفاقية عدم إفصاح قبل الاطلاع على تفاصيل المشروع الكاملة\n                              </FormDescription>\n                            </div>\n                          </FormItem>\n                        )}\n                      />\n\n                      {/* تم إزالة قسم المرفقات بناءًا على طلب المستخدم */}\n                      \n                      <div className=\"flex justify-end space-x-4 space-x-reverse\">\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          onClick={() => setIsCreateDialogOpen(false)}\n                        >\n                          إلغاء\n                        </Button>\n                        <Button \n                          type=\"submit\"\n                          disabled={createProjectMutation.isPending}\n                          className=\"hover-button-scale transition-all duration-300 hover:shadow-md\"\n                        >\n                          {createProjectMutation.isPending ? (\n                            <div className=\"flex items-center justify-center\">\n                              <svg className=\"animate-spin ml-2 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                              </svg>\n                              <span>جاري الإنشاء...</span>\n                            </div>\n                          ) : (\n                            <div className=\"flex items-center\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1.5 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                              </svg>\n                              <span>إنشاء المشروع</span>\n                            </div>\n                          )}\n                        </Button>\n                      </div>\n                    </form>\n                  </Form>\n                </DialogContent>\n              </Dialog>\n            </div>\n\n            {/* Edit Project Dialog */}\n            <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n              <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n                <DialogHeader>\n                  <DialogTitle>تعديل المشروع</DialogTitle>\n                  <DialogDescription>\n                    تحديث تفاصيل مشروعك وإعداداته.\n                  </DialogDescription>\n                </DialogHeader>\n                {editProjectId && (\n                  <EditProjectForm\n                    projectId={editProjectId}\n                    onClose={() => {\n                      setIsEditDialogOpen(false);\n                      setEditProjectId(null);\n                    }}\n                    onSuccess={() => {\n                      setIsEditDialogOpen(false);\n                      setEditProjectId(null);\n                    }}\n                  />\n                )}\n              </DialogContent>\n            </Dialog>\n\n            {isLoadingProjects ? (\n              <div className=\"space-y-4\">\n                <Skeleton className=\"h-20 w-full\" />\n                <Skeleton className=\"h-20 w-full\" />\n                <Skeleton className=\"h-20 w-full\" />\n              </div>\n            ) : projectsError ? (\n              <Card>\n                <CardContent className=\"text-center p-8\">\n                  <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n                  <p className=\"text-lg font-semibold mb-2\">حدث خطأ أثناء تحميل المشاريع</p>\n                  <p className=\"text-neutral-600 mb-4\">لم نتمكن من جلب بيانات مشاريعك. يرجى المحاولة مرة أخرى.</p>\n                  <Button \n                    onClick={() => queryClient.invalidateQueries({queryKey: [`/api/users/${auth.user?.id}/projects`]})}\n                    className=\"hover-button-scale transition-all duration-300 pulse-effect\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1.5 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                    إعادة المحاولة\n                  </Button>\n                </CardContent>\n              </Card>\n            ) : projects && projects.length > 0 ? (\n              <div className=\"space-y-4\">\n                {projects.map((project) => (\n                  <Card key={project.id}>\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"space-y-1\">\n                          <div className=\"flex items-center\">\n                            <Link href={`/projects/${project.id}`} className=\"text-lg font-semibold text-primary hover:underline\">\n                              {project.title}\n                            </Link>\n                            {project.highlightStatus && (\n                              <Badge className=\"mr-2 bg-accent text-white\">{project.highlightStatus}</Badge>\n                            )}\n                          </div>\n                          <div className=\"flex items-center text-sm text-neutral-600\">\n                            <Clock className=\"ml-1 h-3 w-3\" />\n                            <span>{formatDate(project.createdAt)}</span>\n                          </div>\n                        </div>\n                        <Badge variant={project.status === \"open\" ? \"outline\" : \"secondary\"}>\n                          {project.status === \"open\" ? \"مفتوح\" : \"مغلق\"}\n                        </Badge>\n                      </div>\n                      <p className=\"text-neutral-600 my-3\">{project.description.substring(0, 150)}...</p>\n                      <div className=\"flex flex-wrap gap-2 mb-3\">\n                        {project.skills.map((skill, index) => (\n                          <Badge key={index} variant=\"outline\" className=\"bg-neutral-100 text-neutral-700\">\n                            {skill}\n                          </Badge>\n                        ))}\n                      </div>\n                      <div className=\"flex justify-between items-center pt-2 border-t\">\n                        <div className=\"flex space-x-4 space-x-reverse\">\n                          <span className=\"text-sm text-neutral-600 flex items-center\">\n                            <Banknote className=\"ml-1 h-4 w-4 text-[hsl(160,84%,39%)]\" />\n                            {project.budget}\n                          </span>\n                          <span className=\"text-sm text-neutral-600 flex items-center\">\n                            <Calendar className=\"ml-1 h-4 w-4\" />\n                            {project.duration}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"flex space-x-2 space-x-reverse mt-3\">\n                        <Button variant=\"outline\" size=\"sm\" asChild>\n                          <Link href={`/projects/${project.id}`}>\n                            عرض التفاصيل\n                          </Link>\n                        </Button>\n                        <Button variant=\"outline\" size=\"sm\" asChild>\n                          <Link href={`/messages?projectId=${project.id}`}>\n                            الرسائل\n                          </Link>\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className=\"border-primary text-primary\"\n                          onClick={() => {\n                            setEditProjectId(project.id);\n                            setIsEditDialogOpen(true);\n                          }}\n                        >\n                          <Edit className=\"ml-1 h-3 w-3\" />\n                          تعديل\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className=\"border-red-500 text-red-500 hover:bg-red-50\"\n                          onClick={() => handleDeleteProject(project.id)}\n                        >\n                          <Trash2 className=\"ml-1 h-3 w-3\" />\n                          حذف\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            ) : (\n              <Card>\n                <CardContent className=\"text-center p-8\">\n                  <p className=\"text-neutral-600 mb-4\">ليس لديك أي مشاريع حالياً</p>\n                  <Button \n                    onClick={() => setIsCreateDialogOpen(true)}\n                    className=\"hover-button-scale transition-all duration-300 hover:shadow-md float-animation\"\n                  >\n                    <PlusCircle className=\"ml-2 h-4 w-4\" />\n                    إنشاء مشروع جديد\n                  </Button>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          {/* Messages Tab */}\n          <TabsContent value=\"messages\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>الرسائل</CardTitle>\n                <CardDescription>تواصل مع شركات البرمجة المهتمة بمشاريعك</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-center p-8\">\n                  <p className=\"text-neutral-600 mb-4\">لمتابعة محادثاتك مع شركات البرمجة</p>\n                  <Button \n                    asChild\n                    className=\"hover-button-scale transition-all duration-300 hover:shadow-md\"\n                  >\n                    <Link href=\"/messages\" className=\"flex items-center\">\n                      <MessagesSquare className=\"ml-2 h-4 w-4\" />\n                      الانتقال إلى صفحة الرسائل\n                    </Link>\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Delete Confirmation Dialog */}\n        <AlertDialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>تأكيد حذف المشروع</AlertDialogTitle>\n              <AlertDialogDescription>\n                هل أنت متأكد من رغبتك في حذف هذا المشروع؟ هذا الإجراء لا يمكن التراجع عنه.\n                <br />\n                <br />\n                <strong>ملاحظة:</strong> لا يمكن حذف المشاريع التي تحتوي على عروض مقبولة أو مكتملة من الشركات.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter className=\"flex justify-end space-x-2 space-x-reverse\">\n              <AlertDialogCancel>إلغاء</AlertDialogCancel>\n              <AlertDialogAction\n                onClick={confirmDelete}\n                disabled={deleteProjectMutation.isPending}\n                className=\"bg-red-600 hover:bg-red-700 text-white\"\n              >\n                {deleteProjectMutation.isPending ? (\n                  <div className=\"flex items-center\">\n                    <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                    جاري الحذف...\n                  </div>\n                ) : (\n                  'حذف المشروع'\n                )}\n              </AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      </div>\n    </>\n  );\n};\n\n// EditProjectForm component for editing projects\ninterface EditProjectFormProps {\n  projectId: number;\n  onClose: () => void;\n  onSuccess: () => void;\n}\n\nconst EditProjectForm = ({ projectId, onClose, onSuccess }: EditProjectFormProps) => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  // تم إزالة متغير مرفقات التعديل\n  const [loadingProject, setLoadingProject] = useState(true);\n  \n  // Edit form\n  const editForm = useForm<ProjectFormValues>({\n    resolver: zodResolver(projectSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      budget: \"\",\n      duration: \"\",\n      skills: \"\",\n      requiresNda: false,\n      status: \"open\" // Default status\n    },\n  });\n  \n  // Fetch the specific project to edit\n  const { data: project } = useQuery<Project>({\n    queryKey: [`/api/projects/${projectId}`],\n    enabled: !!projectId,\n  });\n\n  // Handle project data once it's loaded\n  useEffect(() => {\n    if (project) {\n      setLoadingProject(false);\n      \n      // Set form default values from project data\n      editForm.reset({\n        title: project.title,\n        description: project.description,\n        budget: project.budget,\n        duration: project.duration,\n        skills: project.skills.join(\", \"), // Convert array to comma-separated string\n        requiresNda: project.requiresNda || false,\n        status: project.status\n      });\n    }\n  }, [project, editForm]);\n\n  // Update project mutation\n  const updateProjectMutation = useMutation({\n    mutationFn: async (data: ProjectFormValues) => {\n      const skills = data.skills.split(\",\").map((skill) => skill.trim());\n      const projectData = {\n        ...data,\n        skills,\n      };\n      \n      const response = await apiRequest(\"PATCH\", `/api/projects/${projectId}`, projectData);\n      return response.json();\n    },\n    onSuccess: (updatedProject) => {\n      // Invalidate all relevant caches\n      queryClient.invalidateQueries({ queryKey: [`/api/projects/${projectId}`] });\n      queryClient.invalidateQueries({ queryKey: ['/api/projects'] });\n      queryClient.invalidateQueries({ queryKey: [`/api/users/${updatedProject.userId}/projects`] });\n      \n      toast({\n        title: \"تم تحديث المشروع بنجاح\",\n        description: \"تم حفظ تغييراتك على المشروع.\",\n      });\n      \n      onSuccess();\n    },\n    onError: (error) => {\n      console.error(\"Error updating project:\", error);\n      toast({\n        title: \"حدث خطأ\",\n        description: \"لم نتمكن من تحديث المشروع، يرجى المحاولة مرة أخرى.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleEditSubmit = (data: ProjectFormValues) => {\n    updateProjectMutation.mutate(data);\n  };\n\n  if (loadingProject) {\n    return (\n      <div className=\"py-4 text-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary mx-auto mb-2\" />\n        <p>جاري تحميل بيانات المشروع...</p>\n      </div>\n    );\n  }\n\n  return (\n    <Form {...editForm}>\n      <form onSubmit={editForm.handleSubmit(handleEditSubmit)} className=\"space-y-6\">\n        <FormField\n          control={editForm.control}\n          name=\"title\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>عنوان المشروع</FormLabel>\n              <FormControl>\n                <Input placeholder=\"مثال: تطبيق متجر إلكتروني\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={editForm.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>وصف المشروع</FormLabel>\n              <FormControl>\n                <Textarea \n                  placeholder=\"اشرح تفاصيل مشروعك، متطلباته، وأهدافه\" \n                  {...field} \n                  rows={5}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <FormField\n            control={editForm.control}\n            name=\"budget\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>الميزانية المتوقعة</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"مثال: 5,000 - 10,000 ريال\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={editForm.control}\n            name=\"duration\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>المدة المتوقعة</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"مثال: 2-3 أشهر\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n        <FormField\n          control={editForm.control}\n          name=\"skills\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>المهارات المطلوبة</FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"أدخل المهارات مفصولة بفواصل, مثال: React, Node.js, تصميم واجهات\" \n                  {...field} \n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={editForm.control}\n          name=\"requiresNda\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-center space-x-2 space-x-reverse space-y-0 rounded-md border p-4 mb-4\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel className=\"text-sm font-medium\">\n                  طلب اتفاقية عدم إفصاح\n                </FormLabel>\n                <FormDescription className=\"text-xs\">\n                  سيُطلب من الشركات توقيع اتفاقية عدم إفصاح قبل الاطلاع على تفاصيل المشروع الكاملة\n                </FormDescription>\n              </div>\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={editForm.control}\n          name=\"status\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>حالة المشروع</FormLabel>\n              <div className=\"flex items-center space-x-4 space-x-reverse\">\n                <label className=\"flex items-center space-x-2 space-x-reverse cursor-pointer\">\n                  <input \n                    type=\"radio\" \n                    name=\"status\"\n                    className=\"w-4 h-4 text-primary border-gray-300 focus:ring-primary\"\n                    value=\"open\"\n                    checked={field.value === \"open\"}\n                    onChange={() => field.onChange(\"open\")}\n                  />\n                  <span className=\"mr-2\">مفتوح</span>\n                </label>\n                <label className=\"flex items-center space-x-2 space-x-reverse cursor-pointer\">\n                  <input \n                    type=\"radio\" \n                    name=\"status\"\n                    className=\"w-4 h-4 text-neutral-500 border-gray-300 focus:ring-neutral-500\"\n                    value=\"closed\"\n                    checked={field.value === \"closed\"}\n                    onChange={() => field.onChange(\"closed\")}\n                  />\n                  <span className=\"mr-2\">مغلق</span>\n                </label>\n              </div>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        {/* تم إزالة قسم المرفقات بناءًا على طلب المستخدم */}\n        <div className=\"flex justify-end space-x-2 space-x-reverse\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onClose}\n          >\n            إلغاء\n          </Button>\n          <Button type=\"submit\" disabled={updateProjectMutation.isPending}>\n            {updateProjectMutation.isPending ? (\n              <>\n                <span className=\"ml-2 inline-block animate-spin\">\n                  <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                    ></circle>\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                </span>\n                جاري التحديث...\n              </>\n            ) : (\n              \"تحديث المشروع\"\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default EntrepreneurDashboard;\n","size_bytes":43772},"client/src/pages/projects/[id].tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useParams, Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { getInitials } from \"@/lib/utils\";\nimport { formatDate as formatDateWithHijri } from \"@/lib/dateFormatter\";\nimport { \n  AIProjectAnalysis\n} from \"@/components/recommendations\";\nimport { CreateOfferForm } from \"@/components/offers/CreateOfferForm\";\nimport { OffersList } from \"@/components/offers/OffersList\";\nimport { ProjectExecutionStatus } from \"@/components/projects/ProjectExecutionStatus\";\nimport { NdaSection } from \"@/components/nda/NdaSection\";\nimport { useAuth } from \"@/App\";\nimport SEO from \"@/components/seo/SEO\";\nimport { ProjectStructuredData, WebpageStructuredData } from \"@/components/seo/StructuredData\";\nimport { LazyImage } from \"@/components/ui/lazy-image\";\nimport { \n  Calendar, \n  Clock, \n  Banknote, \n  ArrowLeft, \n  MessageSquare,\n  AlertCircle,\n  Settings,\n  Plus\n} from \"lucide-react\";\n\nimport { UploadedFile } from \"@/components/ui/dropzone-uploader\";\n\ntype Project = {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  userId: number;\n  createdAt: string;\n  username?: string;\n  name?: string;\n  attachments?: UploadedFile[];\n  requiresNda?: boolean;\n  ndaId?: number;\n};\n\nconst ProjectDetails = () => {\n  const { id } = useParams<{ id: string }>();\n  const projectId = parseInt(id);\n  const [_, navigate] = useLocation();\n  const auth = useAuth();\n\n  const {\n    data: project,\n    isLoading,\n    error,\n  } = useQuery<Project>({\n    queryKey: [`/api/projects/${projectId}`],\n    enabled: !!projectId && !isNaN(projectId),\n  });\n  \n  // Check for invalid project ID\n  useEffect(() => {\n    if (!id || isNaN(parseInt(id))) {\n      navigate(\"/not-found\");\n    }\n  }, [id, navigate]);\n  \n  const formatDate = (dateString: string) => {\n    return formatDateWithHijri(dateString);\n  };\n\n  return (\n    <>\n      <SEO\n        title={project ? `${project.title} | لينكتك` : 'تفاصيل المشروع | لينكتك'}\n        description={project ? `${project.description.substring(0, 160)}...` : 'تفاصيل المشروع متاحة للمستخدمين المسجلين فقط'}\n        keywords={project ? project.skills.join(', ') + ', لينكتك, مشاريع تقنية, شركات برمجة' : 'لينكتك, مشاريع تقنية, شركات برمجة'}\n        ogType=\"article\"\n        noindex={true} // تجنب فهرسة صفحات المشاريع للخصوصية\n        nofollow={true}\n      >\n        {project && (\n          <ProjectStructuredData\n            name={project.title}\n            description={project.description}\n            datePublished={project.createdAt}\n            author={project.name || \"صاحب المشروع\"}\n            category={project.skills?.[0]}\n          />\n        )}\n        <WebpageStructuredData\n          name={project ? `${project.title} | لينكتك` : 'تفاصيل المشروع | لينكتك'}\n          description={project ? `${project.description.substring(0, 160)}...` : 'تفاصيل المشروع متاحة للمستخدمين المسجلين فقط'}\n          url={`https://linktech.app/projects/${id}`}\n        />\n      </SEO>\n\n      <div className=\"container mx-auto px-4 py-8 sm:px-6 lg:px-8\">\n        <div className=\"mb-6\">\n          <Link href=\"/projects\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n            <ArrowLeft className=\"ml-1 h-4 w-4 rtl-flip\" />\n            العودة إلى المشاريع\n          </Link>\n        </div>\n        \n        {/* تحقق مما إذا كان المستخدم مسجل دخول */}\n        {!auth.isAuthenticated && (\n          <div className=\"bg-white p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n            <h2 className=\"text-xl font-bold mb-4\">تفاصيل المشروع متاحة للمستخدمين المسجلين فقط</h2>\n            <p className=\"text-neutral-600 mb-6\">لحماية خصوصية المشاريع، يمكن مشاهدة تفاصيل المشاريع المتاحة فقط للمستخدمين المسجلين.</p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Link href=\"/auth/login\">\n                <Button className=\"w-full sm:w-auto\">تسجيل الدخول</Button>\n              </Link>\n              <Link href=\"/auth/register\">\n                <Button variant=\"outline\" className=\"w-full sm:w-auto\">إنشاء حساب جديد</Button>\n              </Link>\n            </div>\n            <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n              <h3 className=\"font-semibold text-primary mb-2\">لماذا يجب عليك التسجيل؟</h3>\n              <ul className=\"text-sm text-neutral-700 text-right list-disc list-inside space-y-1\">\n                <li>الاطلاع على تفاصيل جميع المشاريع المتاحة</li>\n                <li>التواصل مع أصحاب المشاريع</li>\n                <li>تقديم عروض على المشاريع التي تناسب خبراتك</li>\n                <li>متابعة حالة العروض المقدمة منك</li>\n              </ul>\n            </div>\n          </div>\n        )}\n\n        {auth.isAuthenticated && \n          isLoading ? (\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n            <div className=\"p-6 md:p-8\">\n              <Skeleton className=\"h-10 w-3/4 mb-6\" />\n              <div className=\"flex flex-wrap gap-2 mb-6\">\n                <Skeleton className=\"h-6 w-20 rounded-full\" />\n                <Skeleton className=\"h-6 w-24 rounded-full\" />\n              </div>\n              <Skeleton className=\"h-32 w-full mb-6\" />\n              <div className=\"flex flex-wrap gap-2 mb-6\">\n                <Skeleton className=\"h-7 w-24 rounded\" />\n                <Skeleton className=\"h-7 w-20 rounded\" />\n                <Skeleton className=\"h-7 w-28 rounded\" />\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                <Skeleton className=\"h-16 w-full\" />\n                <Skeleton className=\"h-16 w-full\" />\n                <Skeleton className=\"h-16 w-full\" />\n              </div>\n              <div className=\"border-t border-neutral-200 pt-6\">\n                <Skeleton className=\"h-14 w-full md:w-1/3\" />\n              </div>\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"bg-white p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n            <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold mb-2\">لا يمكن تحميل تفاصيل المشروع</h2>\n            <p className=\"text-neutral-600 mb-6\">حدث خطأ أثناء محاولة تحميل بيانات المشروع. يرجى المحاولة مرة أخرى لاحقًا.</p>\n            <Button \n              onClick={() => window.location.reload()} \n              variant=\"outline\" \n              className=\"hover-button-scale transition-all duration-300 pulse-effect\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1.5 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n              </svg>\n              إعادة المحاولة\n            </Button>\n          </div>\n        ) : project ? (\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n            <div className=\"p-6 md:p-8\">\n              {/* Header */}\n              <div className=\"flex flex-col md:flex-row md:items-start md:justify-between mb-6\">\n                <div>\n                  <h1 className=\"text-3xl font-bold font-heading mb-2\">{project.title}</h1>\n                  <div className=\"flex flex-wrap items-center gap-3\">\n                    {project.highlightStatus && (\n                      <Badge className=\"bg-accent text-white font-medium\">\n                        {project.highlightStatus}\n                      </Badge>\n                    )}\n                    <span className=\"text-neutral-600 flex items-center text-sm\">\n                      <Clock className=\"inline-block ml-1 h-4 w-4\" />\n                      نُشر {formatDate(project.createdAt)}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"mt-4 md:mt-0\">\n                  {auth.isAuthenticated && auth.user?.id !== project.userId && (\n                    <Link href={`/messages?userId=${project.userId}&projectId=${project.id}`}>\n                      <Button className=\"hover-button-scale transition-all duration-300 hover:shadow-md\">\n                        <MessageSquare className=\"ml-2 h-4 w-4 rtl-flip transition-transform group-hover:scale-110\" />\n                        <span className=\"relative\">\n                          تواصل مع صاحب المشروع\n                          <span className=\"absolute -bottom-1 right-0 w-full h-0.5 bg-white/70 transform scale-x-0 transition-transform duration-300 origin-right group-hover:scale-x-100\"></span>\n                        </span>\n                      </Button>\n                    </Link>\n                  )}\n                  {auth.isAuthenticated && auth.user?.id === project.userId && auth.user?.role === \"entrepreneur\" && (\n                    <Link href={`/dashboard/entrepreneur?tab=projects&action=edit&projectId=${project.id}`}>\n                      <Button className=\"hover-button-scale transition-all duration-300 hover:shadow-md\">\n                        <Settings className=\"ml-2 h-4 w-4 rtl-flip transition-transform group-hover:scale-110\" />\n                        <span className=\"relative\">\n                          تعديل هذا المشروع\n                          <span className=\"absolute -bottom-1 right-0 w-full h-0.5 bg-white/70 transform scale-x-0 transition-transform duration-300 origin-right group-hover:scale-x-100\"></span>\n                        </span>\n                      </Button>\n                    </Link>\n                  )}\n                </div>\n              </div>\n\n              {/* Description */}\n              <div className=\"mb-8\">\n                <h2 className=\"text-xl font-semibold font-heading mb-3\">تفاصيل المشروع</h2>\n                <p className=\"text-neutral-700 whitespace-pre-line\">{project.description}</p>\n              </div>\n\n              {/* Skills */}\n              <div className=\"mb-8\">\n                <h2 className=\"text-xl font-semibold font-heading mb-3\">المهارات المطلوبة</h2>\n                <div className=\"flex flex-wrap gap-2\">\n                  {project.skills.map((skill, index) => (\n                    <Badge \n                      key={index} \n                      variant=\"outline\" \n                      className=\"bg-neutral-100 text-neutral-700 px-3 py-1 rounded-lg transition-all duration-300 hover:bg-neutral-200 hover:shadow-sm hover:translate-y-[-2px] badge-pulse\"\n                    >\n                      {skill}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n              \n              {/* NDA Section */}\n              {auth.isAuthenticated && (\n                <NdaSection\n                  projectId={project.id}\n                  projectTitle={project.title}\n                  requiresNda={project.requiresNda}\n                  ndaId={project.ndaId}\n                  userId={project.userId}\n                  currentUserId={auth.user?.id}\n                  userRole={auth.user?.role}\n                />\n              )}\n              \n              {/* Project Attachments */}\n              {project.attachments && project.attachments.length > 0 && (\n                <div className=\"mb-8\">\n                  <h2 className=\"text-xl font-semibold font-heading mb-3\">مرفقات المشروع</h2>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                    {project.attachments.map((attachment) => (\n                      <div \n                        key={attachment.id}\n                        className=\"border border-neutral-200 rounded-lg overflow-hidden bg-neutral-50 flex flex-col transform transition-all duration-300 hover:shadow-md hover:translate-y-[-3px]\"\n                      >\n                        {attachment.type.startsWith('image/') ? (\n                          <div className=\"h-40 overflow-hidden bg-white\">\n                            <LazyImage \n                              src={attachment.url} \n                              alt={attachment.name} \n                              className=\"w-full h-full object-contain\"\n                              loadingClassname=\"animate-pulse bg-neutral-200 w-full h-full\"\n                            />\n                          </div>\n                        ) : (\n                          <div className=\"h-40 flex items-center justify-center bg-neutral-100\">\n                            <div className=\"text-center p-4\">\n                              <div className=\"w-16 h-16 mx-auto bg-white rounded-full flex items-center justify-center shadow-sm mb-2\">\n                                {attachment.type.includes('pdf') ? (\n                                  <span className=\"text-red-500 text-xs font-semibold\">PDF</span>\n                                ) : attachment.type.includes('word') || attachment.type.includes('doc') ? (\n                                  <span className=\"text-blue-500 text-xs font-semibold\">DOC</span>\n                                ) : attachment.type.includes('sheet') || attachment.type.includes('xls') ? (\n                                  <span className=\"text-green-500 text-xs font-semibold\">XLS</span>\n                                ) : (\n                                  <span className=\"text-neutral-500 text-xs font-semibold\">FILE</span>\n                                )}\n                              </div>\n                              <span className=\"text-sm text-neutral-700 line-clamp-1\">{attachment.name}</span>\n                            </div>\n                          </div>\n                        )}\n                        <div className=\"p-3 bg-white flex justify-between items-center mt-auto\">\n                          <span className=\"text-xs text-neutral-500\">\n                            {(attachment.size / 1024).toFixed(0)} كيلوبايت\n                          </span>\n                          <a \n                            href={attachment.url} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"text-xs text-primary hover:text-primary-dark font-medium hover:underline\"\n                          >\n                            عرض الملف\n                          </a>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Info cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n                <div className=\"bg-neutral-50 p-4 rounded-lg border border-neutral-200\">\n                  <h3 className=\"text-neutral-600 text-sm mb-1\">الميزانية المتوقعة</h3>\n                  <div className=\"flex items-center\">\n                    <Banknote className=\"text-[hsl(160,84%,39%)] h-5 w-5 ml-2\" />\n                    <span className=\"text-lg font-semibold\">{project.budget}</span>\n                  </div>\n                </div>\n                <div className=\"bg-neutral-50 p-4 rounded-lg border border-neutral-200\">\n                  <h3 className=\"text-neutral-600 text-sm mb-1\">المدة المتوقعة</h3>\n                  <div className=\"flex items-center\">\n                    <Calendar className=\"text-primary h-5 w-5 ml-2\" />\n                    <span className=\"text-lg font-semibold\">{project.duration}</span>\n                  </div>\n                </div>\n                <div className=\"bg-neutral-50 p-4 rounded-lg border border-neutral-200\">\n                  <h3 className=\"text-neutral-600 text-sm mb-1\">حالة المشروع</h3>\n                  <div className=\"flex items-center\">\n                    <Badge className={\n                      project.status === \"open\" \n                        ? \"bg-green-100 text-green-800 hover:bg-green-100\" \n                        : \"bg-neutral-100 text-neutral-800 hover:bg-neutral-100\"\n                    }>\n                      {project.status === \"open\" ? \"مفتوح\" : \"مغلق\"}\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n\n              {/* AI Project Analysis - visible only for project owners and admins */}\n              {auth.isAuthenticated && (auth.user?.id === project.userId || auth.user?.role === \"admin\") && (\n                <div className=\"mb-8\">\n                  <AIProjectAnalysis projectId={project.id} />\n                </div>\n              )}\n\n            {/* Owner info */}\n              <div className=\"border-t border-neutral-200 pt-6\">\n                <div className=\"flex items-center\">\n                  <Avatar className=\"h-12 w-12 ml-3\">\n                    <AvatarImage src=\"\" />\n                    <AvatarFallback>\n                      {auth.isAuthenticated && auth.user?.role === \"company\" \n                        ? project.name?.charAt(0) || \"م\"\n                        : getInitials(project.name || \"\")}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div>\n                    {auth.isAuthenticated && auth.user?.role === \"company\" ? (\n                      <div>\n                        <h3 className=\"font-semibold blur-text\">\n                          {project.name?.substring(0, 1)}****{\" \"}\n                          <span className=\"text-xs bg-amber-100 text-amber-700 rounded px-2 py-0.5\">\n                            تظهر البيانات بعد قبول العرض\n                          </span>\n                        </h3>\n                        <p className=\"text-sm text-neutral-600\">صاحب المشروع</p>\n                      </div>\n                    ) : (\n                      <div>\n                        <h3 className=\"font-semibold\">{project.name}</h3>\n                        <p className=\"text-sm text-neutral-600\">صاحب المشروع</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-white p-8 rounded-xl shadow-sm border border-neutral-200 text-center\">\n            <AlertCircle className=\"h-12 w-12 text-amber-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold mb-2\">لم يتم العثور على المشروع</h2>\n            <p className=\"text-neutral-600 mb-6\">لا يمكن العثور على المشروع المطلوب. قد يكون تم حذفه أو أن الرابط غير صحيح.</p>\n            <Link href=\"/projects\">\n              <Button>عرض المشاريع المتاحة</Button>\n            </Link>\n          </div>\n        )}\n\n        {/* Project Offers Section */}\n        {project && (\n          <div className=\"mt-10 mb-10\">\n            {/* Show offers only if project is open */}\n            {project.status === \"open\" && (\n              <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n                <div className=\"p-6 md:p-8\">\n                  <h2 className=\"text-2xl font-bold font-heading mb-6\">عروض الشركات</h2>\n                  \n                  {/* For companies: Show the form to submit a new offer */}\n                  {auth.isAuthenticated && auth.user?.role === \"company\" && auth.user?.id !== project.userId && (\n                    <div className=\"mb-8\">\n                      <div className=\"flex justify-between items-center mb-4\">\n                        <h3 className=\"text-xl font-semibold\">قدم عرضك على هذا المشروع</h3>\n                      </div>\n                      \n                      <CreateOfferForm projectId={project.id} />\n                    </div>\n                  )}\n                  \n                  {/* Display offers list */}\n                  <div className=\"mt-8\">\n                    <OffersList \n                      projectId={project.id} \n                      isOwner={auth.isAuthenticated && (auth.user?.id === project.userId || auth.user?.role === \"admin\")}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {/* عرض رسالة إغلاق المشروع فقط للمستخدمين من غير صاحب المشروع */}\n            {project.status !== \"open\" && auth.user?.id !== project.userId && (\n              <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden p-6 md:p-8 text-center\">\n                <h2 className=\"text-xl font-semibold text-neutral-700 mb-3\">هذا المشروع مغلق للعروض الجديدة</h2>\n                <p className=\"text-neutral-600\">تم إغلاق هذا المشروع أو تعيينه إلى إحدى الشركات بالفعل.</p>\n              </div>\n            )}\n            \n            {/* عرض معلومات لصاحب المشروع فقط مع حالة التنفيذ */}\n            {project.status !== \"open\" && auth.user?.id === project.userId && (\n              <div className=\"mb-8\">\n                <ProjectExecutionStatus projectId={project.id} />\n              </div>\n            )}\n          </div>\n        )}\n\n\n      </div>\n    </>\n  );\n};\n\nexport default ProjectDetails;\n","size_bytes":22393},"client/src/pages/projects/trending.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { TrendingUp, Calendar, Eye, Users } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport SEO from \"@/components/seo/SEO\";\n\ninterface Project {\n  id: number;\n  title: string;\n  description: string;\n  budget: string;\n  duration: string;\n  skills: string[];\n  status: string;\n  highlightStatus?: string;\n  createdAt: string;\n  userId: number;\n}\n\nconst ProjectCard = ({ project }: { project: Project }) => {\n  return (\n    <Card className=\"overflow-hidden border border-gray-200 hover:border-primary hover:shadow-lg transition-all duration-300\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex justify-between items-start gap-3\">\n          <CardTitle className=\"text-right font-bold text-lg leading-tight line-clamp-2\">\n            {project.title}\n          </CardTitle>\n          <Badge variant={project.highlightStatus === 'عالي الطلب' ? 'destructive' : 'secondary'} className=\"shrink-0\">\n            {project.highlightStatus || project.status}\n          </Badge>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"pb-4\">\n        <p className=\"text-gray-600 text-sm mb-4 line-clamp-3 leading-relaxed\">\n          {project.description}\n        </p>\n        \n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-500\">الميزانية:</span>\n            <span className=\"font-semibold text-primary\">{project.budget}</span>\n          </div>\n          \n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-500\">المدة المتوقعة:</span>\n            <span className=\"font-medium\">{project.duration}</span>\n          </div>\n          \n          <div className=\"flex flex-wrap gap-1\">\n            {project.skills?.slice(0, 3).map((skill) => (\n              <Badge key={skill} variant=\"outline\" className=\"text-xs bg-blue-50 text-blue-700 border-blue-200\">\n                {skill}\n              </Badge>\n            ))}\n            {project.skills?.length > 3 && (\n              <Badge variant=\"outline\" className=\"text-xs bg-gray-50\">\n                +{project.skills.length - 3} أخرى\n              </Badge>\n            )}\n          </div>\n        </div>\n      </CardContent>\n      \n      <CardFooter className=\"pt-0\">\n        <div className=\"w-full space-y-3\">\n          <div className=\"flex items-center justify-between text-xs text-gray-500\">\n            <div className=\"flex items-center\">\n              <Calendar className=\"ml-1 h-3 w-3\" />\n              {new Date(project.createdAt).toLocaleDateString('ar-SA')}\n            </div>\n            <div className=\"flex items-center\">\n              <Eye className=\"ml-1 h-3 w-3\" />\n              مشاهدة التفاصيل\n            </div>\n          </div>\n          \n          <Button className=\"w-full\" size=\"sm\" asChild>\n            <Link href=\"/auth/register\">\n              تقديم عرض\n            </Link>\n          </Button>\n        </div>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst ProjectSkeleton = () => (\n  <Card className=\"overflow-hidden\">\n    <CardHeader className=\"pb-3\">\n      <div className=\"flex justify-between items-start gap-3\">\n        <Skeleton className=\"h-6 w-3/4\" />\n        <Skeleton className=\"h-5 w-16\" />\n      </div>\n    </CardHeader>\n    <CardContent className=\"pb-4\">\n      <Skeleton className=\"h-16 w-full mb-4\" />\n      <div className=\"space-y-3\">\n        <div className=\"flex justify-between\">\n          <Skeleton className=\"h-4 w-16\" />\n          <Skeleton className=\"h-4 w-24\" />\n        </div>\n        <div className=\"flex justify-between\">\n          <Skeleton className=\"h-4 w-20\" />\n          <Skeleton className=\"h-4 w-20\" />\n        </div>\n        <div className=\"flex gap-1\">\n          <Skeleton className=\"h-5 w-16\" />\n          <Skeleton className=\"h-5 w-20\" />\n          <Skeleton className=\"h-5 w-18\" />\n        </div>\n      </div>\n    </CardContent>\n    <CardFooter className=\"pt-0\">\n      <Skeleton className=\"h-8 w-full\" />\n    </CardFooter>\n  </Card>\n);\n\nconst TrendingProjectsPage = () => {\n  const { data: projects, isLoading, error } = useQuery<Project[]>({\n    queryKey: ['/api/recommendations/trending-projects'],\n    queryFn: async () => {\n      const response = await fetch('/api/recommendations/trending-projects?limit=20');\n      if (!response.ok) {\n        throw new Error('فشل في الحصول على المشاريع الرائجة');\n      }\n      return response.json();\n    },\n  });\n\n  return (\n    <>\n      <SEO\n        title=\"المشاريع الرائجة - لينكتك\"\n        description=\"اكتشف أحدث المشاريع التقنية الرائجة والمطلوبة من رواد الأعمال. انضم الآن وقدم عروضك للمشاريع الأكثر طلباً في السوق.\"\n        keywords=\"مشاريع رائجة, مشاريع تقنية, عروض برمجة, مشاريع مطلوبة, تطوير تطبيقات\"\n      />\n      \n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Header Section */}\n        <div className=\"bg-white border-b border-gray-200\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <div className=\"text-center max-w-3xl mx-auto\">\n              <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-gradient-to-r from-blue-500/10 to-purple-500/10 border border-blue-200 mb-4\">\n                <TrendingUp className=\"ml-2 h-5 w-5 text-blue-600\" />\n                <span className=\"text-blue-700 font-medium text-sm\">الأكثر طلباً</span>\n              </div>\n              \n              <h1 className=\"font-heading text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                المشاريع الرائجة\n              </h1>\n              \n              <p className=\"text-lg md:text-xl text-gray-600 leading-relaxed\">\n                اكتشف أحدث المشاريع التقنية الأكثر طلباً في السوق وقدم عروضك للفوز بفرص العمل الذهبية\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Stats Section */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\">\n              <div>\n                <div className=\"text-2xl font-bold\">{projects?.length || 0}</div>\n                <div className=\"text-blue-100\">مشروع رائج</div>\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold\">30</div>\n                <div className=\"text-blue-100\">دقيقة متوسط الاستجابة</div>\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold\">95%</div>\n                <div className=\"text-blue-100\">معدل نجاح المشاريع</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Projects Grid */}\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          {isLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {Array.from({ length: 9 }).map((_, i) => (\n                <ProjectSkeleton key={i} />\n              ))}\n            </div>\n          ) : error ? (\n            <div className=\"text-center py-16\">\n              <div className=\"max-w-md mx-auto\">\n                <div className=\"bg-red-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold text-red-800 mb-2\">حدث خطأ في التحميل</h3>\n                  <p className=\"text-red-600 mb-4\">لم نتمكن من تحميل المشاريع الرائجة. يرجى المحاولة مرة أخرى.</p>\n                  <Button variant=\"outline\" onClick={() => window.location.reload()}>\n                    إعادة المحاولة\n                  </Button>\n                </div>\n              </div>\n            </div>\n          ) : projects && projects.length > 0 ? (\n            <>\n              <div className=\"text-center mb-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                  {projects.length} مشروع رائج متاح الآن\n                </h2>\n                <p className=\"text-gray-600\">اختر المشروع المناسب لخبراتك وقدم عرضك</p>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {projects.map((project) => (\n                  <ProjectCard key={project.id} project={project} />\n                ))}\n              </div>\n            </>\n          ) : (\n            <div className=\"text-center py-16\">\n              <div className=\"max-w-md mx-auto\">\n                <TrendingUp className=\"mx-auto h-16 w-16 text-gray-400 mb-4\" />\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">لا توجد مشاريع رائجة حالياً</h3>\n                <p className=\"text-gray-600 mb-6\">\n                  تحقق مرة أخرى قريباً للعثور على أحدث المشاريع الرائجة\n                </p>\n                <div className=\"space-y-3\">\n                  <Button asChild>\n                    <Link href=\"/projects\">تصفح جميع المشاريع</Link>\n                  </Button>\n                  <div>\n                    <Link href=\"/auth/register\" className=\"text-primary hover:underline\">\n                      إنشاء حساب جديد\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* CTA Section */}\n        <div className=\"bg-white border-t border-gray-200\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n            <div className=\"text-center max-w-2xl mx-auto\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                هل أنت مستعد لبدء مشروعك التقني؟\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                انضم إلى آلاف الشركات والمطورين الذين يستخدمون منصتنا لتحقيق مشاريعهم\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button size=\"lg\" asChild>\n                  <Link href=\"/auth/register\">\n                    <Users className=\"ml-2 h-5 w-5\" />\n                    إنشاء حساب مجاناً\n                  </Link>\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" asChild>\n                  <Link href=\"/how-it-works\">كيف تعمل المنصة</Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TrendingProjectsPage;","size_bytes":11316},"client/src/pages/services/custom-app-development.tsx":{"content":"import StaticPageLayout from \"@/components/seo/StaticPageLayout\";\nimport ServiceSchema from \"@/components/seo/ServiceSchema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport {\n  Smartphone,\n  Monitor,\n  Layers,\n  BarChart,\n  Shield,\n  Code,\n  Settings,\n  Clock,\n  CheckCircle,\n  ArrowLeft,\n} from \"lucide-react\";\n\nconst CustomAppDevelopmentPage = () => {\n  return (\n    <StaticPageLayout\n      title=\"برمجة تطبيقات حسب الطلب | خدمات التطوير المخصصة - لينكتك\"\n      description=\"خدمات برمجة تطبيقات مخصصة حسب الطلب لجميع المنصات. نقوم بتطوير تطبيقات جوال وويب وسطح مكتب احترافية تلبي احتياجات عملك الفريدة بأحدث التقنيات.\"\n      keywords=\"برمجة تطبيقات, تطوير تطبيقات حسب الطلب, تطبيقات مخصصة, برمجة تطبيقات الجوال, تطبيقات iOS, تطبيقات أندرويد, تطوير برمجيات, تطبيقات ويب\"\n      breadcrumbs={[\n        { name: \"الرئيسية\", url: \"/\" },\n        { name: \"الخدمات\", url: \"/services\" },\n        { name: \"برمجة تطبيقات حسب الطلب\", url: \"/services/custom-app-development\" }\n      ]}\n      structuredData={\n        <ServiceSchema\n          name=\"برمجة تطبيقات حسب الطلب\"\n          description=\"خدمات برمجة تطبيقات مخصصة لجميع المنصات بأحدث التقنيات والمعايير العالمية\"\n          url=\"https://linktech.app/services/custom-app-development\"\n          provider=\"لينكتك\"\n          providerUrl=\"https://linktech.app\"\n          imageUrl=\"https://linktech.app/images/custom-app-development.jpg\"\n          serviceArea=\"المملكة العربية السعودية\"\n        />\n      }\n    >\n      <div className=\"space-y-12\">\n        {/* القسم الرئيسي */}\n        <section className=\"text-center mb-16\">\n          <h1 className=\"text-3xl md:text-5xl font-bold mb-6 leading-tight\">\n            <span className=\"bg-clip-text text-transparent bg-gradient-to-l from-primary to-primary/80\">برمجة تطبيقات</span>\n            <br />حسب الطلب لجميع المنصات\n          </h1>\n          <p className=\"text-lg md:text-xl text-neutral-600 mb-8 max-w-3xl mx-auto\">\n            نقدم خدمات تطوير تطبيقات مخصصة تماماً لاحتياجات عملك، تجمع بين التصميم المميز والوظائف المتقدمة والأداء العالي\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\">\n              <Link href=\"/contact\">\n                احصل على عرض سعر\n              </Link>\n            </Button>\n            <Button asChild variant=\"outline\" size=\"lg\">\n              <Link href=\"/services\">\n                استعرض خدماتنا\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* أنواع التطبيقات */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            أنواع التطبيقات التي نطورها\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Smartphone className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطبيقات الجوال</h3>\n              <p className=\"text-neutral-600\">\n                تطبيقات iOS وأندرويد بتصميم عصري وأداء عالي تناسب مختلف الاحتياجات\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Monitor className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطبيقات الويب</h3>\n              <p className=\"text-neutral-600\">\n                تطبيقات ويب تفاعلية تعمل على مختلف المتصفحات مع تجربة مستخدم سلسة\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Settings className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطبيقات سطح المكتب</h3>\n              <p className=\"text-neutral-600\">\n                تطبيقات سطح مكتب فعالة لأنظمة Windows وMac وLinux لاحتياجات الأعمال\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Layers className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطبيقات هجينة</h3>\n              <p className=\"text-neutral-600\">\n                تطبيقات تعمل على منصات متعددة بكود واحد مما يوفر الوقت والتكلفة\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <BarChart className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطبيقات لوحات التحكم</h3>\n              <p className=\"text-neutral-600\">\n                أنظمة إدارة متكاملة مع لوحات تحكم ذكية وتقارير تحليلية متقدمة\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Shield className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطبيقات خاصة</h3>\n              <p className=\"text-neutral-600\">\n                تطبيقات مخصصة للاستخدام الداخلي للشركات والمؤسسات بمعايير أمان عالية\n              </p>\n            </div>\n          </div>\n        </section>\n        \n        {/* مراحل التطوير */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            مراحل تطوير التطبيقات المخصصة\n          </h2>\n          \n          <div className=\"space-y-8 md:space-y-0 md:grid md:grid-cols-5 md:gap-6\">\n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">1</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">تحليل المتطلبات</h3>\n                <p className=\"text-neutral-600 text-sm\">فهم أهدافك واحتياجاتك بدقة</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">2</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">التصميم والتخطيط</h3>\n                <p className=\"text-neutral-600 text-sm\">تصميم واجهات المستخدم وبنية التطبيق</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">3</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">التطوير</h3>\n                <p className=\"text-neutral-600 text-sm\">تطوير التطبيق وبناء الوظائف</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">4</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">الاختبار والضبط</h3>\n                <p className=\"text-neutral-600 text-sm\">اختبار شامل وتحسين الأداء</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">5</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">الإطلاق والدعم</h3>\n                <p className=\"text-neutral-600 text-sm\">نشر التطبيق والدعم المستمر</p>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* التقنيات */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-2 text-center\">التقنيات التي نستخدمها</h2>\n          <p className=\"text-center text-neutral-600 mb-8\">\n            نعتمد على أحدث التقنيات والأطر البرمجية لتطوير تطبيقات قوية وقابلة للتطوير\n          </p>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">React Native</h3>\n              <p className=\"text-sm text-neutral-600\">تطبيقات الجوال</p>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">Flutter</h3>\n              <p className=\"text-sm text-neutral-600\">تطبيقات الجوال</p>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">React.js</h3>\n              <p className=\"text-sm text-neutral-600\">تطبيقات الويب</p>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">Angular</h3>\n              <p className=\"text-sm text-neutral-600\">تطبيقات الويب</p>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">Node.js</h3>\n              <p className=\"text-sm text-neutral-600\">خلفية التطبيقات</p>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">Django</h3>\n              <p className=\"text-sm text-neutral-600\">خلفية التطبيقات</p>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">Electron</h3>\n              <p className=\"text-sm text-neutral-600\">تطبيقات سطح المكتب</p>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-lg p-4 text-center hover:border-primary/50 hover:shadow-sm transition-all\">\n              <h3 className=\"font-bold\">Firebase</h3>\n              <p className=\"text-sm text-neutral-600\">خدمات سحابية</p>\n            </div>\n          </div>\n        </section>\n        \n        {/* مزايا خدماتنا */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            لماذا تختار خدماتنا في برمجة التطبيقات؟\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <Code className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">حلول مخصصة بالكامل</h3>\n                <p className=\"text-neutral-600\">\n                  نقوم بتطوير تطبيقات مصممة خصيصاً لتلبية احتياجاتك المحددة، وليست قوالب جاهزة أو حلول عامة.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <Shield className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">أمان وحماية متقدمة</h3>\n                <p className=\"text-neutral-600\">\n                  نطبق أعلى معايير الأمان في تطبيقاتنا لحماية بياناتك ومعلومات مستخدميك من أي اختراقات.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <BarChart className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">تقارير ولوحات تحكم</h3>\n                <p className=\"text-neutral-600\">\n                  ندمج تحليلات وتقارير متقدمة في تطبيقاتنا تمكنك من متابعة الأداء واتخاذ قرارات مدروسة.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <Clock className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">التسليم في الموعد</h3>\n                <p className=\"text-neutral-600\">\n                  نلتزم بالجداول الزمنية المتفق عليها مع العميل ونضمن تسليم المشروع في الوقت المحدد.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <Smartphone className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">تصميم سريع الاستجابة</h3>\n                <p className=\"text-neutral-600\">\n                  نصمم تطبيقات متوافقة مع جميع أحجام الشاشات والأجهزة لتقديم تجربة مستخدم مثالية للجميع.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <CheckCircle className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">اختبار شامل</h3>\n                <p className=\"text-neutral-600\">\n                  نجري اختبارات دقيقة وشاملة للتطبيق قبل إطلاقه لضمان خلوه من الأخطاء وعمله بكفاءة.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* الباقات والأسعار */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-2 text-center\">باقاتنا وأسعارنا</h2>\n          <p className=\"text-center text-neutral-600 mb-8\">\n            نقدم باقات متنوعة تناسب مختلف الاحتياجات والميزانيات مع خطط دفع مرنة\n          </p>\n          \n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-1\">الباقة الأساسية</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">للشركات الناشئة والمشاريع الصغيرة</p>\n              <div className=\"text-3xl font-bold mb-4 text-primary\">تبدأ من 15,000 ر.س.</div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تطبيق أساسي بوظائف محددة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تصميم متجاوب مع جميع الأجهزة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>منصة واحدة (iOS أو Android)</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>دعم فني لمدة 3 أشهر</span>\n                </li>\n              </ul>\n              \n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?package=basic\">\n                  طلب هذه الباقة\n                </Link>\n              </Button>\n            </div>\n            \n            <div className=\"border-2 border-primary rounded-xl p-6 shadow-md relative\">\n              <div className=\"absolute -top-4 right-4 bg-primary text-white text-sm py-1 px-3 rounded-full\">الأكثر شيوعاً</div>\n              <h3 className=\"font-bold text-xl mb-1\">الباقة الاحترافية</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">للشركات المتوسطة والمشاريع المتقدمة</p>\n              <div className=\"text-3xl font-bold mb-4 text-primary\">تبدأ من 30,000 ر.س.</div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تطبيق متكامل بوظائف متقدمة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تصميم احترافي وتجربة مستخدم مميزة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>منصتين (iOS وAndroid)</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>لوحة تحكم وتقارير تحليلية</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>دعم فني لمدة 6 أشهر</span>\n                </li>\n              </ul>\n              \n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?package=pro\">\n                  طلب هذه الباقة\n                </Link>\n              </Button>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-1\">الباقة المتقدمة</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">للشركات الكبيرة والمشاريع المعقدة</p>\n              <div className=\"text-3xl font-bold mb-4 text-primary\">تبدأ من 50,000 ر.س.</div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تطبيق متكامل بوظائف مخصصة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تصميم فريد وحصري</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>جميع المنصات (iOS وAndroid وويب)</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>لوحة تحكم متقدمة وتكامل API</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>دعم فني لمدة 12 شهر</span>\n                </li>\n              </ul>\n              \n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?package=premium\">\n                  طلب هذه الباقة\n                </Link>\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"text-center mt-8\">\n            <p className=\"text-neutral-600 mb-4\">\n              هل تبحث عن حل مخصص؟ تواصل معنا للحصول على عرض سعر مفصل يناسب احتياجاتك الخاصة.\n            </p>\n            <Link href=\"/contact\" className=\"text-primary hover:text-primary-dark inline-flex items-center font-medium\">\n              تواصل معنا للحصول على عرض سعر مخصص\n              <ArrowLeft className=\"mr-1 h-4 w-4 rtl-flip\" />\n            </Link>\n          </div>\n        </section>\n        \n        {/* قسم الدعوة للعمل */}\n        <section className=\"bg-gradient-to-r from-primary to-primary/80 text-white rounded-2xl p-8 md:p-12 text-center\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\n            هل أنت جاهز لبدء مشروع تطبيقك؟\n          </h2>\n          <p className=\"mb-8 text-white/90 max-w-3xl mx-auto\">\n            تواصل معنا اليوم لمناقشة فكرتك والحصول على استشارة مجانية. فريقنا جاهز لتحويل رؤيتك إلى تطبيق ناجح.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\" variant=\"secondary\">\n              <Link href=\"/contact\">\n                تواصل معنا الآن\n              </Link>\n            </Button>\n            \n            <Button asChild size=\"lg\" variant=\"outline\" className=\"bg-white/10 border-white/20 hover:bg-white/20\">\n              <Link href=\"/portfolio\">\n                مشاريعنا السابقة\n              </Link>\n            </Button>\n          </div>\n        </section>\n      </div>\n    </StaticPageLayout>\n  );\n};\n\nexport default CustomAppDevelopmentPage;","size_bytes":25785},"client/src/pages/services/ecommerce-development.tsx":{"content":"import StaticPageLayout from \"@/components/seo/StaticPageLayout\";\nimport ServiceSchema from \"@/components/seo/ServiceSchema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport {\n  ShoppingCart,\n  CreditCard,\n  BarChart3,\n  Truck,\n  Package,\n  Search,\n  Shield,\n  Globe,\n  CheckCircle,\n  ArrowLeft,\n} from \"lucide-react\";\n\nconst EcommerceDevelopmentPage = () => {\n  return (\n    <StaticPageLayout\n      title=\"تصميم متجر إلكتروني احترافي | خدمات تطوير المتاجر الإلكترونية - لينكتك\"\n      description=\"خدمات تصميم وتطوير متاجر إلكترونية احترافية بأحدث التقنيات. نقدم حلول متكاملة للتجارة الإلكترونية تشمل سلة المشتريات، بوابات الدفع الآمنة، وإدارة المخزون.\"\n      keywords=\"تصميم متجر إلكتروني, تطوير متاجر إلكترونية, تجارة إلكترونية, إنشاء متجر أونلاين, برمجة متاجر, متاجر ووردبريس, شوبيفاي, ماجنتو, تطوير متجر احترافي\"\n      breadcrumbs={[\n        { name: \"الرئيسية\", url: \"/\" },\n        { name: \"الخدمات\", url: \"/services\" },\n        { name: \"تصميم متجر إلكتروني\", url: \"/services/ecommerce-development\" }\n      ]}\n      structuredData={\n        <ServiceSchema\n          name=\"خدمات تصميم وتطوير المتاجر الإلكترونية\"\n          description=\"تطوير متاجر إلكترونية احترافية متكاملة مع أنظمة دفع آمنة وإدارة مخزون\"\n          url=\"https://linktech.app/services/ecommerce-development\"\n          provider=\"لينكتك\"\n          providerUrl=\"https://linktech.app\"\n          imageUrl=\"https://linktech.app/images/ecommerce-development.jpg\"\n          serviceArea=\"المملكة العربية السعودية\"\n        />\n      }\n    >\n      <div className=\"space-y-12\">\n        {/* القسم الرئيسي */}\n        <section className=\"text-center mb-16\">\n          <h1 className=\"text-3xl md:text-5xl font-bold mb-6 leading-tight\">\n            <span className=\"bg-clip-text text-transparent bg-gradient-to-l from-primary to-primary/80\">تصميم متجر إلكتروني</span>\n            <br />احترافي ومتكامل\n          </h1>\n          <p className=\"text-lg md:text-xl text-neutral-600 mb-8 max-w-3xl mx-auto\">\n            نقدم خدمات تطوير متاجر إلكترونية احترافية بأحدث التقنيات مع أنظمة دفع آمنة وإدارة مخزون وتجربة تسوق سلسة\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\">\n              <Link href=\"/contact\">\n                احصل على عرض سعر\n              </Link>\n            </Button>\n            <Button asChild variant=\"outline\" size=\"lg\">\n              <Link href=\"/services\">\n                استعرض خدماتنا\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* ميزات متاجرنا */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            المميزات الرئيسية لمتاجرنا الإلكترونية\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <ShoppingCart className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">سلة مشتريات متطورة</h3>\n              <p className=\"text-neutral-600\">\n                سلة مشتريات سهلة الاستخدام مع إمكانية إضافة وحذف وتعديل المنتجات بسلاسة\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <CreditCard className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">بوابات دفع متعددة</h3>\n              <p className=\"text-neutral-600\">\n                تكامل مع مختلف بوابات الدفع المحلية والعالمية مثل مدى ومدفوعات وفيزا وماستركارد\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Package className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">إدارة المخزون</h3>\n              <p className=\"text-neutral-600\">\n                نظام متكامل لإدارة المخزون والمنتجات بسهولة مع تحديث تلقائي عند البيع\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <BarChart3 className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تقارير وإحصائيات</h3>\n              <p className=\"text-neutral-600\">\n                لوحة تحكم ذكية مع تقارير تحليلية شاملة لمتابعة المبيعات والأرباح وسلوك المستخدمين\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Truck className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">إدارة الشحن والتوصيل</h3>\n              <p className=\"text-neutral-600\">\n                تكامل مع شركات الشحن المحلية والدولية مع إمكانية تتبع الشحنات مباشرة من المتجر\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Search className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تحسين محركات البحث</h3>\n              <p className=\"text-neutral-600\">\n                تهيئة المتجر لمحركات البحث لضمان ظهوره في النتائج الأولى وجذب المزيد من العملاء\n              </p>\n            </div>\n          </div>\n        </section>\n        \n        {/* أنواع المتاجر */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-2 text-center\">أنواع المتاجر الإلكترونية</h2>\n          <p className=\"text-center text-neutral-600 mb-8\">\n            نقدم حلول متاجر إلكترونية متعددة تناسب مختلف القطاعات والاحتياجات\n          </p>\n          \n          <div className=\"grid md:grid-cols-2 gap-6 mb-8\">\n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">متاجر البيع بالتجزئة</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                متاجر إلكترونية لبيع المنتجات المادية مثل الملابس والإلكترونيات والأثاث وغيرها، مع إدارة مخزون متقدمة.\n              </p>\n              <Link href=\"/contact?store=retail\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                طلب هذا النوع من المتاجر\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">متاجر المنتجات الرقمية</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                متاجر لبيع المنتجات الرقمية مثل الكتب الإلكترونية والدورات والبرامج، مع تسليم آلي للمنتجات بعد الشراء.\n              </p>\n              <Link href=\"/contact?store=digital\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                طلب هذا النوع من المتاجر\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">متاجر الاشتراكات</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                متاجر تعتمد على نموذج الاشتراكات الشهرية أو السنوية مع إدارة متكاملة للاشتراكات والتجديد التلقائي.\n              </p>\n              <Link href=\"/contact?store=subscription\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                طلب هذا النوع من المتاجر\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">منصات التجارة الإلكترونية</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                منصات متكاملة تتيح لعدة بائعين عرض منتجاتهم وبيعها، مثل أمازون وأكسايت، مع نظام عمولات وإدارة بائعين.\n              </p>\n              <Link href=\"/contact?store=marketplace\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                طلب هذا النوع من المتاجر\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n          </div>\n        </section>\n        \n        {/* منصات التطوير */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            منصات تطوير المتاجر الإلكترونية\n          </h2>\n          \n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow text-center\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-neutral-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-2xl font-bold text-blue-600\">WP</span>\n              </div>\n              <h3 className=\"font-bold text-xl mb-2\">ووردبريس / ووكومرس</h3>\n              <p className=\"text-neutral-600 mb-3\">\n                منصة مفتوحة المصدر تتميز بالمرونة والتخصيص مع آلاف الإضافات المتاحة.\n              </p>\n              <ul className=\"text-sm text-neutral-600 space-y-1 mb-4 text-right\">\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>مناسبة للمتاجر الصغيرة والمتوسطة</span>\n                </li>\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>سهولة الإدارة والتحديث</span>\n                </li>\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>تكلفة تطوير منخفضة نسبياً</span>\n                </li>\n              </ul>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow text-center\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-neutral-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-2xl font-bold text-green-600\">M</span>\n              </div>\n              <h3 className=\"font-bold text-xl mb-2\">ماجنتو</h3>\n              <p className=\"text-neutral-600 mb-3\">\n                منصة قوية للتجارة الإلكترونية مناسبة للشركات الكبيرة والمتاجر ذات الحجم الكبير.\n              </p>\n              <ul className=\"text-sm text-neutral-600 space-y-1 mb-4 text-right\">\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>قدرات متقدمة لإدارة المخزون</span>\n                </li>\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>مناسبة للمتاجر ذات الضغط العالي</span>\n                </li>\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>خيارات تخصيص لا محدودة</span>\n                </li>\n              </ul>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow text-center\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-neutral-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-2xl font-bold text-purple-600\">CS</span>\n              </div>\n              <h3 className=\"font-bold text-xl mb-2\">حلول مخصصة</h3>\n              <p className=\"text-neutral-600 mb-3\">\n                تطوير متجر إلكتروني مخصص من الصفر يلبي جميع احتياجاتك الخاصة.\n              </p>\n              <ul className=\"text-sm text-neutral-600 space-y-1 mb-4 text-right\">\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>تخصيص كامل حسب الاحتياجات</span>\n                </li>\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>مناسبة للمتطلبات المعقدة</span>\n                </li>\n                <li className=\"flex items-center gap-1\">\n                  <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                  <span>أداء أفضل وتحكم كامل</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"text-center mt-8\">\n            <p className=\"text-neutral-600 mb-4\">\n              لست متأكداً من المنصة المناسبة لمتجرك؟ تواصل معنا للحصول على استشارة مجانية لاختيار الحل الأنسب لك.\n            </p>\n            <Button asChild>\n              <Link href=\"/contact\">\n                تواصل معنا للمساعدة\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* ميزاتنا التنافسية */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            لماذا تختار خدماتنا لتطوير متجرك الإلكتروني؟\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <Globe className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">تصميم متجاوب</h3>\n                <p className=\"text-neutral-600\">\n                  متاجرنا الإلكترونية متوافقة مع جميع الأجهزة (الجوال، التابلت، الكمبيوتر) لتقديم تجربة تصفح مثالية.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <Shield className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">أمان متقدم</h3>\n                <p className=\"text-neutral-600\">\n                  نطبق أعلى معايير الأمان في متاجرنا مع شهادات SSL وحماية للبيانات وتأمين لعمليات الدفع.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <Search className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">محسنة لمحركات البحث</h3>\n                <p className=\"text-neutral-600\">\n                  نبني متاجرنا بهيكلة SEO مثالية تساعد في ظهور متجرك في نتائج البحث وزيادة المبيعات العضوية.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <BarChart3 className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">تحليلات متقدمة</h3>\n                <p className=\"text-neutral-600\">\n                  لوحة تحكم ذكية تعرض تحليلات المبيعات وسلوك المستخدمين والمنتجات الأكثر مبيعاً لاتخاذ قرارات أفضل.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* خطوات العمل */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            خطوات تصميم وتطوير متجرك الإلكتروني\n          </h2>\n          \n          <div className=\"space-y-8 md:space-y-0 md:grid md:grid-cols-5 md:gap-6\">\n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">1</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">تحليل المتطلبات</h3>\n                <p className=\"text-neutral-600 text-sm\">تحديد احتياجاتك وأهداف متجرك</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">2</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">التصميم</h3>\n                <p className=\"text-neutral-600 text-sm\">تصميم واجهة المتجر وتجربة المستخدم</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">3</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">التطوير</h3>\n                <p className=\"text-neutral-600 text-sm\">برمجة المتجر وتكامل أنظمة الدفع</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">4</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">الاختبار</h3>\n                <p className=\"text-neutral-600 text-sm\">اختبار شامل للوظائف وتجربة المستخدم</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">5</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">الإطلاق والدعم</h3>\n                <p className=\"text-neutral-600 text-sm\">إطلاق المتجر والدعم المستمر</p>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* الباقات والأسعار */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-2 text-center\">باقاتنا وأسعارنا</h2>\n          <p className=\"text-center text-neutral-600 mb-8\">\n            نقدم باقات متنوعة تناسب مختلف الاحتياجات والميزانيات\n          </p>\n          \n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-1\">الباقة الأساسية</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">للمشاريع الصغيرة والبداية</p>\n              <div className=\"text-3xl font-bold mb-4 text-primary\">تبدأ من 6,000 ر.س.</div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>متجر ووردبريس/ووكومرس أساسي</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تصميم متجاوب مع الأجهزة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>بوابة دفع واحدة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>دعم فني لمدة شهر</span>\n                </li>\n              </ul>\n              \n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?ecommerce=basic\">\n                  طلب هذه الباقة\n                </Link>\n              </Button>\n            </div>\n            \n            <div className=\"border-2 border-primary rounded-xl p-6 shadow-md relative\">\n              <div className=\"absolute -top-4 right-4 bg-primary text-white text-sm py-1 px-3 rounded-full\">الأكثر شيوعاً</div>\n              <h3 className=\"font-bold text-xl mb-1\">الباقة الاحترافية</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">للمتاجر المتوسطة والشركات</p>\n              <div className=\"text-3xl font-bold mb-4 text-primary\">تبدأ من 15,000 ر.س.</div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>متجر ووكومرس أو ماجنتو متقدم</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تصميم احترافي وحصري</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تكامل مع عدة بوابات دفع</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>إدارة مخزون متقدمة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تحسين محركات البحث</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>دعم فني لمدة 3 أشهر</span>\n                </li>\n              </ul>\n              \n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?ecommerce=professional\">\n                  طلب هذه الباقة\n                </Link>\n              </Button>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-1\">الباقة المتقدمة</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">للمشاريع الكبيرة والمنصات</p>\n              <div className=\"text-3xl font-bold mb-4 text-primary\">تبدأ من 30,000 ر.س.</div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>متجر مخصص بالكامل</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>نظام متعدد البائعين</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>جميع بوابات الدفع المحلية والعالمية</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تكامل API مع الأنظمة الأخرى</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>تقارير وتحليلات متقدمة</span>\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"text-primary h-5 w-5 flex-shrink-0\" />\n                  <span>دعم فني لمدة 6 أشهر</span>\n                </li>\n              </ul>\n              \n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?ecommerce=premium\">\n                  طلب هذه الباقة\n                </Link>\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"text-center mt-8\">\n            <p className=\"text-neutral-600 mb-4\">\n              تبحث عن حل مخصص لمتجرك؟ تواصل معنا للحصول على عرض سعر مخصص يناسب احتياجاتك.\n            </p>\n            <Link href=\"/contact\" className=\"text-primary hover:text-primary-dark inline-flex items-center font-medium\">\n              تواصل معنا للحصول على عرض سعر مخصص\n              <ArrowLeft className=\"mr-1 h-4 w-4 rtl-flip\" />\n            </Link>\n          </div>\n        </section>\n        \n        {/* قسم الدعوة للعمل */}\n        <section className=\"bg-gradient-to-r from-primary to-primary/80 text-white rounded-2xl p-8 md:p-12 text-center\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\n            جاهز لبدء متجرك الإلكتروني؟\n          </h2>\n          <p className=\"mb-8 text-white/90 max-w-3xl mx-auto\">\n            تواصل معنا اليوم لمناقشة مشروع متجرك الإلكتروني والحصول على استشارة مجانية. فريقنا جاهز لمساعدتك.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\" variant=\"secondary\">\n              <Link href=\"/contact\">\n                تواصل معنا الآن\n              </Link>\n            </Button>\n            \n            <Button asChild size=\"lg\" variant=\"outline\" className=\"bg-white/10 border-white/20 hover:bg-white/20\">\n              <Link href=\"/portfolio\">\n                مشاريعنا السابقة\n              </Link>\n            </Button>\n          </div>\n        </section>\n      </div>\n    </StaticPageLayout>\n  );\n};\n\nexport default EcommerceDevelopmentPage;","size_bytes":31220},"client/src/pages/services/index.tsx":{"content":"import StaticPageLayout from \"@/components/seo/StaticPageLayout\";\nimport { OrganizationStructuredData } from \"@/components/seo/StructuredData\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { ArrowLeft, Smartphone, Globe, ShoppingCart, LayoutDashboard, Search, Code, Server, HeadphonesIcon } from \"lucide-react\";\n\nconst ServiceCard = ({ \n  title, \n  description, \n  icon: Icon, \n  href \n}: { \n  title: string; \n  description: string; \n  icon: React.ElementType; \n  href: string \n}) => {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm p-6 flex flex-col h-full border border-neutral-100 hover:shadow-md hover:border-primary/20 transition-all duration-300\">\n      <div className=\"bg-primary/10 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\n        <Icon className=\"text-primary h-6 w-6\" />\n      </div>\n      <h3 className=\"font-bold text-xl mb-3\">{title}</h3>\n      <p className=\"text-neutral-600 mb-4 flex-grow\">{description}</p>\n      <Link \n        href={href} \n        className=\"inline-flex items-center text-primary hover:text-primary-dark font-medium mt-auto\"\n      >\n        التفاصيل والأسعار\n        <ArrowLeft className=\"mr-1 h-4 w-4 rtl-flip\" />\n      </Link>\n    </div>\n  );\n};\n\nconst ServicesPage = () => {\n  return (\n    <StaticPageLayout\n      title=\"خدماتنا البرمجية | شركة برمجة في السعودية - لينكتك\"\n      description=\"تعرف على خدماتنا البرمجية المتكاملة لتطوير تطبيقات الجوال والمواقع الإلكترونية والمتاجر الإلكترونية والأنظمة المخصصة بأفضل التقنيات وأعلى معايير الجودة.\"\n      keywords=\"خدمات برمجية, تطوير تطبيقات, برمجة مواقع, متاجر إلكترونية, أنظمة إدارية, تحسين محركات البحث, تطوير برمجيات, استضافة سحابية\"\n      breadcrumbs={[\n        { name: \"الرئيسية\", url: \"/\" },\n        { name: \"خدماتنا\", url: \"/services\" }\n      ]}\n      structuredData={\n        <OrganizationStructuredData\n          name=\"لينكتك\"\n          url=\"https://linktech.app\"\n          logo=\"https://linktech.app/images/logo.svg\"\n          description=\"منصة تربط بين رواد الأعمال وشركات البرمجة لتنفيذ المشاريع التقنية بكفاءة وسهولة\"\n        />\n      }\n    >\n      <div className=\"space-y-12\">\n        {/* قسم الخدمات الرئيسي */}\n        <section className=\"text-center\">\n          <h1 className=\"text-3xl md:text-5xl font-bold mb-6 leading-tight\">\n            خدماتنا البرمجية الاحترافية\n          </h1>\n          <p className=\"text-lg md:text-xl text-neutral-600 mb-10 max-w-3xl mx-auto\">\n            نقدم مجموعة متكاملة من الخدمات البرمجية التي تساعدك على تحقيق أهدافك التقنية وتطوير أعمالك بأحدث التقنيات\n          </p>\n        </section>\n\n        {/* قائمة الخدمات */}\n        <section className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <ServiceCard\n            title=\"تطوير تطبيقات الجوال\"\n            description=\"تصميم وتطوير تطبيقات احترافية لأنظمة iOS وAndroid مع واجهات مستخدم سلسة وأداء عالي\"\n            icon={Smartphone}\n            href=\"/services/mobile-app-development\"\n          />\n          \n          <ServiceCard\n            title=\"تطوير المواقع الإلكترونية\"\n            description=\"تصميم وبرمجة مواقع إلكترونية عصرية ومتجاوبة مع جميع الأجهزة ومحسنة لمحركات البحث\"\n            icon={Globe}\n            href=\"/services/website-development\"\n          />\n          \n          <ServiceCard\n            title=\"تطوير المتاجر الإلكترونية\"\n            description=\"إنشاء متاجر إلكترونية متكاملة مع أنظمة دفع آمنة وإدارة مخزون وتجربة تسوق سلسة\"\n            icon={ShoppingCart}\n            href=\"/services/ecommerce-development\"\n          />\n          \n          <ServiceCard\n            title=\"تطوير الأنظمة الإدارية\"\n            description=\"تصميم أنظمة إدارية مخصصة لتحسين سير العمل وزيادة الإنتاجية وإدارة الموارد بكفاءة\"\n            icon={LayoutDashboard}\n            href=\"/services/management-systems\"\n          />\n          \n          <ServiceCard\n            title=\"خدمات تحسين محركات البحث\"\n            description=\"تحسين ظهور موقعك في نتائج البحث وزيادة الزيارات العضوية من خلال استراتيجيات SEO متكاملة\"\n            icon={Search}\n            href=\"/services/seo-services\"\n          />\n          \n          <ServiceCard\n            title=\"خدمات برمجية مخصصة\"\n            description=\"تطوير حلول برمجية مخصصة تناسب احتياجات عملك الخاصة وتعالج تحديات فريدة\"\n            icon={Code}\n            href=\"/services/custom-software-development\"\n          />\n          \n          <ServiceCard\n            title=\"خدمات الاستضافة السحابية\"\n            description=\"استضافة تطبيقاتك ومواقعك على خوادم سحابية آمنة وعالية الأداء مع دعم فني على مدار الساعة\"\n            icon={Server}\n            href=\"/services/cloud-hosting\"\n          />\n          \n          <ServiceCard\n            title=\"خدمات الدعم الفني\"\n            description=\"دعم فني متكامل لمشاريعك البرمجية مع باقات صيانة وتحديث دورية لضمان استمرارية العمل\"\n            icon={HeadphonesIcon}\n            href=\"/services/technical-support\"\n          />\n\n          <div className=\"bg-gradient-to-r from-primary/10 to-primary/5 rounded-xl p-6 flex flex-col justify-center items-center text-center border border-primary/20\">\n            <h3 className=\"font-bold text-xl mb-3\">لم تجد ما تبحث عنه؟</h3>\n            <p className=\"text-neutral-600 mb-6\">\n              تواصل معنا للحصول على خدمة مخصصة تناسب احتياجات مشروعك الخاصة\n            </p>\n            <Button asChild>\n              <Link href=\"/contact\">\n                تواصل معنا الآن\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* قسم المميزات */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            لماذا تختار خدماتنا؟\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">خبرة واسعة</h3>\n              <p className=\"text-neutral-600\">\n                نمتلك خبرة تزيد عن 10 سنوات في مجال تطوير البرمجيات مع مئات المشاريع الناجحة\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">فريق محترف</h3>\n              <p className=\"text-neutral-600\">\n                يضم فريقنا نخبة من المطورين والمصممين وخبراء تجربة المستخدم لتقديم أفضل النتائج\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">تقنيات حديثة</h3>\n              <p className=\"text-neutral-600\">\n                نستخدم أحدث التقنيات والأدوات البرمجية لتقديم حلول عصرية تواكب التطورات التكنولوجية\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">جودة عالية</h3>\n              <p className=\"text-neutral-600\">\n                نلتزم بأعلى معايير الجودة في جميع مشاريعنا مع اختبارات شاملة لضمان الأداء الأمثل\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">دعم مستمر</h3>\n              <p className=\"text-neutral-600\">\n                نقدم دعماً فنياً متواصلاً لمشاريعنا مع استجابة سريعة لأي استفسارات أو تحديثات\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">أسعار تنافسية</h3>\n              <p className=\"text-neutral-600\">\n                نقدم خدمات عالية الجودة بأسعار تنافسية تناسب مختلف الميزانيات مع خطط دفع مرنة\n              </p>\n            </div>\n          </div>\n        </section>\n        \n        {/* قسم الدعوة للعمل */}\n        <section className=\"bg-gradient-to-r from-primary to-primary/80 text-white rounded-2xl p-8 md:p-12 text-center\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\n            جاهزون لبدء مشروعك التقني؟\n          </h2>\n          <p className=\"mb-8 text-white/90 max-w-3xl mx-auto\">\n            تواصل معنا اليوم لمناقشة متطلبات مشروعك والحصول على استشارة مجانية. فريقنا جاهز لتحويل أفكارك إلى واقع.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\" variant=\"secondary\">\n              <Link href=\"/contact\">\n                تواصل معنا الآن\n              </Link>\n            </Button>\n            \n            <Button asChild size=\"lg\" variant=\"outline\" className=\"bg-white/10 border-white/20 hover:bg-white/20\">\n              <Link href=\"/about\">\n                تعرف علينا أكثر\n              </Link>\n            </Button>\n          </div>\n        </section>\n      </div>\n    </StaticPageLayout>\n  );\n};\n\nexport default ServicesPage;","size_bytes":10825},"client/src/pages/services/software-company-saudi.tsx":{"content":"import StaticPageLayout from \"@/components/seo/StaticPageLayout\";\nimport ServiceSchema from \"@/components/seo/ServiceSchema\";\nimport { LazyImage } from \"@/components/ui/lazy-image\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport {\n  Code,\n  Cpu,\n  Users,\n  Trophy,\n  CheckCircle,\n  ArrowLeft,\n  ArrowRight,\n  Star\n} from \"lucide-react\";\n\nconst SoftwareCompanySaudiPage = () => {\n  return (\n    <StaticPageLayout\n      title=\"أفضل شركة برمجة في السعودية | لينكتك\"\n      description=\"نقدم خدمات برمجية متكاملة في المملكة العربية السعودية مع فريق من المطورين المحترفين. احصل على حلول برمجية مخصصة تناسب احتياجات عملك.\"\n      keywords=\"شركة برمجة, شركة برمجة في السعودية, تطوير برمجيات, برمجة تطبيقات, برمجة مواقع, شركة برمجة في الرياض, شركة برمجة في جدة\"\n      breadcrumbs={[\n        { name: \"الرئيسية\", url: \"/\" },\n        { name: \"الخدمات\", url: \"/services\" },\n        { name: \"شركة برمجة في السعودية\", url: \"/services/software-company-saudi\" }\n      ]}\n      structuredData={\n        <ServiceSchema\n          name=\"خدمات تطوير البرمجيات\"\n          description=\"نقدم خدمات برمجية متكاملة في المملكة العربية السعودية مع فريق من المطورين المحترفين\"\n          url=\"https://linktech.app/services/software-company-saudi\"\n          provider=\"لينكتك\"\n          providerUrl=\"https://linktech.app\"\n          imageUrl=\"https://linktech.app/images/software-development-service.jpg\"\n          serviceArea=\"المملكة العربية السعودية\"\n        />\n      }\n    >\n      <div className=\"space-y-12\">\n        {/* القسم الرئيسي */}\n        <section className=\"text-center mb-16\">\n          <h1 className=\"text-3xl md:text-5xl font-bold mb-6 leading-tight\">\n            <span className=\"bg-clip-text text-transparent bg-gradient-to-l from-primary to-primary/80\">أفضل شركة برمجة</span>\n            <br />في المملكة العربية السعودية\n          </h1>\n          <p className=\"text-lg md:text-xl text-neutral-600 mb-8 max-w-3xl mx-auto\">\n            نقدم حلول تقنية مبتكرة وخدمات برمجية متكاملة تناسب احتياجات الشركات والمؤسسات في جميع أنحاء المملكة\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\">\n              <Link href=\"/contact\">\n                تواصل معنا الآن\n              </Link>\n            </Button>\n            <Button asChild variant=\"outline\" size=\"lg\">\n              <Link href=\"/services\">\n                استعرض خدماتنا\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* لماذا نحن */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            لماذا نحن الخيار الأفضل لمشروعك؟\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <Code className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">خبرة تقنية واسعة</h3>\n              <p className=\"text-neutral-600\">\n                فريقنا يتمتع بخبرة تزيد عن 10 سنوات في مجال تطوير البرمجيات وتقديم حلول تقنية متكاملة\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <Cpu className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">أحدث التقنيات</h3>\n              <p className=\"text-neutral-600\">\n                نستخدم أحدث التقنيات والأدوات البرمجية لتقديم حلول عصرية تواكب التطورات التكنولوجية\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <Users className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">فريق متخصص</h3>\n              <p className=\"text-neutral-600\">\n                يضم فريقنا نخبة من المطورين والمصممين وخبراء تجربة المستخدم لتقديم منتجات عالية الجودة\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <Trophy className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">سجل حافل بالنجاحات</h3>\n              <p className=\"text-neutral-600\">\n                حققنا نجاحات متعددة مع عملائنا في مختلف القطاعات وأنجزنا مئات المشاريع بكفاءة عالية\n              </p>\n            </div>\n          </div>\n        </section>\n        \n        {/* خدماتنا */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-2 text-center\">خدماتنا البرمجية</h2>\n          <p className=\"text-center text-neutral-600 mb-8\">\n            نقدم مجموعة متكاملة من الخدمات البرمجية لتلبية احتياجات عملائنا\n          </p>\n          \n          <div className=\"grid md:grid-cols-2 gap-6 mb-8\">\n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">تطوير تطبيقات الجوال</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                تصميم وتطوير تطبيقات احترافية لأنظمة iOS وAndroid مع واجهات مستخدم سلسة وأداء عالي\n              </p>\n              <Link href=\"/services/mobile-app-development\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                المزيد من التفاصيل\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">تطوير المواقع الإلكترونية</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                تصميم وبرمجة مواقع إلكترونية عصرية ومتجاوبة مع جميع الأجهزة ومحسنة لمحركات البحث\n              </p>\n              <Link href=\"/services/website-development\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                المزيد من التفاصيل\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">تطوير المتاجر الإلكترونية</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                إنشاء متاجر إلكترونية متكاملة مع أنظمة دفع آمنة وإدارة مخزون وتجربة تسوق سلسة\n              </p>\n              <Link href=\"/services/ecommerce-development\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                المزيد من التفاصيل\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-3 text-primary\">تطوير الأنظمة الإدارية</h3>\n              <p className=\"text-neutral-600 mb-4\">\n                تصميم أنظمة إدارية مخصصة لتحسين سير العمل وزيادة الإنتاجية وإدارة الموارد بكفاءة\n              </p>\n              <Link href=\"/services/management-systems\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n                المزيد من التفاصيل\n                <ArrowLeft className=\"h-4 w-4 mr-1 rtl-flip\" />\n              </Link>\n            </div>\n          </div>\n          \n          <div className=\"text-center\">\n            <Button asChild>\n              <Link href=\"/services\">\n                عرض جميع الخدمات\n                <ArrowLeft className=\"mr-2 rtl-flip\" />\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* منهجية العمل */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            منهجيتنا في تنفيذ المشاريع\n          </h2>\n          \n          <div className=\"space-y-6\">\n            <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex-shrink-0 flex items-center justify-center\">1</div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">تحليل المتطلبات</h3>\n                <p className=\"text-neutral-600\">\n                  نبدأ بفهم متطلبات عملك واحتياجاتك بشكل دقيق من خلال جلسات استماع وتحليل شامل للأهداف والتحديات\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex-shrink-0 flex items-center justify-center\">2</div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">التصميم والتخطيط</h3>\n                <p className=\"text-neutral-600\">\n                  نقوم بتصميم حلول مخصصة وخطة عمل تفصيلية تناسب أهدافك وميزانيتك مع وضع جدول زمني واضح للتنفيذ\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex-shrink-0 flex items-center justify-center\">3</div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">التطوير والاختبار</h3>\n                <p className=\"text-neutral-600\">\n                  ينفذ فريقنا المشروع باستخدام أحدث التقنيات مع إجراء اختبارات مستمرة لضمان الجودة والأداء الأمثل\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col md:flex-row gap-6 items-start\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex-shrink-0 flex items-center justify-center\">4</div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">الإطلاق والدعم</h3>\n                <p className=\"text-neutral-600\">\n                  نقوم بإطلاق المشروع مع تقديم الدعم الفني المستمر والصيانة والتحسينات اللازمة لضمان استمرارية النجاح\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* قسم المزايا */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <div className=\"grid md:grid-cols-2 gap-10\">\n            <div>\n              <h2 className=\"text-2xl md:text-3xl font-bold mb-6\">\n                مزايا التعامل معنا\n              </h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-start gap-3\">\n                  <CheckCircle className=\"text-primary mt-1 h-5 w-5 flex-shrink-0\" />\n                  <p className=\"text-neutral-700\">\n                    <span className=\"font-bold\">حلول مخصصة</span> - نصمم حلولاً برمجية تناسب احتياجات عملك الخاصة\n                  </p>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <CheckCircle className=\"text-primary mt-1 h-5 w-5 flex-shrink-0\" />\n                  <p className=\"text-neutral-700\">\n                    <span className=\"font-bold\">فريق سعودي</span> - نفتخر بفريقنا من المطورين السعوديين ذوي الكفاءة العالية\n                  </p>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <CheckCircle className=\"text-primary mt-1 h-5 w-5 flex-shrink-0\" />\n                  <p className=\"text-neutral-700\">\n                    <span className=\"font-bold\">دعم فني مستمر</span> - نقدم دعماً فنياً على مدار الساعة لضمان استمرارية عمل أنظمتك\n                  </p>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <CheckCircle className=\"text-primary mt-1 h-5 w-5 flex-shrink-0\" />\n                  <p className=\"text-neutral-700\">\n                    <span className=\"font-bold\">أسعار تنافسية</span> - نقدم خدمات عالية الجودة بأسعار تناسب مختلف الميزانيات\n                  </p>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <CheckCircle className=\"text-primary mt-1 h-5 w-5 flex-shrink-0\" />\n                  <p className=\"text-neutral-700\">\n                    <span className=\"font-bold\">الالتزام بالمواعيد</span> - نحرص على تسليم المشاريع في الوقت المحدد دون تأخير\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl\">\n              <h3 className=\"font-bold text-xl mb-4 text-center\">آراء عملائنا</h3>\n              \n              <div className=\"space-y-6\">\n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                  <div className=\"flex items-center gap-1 text-amber-500 mb-2\">\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                  </div>\n                  <p className=\"text-neutral-700 mb-3\">\n                    \"تعاملت مع شركة لينكتك لتطوير تطبيق لشركتي، وكانت التجربة ممتازة من حيث الاحترافية وجودة العمل والالتزام بالمواعيد.\"\n                  </p>\n                  <p className=\"font-bold\">محمد السعيد</p>\n                  <p className=\"text-sm text-neutral-500\">مدير شركة تكنولوجيا</p>\n                </div>\n                \n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                  <div className=\"flex items-center gap-1 text-amber-500 mb-2\">\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                    <Star className=\"fill-amber-500 h-4 w-4\" />\n                  </div>\n                  <p className=\"text-neutral-700 mb-3\">\n                    \"ساعدتنا لينكتك في تطوير متجرنا الإلكتروني بشكل احترافي، وقد ساهم ذلك في زيادة مبيعاتنا بنسبة 40% خلال الأشهر الستة الأولى.\"\n                  </p>\n                  <p className=\"font-bold\">سارة الأحمد</p>\n                  <p className=\"text-sm text-neutral-500\">صاحبة متجر إلكتروني</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* قسم الدعوة للعمل */}\n        <section className=\"bg-gradient-to-r from-primary to-primary/80 text-white rounded-2xl p-8 md:p-12 text-center\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\n            هل أنت جاهز لتحويل فكرتك إلى واقع؟\n          </h2>\n          <p className=\"mb-8 text-white/90 max-w-3xl mx-auto\">\n            تواصل معنا اليوم لمناقشة مشروعك والحصول على استشارة مجانية. فريقنا جاهز لمساعدتك في تحقيق أهدافك التقنية.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\" variant=\"secondary\">\n              <Link href=\"/contact\">\n                تواصل معنا الآن\n              </Link>\n            </Button>\n            \n            <Button asChild size=\"lg\" variant=\"outline\" className=\"bg-white/10 border-white/20 hover:bg-white/20\">\n              <Link href=\"/services\">\n                استعرض خدماتنا\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* الأسئلة الشائعة */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            الأسئلة الشائعة\n          </h2>\n          \n          <div className=\"space-y-6\">\n            <div className=\"border-b border-neutral-200 pb-4\">\n              <h3 className=\"font-bold text-xl mb-2\">كم تستغرق عملية تطوير التطبيق أو الموقع؟</h3>\n              <p className=\"text-neutral-600\">\n                تختلف مدة التطوير حسب تعقيد المشروع ومتطلباته. عادة، تستغرق المشاريع الصغيرة من 4-8 أسابيع، بينما قد تستغرق المشاريع المتوسطة والكبيرة من 2-6 أشهر. نقدم لك جدولاً زمنياً دقيقاً بعد دراسة متطلباتك.\n              </p>\n            </div>\n            \n            <div className=\"border-b border-neutral-200 pb-4\">\n              <h3 className=\"font-bold text-xl mb-2\">ما هي تكلفة تطوير تطبيق أو موقع إلكتروني؟</h3>\n              <p className=\"text-neutral-600\">\n                تعتمد التكلفة على حجم المشروع وتعقيده والميزات المطلوبة. نحن نقدم أسعاراً تنافسية تناسب مختلف الميزانيات، ونعمل معك لتحديد الحل الأمثل الذي يحقق أهدافك ضمن ميزانيتك المتاحة.\n              </p>\n            </div>\n            \n            <div className=\"border-b border-neutral-200 pb-4\">\n              <h3 className=\"font-bold text-xl mb-2\">هل تقدمون خدمات الصيانة والدعم بعد إطلاق المشروع؟</h3>\n              <p className=\"text-neutral-600\">\n                نعم، نقدم خدمات الصيانة والدعم الفني المستمر لجميع مشاريعنا. لدينا باقات دعم مختلفة تشمل التحديثات الدورية وإصلاح الأخطاء وتحسين الأداء لضمان استمرارية عمل مشروعك بكفاءة.\n              </p>\n            </div>\n            \n            <div>\n              <h3 className=\"font-bold text-xl mb-2\">هل يمكنكم تطوير مشروع موجود مسبقاً؟</h3>\n              <p className=\"text-neutral-600\">\n                نعم، يمكننا العمل على تطوير وتحسين المشاريع الموجودة مسبقاً. نقوم بتقييم المشروع الحالي وتحديد نقاط القوة والضعف، ثم نضع خطة لتطويره وتحسينه بما يتناسب مع احتياجاتك.\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"text-center mt-8\">\n            <Link href=\"/faq\" className=\"text-primary hover:text-primary-dark inline-flex items-center\">\n              عرض جميع الأسئلة الشائعة\n              <ArrowLeft className=\"mr-1 h-4 w-4 rtl-flip\" />\n            </Link>\n          </div>\n        </section>\n      </div>\n    </StaticPageLayout>\n  );\n};\n\nexport default SoftwareCompanySaudiPage;","size_bytes":21946},"client/src/pages/services/software-development.tsx":{"content":"import StaticPageLayout from \"@/components/seo/StaticPageLayout\";\nimport ServiceSchema from \"@/components/seo/ServiceSchema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport {\n  Code,\n  Terminal,\n  Settings,\n  Database,\n  Server,\n  Cloud,\n  ShieldCheck,\n  FileCode,\n  CheckCircle,\n  ArrowLeft,\n  BarChart,\n  Layers,\n} from \"lucide-react\";\n\nconst SoftwareDevelopmentPage = () => {\n  return (\n    <StaticPageLayout\n      title=\"خدمات تطوير برمجيات احترافية | حلول برمجية متكاملة - لينكتك\"\n      description=\"نقدم خدمات تطوير برمجيات احترافية تشمل برمجة التطبيقات، تطوير الأنظمة المخصصة، تكامل الخدمات، وتطوير واجهات API. فريق متخصص من المطورين ذوي الخبرة لتلبية احتياجات عملك.\"\n      keywords=\"تطوير برمجيات, خدمات برمجية, تطوير أنظمة مخصصة, برمجة تطبيقات, تطوير API, تكامل خدمات, حلول برمجية, شركة برمجة, تطوير نظام, برمجة مخصصة\"\n      breadcrumbs={[\n        { name: \"الرئيسية\", url: \"/\" },\n        { name: \"الخدمات\", url: \"/services\" },\n        { name: \"خدمات تطوير برمجيات\", url: \"/services/software-development\" }\n      ]}\n      structuredData={\n        <ServiceSchema\n          name=\"خدمات تطوير البرمجيات\"\n          description=\"خدمات تطوير برمجيات احترافية تشمل برمجة التطبيقات، تطوير الأنظمة المخصصة، وتكامل الخدمات\"\n          url=\"https://linktech.app/services/software-development\"\n          provider=\"لينكتك\"\n          providerUrl=\"https://linktech.app\"\n          imageUrl=\"https://linktech.app/images/software-development.jpg\"\n          serviceArea=\"المملكة العربية السعودية\"\n        />\n      }\n    >\n      <div className=\"space-y-12\">\n        {/* القسم الرئيسي */}\n        <section className=\"text-center mb-16\">\n          <h1 className=\"text-3xl md:text-5xl font-bold mb-6 leading-tight\">\n            <span className=\"bg-clip-text text-transparent bg-gradient-to-l from-primary to-primary/80\">خدمات تطوير برمجيات</span>\n            <br />احترافية وحلول متكاملة\n          </h1>\n          <p className=\"text-lg md:text-xl text-neutral-600 mb-8 max-w-3xl mx-auto\">\n            نقدم خدمات برمجية متكاملة لتلبية احتياجات عملك، بدءاً من تطوير التطبيقات إلى أنظمة الشركات المعقدة\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\">\n              <Link href=\"/contact\">\n                احصل على عرض سعر\n              </Link>\n            </Button>\n            <Button asChild variant=\"outline\" size=\"lg\">\n              <Link href=\"/services\">\n                استعرض خدماتنا\n              </Link>\n            </Button>\n          </div>\n        </section>\n        \n        {/* الخدمات البرمجية */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            خدماتنا البرمجية المتكاملة\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start h-full\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Code className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطوير التطبيقات</h3>\n              <p className=\"text-neutral-600\">\n                تطوير تطبيقات احترافية لمختلف المنصات (ويب، جوال، سطح المكتب) بأحدث التقنيات والمعايير.\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start h-full\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Settings className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">أنظمة مخصصة</h3>\n              <p className=\"text-neutral-600\">\n                تطوير أنظمة برمجية مخصصة تناسب احتياجات عملك الفريدة وتساعد في أتمتة العمليات وزيادة الإنتاجية.\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start h-full\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Database className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">قواعد البيانات</h3>\n              <p className=\"text-neutral-600\">\n                تصميم وتطوير وتحسين قواعد البيانات لضمان أداء أمثل وتخزين آمن وفعال للبيانات.\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start h-full\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <FileCode className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطوير واجهات API</h3>\n              <p className=\"text-neutral-600\">\n                تصميم وتطوير واجهات برمجة التطبيقات (APIs) التي تسمح بالتكامل السلس بين الأنظمة المختلفة.\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start h-full\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Server className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">تطوير البنية التحتية</h3>\n              <p className=\"text-neutral-600\">\n                تصميم وتنفيذ حلول البنية التحتية التقنية لضمان توفر الخدمات وقابلية التوسع والأداء العالي.\n              </p>\n            </div>\n            \n            <div className=\"bg-neutral-50 p-6 rounded-xl flex flex-col items-start h-full\">\n              <div className=\"bg-primary/10 p-3 rounded-lg flex items-center justify-center mb-4\">\n                <Cloud className=\"text-primary h-6 w-6\" />\n              </div>\n              <h3 className=\"font-bold text-lg mb-2\">حلول سحابية</h3>\n              <p className=\"text-neutral-600\">\n                تطوير وترحيل التطبيقات للعمل على منصات الحوسبة السحابية مثل AWS وAzure وGoogle Cloud.\n              </p>\n            </div>\n          </div>\n        </section>\n        \n        {/* التكنولوجيا التي نستخدمها */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-2 text-center\">التقنيات التي نستخدمها</h2>\n          <p className=\"text-center text-neutral-600 mb-8\">\n            نستخدم أحدث التقنيات والأدوات البرمجية لتقديم حلول متطورة وقابلة للتوسع\n          </p>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <Terminal className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">Frontend</h3>\n              <p className=\"text-sm text-neutral-600\">React.js, Angular, Vue.js</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <Server className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">Backend</h3>\n              <p className=\"text-sm text-neutral-600\">Node.js, Django, Laravel</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <Layers className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">Mobile</h3>\n              <p className=\"text-sm text-neutral-600\">React Native, Flutter, Swift</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <Database className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">Database</h3>\n              <p className=\"text-sm text-neutral-600\">PostgreSQL, MongoDB, MySQL</p>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <Cloud className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">Cloud</h3>\n              <p className=\"text-sm text-neutral-600\">AWS, Azure, Google Cloud</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <Code className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">DevOps</h3>\n              <p className=\"text-sm text-neutral-600\">Docker, Kubernetes, CI/CD</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <BarChart className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">Analytics</h3>\n              <p className=\"text-sm text-neutral-600\">Elasticsearch, Kibana, Grafana</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-neutral-50 h-16 w-16 mx-auto mb-2 rounded-full flex items-center justify-center\">\n                <ShieldCheck className=\"h-8 w-8 text-black\" />\n              </div>\n              <h3 className=\"font-bold\">Security</h3>\n              <p className=\"text-sm text-neutral-600\">OAuth, JWT, HTTPS/SSL</p>\n            </div>\n          </div>\n        </section>\n        \n        {/* منهجية العمل */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            منهجيتنا في تطوير البرمجيات\n          </h2>\n          \n          <div className=\"space-y-8 md:space-y-0 md:grid md:grid-cols-4 md:gap-6\">\n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">1</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">تحليل وتخطيط</h3>\n                <p className=\"text-neutral-600 text-sm\">فهم متطلباتك وتحديد الحلول المناسبة</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">2</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">تصميم وتطوير</h3>\n                <p className=\"text-neutral-600 text-sm\">تصميم وتطوير الحلول البرمجية</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">3</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">اختبار وضمان الجودة</h3>\n                <p className=\"text-neutral-600 text-sm\">اختبارات شاملة لضمان جودة المنتج</p>\n              </div>\n            </div>\n            \n            <div className=\"hidden md:block border-t-2 border-dashed border-neutral-300 self-center\"></div>\n            \n            <div className=\"flex md:flex-col items-center justify-start md:text-center\">\n              <div className=\"bg-primary text-white font-bold rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 md:mb-4\">4</div>\n              <div className=\"mr-4 md:mr-0\">\n                <h3 className=\"font-bold text-lg mb-1\">النشر والدعم</h3>\n                <p className=\"text-neutral-600 text-sm\">نشر الحلول وتقديم الدعم المستمر</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-12\">\n            <h3 className=\"font-bold text-xl mb-4 text-center\">نموذج التطوير الذي نتبعه</h3>\n            <p className=\"text-neutral-600 text-center mb-6\">\n              نعتمد نموذج Agile في تطوير البرمجيات مما يسمح لنا بالمرونة والتكيف مع المتطلبات المتغيرة وتقديم قيمة مستمرة\n            </p>\n            \n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <div className=\"bg-neutral-50 p-4 rounded-lg\">\n                <h4 className=\"font-bold text-center mb-2\">سرعة التطوير</h4>\n                <p className=\"text-sm text-neutral-600 text-center\">\n                  تسليم أجزاء من المشروع بشكل دوري ومتكرر (Sprints) مما يتيح رؤية نتائج سريعة\n                </p>\n              </div>\n              \n              <div className=\"bg-neutral-50 p-4 rounded-lg\">\n                <h4 className=\"font-bold text-center mb-2\">المرونة والتكيف</h4>\n                <p className=\"text-sm text-neutral-600 text-center\">\n                  القدرة على التكيف مع المتطلبات المتغيرة وتعديل الخطط بناء على التغذية الراجعة\n                </p>\n              </div>\n              \n              <div className=\"bg-neutral-50 p-4 rounded-lg\">\n                <h4 className=\"font-bold text-center mb-2\">مشاركة العميل</h4>\n                <p className=\"text-sm text-neutral-600 text-center\">\n                  إشراك العميل في جميع مراحل التطوير لضمان تلبية التوقعات وتحقيق النتائج المرجوة\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* المزايا */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-8 text-center\">\n            لماذا تختار خدماتنا في تطوير البرمجيات؟\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <CheckCircle className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">خبرة واسعة</h3>\n                <p className=\"text-neutral-600\">\n                  فريق من المطورين ذوي الخبرة في مختلف التقنيات والصناعات، مما يضمن تقديم حلول مناسبة لاحتياجاتك.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <CheckCircle className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">حلول مخصصة</h3>\n                <p className=\"text-neutral-600\">\n                  نطور حلولاً مخصصة تماماً لاحتياجات عملك الفريدة بدلاً من الاعتماد على الحلول الجاهزة غير المرنة.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <CheckCircle className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">جودة عالية</h3>\n                <p className=\"text-neutral-600\">\n                  نلتزم بأعلى معايير الجودة في جميع مراحل التطوير مع اختبارات شاملة لضمان منتج نهائي خالٍ من الأخطاء.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <CheckCircle className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">التزام بالمواعيد</h3>\n                <p className=\"text-neutral-600\">\n                  نحرص على تسليم المشاريع في الوقت المحدد مع الحفاظ على الجودة والمتطلبات المتفق عليها.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <CheckCircle className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">دعم فني متميز</h3>\n                <p className=\"text-neutral-600\">\n                  نقدم دعماً فنياً متميزاً بعد إطلاق المشروع لضمان استمرارية عمل الأنظمة بكفاءة وحل أي مشكلات.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary/10 p-3 rounded-full flex-shrink-0\">\n                <CheckCircle className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-bold text-xl mb-2\">قابلية التوسع</h3>\n                <p className=\"text-neutral-600\">\n                  نصمم حلولنا بطريقة تسمح بالتوسع المستقبلي ومواكبة نمو أعمالك دون الحاجة لإعادة بناء الأنظمة.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        {/* الباقات والأسعار */}\n        <section className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-2 text-center\">نماذج التعاقد والأسعار</h2>\n          <p className=\"text-center text-neutral-600 mb-8\">\n            نقدم نماذج تعاقد مرنة تناسب احتياجات مختلف المشاريع والميزانيات\n          </p>\n          \n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-1\">المشروع الكامل</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">تطوير مشروع كامل بنطاق وميزانية محددين</p>\n              <div className=\"mb-4\">\n                <span className=\"text-primary font-bold\">الميزات:</span>\n                <ul className=\"mt-2 space-y-1\">\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">تكلفة ثابتة ومحددة مسبقاً</span>\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">نطاق عمل واضح ومحدد</span>\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">جدول زمني محدد للتسليم</span>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"text-center bg-neutral-50 p-3 rounded-lg mb-4\">\n                <span className=\"block text-sm text-neutral-600\">يبدأ من</span>\n                <span className=\"text-2xl font-bold text-primary\">20,000 ر.س.</span>\n              </div>\n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?model=fixed\">\n                  طلب عرض سعر\n                </Link>\n              </Button>\n            </div>\n            \n            <div className=\"border-2 border-primary rounded-xl p-6 shadow-md relative\">\n              <div className=\"absolute -top-4 right-4 bg-primary text-white text-sm py-1 px-3 rounded-full\">الأكثر شيوعاً</div>\n              <h3 className=\"font-bold text-xl mb-1\">نموذج الساعات</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">الدفع بناءً على ساعات العمل الفعلية</p>\n              <div className=\"mb-4\">\n                <span className=\"text-primary font-bold\">الميزات:</span>\n                <ul className=\"mt-2 space-y-1\">\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">مرونة في تغيير النطاق والمتطلبات</span>\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">تحكم أكبر في المشروع</span>\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">تقارير دورية عن التقدم والساعات</span>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"text-center bg-neutral-50 p-3 rounded-lg mb-4\">\n                <span className=\"block text-sm text-neutral-600\">سعر الساعة</span>\n                <span className=\"text-2xl font-bold text-primary\">250 - 350 ر.س.</span>\n              </div>\n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?model=hourly\">\n                  طلب عرض سعر\n                </Link>\n              </Button>\n            </div>\n            \n            <div className=\"border border-neutral-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n              <h3 className=\"font-bold text-xl mb-1\">الفريق المخصص</h3>\n              <p className=\"text-neutral-600 text-sm mb-4\">فريق متكامل لمشاريع طويلة الأمد</p>\n              <div className=\"mb-4\">\n                <span className=\"text-primary font-bold\">الميزات:</span>\n                <ul className=\"mt-2 space-y-1\">\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">فريق متكامل من المتخصصين</span>\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">مناسب للمشاريع طويلة الأمد</span>\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"text-primary h-4 w-4 flex-shrink-0\" />\n                    <span className=\"text-neutral-600 text-sm\">تكلفة شهرية ثابتة</span>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"text-center bg-neutral-50 p-3 rounded-lg mb-4\">\n                <span className=\"block text-sm text-neutral-600\">شهرياً (للفريق)</span>\n                <span className=\"text-2xl font-bold text-primary\">بدءاً من 30,000 ر.س.</span>\n              </div>\n              <Button asChild className=\"w-full\">\n                <Link href=\"/contact?model=dedicated\">\n                  طلب عرض سعر\n                </Link>\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"text-center mt-8\">\n            <p className=\"text-neutral-600 mb-4\">\n              هل تحتاج إلى نموذج تعاقد مخصص؟ تواصل معنا لمناقشة احتياجاتك وتصميم نموذج يناسبك.\n            </p>\n            <Link href=\"/contact\" className=\"text-primary hover:text-primary-dark inline-flex items-center font-medium\">\n              تواصل معنا للحصول على نموذج مخصص\n              <ArrowLeft className=\"mr-1 h-4 w-4 rtl-flip\" />\n            </Link>\n          </div>\n        </section>\n        \n        {/* قسم الدعوة للعمل */}\n        <section className=\"bg-gradient-to-r from-primary to-primary/80 text-white rounded-2xl p-8 md:p-12 text-center\">\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\n            جاهز لبدء مشروعك البرمجي؟\n          </h2>\n          <p className=\"mb-8 text-white/90 max-w-3xl mx-auto\">\n            تواصل معنا اليوم لمناقشة احتياجاتك البرمجية والحصول على استشارة مجانية. فريقنا جاهز لتحويل أفكارك إلى واقع.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button asChild size=\"lg\" variant=\"secondary\">\n              <Link href=\"/contact\">\n                تواصل معنا الآن\n              </Link>\n            </Button>\n            \n            <Button asChild size=\"lg\" variant=\"outline\" className=\"bg-white/10 border-white/20 hover:bg-white/20\">\n              <Link href=\"/portfolio\">\n                مشاريعنا السابقة\n              </Link>\n            </Button>\n          </div>\n        </section>\n      </div>\n    </StaticPageLayout>\n  );\n};\n\nexport default SoftwareDevelopmentPage;","size_bytes":28383},"client/src/pages/users/UserProfile.tsx":{"content":"import React from \"react\";\nimport { useParams } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Loader2, MailIcon, User2Icon } from \"lucide-react\";\nimport { getInitials, formatDate } from \"@/lib/utils\";\n\nconst UserProfile = () => {\n  const { id } = useParams();\n  const userId = parseInt(id || \"0\");\n\n  const {\n    data: user,\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: [\"/api/users\", userId],\n    queryFn: async () => {\n      const response = await fetch(`/api/users/${userId}`);\n      if (!response.ok) {\n        throw new Error(\"فشل في جلب بيانات المستخدم\");\n      }\n      return response.json();\n    },\n    enabled: !!userId && !isNaN(userId),\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  if (error || !user) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <Card className=\"bg-destructive/10 border-destructive/30 mb-6\">\n          <CardContent className=\"p-6\">\n            <h2 className=\"text-xl font-semibold text-destructive mb-2\">خطأ في تحميل بيانات المستخدم</h2>\n            <p className=\"text-neutral-700\">لم نتمكن من العثور على المستخدم المطلوب.</p>\n          </CardContent>\n        </Card>\n        <Button variant=\"outline\" onClick={() => window.history.back()}>\n          العودة للخلف\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-6\">\n      <Helmet>\n        <title>{user.name} | لينكتك</title>\n      </Helmet>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"md:col-span-1\">\n          <Card>\n            <CardHeader>\n              <CardTitle>معلومات الشخصية</CardTitle>\n            </CardHeader>\n            <CardContent className=\"flex flex-col items-center text-center\">\n              <Avatar className=\"h-24 w-24 mb-4\">\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback>{getInitials(user.name)}</AvatarFallback>\n              </Avatar>\n              <h2 className=\"text-2xl font-bold mb-1\">{user.name}</h2>\n              <p className=\"text-neutral-500 mb-3\">{user.username}</p>\n              \n              <div className=\"w-full space-y-2 mt-2\">\n                <div className=\"flex items-center p-2 rounded-md border border-neutral-200 bg-neutral-50\">\n                  <MailIcon className=\"h-4 w-4 text-neutral-500 mr-2 rtl:ml-2 rtl:mr-0\" />\n                  <span className=\"text-sm\">{user.email}</span>\n                </div>\n                <div className=\"flex items-center p-2 rounded-md border border-neutral-200 bg-neutral-50\">\n                  <User2Icon className=\"h-4 w-4 text-neutral-500 mr-2 rtl:ml-2 rtl:mr-0\" />\n                  <span className=\"text-sm\">{user.role === \"admin\" ? \"مسؤول\" : user.role === \"company\" ? \"شركة\" : \"رائد أعمال\"}</span>\n                </div>\n              </div>\n              \n              <div className=\"w-full mt-4 pt-4 border-t border-neutral-200\">\n                <p className=\"text-sm text-neutral-500\">تاريخ الانضمام</p>\n                <p className=\"font-medium\">{formatDate(new Date(user.createdAt))}</p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <Card>\n            <CardHeader>\n              <CardTitle>الملف الشخصي</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-2\">معلومات إضافية</h3>\n                  <p className=\"text-neutral-600\">\n                    هذا المستخدم لديه دور <span className=\"font-medium\">{user.role === \"admin\" ? \"مسؤول\" : user.role === \"company\" ? \"شركة\" : \"رائد أعمال\"}</span> في المنصة.\n                  </p>\n                </div>\n\n                {user.role === \"company\" && (\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2\">معلومات الشركة</h3>\n                    <p className=\"text-neutral-600\">\n                      لعرض المزيد من المعلومات عن الشركة، يرجى زيارة صفحة الشركة المرتبطة بهذا الحساب.\n                    </p>\n                    <Button \n                      variant=\"outline\" \n                      className=\"mt-2\"\n                      onClick={() => window.location.href = `/companies/${user.id}`}\n                    >\n                      عرض صفحة الشركة\n                    </Button>\n                  </div>\n                )}\n\n                {user.role === \"entrepreneur\" && (\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2\">المشاريع</h3>\n                    <p className=\"text-neutral-600\">\n                      لعرض مشاريع رائد الأعمال، يرجى زيارة صفحة المشاريع الخاصة به.\n                    </p>\n                    <Button \n                      variant=\"outline\" \n                      className=\"mt-2\"\n                      onClick={() => window.location.href = `/projects?userId=${user.id}`}\n                    >\n                      عرض المشاريع\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <Button variant=\"outline\" onClick={() => window.history.back()}>\n          العودة للخلف\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;","size_bytes":6154},"client/src/pages/users/[id].tsx":{"content":"import React from \"react\";\nimport { useParams } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Loader2, MailIcon, User2Icon } from \"lucide-react\";\nimport { getInitials, formatDate } from \"@/lib/utils\";\n\nconst UserProfilePage = () => {\n  const { id } = useParams();\n  const userId = parseInt(id);\n\n  const {\n    data: user,\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: [\"/api/users\", userId],\n    queryFn: async () => {\n      const response = await fetch(`/api/users/${userId}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user\");\n      }\n      return response.json();\n    },\n    enabled: !!userId && !isNaN(userId),\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  if (error || !user) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <Card className=\"bg-destructive/10 border-destructive/30 mb-6\">\n          <CardContent className=\"p-6\">\n            <h2 className=\"text-xl font-semibold text-destructive mb-2\">خطأ في تحميل بيانات المستخدم</h2>\n            <p className=\"text-neutral-700\">لم نتمكن من العثور على المستخدم المطلوب.</p>\n          </CardContent>\n        </Card>\n        <Button variant=\"outline\" onClick={() => window.history.back()}>\n          العودة للخلف\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-6\">\n      <Helmet>\n        <title>{user.name} | لينكتك</title>\n      </Helmet>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"md:col-span-1\">\n          <Card>\n            <CardHeader>\n              <CardTitle>معلومات الشخصية</CardTitle>\n            </CardHeader>\n            <CardContent className=\"flex flex-col items-center text-center\">\n              <Avatar className=\"h-24 w-24 mb-4\">\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback>{getInitials(user.name)}</AvatarFallback>\n              </Avatar>\n              <h2 className=\"text-2xl font-bold mb-1\">{user.name}</h2>\n              <p className=\"text-neutral-500 mb-3\">{user.username}</p>\n              \n              <div className=\"w-full space-y-2 mt-2\">\n                <div className=\"flex items-center p-2 rounded-md border border-neutral-200 bg-neutral-50\">\n                  <MailIcon className=\"h-4 w-4 text-neutral-500 mr-2 rtl:ml-2 rtl:mr-0\" />\n                  <span className=\"text-sm\">{user.email}</span>\n                </div>\n                <div className=\"flex items-center p-2 rounded-md border border-neutral-200 bg-neutral-50\">\n                  <User2Icon className=\"h-4 w-4 text-neutral-500 mr-2 rtl:ml-2 rtl:mr-0\" />\n                  <span className=\"text-sm\">{user.role === \"admin\" ? \"مسؤول\" : user.role === \"company\" ? \"شركة\" : \"رائد أعمال\"}</span>\n                </div>\n              </div>\n              \n              <div className=\"w-full mt-4 pt-4 border-t border-neutral-200\">\n                <p className=\"text-sm text-neutral-500\">تاريخ الانضمام</p>\n                <p className=\"font-medium\">{formatDate(new Date(user.createdAt))}</p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <Card>\n            <CardHeader>\n              <CardTitle>الملف الشخصي</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-2\">معلومات إضافية</h3>\n                  <p className=\"text-neutral-600\">\n                    هذا المستخدم لديه دور <span className=\"font-medium\">{user.role === \"admin\" ? \"مسؤول\" : user.role === \"company\" ? \"شركة\" : \"رائد أعمال\"}</span> في المنصة.\n                  </p>\n                </div>\n\n                {user.role === \"company\" && (\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2\">معلومات الشركة</h3>\n                    <p className=\"text-neutral-600\">\n                      لعرض المزيد من المعلومات عن الشركة، يرجى زيارة صفحة الشركة المرتبطة بهذا الحساب.\n                    </p>\n                    <Button \n                      variant=\"outline\" \n                      className=\"mt-2\"\n                      onClick={() => window.location.href = `/companies/${user.id}`}\n                    >\n                      عرض صفحة الشركة\n                    </Button>\n                  </div>\n                )}\n\n                {user.role === \"entrepreneur\" && (\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-2\">المشاريع</h3>\n                    <p className=\"text-neutral-600\">\n                      لعرض مشاريع رائد الأعمال، يرجى زيارة صفحة المشاريع الخاصة به.\n                    </p>\n                    <Button \n                      variant=\"outline\" \n                      className=\"mt-2\"\n                      onClick={() => window.location.href = `/projects?userId=${user.id}`}\n                    >\n                      عرض المشاريع\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <Button variant=\"outline\" onClick={() => window.history.back()}>\n          العودة للخلف\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfilePage;","size_bytes":6127},"client/src/pages/blog/category/[slug].tsx":{"content":"import { useState } from 'react';\nimport { useParams, useLocation } from 'wouter';\nimport { useQuery } from '@tanstack/react-query';\nimport { Helmet } from 'react-helmet';\nimport { apiRequest } from '@/lib/queryClient';\nimport { \n  Tabs, \n  TabsContent, \n  TabsList, \n  TabsTrigger \n} from '@/components/ui/tabs';\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardFooter, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { \n  Loader2, \n  Search, \n  Calendar, \n  ArrowRight, \n  Tag,\n  ChevronLeft,\n  BookOpen,\n  Eye\n} from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\n\ninterface BlogPost {\n  id: number;\n  title: string;\n  slug: string;\n  excerpt: string | null;\n  content: string;\n  featuredImage: string | null;\n  status: string;\n  createdAt: string;\n  updatedAt: string;\n  categoryId: number | null;\n  authorId: number;\n  tags: string | null;\n  views: number;\n}\n\ninterface BlogCategory {\n  id: number;\n  name: string;\n  slug: string;\n  description: string | null;\n}\n\n/**\n * صفحة عرض مقالات فئة معينة في المدونة\n */\nexport default function BlogCategoryPage() {\n  const params = useParams<{ slug: string }>();\n  const [_, navigate] = useLocation();\n  const slug = params.slug; // الرابط المخصص (slug) للفئة\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  // استعلام لجلب الفئة بناءً على الرابط المخصص\n  const { \n    data: category, \n    isLoading: loadingCategory,\n    isError: categoryError\n  } = useQuery({\n    queryKey: ['/api/blog/categories/slug', slug],\n    queryFn: () => {\n      // تشفير الـ slug في حالة أنه يحتوي على أحرف عربية أو خاصة\n      const encodedSlug = encodeURIComponent(slug);\n      return apiRequest('GET', `/api/blog/categories/slug/${encodedSlug}`)\n        .then(res => res.json());\n    },\n  });\n  \n  // استعلام لجلب المقالات المنتمية للفئة\n  const { \n    data: posts, \n    isLoading: loadingPosts,\n    isError: postsError\n  } = useQuery({\n    queryKey: ['/api/blog/posts', { categoryId: category?.id }],\n    queryFn: () => {\n      if (!category?.id) return [];\n      return apiRequest('GET', `/api/blog/posts?categoryId=${category.id}`)\n        .then(res => res.json());\n    },\n    enabled: !!category?.id,\n  });\n  \n  // استعلام لجلب جميع فئات المدونة (للعرض في القائمة الجانبية)\n  const { \n    data: categories \n  } = useQuery({\n    queryKey: ['/api/blog/categories'],\n  });\n  \n  // تصفية المقالات حسب كلمة البحث\n  const filteredPosts = Array.isArray(posts) ? posts.filter((post: BlogPost) => {\n    const searchLower = searchTerm.toLowerCase();\n    return (post.title.toLowerCase().includes(searchLower) || \n           (post.excerpt ? post.excerpt.toLowerCase().includes(searchLower) : false) ||\n           (post.tags && typeof post.tags === 'string' ? post.tags.toLowerCase().includes(searchLower) : false));\n  }) : [];\n  \n  // تنسيق التاريخ\n  const formatDate = (dateString: string | Date) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ar-SA', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  \n  // العودة إلى صفحة المدونة الرئيسية\n  const goBack = () => {\n    navigate('/blog');\n  };\n  \n  // التوجه إلى مقال معين\n  const goToPost = (postSlug: string) => {\n    navigate(`/blog/${postSlug}`);\n  };\n  \n  // التوجه إلى فئة معينة\n  const goToCategory = (categorySlug: string) => {\n    navigate(`/blog/category/${categorySlug}`);\n  };\n  \n  // في حالة حدوث خطأ أثناء تحميل الفئة\n  if (categoryError) {\n    return (\n      <div className=\"container mx-auto py-20 text-center\">\n        <h1 className=\"text-4xl font-bold mb-6\">لم يتم العثور على الفئة</h1>\n        <p className=\"text-muted-foreground mb-8\">\n          الفئة التي تبحث عنها غير موجودة أو تم حذفها\n        </p>\n        <Button onClick={goBack}>\n          <ChevronLeft className=\"ml-2 h-4 w-4\" />\n          العودة إلى المدونة\n        </Button>\n      </div>\n    );\n  }\n  \n  return (\n    <>\n      <Helmet>\n        <title>{category?.name ? `${category.name} | لينكتك` : \"تحميل الفئة...\"}</title>\n        {category?.description && (\n          <meta name=\"description\" content={category.description} />\n        )}\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content={`https://linktech.app/blog/category/${slug}`} />\n      </Helmet>\n      \n      <div className=\"container mx-auto py-8\">\n        <Button \n          variant=\"ghost\" \n          onClick={goBack}\n          className=\"mb-6\"\n        >\n          <ChevronLeft className=\"ml-2 h-4 w-4\" />\n          العودة إلى المدونة\n        </Button>\n        \n        {loadingCategory ? (\n          <div className=\"flex items-center justify-center min-h-[300px]\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            <span className=\"mr-2\">جاري تحميل معلومات الفئة...</span>\n          </div>\n        ) : category ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-12 gap-8\">\n            <div className=\"md:col-span-8 space-y-6\">\n              <div>\n                <h1 className=\"text-3xl md:text-4xl font-bold mb-4\">\n                  {category.name}\n                </h1>\n                \n                {category.description && (\n                  <p className=\"text-muted-foreground mb-6\">\n                    {category.description}\n                  </p>\n                )}\n                \n                <div className=\"relative mb-8\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"ابحث في مقالات هذه الفئة...\"\n                    className=\"pl-10\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                  />\n                </div>\n                \n                {loadingPosts ? (\n                  <div className=\"flex items-center justify-center min-h-[200px]\">\n                    <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                    <span className=\"mr-2\">جاري تحميل المقالات...</span>\n                  </div>\n                ) : (\n                  <div className=\"space-y-6\">\n                    {filteredPosts.length === 0 ? (\n                      <div className=\"text-center py-12\">\n                        <BookOpen className=\"h-12 w-12 mx-auto text-muted-foreground/50 mb-4\" />\n                        <p className=\"text-muted-foreground\">\n                          لا توجد مقالات في هذه الفئة{searchTerm ? \" تطابق معايير البحث\" : \"\"}\n                        </p>\n                      </div>\n                    ) : (\n                      filteredPosts.map((post: BlogPost) => (\n                        <Card key={post.id} className=\"overflow-hidden\">\n                          {post.featuredImage && (\n                            <div className=\"w-full h-[200px] overflow-hidden\">\n                              <img\n                                src={post.featuredImage}\n                                alt={post.title}\n                                className=\"w-full h-full object-cover transition-transform hover:scale-105\"\n                              />\n                            </div>\n                          )}\n                          \n                          <CardHeader>\n                            <CardTitle className=\"text-2xl cursor-pointer hover:text-primary transition-colors\" onClick={() => goToPost(post.slug)}>\n                              {post.title}\n                            </CardTitle>\n                            <CardDescription className=\"flex items-center gap-4 text-sm\">\n                              <div className=\"flex items-center\">\n                                <Calendar className=\"ml-1 h-4 w-4\" />\n                                {formatDate(post.createdAt)}\n                              </div>\n                              <div className=\"flex items-center\">\n                                <Eye className=\"ml-1 h-4 w-4\" />\n                                {post.views} مشاهدة\n                              </div>\n                            </CardDescription>\n                          </CardHeader>\n                          \n                          <CardContent>\n                            {post.excerpt && (\n                              <p className=\"text-muted-foreground mb-4\">\n                                {post.excerpt}\n                              </p>\n                            )}\n                            \n                            {post.tags && (\n                              <div className=\"flex flex-wrap gap-2 mb-4\">\n                                <div className=\"flex items-center text-sm text-muted-foreground ml-2\">\n                                  <Tag className=\"ml-1 h-3 w-3\" />\n                                  الوسوم:\n                                </div>\n                                {post.tags.split(',').map((tag, index) => (\n                                  <Badge key={index} variant=\"outline\">\n                                    {tag.trim()}\n                                  </Badge>\n                                ))}\n                              </div>\n                            )}\n                          </CardContent>\n                          \n                          <CardFooter>\n                            <Button variant=\"link\" className=\"p-0\" onClick={() => goToPost(post.slug)}>\n                              قراءة المزيد\n                              <ArrowRight className=\"mr-2 h-4 w-4\" />\n                            </Button>\n                          </CardFooter>\n                        </Card>\n                      ))\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"md:col-span-4 space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>فئات المدونة</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                  {categories?.map((cat: BlogCategory) => (\n                    <Button\n                      key={cat.id}\n                      variant={category?.id === cat.id ? \"secondary\" : \"ghost\"}\n                      className=\"w-full justify-start\"\n                      onClick={() => goToCategory(cat.slug)}\n                    >\n                      {cat.name}\n                    </Button>\n                  ))}\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <h1 className=\"text-3xl font-bold mb-6\">لم يتم العثور على الفئة</h1>\n            <p className=\"text-muted-foreground mb-8\">\n              الفئة التي تبحث عنها غير موجودة أو تم حذفها\n            </p>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}","size_bytes":11622},"server/sadiqAuthService.ts":{"content":"/**\n * Sadiq Authentication Service\n * Handles automatic authentication with Sadiq API using email/password\n * Manages access token lifecycle and automatic refresh\n */\n\ninterface SadiqTokenResponse {\n  access_token: string;\n  expires_in: number;\n  token_type: string;\n  scope: string;\n  error: string | null;\n  errorMessage: string | null;\n}\n\ninterface SadiqAuthCache {\n  accessToken: string;\n  expiresAt: number;\n}\n\nclass SadiqAuthService {\n  private tokenCache: SadiqAuthCache | null = null;\n  private readonly BASE_URL = 'https://sandbox-api.sadq-sa.com';\n  private readonly TOKEN_ENDPOINT = '/connect/token';\n\n  /**\n   * Get a valid access token, refreshing if necessary\n   */\n  async getAccessToken(): Promise<string> {\n    // Check if we have a valid cached token\n    if (this.tokenCache && this.tokenCache.expiresAt > Date.now()) {\n      console.log('🔑 استخدام رمز الوصول المحفوظ مؤقتاً');\n      return this.tokenCache.accessToken;\n    }\n\n    // Try to get fresh token via authentication\n    try {\n      console.log('🔄 محاولة الحصول على رمز وصول جديد من صادق...');\n      const token = await this.authenticateWithSadiq();\n      return token;\n    } catch (authError) {\n      console.warn('⚠️ المصادقة التلقائية لم تنجح، التحقق من رمز وصول يدوي...');\n      \n      // Fallback to manual token if available  \n      const manualToken = process.env.SADIQ_ACCESS_TOKEN;\n      if (manualToken && manualToken.length > 50) {\n        console.log('✅ استخدام رمز الوصول المحفوظ مؤقتاً');\n        this.tokenCache = {\n          accessToken: manualToken,\n          expiresAt: Date.now() + (2 * 60 * 60 * 1000) // Cache for 2 hours\n        };\n        return manualToken;\n      }\n      \n      // More helpful error message\n      const errorMsg = `\n      ❌ لم يتم العثور على رمز وصول صالح لصادق\n      \n      لحل هذه المشكلة:\n      1. تأكد من صحة SADIQ_EMAIL و SADIQ_PASSWORD في الأسرار\n      2. أو أضف SADIQ_ACCESS_TOKEN الحالي في الأسرار\n      3. يمكنك الحصول على رمز وصول من حسابك في صادق وإضافته مؤقتاً\n      \n      الخطأ الأصلي: ${authError instanceof Error ? authError.message : String(authError)}\n      `;\n      \n      throw new Error(errorMsg);\n    }\n  }\n\n  /**\n   * Authenticate with Sadiq using email/password\n   */\n  private async authenticateWithSadiq(): Promise<string> {\n    try {\n      const email = process.env.SADIQ_EMAIL;\n      const password = process.env.SADIQ_PASSWORD;\n\n      if (!email || !password) {\n        throw new Error('Sadiq email or password not configured in environment variables');\n      }\n\n      console.log(`📧 تسجيل الدخول في صادق باستخدام: ${email.substring(0, 3)}***`);\n\n      // Use the correct Sadiq authentication endpoint\n      const authConfigs = [\n        {\n          endpoint: 'https://sandbox-api.sadq-sa.com/Authentication/Authority/Token',\n          params: {\n            grant_type: 'integration',\n            accountId: '98AA5961-3917-4595-A14B-ED5E99BDEBE4',\n            accountSecret: 'DcQ8FhLKTZC1QoTZXFJRMKqVMLoilUr6',\n            username: email,\n            password: password\n          },\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic SW50ZWdyYXRpb25jbGllbnQ6ZHZuY3h6dmNkc3NoYmJ6YXZyd2lkc2JkdmRnZmRoc2JjdmJkZ2Y='\n          }\n        }\n      ];\n\n      for (const config of authConfigs) {\n        console.log(`🔄 محاولة الاتصال بـ: ${config.endpoint}`);\n        \n        try {\n          const response = await fetch(config.endpoint, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              ...config.headers\n            },\n            body: new URLSearchParams(config.params)\n          });\n\n          if (response.ok) {\n            const tokenData: SadiqTokenResponse = await response.json();\n            \n            if (tokenData.error) {\n              console.error(`❌ خطأ في المصادقة من ${config.endpoint}:`, tokenData.errorMessage);\n              continue; // Try next endpoint\n            }\n\n            // Success! Cache the token with buffer time (subtract 5 minutes from expiry)\n            const expiresAt = Date.now() + ((tokenData.expires_in - 300) * 1000);\n            this.tokenCache = {\n              accessToken: tokenData.access_token,\n              expiresAt: expiresAt\n            };\n\n            console.log(`✅ تم تسجيل الدخول في صادق بنجاح من: ${config.endpoint}`);\n            console.log(`⏰ صالح حتى: ${new Date(expiresAt).toLocaleString('ar-SA')}`);\n            \n            return tokenData.access_token;\n          } else {\n            console.log(`❌ ${config.endpoint} فشل بحالة: ${response.status}`);\n            // Continue to next endpoint\n          }\n        } catch (endpointError) {\n          const error = endpointError as Error;\n          console.log(`❌ خطأ في الاتصال بـ ${config.endpoint}:`, error.message);\n          // Continue to next endpoint\n        }\n      }\n\n      // If all endpoints failed\n      throw new Error('جميع نقاط المصادقة فشلت - تأكد من صحة بيانات تسجيل الدخول');\n\n    } catch (error) {\n      console.error('❌ خطأ في المصادقة مع صادق:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Make authenticated request to Sadiq API\n   */\n  async makeAuthenticatedRequest(endpoint: string, options: RequestInit = {}): Promise<Response> {\n    const accessToken = await this.getAccessToken();\n    \n    const headers = {\n      'Authorization': `Bearer ${accessToken}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      ...options.headers\n    };\n\n    return fetch(`${this.BASE_URL}${endpoint}`, {\n      ...options,\n      headers\n    });\n  }\n\n  /**\n   * Upload document to Sadiq using CORRECT API endpoint with webhook integration\n   */\n  async uploadDocument(base64Content: string, fileName: string): Promise<{id: string, referenceNumber: string}> {\n    console.log(`📄 رفع وثيقة إلى صادق باستخدام API الصحيح مع webhook: ${fileName}`);\n    \n    try {\n      // First, get or configure webhook\n      let webhookId = await this.getOrCreateWebhook();\n      \n      // Use the CORRECT Sadiq API endpoint from user's curl\n      const endpoint = '/IntegrationService/Document/Bulk/Initiate-envelope-Base64';\n      const referenceNumber = `linktech-nda-project-${Date.now()}-${Math.random().toString(36).substr(2, 6)}`;\n      \n      // Use EXACT data format from user's curl command but with real webhook ID\n      const requestData = {\n        webhookId: webhookId,\n        referenceNumber: referenceNumber,\n        files: [\n          {\n            file: base64Content,\n            fileName: fileName,\n            password: \"\"\n          }\n        ]\n      };\n      \n      console.log(`🔄 رفع الوثيقة باستخدام endpoint: ${endpoint}`);\n      console.log(`📋 معرف المرجع: ${referenceNumber}`);\n      \n      const response = await this.makeAuthenticatedRequest(endpoint, {\n        method: 'POST',\n        body: JSON.stringify(requestData)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(`📋 Sadiq upload response:`, result);\n        \n        // Extract document ID from response - the real document ID is in bulkFileResponse\n        let documentId = result.data?.documentId || result.documentId || result.data?.id || result.id;\n        \n        // Check bulkFileResponse for the actual document ID\n        if (!documentId && result.data?.bulkFileResponse && result.data.bulkFileResponse.length > 0) {\n          const firstFile = result.data.bulkFileResponse[0];\n          documentId = firstFile?.documentId || firstFile?.id || firstFile?.fileId;\n          console.log(`📋 استخراج معرف الوثيقة من bulkFileResponse: ${documentId}`);\n        }\n        \n        // If still no document ID, use envelopeId as fallback instead of our reference\n        if (!documentId) {\n          documentId = result.data?.envelopeId || referenceNumber;\n          console.log(`📋 استخدام envelopeId كبديل: ${documentId}`);\n        }\n        \n        console.log(`✅ تم رفع الوثيقة بنجاح - معرف الوثيقة: ${documentId}`);\n        return { id: documentId, referenceNumber };\n      } else {\n        const errorText = await response.text();\n        console.log(`❌ فشل رفع الوثيقة مع حالة: ${response.status}`);\n        console.log(`📄 تفاصيل الخطأ: ${errorText.substring(0, 200)}`);\n        throw new Error(`Upload failed: ${response.status} - ${errorText.substring(0, 100)}`);\n      }\n    } catch (error) {\n      console.error(`❌ خطأ في رفع الوثيقة عبر صادق:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Format phone number to international format for Sadiq\n   */\n  private formatPhoneNumber(phoneNumber: string): string {\n    if (!phoneNumber) return \"\";\n    \n    // Remove any spaces, dashes, or parentheses\n    const cleaned = phoneNumber.replace(/[\\s\\-\\(\\)\\.]/g, '');\n    \n    // STRICT VALIDATION FOR SADIQ API - Only accept exact formats\n    // Must be +966XXXXXXXX (exactly 8 digits after +966)\n    \n    // Pattern: +966 followed by exactly 8 digits (mobile: 5XXXXXXX or landline: 1XXXXXXX)\n    const sadiqFormat = /^\\+966[15]\\d{7}$/;\n    \n    // If already in correct Sadiq format, return as is\n    if (sadiqFormat.test(cleaned)) {\n      console.log(`📞 رقم متوافق مع صادق: ${cleaned}`);\n      return cleaned;\n    }\n    \n    // Pattern: 00966 followed by exactly 8 digits - convert to +966\n    if (/^00966[15]\\d{7}$/.test(cleaned)) {\n      const converted = '+966' + cleaned.substring(5);\n      console.log(`📞 تم تحويل ${cleaned} إلى ${converted}`);\n      return converted;\n    }\n    \n    // Convert 05XXXXXXXX to +9665XXXXXXX (trim to exactly 8 digits after +966)\n    if (/^05\\d{8}$/.test(cleaned)) {\n      const converted = '+966' + cleaned.substring(1, 9); // Take only 8 digits after removing 0\n      console.log(`📞 تم تحويل ${cleaned} إلى ${converted}`);\n      return converted;\n    }\n    \n    // Convert 01XXXXXXXX to +9661XXXXXXX (trim to exactly 8 digits after +966)\n    if (/^01\\d{8}$/.test(cleaned)) {\n      const converted = '+966' + cleaned.substring(1, 9); // Take only 8 digits after removing 0\n      console.log(`📞 تم تحويل ${cleaned} إلى ${converted}`);\n      return converted;\n    }\n    \n    // If format doesn't match any expected pattern, log error and return empty\n    console.error(`❌ تنسيق رقم غير صحيح لصادق: ${cleaned} - يجب أن يكون +966 متبوعاً بـ 8 أرقام بالضبط`);\n    return \"\";\n  }\n\n  /**\n   * Send signing invitations via Sadiq using CORRECT API endpoint\n   */\n  async sendSigningInvitations(documentId: string, signatories: any[], projectTitle: string): Promise<{envelopeId: string}> {\n    console.log('📨 إرسال دعوات التوقيع باستخدام API الصحيح...');\n    \n    try {\n      // Use the CORRECT Sadiq API endpoint from user's curl\n      const endpoint = '/IntegrationService/Invitation/Send-Invitation';\n      \n      // Use EXACT data format from user's curl command\n      const requestData = {\n        documentId: documentId,\n        destinations: signatories.map((signatory, index) => ({\n          destinationName: signatory.fullName,\n          destinationEmail: signatory.email,\n          destinationPhoneNumber: this.formatPhoneNumber(signatory.phoneNumber) || \"\",\n          nationalId: signatory.nationalId || \"\",\n          signeOrder: index,\n          ConsentOnly: true, // Set to true so users only need to consent, not sign\n          signatories: [\n            {\n              signatureHigh: 80,\n              signatureWidth: 160,\n              pageNumber: 1,\n              text: \"\",\n              type: \"Signature\",\n              positionX: 70 + (index * 200), // Different positions for each signer\n              positionY: 500\n            }\n          ],\n          availableTo: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(), // 30 days from now\n          authenticationType: 1, // Use Nafath authentication\n          InvitationLanguage: 1, // Arabic\n          RedirectUrl: \"\",\n          AllowUserToAddDestination: false\n        })),\n        invitationMessage: `نرجو منك توقيع اتفاقية عدم الإفصاح المرفقة للمشروع: ${projectTitle}`,\n        invitationSubject: `اتفاقية عدم الإفصاح - مشروع ${projectTitle}`\n      };\n      \n      console.log(`🔄 إرسال دعوات باستخدام endpoint: ${endpoint}`);\n      console.log(`📧 عدد المدعوين: ${signatories.length}`);\n      \n      // طباعة البيانات الكاملة المرسلة إلى صادق\n      console.log('📋 البيانات الكاملة المرسلة إلى صادق API:');\n      console.log('📋 signatories input:', JSON.stringify(signatories, null, 2));\n      console.log('📋 requestData.destinations:', JSON.stringify(requestData.destinations, null, 2));\n      \n      const response = await this.makeAuthenticatedRequest(endpoint, {\n        method: 'POST',\n        body: JSON.stringify(requestData)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(`📋 Sadiq invitation response:`, result);\n        \n        // Check Sadiq's actual errorCode - 0 means success\n        if (result.errorCode === 0) {\n          // Extract envelope/invitation ID from response\n          const envelopeId = result.data?.envelopeId || result.envelopeId || result.data?.id || result.id || documentId;\n          \n          console.log(`✅ تم إرسال دعوات التوقيع بنجاح - معرف المغلف: ${envelopeId}`);\n          return { envelopeId };\n        } else {\n          // Sadiq returned an error (errorCode !== 0)\n          const errorMessage = result.message || `Sadiq error code: ${result.errorCode}`;\n          console.log(`❌ فشل إرسال الدعوات من صادق - كود الخطأ: ${result.errorCode}`);\n          console.log(`📄 رسالة الخطأ: ${errorMessage}`);\n          throw new Error(`Sadiq invitation failed: ${errorMessage} (Code: ${result.errorCode})`);\n        }\n      } else {\n        const errorText = await response.text();\n        console.log(`❌ فشل إرسال الدعوات مع حالة: ${response.status}`);\n        console.log(`📄 تفاصيل الخطأ: ${errorText.substring(0, 200)}`);\n        throw new Error(`Invitation failed: ${response.status} - ${errorText.substring(0, 100)}`);\n      }\n    } catch (error) {\n      console.error(`❌ خطأ في إرسال الدعوات عبر صادق:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Check envelope status\n   */\n  async getEnvelopeStatus(referenceNumber: string): Promise<any> {\n    console.log(`🔍 التحقق من حالة المغلف: ${referenceNumber}`);\n    \n    const response = await this.makeAuthenticatedRequest(`/IntegrationService/Document/envelope-status/referenceNumber/${referenceNumber}`, {\n      method: 'GET'\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to get envelope status: ${response.status}`);\n    }\n\n    const result = await response.json();\n    if (result.errorCode !== 0) {\n      throw new Error(`Sadiq status check error: ${result.message}`);\n    }\n\n    return result.data;\n  }\n\n  // Configure webhook for receiving status notifications\n  async configureWebhook(): Promise<string | null> {\n    try {\n      const token = await this.getAccessToken();\n      \n      // Get the current domain for webhook URL\n      const webhookUrl = process.env.REPLIT_DEV_DOMAIN \n        ? `https://${process.env.REPLIT_DEV_DOMAIN}/api/sadiq/webhook`\n        : 'https://your-domain.replit.app/api/sadiq/webhook';\n      \n      console.log(`🔗 تكوين webhook على: ${webhookUrl}`);\n      \n      const webhookConfig = {\n        webhookUrl: webhookUrl,\n        isDefault: true,\n        HeaderToken: \"linktech-webhook-secret-2025\" // Security token for verification\n      };\n\n      const response = await fetch(`${this.BASE_URL}/IntegrationService/Configuration/webhook`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify(webhookConfig)\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`⚠️ فشل في تكوين webhook: ${response.status} ${response.statusText}`, errorText);\n        return null;\n      }\n\n      const data = await response.json();\n      console.log(`✅ تم تكوين webhook بنجاح:`, data);\n      return data.id || data.webhookId; // Return webhook ID\n    } catch (error) {\n      console.error('❌ خطأ في تكوين webhook:', error);\n      return null;\n    }\n  }\n\n  // Get existing webhook configuration\n  async getWebhooks(): Promise<any[]> {\n    try {\n      const token = await this.getAccessToken();\n      \n      console.log('📋 استرجاع تكوينات webhook');\n      \n      const response = await fetch(`${this.BASE_URL}/IntegrationService/Configuration/webhook`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'accept': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        console.error(`⚠️ فشل في استرجاع webhooks: ${response.status} ${response.statusText}`);\n        return [];\n      }\n\n      const data = await response.json();\n      console.log(`✅ تم استرجاع ${data.length || 0} webhook`);\n      return data || [];\n    } catch (error) {\n      console.error('❌ خطأ في استرجاع webhooks:', error);\n      return [];\n    }\n  }\n\n  // Get or create webhook for our application\n  async getOrCreateWebhook(): Promise<string> {\n    try {\n      // First, try to get existing webhooks\n      const existingWebhooks = await this.getWebhooks();\n      \n      // Check if we already have a webhook for our domain\n      const currentDomain = process.env.REPLIT_DEV_DOMAIN;\n      const ourWebhook = existingWebhooks.find(webhook => \n        webhook.webhookUrl && webhook.webhookUrl.includes(currentDomain || 'replit.app')\n      );\n      \n      if (ourWebhook && ourWebhook.id) {\n        console.log(`✅ تم العثور على webhook موجود: ${ourWebhook.id}`);\n        return ourWebhook.id;\n      }\n      \n      // No existing webhook found, create a new one\n      console.log('🔗 لم يتم العثور على webhook موجود، إنشاء جديد...');\n      const webhookId = await this.configureWebhook();\n      \n      if (!webhookId) {\n        // Fallback to a default webhook ID if configuration fails\n        console.log('⚠️ فشل في إنشاء webhook، استخدام معرف افتراضي');\n        return \"3fa85f64-5717-4562-b3fc-2c963f66afa6\";\n      }\n      \n      return webhookId;\n    } catch (error) {\n      console.error('❌ خطأ في الحصول على أو إنشاء webhook:', error);\n      // Fallback to default webhook ID\n      return \"3fa85f64-5717-4562-b3fc-2c963f66afa6\";\n    }\n  }\n\n  /**\n   * Download signed document\n   */\n  async downloadSignedDocument(documentId: string): Promise<string> {\n    console.log(`⬇️ تنزيل الوثيقة الموقعة: ${documentId}`);\n    \n    const response = await this.makeAuthenticatedRequest(`/IntegrationService/Document/DownloadBase64/${documentId}`, {\n      method: 'GET'\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to download document: ${response.status}`);\n    }\n\n    const result = await response.json();\n    if (result.errorCode !== 0) {\n      throw new Error(`Sadiq download error: ${result.message}`);\n    }\n\n    console.log('✅ تم تنزيل الوثيقة الموقعة بنجاح');\n    return result.data.file; // Base64 content\n  }\n\n  /**\n   * Clear cached token (for testing or manual refresh)\n   */\n  clearTokenCache(): void {\n    this.tokenCache = null;\n    console.log('🗑️ تم مسح رمز الوصول المحفوظ مؤقتاً');\n  }\n}\n\n// Export singleton instance\nexport const sadiqAuth = new SadiqAuthService();","size_bytes":20708},"test-nda-complete.js":{"content":"/**\n * Test complete NDA creation workflow with both parties data\n */\n\nasync function testCompleteNdaWorkflow() {\n  console.log('🧪 اختبار سير العمل الكامل لاتفاقية عدم الإفصاح (طرفين) مع صادق\\n');\n  \n  try {\n    // Step 1: Test Sadiq authentication\n    console.log('1️⃣ اختبار المصادقة الديناميكية مع صادق...');\n    const { sadiqAuth } = await import('./server/sadiqAuthService.ts');\n    \n    let token;\n    try {\n      token = await sadiqAuth.getAccessToken();\n      console.log(`✅ تم الحصول على رمز الوصول: ${token.substring(0, 30)}...`);\n      console.log(`🔄 نوع المصادقة: ديناميكية (تتجدد مع كل جلسة)`);\n    } catch (authError) {\n      console.log('❌ فشل في الحصول على رمز الوصول:', authError.message.split('\\n')[0]);\n      console.log('\\n💡 لاختبار النظام الكامل، يرجى إضافة SADIQ_ACCESS_TOKEN في الأسرار أو التأكد من بيانات SADIQ_EMAIL و SADIQ_PASSWORD');\n      return;\n    }\n\n    // Step 2: Test PDF generation with real names\n    console.log('\\n2️⃣ اختبار إنشاء ملف PDF مع أسماء حقيقية لكلا الطرفين...');\n    const { generateProjectNdaPdf } = await import('./server/generateNDA.ts');\n    \n    const testProjectData = {\n      title: 'منصة التجارة الإلكترونية',\n      description: 'منصة متكاملة للتجارة الإلكترونية مع نظام دفع آمن'\n    };\n    \n    const testCompanyData = {\n      name: 'شركة التقنيات المتقدمة',\n      location: 'الرياض، المملكة العربية السعودية'\n    };\n    \n    // بيانات حقيقية بدلاً من الرموز المؤقتة\n    const testSigningData = {\n      entrepreneur: 'أحمد محمد السعودي',\n      companyRep: 'سارة علي التقنية'\n    };\n    \n    const pdfBuffer = await generateProjectNdaPdf(testProjectData, testCompanyData, testSigningData);\n    console.log(`✅ تم إنشاء ملف PDF مع أسماء حقيقية (${pdfBuffer.length} بايت)`);\n\n    // Step 3: Test document upload to Sadiq\n    console.log('\\n3️⃣ اختبار رفع الوثيقة إلى صادق...');\n    const base64Pdf = pdfBuffer.toString('base64');\n    const fileName = `NDA-${testProjectData.title.replace(/\\s+/g, '-')}-${Date.now()}.pdf`;\n    const uploadResult = await sadiqAuth.uploadDocument(base64Pdf, fileName);\n    console.log(`✅ تم رفع الوثيقة بنجاح - معرف الوثيقة: ${uploadResult.id}`);\n\n    // Step 4: Test sending invitations with complete contact info\n    console.log('\\n4️⃣ اختبار إرسال دعوات التوقيع لكلا الطرفين...');\n    const referenceNumber = `linktech-nda-${Date.now()}`;\n    const invitationData = {\n      referenceNumber,\n      envelopeDocument: {\n        documentId: uploadResult.id,\n        signOrder: 0\n      },\n      signatories: [\n        {\n          fullName: 'أحمد محمد السعودي',\n          email: 'ahmed.owner@example.com', \n          phoneNumber: '+966512345678',\n          signOrder: 0,\n          nationalId: '',\n          gender: 'NONE'\n        },\n        {\n          fullName: 'سارة علي التقنية',\n          email: 'sara.company@example.com',\n          phoneNumber: '+966523456789', \n          signOrder: 1,\n          nationalId: '',\n          gender: 'NONE'\n        }\n      ],\n      requestFields: [],\n      invitationMessage: `تم إنشاء اتفاقية عدم إفصاح للمشروع \"${testProjectData.title}\" عبر منصة لينكتك. يرجى المراجعة والتوقيع الإلكتروني لإكمال الاتفاقية.`\n    };\n\n    const invitationResult = await sadiqAuth.sendSigningInvitations(invitationData);\n    console.log(`✅ تم إرسال الدعوات بنجاح - معرف المغلف: ${invitationResult.envelopeId}`);\n    \n    console.log(`📧 تم إرسال دعوات التوقيع إلى:`);\n    console.log(`   - صاحب المشروع: ahmed.owner@example.com`);\n    console.log(`   - ممثل الشركة: sara.company@example.com`);\n\n    // Step 5: Test status checking\n    console.log('\\n5️⃣ اختبار التحقق من حالة المغلف...');\n    try {\n      const status = await sadiqAuth.checkEnvelopeStatus(referenceNumber);\n      console.log(`✅ حالة المغلف: ${status.data?.status || 'غير محدد'}`);\n    } catch (statusError) {\n      console.log(`⚠️ لم يتم التمكن من التحقق من الحالة: ${statusError.message}`);\n    }\n\n    console.log('\\n🎉 تم اختبار جميع خطوات سير العمل بنجاح!');\n    console.log('\\n📋 ملخص الاختبار النهائي:');\n    console.log(`✅ المصادقة الديناميكية: نجحت`);\n    console.log(`✅ إنشاء PDF مع بيانات حقيقية: ${pdfBuffer.length} بايت`);\n    console.log(`✅ رفع الوثيقة لصادق: ${uploadResult.id}`);\n    console.log(`✅ إرسال دعوات التوقيع لكلا الطرفين: ${invitationResult.envelopeId}`);\n    console.log(`📝 الرقم المرجعي: ${referenceNumber}`);\n    \n    console.log('\\n🚀 النظام جاهز للاستخدام مع البيانات الحقيقية!');\n    \n  } catch (error) {\n    console.error('\\n❌ خطأ في اختبار سير العمل:', error.message);\n    console.error('تفاصيل الخطأ:', error.stack);\n    \n    if (error.message.includes('token') || error.message.includes('authentication')) {\n      console.log('\\n💡 تلميح: تأكد من إضافة SADIQ_ACCESS_TOKEN صالح أو صحة بيانات SADIQ_EMAIL و SADIQ_PASSWORD');\n    }\n  }\n}\n\n// Run the test\ntestCompleteNdaWorkflow();","size_bytes":5887},"test-sadiq.js":{"content":"/**\n * Test script for Sadiq authentication service\n */\n\nasync function testSadiqAuth() {\n  try {\n    // Import the Sadiq authentication service\n    const { sadiqAuth } = await import('./server/sadiqAuthService.ts');\n    \n    console.log('🧪 اختبار خدمة المصادقة مع صادق...\\n');\n    \n    // Test getting access token\n    const token = await sadiqAuth.getAccessToken();\n    \n    console.log('✅ تم الحصول على رمز الوصول بنجاح!');\n    console.log(`📏 طول الرمز: ${token.length} حرف`);\n    console.log(`🔍 بداية الرمز: ${token.substring(0, 50)}...`);\n    console.log(`⏰ تم في: ${new Date().toLocaleString('ar-SA')}\\n`);\n    \n    // Test token caching by making another request\n    console.log('🔄 اختبار التخزين المؤقت للرمز...');\n    const cachedToken = await sadiqAuth.getAccessToken();\n    \n    if (token === cachedToken) {\n      console.log('✅ التخزين المؤقت يعمل بشكل صحيح - تم إرجاع نفس الرمز');\n    } else {\n      console.log('⚠️ تم إنشاء رمز جديد - قد يكون التخزين المؤقت لا يعمل');\n    }\n    \n    console.log('\\n🎉 جميع الاختبارات نجحت! خدمة صادق جاهزة للاستخدام.');\n    \n  } catch (error) {\n    console.error('❌ فشل في اختبار صادق:', error.message);\n    \n    if (error.message.includes('email') || error.message.includes('password')) {\n      console.error('💡 تأكد من إضافة SADIQ_EMAIL و SADIQ_PASSWORD في أسرار ريبليت');\n    }\n    \n    if (error.message.includes('authentication failed')) {\n      console.error('💡 تأكد من صحة بيانات تسجيل الدخول في صادق');\n    }\n    \n    process.exit(1);\n  }\n}\n\n// Run the test\ntestSadiqAuth();","size_bytes":1851},"test-nda-two-stage.js":{"content":"/**\n * Test the new two-stage NDA workflow\n */\n\nasync function testTwoStageNdaWorkflow() {\n  console.log('🧪 اختبار سير العمل الجديد ذو المرحلتين لاتفاقية عدم الإفصاح\\n');\n  \n  try {\n    // Test Stage 1: Company initiates NDA request\n    console.log('1️⃣ اختبار المرحلة الأولى: الشركة تنشئ طلب اتفاقية عدم إفصاح...');\n    \n    const companyData = {\n      companyRep: {\n        name: 'أحمد التقني',\n        email: 'ahmed@techcompany.com', \n        phone: '+966512345678'\n      }\n    };\n    \n    // Simulate API call to initiate NDA\n    console.log('📝 بيانات الشركة:');\n    console.log(`   - الاسم: ${companyData.companyRep.name}`);\n    console.log(`   - البريد: ${companyData.companyRep.email}`);\n    console.log(`   - الهاتف: ${companyData.companyRep.phone}`);\n    \n    console.log('✅ المرحلة الأولى جاهزة - سيتم إرسال الطلب إلى /api/projects/:projectId/nda/initiate');\n\n    // Simulate notification to project owner\n    console.log('\\n📧 إشعار صاحب المشروع:');\n    console.log('   تم إرسال إشعار لصاحب المشروع لإكمال بياناته');\n    console.log('   الحالة: awaiting_entrepreneur');\n\n    // Test Stage 2: Entrepreneur completes their information\n    console.log('\\n2️⃣ اختبار المرحلة الثانية: صاحب المشروع يكمل بياناته...');\n    \n    const entrepreneurData = {\n      entrepreneur: {\n        name: 'فاطمة السعودية',\n        email: 'fatima@startup.com',\n        phone: '+966523456789'\n      }\n    };\n    \n    console.log('📝 بيانات صاحب المشروع:');\n    console.log(`   - الاسم: ${entrepreneurData.entrepreneur.name}`);\n    console.log(`   - البريد: ${entrepreneurData.entrepreneur.email}`);\n    console.log(`   - الهاتف: ${entrepreneurData.entrepreneur.phone}`);\n    \n    console.log('✅ المرحلة الثانية جاهزة - سيتم إرسال البيانات إلى /api/nda/:ndaId/complete');\n\n    // Test Stage 3: Combined data ready for Sadiq\n    console.log('\\n3️⃣ اختبار الدمج: كلا الطرفين أكملوا بياناتهم...');\n    \n    const combinedData = {\n      signatories: [\n        {\n          fullName: entrepreneurData.entrepreneur.name,\n          email: entrepreneurData.entrepreneur.email,\n          phoneNumber: entrepreneurData.entrepreneur.phone,\n          signOrder: 0,\n          nationalId: '',\n          gender: 'NONE'\n        },\n        {\n          fullName: companyData.companyRep.name,\n          email: companyData.companyRep.email,\n          phoneNumber: companyData.companyRep.phone,\n          signOrder: 1,\n          nationalId: '',\n          gender: 'NONE'\n        }\n      ]\n    };\n    \n    console.log('👥 بيانات الموقعين المدمجة:');\n    console.log(`   - الطرف الأول: ${combinedData.signatories[0].fullName} (${combinedData.signatories[0].email})`);\n    console.log(`   - الطرف الثاني: ${combinedData.signatories[1].fullName} (${combinedData.signatories[1].email})`);\n    \n    console.log('✅ البيانات المدمجة جاهزة لإرسال دعوات صادق');\n    console.log('   الحالة: ready_for_sadiq → invitation_sent');\n\n    console.log('\\n🎉 سير العمل الجديد ذو المرحلتين جاهز للاستخدام!');\n    \n    console.log('\\n📋 ملخص التحسينات:');\n    console.log('✅ الشركة تملأ بياناتها فقط في البداية');\n    console.log('✅ إشعار تلقائي لصاحب المشروع');\n    console.log('✅ صاحب المشروع يكمل بياناته منفصلاً');\n    console.log('✅ تكامل مع صادق بعد اكتمال البيانات من الطرفين');\n    console.log('✅ تجربة مستخدم واقعية ومنطقية');\n    \n    console.log('\\n💡 فوائد النظام الجديد:');\n    console.log('• لا حاجة لحضور الطرفين في نفس الوقت');\n    console.log('• بيانات حقيقية من كل طرف');\n    console.log('• إشعارات تلقائية للأطراف المعنية');\n    console.log('• تتبع حالة الاتفاقية عبر النظام');\n    \n  } catch (error) {\n    console.error('\\n❌ خطأ في اختبار سير العمل ذو المرحلتين:', error.message);\n  }\n}\n\n// Run the test\ntestTwoStageNdaWorkflow();","size_bytes":4568},"client/src/pages/nda-complete.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation, useParams } from \"wouter\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { FileText, User, Phone, Mail, CheckCircle, Clock, UserCheck, AlertCircle } from \"lucide-react\";\nimport SEO from \"@/components/seo/SEO\";\nimport { validatePhoneNumber, validateEmail, validateName, validateContactForm } from '@/lib/validation';\n\ninterface NdaStatus {\n  id: number;\n  status: string;\n  envelopeStatus?: string;\n  createdAt?: string;\n  signedAt?: string;\n  projectId?: number;\n  sadiqReferenceNumber?: string;\n  sadiqStatus?: {\n    completionPercentage: number;\n    signedCount: number;\n    pendingCount: number;\n    totalSignatories: number;\n    createDate?: string;\n    signatories?: Array<{\n      id: string;\n      status: string;\n      fullName: string;\n      fullNameAr: string;\n      email: string;\n      phoneNumber: string;\n    }>;\n    documents?: Array<{\n      id: string;\n      fileName: string;\n      uploadDate: string;\n      sizeInKB: number;\n      isSigned: boolean;\n    }>;\n  };\n}\n\nexport default function NdaCompletePage() {\n  const params = useParams();\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  const ndaId = params.ndaId ? parseInt(params.ndaId) : null;\n  \n  // Get NDA status first\n  const { data: ndaStatus, isLoading: statusLoading, error: statusError } = useQuery<NdaStatus>({\n    queryKey: [`/api/nda/${ndaId}/status`],\n    enabled: !!ndaId,\n    retry: false,\n  });\n  \n  // معلومات صاحب المشروع\n  const [entrepreneurName, setEntrepreneurName] = useState(\"\");\n  const [entrepreneurEmail, setEntrepreneurEmail] = useState(\"\");\n  const [entrepreneurPhone, setEntrepreneurPhone] = useState(\"\");\n  const [agreed, setAgreed] = useState(false);\n  \n  // Validation states\n  const [nameValidation, setNameValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  const [emailValidation, setEmailValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  const [phoneValidation, setPhoneValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n\n  const completeNdaMutation = useMutation({\n    mutationFn: async (data: {\n      entrepreneur: { name: string; email: string; phone: string };\n    }) => {\n      const response = await apiRequest(\n        \"POST\",\n        `/api/nda/${ndaId}/complete`,\n        data\n      );\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({\n        queryKey: ['/api/notifications'],\n      });\n      toast({\n        title: \"تم إكمال بيانات اتفاقية عدم الإفصاح\",\n        description: data.message || \"تم إكمال بياناتك بنجاح. سيتم إرسال دعوات التوقيع الإلكتروني عبر صادق قريباً.\",\n      });\n      navigate(\"/notifications\");\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"خطأ في إكمال البيانات\",\n        description: error.message || \"حدث خطأ أثناء إكمال بيانات اتفاقية عدم الإفصاح\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Enhanced input handlers with real-time validation\n  const handleNameChange = (value: string) => {\n    setEntrepreneurName(value);\n    const validation = validateName(value);\n    setNameValidation(validation);\n  };\n\n  const handleEmailChange = (value: string) => {\n    setEntrepreneurEmail(value);\n    const validation = validateEmail(value);\n    setEmailValidation(validation);\n  };\n\n  const handlePhoneChange = (value: string) => {\n    setEntrepreneurPhone(value);\n    const validation = validatePhoneNumber(value);\n    setPhoneValidation(validation);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!agreed) {\n      toast({\n        title: \"يرجى الموافقة على الشروط\",\n        description: \"يجب عليك الموافقة على شروط اتفاقية عدم الإفصاح للمتابعة.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Comprehensive validation using expert validation system\n    const validation = validateContactForm({\n      name: entrepreneurName,\n      email: entrepreneurEmail,\n      phone: entrepreneurPhone\n    });\n    \n    if (!validation.isValid) {\n      // Update validation states for UI feedback\n      setNameValidation(validation.errors.name ? { isValid: false, message: validation.errors.name } : { isValid: true });\n      setEmailValidation(validation.errors.email ? { isValid: false, message: validation.errors.email } : { isValid: true });\n      setPhoneValidation(validation.errors.phone ? { isValid: false, message: validation.errors.phone } : { isValid: true });\n      \n      // Show first error as toast\n      const firstError = Object.values(validation.errors)[0];\n      toast({\n        title: \"بيانات غير صحيحة\",\n        description: firstError,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // All validations passed, use formatted data\n    const formattedData = validation.formattedData!;\n    completeNdaMutation.mutate({\n      entrepreneur: {\n        name: formattedData.name,\n        email: formattedData.email,\n        phone: formattedData.phone,\n      },\n    });\n  };\n\n  if (!ndaId) {\n    return (\n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <div className=\"text-center py-12\">\n          <FileText className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">رابط غير صالح</h2>\n          <p className=\"text-gray-600\">الرابط المستخدم غير صالح أو منتهي الصلاحية.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show loading while checking status\n  if (statusLoading) {\n    return (\n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <div className=\"text-center py-12\">\n          <Clock className=\"h-12 w-12 text-blue-500 mx-auto mb-4 animate-spin\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">جاري التحقق من الحالة...</h2>\n          <p className=\"text-gray-600\">نتحقق من حالة اتفاقية عدم الإفصاح الحالية.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error if status check failed\n  if (statusError || !ndaStatus) {\n    return (\n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <div className=\"text-center py-12\">\n          <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">خطأ في الوصول</h2>\n          <p className=\"text-gray-600\">لا يمكن الوصول لبيانات اتفاقية عدم الإفصاح. يرجى المحاولة لاحقاً.</p>\n          <Button \n            variant=\"outline\" \n            onClick={() => navigate(\"/notifications\")} \n            className=\"mt-4\"\n          >\n            العودة للإشعارات\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  // Show status page if NDA is not awaiting entrepreneur completion\n  if (ndaStatus.status !== 'awaiting_entrepreneur') {\n    return (\n      <>\n        <SEO \n          title=\"حالة اتفاقية عدم الإفصاح\"\n          description=\"تتبع حالة اتفاقية عدم الإفصاح وعملية التوقيع الإلكتروني\"\n        />\n        \n        <div className=\"container mx-auto py-8 px-4 md:px-6\">\n          <div className=\"max-w-2xl mx-auto\">\n            <div className=\"text-center mb-8\">\n              <div className=\"flex justify-center mb-4\">\n                <div className=\"p-3 bg-green-100 rounded-full\">\n                  {ndaStatus.status === 'signed' ? (\n                    <CheckCircle className=\"h-8 w-8 text-green-600\" />\n                  ) : ndaStatus.status === 'invitation_sent' ? (\n                    <UserCheck className=\"h-8 w-8 text-blue-600\" />\n                  ) : (\n                    <Clock className=\"h-8 w-8 text-yellow-600\" />\n                  )}\n                </div>\n              </div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                حالة اتفاقية عدم الإفصاح\n              </h1>\n              <p className=\"text-gray-600\">\n                تتبع حالة اتفاقية عدم الإفصاح وعملية التوقيع\n              </p>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <FileText className=\"h-5 w-5\" />\n                  معلومات الاتفاقية\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                {/* Current Status */}\n                <div className=\"flex justify-between items-center p-4 bg-gray-50 rounded-lg\">\n                  <span className=\"font-medium\">الحالة الحالية:</span>\n                  <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n                    ndaStatus.status === 'signed' ? 'bg-green-100 text-green-800' :\n                    ndaStatus.status === 'invitation_sent' ? 'bg-blue-100 text-blue-800' :\n                    ndaStatus.status === 'ready_for_sadiq' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {ndaStatus.status === 'signed' ? 'مكتملة ومُوقعة' :\n                     ndaStatus.status === 'invitation_sent' ? 'تم إرسال دعوات التوقيع' :\n                     ndaStatus.status === 'ready_for_sadiq' ? 'جاهزة للإرسال' :\n                     'قيد المعالجة'}\n                  </span>\n                </div>\n\n                {/* Creation Date */}\n                {ndaStatus.createdAt && (\n                  <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                    <span className=\"text-gray-600\">تاريخ الإنشاء:</span>\n                    <span className=\"font-medium\">\n                      {new Date(ndaStatus.createdAt).toLocaleDateString('ar-SA', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })}\n                    </span>\n                  </div>\n                )}\n\n                {/* Signed Date */}\n                {ndaStatus.signedAt && (\n                  <div className=\"flex justify-between items-center p-3 border rounded-lg bg-green-50\">\n                    <span className=\"text-green-700\">تاريخ التوقيع:</span>\n                    <span className=\"font-medium text-green-800\">\n                      {new Date(ndaStatus.signedAt).toLocaleDateString('ar-SA', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })}\n                    </span>\n                  </div>\n                )}\n\n                {/* Reference Number */}\n                {ndaStatus.sadiqReferenceNumber && (\n                  <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                    <span className=\"text-gray-600\">رقم المرجع:</span>\n                    <span className=\"font-mono text-sm bg-gray-100 px-2 py-1 rounded\">\n                      {ndaStatus.sadiqReferenceNumber}\n                    </span>\n                  </div>\n                )}\n\n                {/* Sadiq Status Details */}\n                {ndaStatus.sadiqStatus && (\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-medium text-gray-900 border-b pb-2\">تفاصيل التوقيع الإلكتروني</h4>\n                    \n                    {/* Progress */}\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>نسبة الإكمال:</span>\n                        <span className=\"font-semibold\">{ndaStatus.sadiqStatus.completionPercentage}%</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"bg-blue-600 h-2 rounded-full\" \n                          style={{ width: `${ndaStatus.sadiqStatus.completionPercentage}%` }}\n                        ></div>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                        <div className=\"text-lg font-bold text-green-700\">{ndaStatus.sadiqStatus.signedCount}</div>\n                        <div className=\"text-sm text-green-600\">تم التوقيع</div>\n                      </div>\n                      <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\n                        <div className=\"text-lg font-bold text-orange-700\">{ndaStatus.sadiqStatus.pendingCount}</div>\n                        <div className=\"text-sm text-orange-600\">في الانتظار</div>\n                      </div>\n                    </div>\n\n                    {/* Signatories */}\n                    {ndaStatus.sadiqStatus.signatories && ndaStatus.sadiqStatus.signatories.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"font-medium text-sm text-gray-700\">الموقعين:</h5>\n                        {ndaStatus.sadiqStatus.signatories.map((signatory, index) => (\n                          <div key={signatory.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                            <div>\n                              <div className=\"font-medium text-sm\">\n                                {signatory.fullNameAr || signatory.fullName}\n                              </div>\n                              <div className=\"text-xs text-gray-500\">{signatory.email}</div>\n                            </div>\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              signatory.status === 'SIGNED' ? 'bg-green-100 text-green-700' :\n                              signatory.status === 'PENDING' ? 'bg-orange-100 text-orange-700' :\n                              'bg-gray-100 text-gray-700'\n                            }`}>\n                              {signatory.status === 'SIGNED' ? 'تم التوقيع' :\n                               signatory.status === 'PENDING' ? 'في الانتظار' :\n                               signatory.status}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n\n                    {/* Documents */}\n                    {ndaStatus.sadiqStatus.documents && ndaStatus.sadiqStatus.documents.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"font-medium text-sm text-gray-700\">المستندات:</h5>\n                        {ndaStatus.sadiqStatus.documents.map((doc, index) => (\n                          <div key={doc.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                            <div>\n                              <div className=\"font-medium text-sm\">{doc.fileName}</div>\n                              <div className=\"text-xs text-gray-500\">\n                                حجم الملف: {doc.sizeInKB} كيلوبايت\n                              </div>\n                            </div>\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              doc.isSigned ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-700'\n                            }`}>\n                              {doc.isSigned ? 'موقع' : 'غير موقع'}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n\n                    {/* Sadiq Creation Date */}\n                    {ndaStatus.sadiqStatus.createDate && (\n                      <div className=\"flex justify-between items-center p-3 border rounded-lg bg-blue-50\">\n                        <span className=\"text-blue-700\">تاريخ الإنشاء في صادق:</span>\n                        <span className=\"font-medium text-blue-800\">\n                          {new Date(ndaStatus.sadiqStatus.createDate).toLocaleDateString('ar-SA', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: 'numeric',\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}\n                        </span>\n                      </div>\n                    )}\n\n                    {ndaStatus.sadiqStatus.pendingCount > 0 && (\n                      <div className=\"p-4 bg-blue-50 rounded-lg\">\n                        <p className=\"text-sm text-blue-700\">\n                          في انتظار {ndaStatus.sadiqStatus.pendingCount} توقيع إضافي لإكمال الاتفاقية\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {ndaStatus.status === 'signed' && (\n                  <div className=\"p-4 bg-green-50 rounded-lg\">\n                    <div className=\"flex items-center gap-2 text-green-700\">\n                      <CheckCircle className=\"h-5 w-5\" />\n                      <span className=\"font-medium\">تم إكمال التوقيع بنجاح!</span>\n                    </div>\n                    <p className=\"text-sm text-green-600 mt-1\">\n                      تم توقيع اتفاقية عدم الإفصاح من جميع الأطراف. يمكنك الآن المتابعة مع المشروع.\n                    </p>\n                  </div>\n                )}\n\n                <div className=\"flex gap-4 pt-4\">\n                  <Button \n                    variant=\"outline\" \n                    onClick={() => navigate(\"/notifications\")}\n                    className=\"flex-1\"\n                  >\n                    العودة للإشعارات\n                  </Button>\n                  <Button \n                    onClick={() => window.location.reload()}\n                    variant=\"ghost\"\n                  >\n                    تحديث الحالة\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SEO \n        title=\"إكمال بيانات اتفاقية عدم الإفصاح\"\n        description=\"أكمل بياناتك لإنهاء عملية إنشاء اتفاقية عدم الإفصاح والبدء في التوقيع الإلكتروني\"\n      />\n      \n      <div className=\"container mx-auto py-8 px-4 md:px-6\">\n        <div className=\"max-w-2xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <div className=\"flex justify-center mb-4\">\n              <div className=\"p-3 bg-blue-100 rounded-full\">\n                <FileText className=\"h-8 w-8 text-blue-600\" />\n              </div>\n            </div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              إكمال بيانات اتفاقية عدم الإفصاح\n            </h1>\n            <p className=\"text-gray-600\">\n              يرجى إدخال بياناتك لإكمال عملية إنشاء اتفاقية عدم الإفصاح\n            </p>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <User className=\"h-5 w-5\" />\n                بياناتك الشخصية\n              </CardTitle>\n              <CardDescription>\n                ستستخدم هذه البيانات في عملية التوقيع الإلكتروني عبر صادق\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"entrepreneurName\">الاسم الكامل *</Label>\n                    <Input\n                      id=\"entrepreneurName\"\n                      type=\"text\"\n                      value={entrepreneurName}\n                      onChange={(e) => handleNameChange(e.target.value)}\n                      placeholder=\"أحمد محمد السعودي\"\n                      required\n                      className={`mt-1 ${\n                        entrepreneurName && !nameValidation.isValid \n                          ? 'border-red-500 focus:border-red-500' \n                          : nameValidation.message && nameValidation.isValid\n                          ? 'border-green-500 focus:border-green-500'\n                          : ''\n                      }`}\n                    />\n                    {entrepreneurName && nameValidation.message && (\n                      <p className={`text-sm mt-1 ${\n                        nameValidation.isValid ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {nameValidation.message}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"entrepreneurEmail\">البريد الإلكتروني *</Label>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute right-3 top-3 h-4 w-4 text-gray-400\" />\n                      <Input\n                        id=\"entrepreneurEmail\"\n                        type=\"email\"\n                        value={entrepreneurEmail}\n                        onChange={(e) => handleEmailChange(e.target.value)}\n                        placeholder=\"ahmed@example.com\"\n                        required\n                        className={`mt-1 pr-10 ${\n                          entrepreneurEmail && !emailValidation.isValid \n                            ? 'border-red-500 focus:border-red-500' \n                            : emailValidation.message && emailValidation.isValid\n                            ? 'border-green-500 focus:border-green-500'\n                            : ''\n                        }`}\n                      />\n                    </div>\n                    {entrepreneurEmail && emailValidation.message && (\n                      <p className={`text-sm mt-1 ${\n                        emailValidation.isValid ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {emailValidation.message}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"entrepreneurPhone\">رقم الهاتف *</Label>\n                    <div className=\"relative\">\n                      <Phone className=\"absolute right-3 top-3 h-4 w-4 text-gray-400\" />\n                      <Input\n                        id=\"entrepreneurPhone\"\n                        type=\"tel\"\n                        value={entrepreneurPhone}\n                        onChange={(e) => handlePhoneChange(e.target.value)}\n                        placeholder=\"+966xxxxxxxx أو 05xxxxxxxx\"\n                        required\n                        className={`mt-1 pr-10 ${\n                          entrepreneurPhone && !phoneValidation.isValid \n                            ? 'border-red-500 focus:border-red-500' \n                            : phoneValidation.message && phoneValidation.isValid\n                            ? 'border-green-500 focus:border-green-500'\n                            : ''\n                        }`}\n                      />\n                    </div>\n                    {entrepreneurPhone && phoneValidation.message && (\n                      <p className={`text-sm mt-1 ${\n                        phoneValidation.isValid ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {phoneValidation.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                  <h4 className=\"font-medium text-blue-800 mb-2 flex items-center gap-2\">\n                    <CheckCircle className=\"h-4 w-4\" />\n                    الخطوة التالية\n                  </h4>\n                  <p className=\"text-sm text-blue-700\">\n                    بعد إكمال بياناتك، ستتلقى رابط التوقيع الإلكتروني عبر البريد الإلكتروني. \n                    ستحتاج للتحقق من هويتك عبر نفاذ لإكمال عملية التوقيع.\n                  </p>\n                </div>\n\n                <div className=\"flex items-start space-x-2 space-x-reverse\">\n                  <Checkbox\n                    id=\"agree\"\n                    checked={agreed}\n                    onCheckedChange={(checked) => setAgreed(checked === true)}\n                    className=\"mt-1\"\n                  />\n                  <Label htmlFor=\"agree\" className=\"text-sm leading-relaxed\">\n                    أوافق على شروط اتفاقية عدم الإفصاح وأؤكد صحة البيانات المدخلة.\n                    أتفهم أن هذه البيانات ستستخدم في عملية التوقيع الإلكتروني عبر منصة صادق.\n                  </Label>\n                </div>\n\n                <div className=\"flex gap-4\">\n                  <Button\n                    type=\"submit\"\n                    disabled={completeNdaMutation.isPending}\n                    className=\"flex-1\"\n                  >\n                    {completeNdaMutation.isPending ? \"جاري الإرسال...\" : \"إكمال البيانات\"}\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={() => navigate(\"/notifications\")}\n                    className=\"px-8\"\n                  >\n                    إلغاء\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </>\n  );\n}","size_bytes":27260},"client/src/components/notifications/NotificationBell.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { Bell, BellRing } from \"lucide-react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Button } from \"@/components/ui/button\";\nimport UnreadIndicator from \"./UnreadIndicator\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface Notification {\n  id: number;\n  userId: number;\n  type: string;\n  title: string;\n  content: string;\n  actionUrl?: string;\n  isRead: boolean;\n  createdAt: string;\n  metadata?: any;\n}\n\ninterface NotificationBellProps {\n  className?: string;\n}\n\nconst NotificationBell = ({ className = \"\" }: NotificationBellProps) => {\n  const queryClient = useQueryClient();\n  const { data: notifications = [], refetch } = useQuery<Notification[]>({\n    queryKey: [\"/api/notifications\"],\n    refetchInterval: 30000, // Refetch every 30 seconds\n  });\n\n  const unreadCount = notifications.filter(n => !n.isRead).length;\n\n  // Mutation to mark notification as read\n  const markAsReadMutation = useMutation({\n    mutationFn: async (notificationId: number) => {\n      return await apiRequest(\"POST\", `/api/notifications/${notificationId}/read`);\n    },\n    onSuccess: (_, notificationId) => {\n      // Update the cache immediately to reflect the read status\n      queryClient.setQueryData([\"/api/notifications\"], (oldData: Notification[] | undefined) => {\n        if (!oldData) return oldData;\n        return oldData.map(notification => \n          notification.id === notificationId \n            ? { ...notification, isRead: true }\n            : notification\n        );\n      });\n    },\n    onError: (error) => {\n      console.error(\"Failed to mark notification as read:\", error);\n      // Optionally show a toast notification here\n    }\n  });\n\n  // Mutation to mark all notifications as read\n  const markAllAsReadMutation = useMutation({\n    mutationFn: async () => {\n      return await apiRequest(\"POST\", \"/api/notifications/mark-all-read\");\n    },\n    onSuccess: () => {\n      // Update the cache to mark all notifications as read\n      queryClient.setQueryData([\"/api/notifications\"], (oldData: Notification[] | undefined) => {\n        if (!oldData) return oldData;\n        return oldData.map(notification => ({ ...notification, isRead: true }));\n      });\n    },\n    onError: (error) => {\n      console.error(\"Failed to mark all notifications as read:\", error);\n    }\n  });\n\n  const handleNotificationClick = async (notification: Notification) => {\n    // Mark as read if not already read\n    if (!notification.isRead) {\n      markAsReadMutation.mutate(notification.id);\n    }\n    \n    // Navigate if there's an action URL\n    if (notification.actionUrl) {\n      window.location.href = notification.actionUrl;\n    }\n  };\n\n  const handleMarkAllAsRead = () => {\n    markAllAsReadMutation.mutate();\n  };\n\n  const formatTimeAgo = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n    const days = Math.floor(diff / 86400000);\n\n    if (days > 0) return `منذ ${days} يوم`;\n    if (hours > 0) return `منذ ${hours} ساعة`;\n    if (minutes > 0) return `منذ ${minutes} دقيقة`;\n    return \"الآن\";\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'nda_request':\n        return '📄';\n      case 'nda_completed':\n        return '✅';\n      case 'offer_received':\n        return '💰';\n      case 'project_update':\n        return '🔄';\n      default:\n        return '📢';\n    }\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className={`relative p-2 text-gray-600 hover:text-primary rounded-full hover:bg-gray-100 ${className}`}\n        >\n          {unreadCount > 0 ? (\n            <BellRing className=\"h-5 w-5\" />\n          ) : (\n            <Bell className=\"h-5 w-5\" />\n          )}\n          {unreadCount > 0 && (\n            <UnreadIndicator \n              count={unreadCount} \n              className=\"absolute -top-1 -right-1\"\n            />\n          )}\n        </Button>\n      </DropdownMenuTrigger>\n      \n      <DropdownMenuContent align=\"end\" className=\"w-80 max-h-96 overflow-hidden\">\n        <div className=\"px-4 py-3 border-b border-gray-100 flex items-center justify-between\">\n          <h3 className=\"text-sm font-semibold\">الإشعارات</h3>\n          <div className=\"flex items-center gap-2\">\n            {unreadCount > 0 && (\n              <>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleMarkAllAsRead}\n                  disabled={markAllAsReadMutation.isPending}\n                  className=\"text-xs h-6 px-2\"\n                >\n                  {markAllAsReadMutation.isPending ? \"...\" : \"تعيين الكل كمقروء\"}\n                </Button>\n                <UnreadIndicator count={unreadCount} />\n              </>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"max-h-[300px] overflow-y-auto\">\n          {notifications.length === 0 ? (\n            <div className=\"px-4 py-8 text-center text-gray-500\">\n              <Bell className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n              <p className=\"text-sm\">لا توجد إشعارات</p>\n            </div>\n          ) : (\n            notifications.slice(0, 10).map((notification) => (\n              <div\n                key={notification.id}\n                className={`px-4 py-3 hover:bg-gray-50 cursor-pointer transition-colors border-r-4 ${\n                  notification.isRead ? 'border-transparent' : 'border-primary bg-blue-50/30'\n                }`}\n                onClick={() => handleNotificationClick(notification)}\n              >\n                <div className=\"flex items-start gap-3\">\n                  <span className=\"text-lg flex-shrink-0 mt-0.5\">\n                    {getNotificationIcon(notification.type)}\n                  </span>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className={`text-sm font-medium truncate ${\n                      notification.isRead ? 'text-gray-700' : 'text-gray-900'\n                    }`}>\n                      {notification.title}\n                    </p>\n                    <p className={`text-xs mt-1 line-clamp-2 ${\n                      notification.isRead ? 'text-gray-500' : 'text-gray-600'\n                    }`}>\n                      {notification.content}\n                    </p>\n                    <p className=\"text-xs text-gray-400 mt-1\">\n                      {formatTimeAgo(notification.createdAt)}\n                    </p>\n                  </div>\n                  {!notification.isRead && (\n                    <div className=\"flex-shrink-0 w-2 h-2 bg-primary rounded-full mt-2\"></div>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n        \n        {notifications.length > 0 && (\n          <div className=\"px-4 py-2 border-t border-gray-100 text-center\">\n            <Link href=\"/notifications\" className=\"text-xs text-primary hover:underline\">\n              عرض كافة الإشعارات\n            </Link>\n          </div>\n        )}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n\nexport default NotificationBell;","size_bytes":7585},"client/src/components/nda/NdaEntrepreneurForm.tsx":{"content":"import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Shield, FileCheck, Users, Phone, Mail } from \"lucide-react\";\nimport { validatePhoneNumber, validateEmail, validateName, validateContactForm } from '@/lib/validation';\n\ninterface NdaEntrepreneurFormProps {\n  ndaId: number;\n  projectTitle: string;\n  companyName: string;\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess?: () => void;\n}\n\ninterface EntrepreneurFormData {\n  name: string;\n  email: string;\n  phone: string;\n}\n\nexport function NdaEntrepreneurForm({\n  ndaId,\n  projectTitle,\n  companyName,\n  isOpen,\n  onOpenChange,\n  onSuccess,\n}: NdaEntrepreneurFormProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  const [agreed, setAgreed] = useState(false);\n  const [step, setStep] = useState<'contact-info' | 'agreement'>('contact-info');\n  const [phoneValidation, setPhoneValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  const [emailValidation, setEmailValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  const [nameValidation, setNameValidation] = useState<{ isValid: boolean; message?: string }>({ isValid: true });\n  \n  // Get current user info\n  const { data: auth } = useQuery<any>({\n    queryKey: ['/api/auth/user'],\n  });\n\n  // Entrepreneur contact form state\n  const [contactForm, setContactForm] = useState<EntrepreneurFormData>({\n    name: auth?.user?.name || '',\n    email: auth?.user?.email || '',\n    phone: ''\n  });\n\n  // Reset form when dialog opens\n  React.useEffect(() => {\n    if (isOpen) {\n      setStep('contact-info');\n      setAgreed(false);\n      setContactForm({\n        name: auth?.user?.name || '',\n        email: auth?.user?.email || '',\n        phone: ''\n      });\n    }\n  }, [isOpen, auth?.user]);\n\n  // Complete NDA with entrepreneur contact info\n  const completeNdaMutation = useMutation({\n    mutationFn: async (data: EntrepreneurFormData) => {\n      const response = await apiRequest(\"POST\", `/api/nda/${ndaId}/complete`, {\n        entrepreneur: data\n      });\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['/api/projects'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/notifications'] });\n      queryClient.invalidateQueries({ queryKey: [`/api/nda/${ndaId}`] });\n      \n      toast({\n        title: \"تم إكمال طلب اتفاقية عدم الإفصاح\",\n        description: \"تم إرسال الاتفاقية للتوقيع الإلكتروني عبر منصة صادق.\",\n      });\n\n      onOpenChange(false);\n      onSuccess?.();\n    },\n    onError: (error) => {\n      toast({\n        title: \"حدث خطأ\",\n        description: error.message || \"لم نتمكن من إكمال طلب اتفاقية عدم الإفصاح.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleContactSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Comprehensive validation using expert validation system\n    const validation = validateContactForm(contactForm);\n    \n    if (!validation.isValid) {\n      // Update validation states for UI feedback\n      setNameValidation(validation.errors.name ? { isValid: false, message: validation.errors.name } : { isValid: true });\n      setEmailValidation(validation.errors.email ? { isValid: false, message: validation.errors.email } : { isValid: true });\n      setPhoneValidation(validation.errors.phone ? { isValid: false, message: validation.errors.phone } : { isValid: true });\n      \n      // Show first error as toast\n      const firstError = Object.values(validation.errors)[0];\n      toast({\n        title: \"بيانات غير صحيحة\",\n        description: firstError,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // All validations passed, use formatted data\n    if (validation.formattedData) {\n      setContactForm(validation.formattedData);\n    }\n\n    // Move to agreement step\n    setStep('agreement');\n  };\n\n  const handleAgreementSubmit = () => {\n    if (!agreed) {\n      toast({\n        title: \"موافقة مطلوبة\",\n        description: \"يرجى الموافقة على شروط اتفاقية عدم الإفصاح.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    completeNdaMutation.mutate(contactForm);\n  };\n\n  const handleInputChange = (\n    field: 'name' | 'email' | 'phone',\n    value: string\n  ) => {\n    setContactForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Enhanced real-time validation for all fields\n    if (field === 'name') {\n      const validation = validateName(value);\n      setNameValidation(validation);\n    } else if (field === 'email') {\n      const validation = validateEmail(value);\n      setEmailValidation(validation);\n    } else if (field === 'phone') {\n      const validation = validatePhoneNumber(value);\n      setPhoneValidation(validation);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[500px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Shield className=\"h-5 w-5\" />\n            إكمال اتفاقية عدم الإفصاح - {projectTitle}\n          </DialogTitle>\n          <DialogDescription>\n            {step === 'contact-info' \n              ? 'يرجى إدخال معلومات الاتصال الخاصة بك لإتمام طلب اتفاقية عدم الإفصاح'\n              : 'يرجى مراجعة والموافقة على شروط اتفاقية عدم الإفصاح'\n            }\n          </DialogDescription>\n        </DialogHeader>\n\n        {step === 'contact-info' && (\n          <form onSubmit={handleContactSubmit} className=\"space-y-6\">\n            {/* Company info (read-only display) */}\n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-100\">\n              <div className=\"flex items-center mb-3\">\n                <Shield className=\"h-5 w-5 text-blue-600 ml-2\" />\n                <h3 className=\"font-medium text-blue-800\">طلب من شركة</h3>\n              </div>\n              <p className=\"text-sm text-blue-700\">\n                شركة <strong>{companyName}</strong> طلبت توقيع اتفاقية عدم إفصاح لمشروعك \"{projectTitle}\".\n              </p>\n            </div>\n\n            {/* Entrepreneur Info */}\n            <div className=\"space-y-4\">\n              <div className=\"bg-green-50 p-4 rounded-lg border border-green-100\">\n                <div className=\"flex items-center mb-3\">\n                  <Users className=\"h-5 w-5 text-green-600 ml-2\" />\n                  <h3 className=\"font-medium text-green-800\">معلوماتك الشخصية</h3>\n                </div>\n                \n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div>\n                    <Label htmlFor=\"entrepreneur-name\">الاسم الكامل *</Label>\n                    <Input\n                      id=\"entrepreneur-name\"\n                      value={contactForm.name}\n                      onChange={(e) => handleInputChange('name', e.target.value)}\n                      placeholder=\"اسمك الكامل\"\n                      className={`${\n                        contactForm.name && !nameValidation.isValid \n                          ? 'border-red-500 focus:border-red-500' \n                          : nameValidation.message && nameValidation.isValid\n                          ? 'border-green-500 focus:border-green-500'\n                          : ''\n                      }`}\n                      required\n                    />\n                    {contactForm.name && nameValidation.message && (\n                      <p className={`text-sm mt-1 ${\n                        nameValidation.isValid ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {nameValidation.message}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"entrepreneur-email\">البريد الإلكتروني *</Label>\n                      <div className=\"relative\">\n                        <Mail className=\"absolute right-3 top-3 h-4 w-4 text-gray-400\" />\n                        <Input\n                          id=\"entrepreneur-email\"\n                          type=\"email\"\n                          value={contactForm.email}\n                          onChange={(e) => handleInputChange('email', e.target.value)}\n                          placeholder=\"your@email.com\"\n                          className={`pr-10 ${\n                            contactForm.email && !emailValidation.isValid \n                              ? 'border-red-500 focus:border-red-500' \n                              : emailValidation.message && emailValidation.isValid\n                              ? 'border-green-500 focus:border-green-500'\n                              : ''\n                          }`}\n                          required\n                        />\n                      </div>\n                      {contactForm.email && emailValidation.message && (\n                        <p className={`text-sm mt-1 ${\n                          emailValidation.isValid ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                          {emailValidation.message}\n                        </p>\n                      )}\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"entrepreneur-phone\">رقم الهاتف *</Label>\n                      <div className=\"relative\">\n                        <Phone className=\"absolute right-3 top-3 h-4 w-4 text-gray-400\" />\n                        <Input\n                          id=\"entrepreneur-phone\"\n                          type=\"tel\"\n                          value={contactForm.phone}\n                          onChange={(e) => handleInputChange('phone', e.target.value)}\n                          placeholder=\"+966xxxxxxxx أو 05xxxxxxxx\"\n                          className={`pr-10 ${\n                            contactForm.phone && !phoneValidation.isValid \n                              ? 'border-red-500 focus:border-red-500' \n                              : phoneValidation.message && phoneValidation.isValid\n                              ? 'border-green-500 focus:border-green-500'\n                              : ''\n                          }`}\n                          required\n                        />\n                      </div>\n                      {contactForm.phone && phoneValidation.message && (\n                        <p className={`text-sm mt-1 ${\n                          phoneValidation.isValid ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                          {phoneValidation.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <DialogFooter>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => onOpenChange(false)}\n              >\n                إلغاء\n              </Button>\n              <Button type=\"submit\">\n                المتابعة إلى الاتفاقية\n              </Button>\n            </DialogFooter>\n          </form>\n        )}\n\n        {step === 'agreement' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-amber-50 p-4 rounded-lg border border-amber-200\">\n              <div className=\"flex items-start\">\n                <Shield className=\"h-5 w-5 text-amber-600 mt-0.5 ml-3 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"font-medium text-amber-800 mb-2\">اتفاقية عدم الإفصاح</h3>\n                  <p className=\"text-sm text-amber-700 mb-3\">\n                    بالموافقة على هذه الاتفاقية، فإنك تتعهد بعدم الكشف عن أي معلومات سرية \n                    أو مملوكة تتعلق بمشروع \"{projectTitle}\" مع شركة {companyName}.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 p-4 rounded-lg border\">\n              <h4 className=\"font-medium text-gray-800 mb-3\">معلومات الاتفاقية:</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">الشركة الطالبة:</span>\n                  <span className=\"font-medium\">{companyName}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">رائد الأعمال:</span>\n                  <span className=\"font-medium\">{contactForm.name} - {contactForm.email}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">المشروع:</span>\n                  <span className=\"font-medium\">{projectTitle}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"agree\"\n                  checked={agreed}\n                  onCheckedChange={(checked) => setAgreed(checked as boolean)}\n                />\n                <Label htmlFor=\"agree\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                  أوافق على شروط اتفاقية عدم الإفصاح وألتزم بعدم الكشف عن المعلومات السرية\n                </Label>\n              </div>\n            </div>\n\n            <DialogFooter>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => setStep('contact-info')}\n              >\n                العودة\n              </Button>\n              <Button\n                onClick={handleAgreementSubmit}\n                disabled={!agreed || completeNdaMutation.isPending}\n              >\n                {completeNdaMutation.isPending ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white ml-2\"></div>\n                    جاري الإكمال...\n                  </>\n                ) : (\n                  <>\n                    <FileCheck className=\"w-4 h-4 ml-2\" />\n                    إكمال اتفاقية عدم الإفصاح\n                  </>\n                )}\n              </Button>\n            </DialogFooter>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":15524},"client/src/lib/validation.ts":{"content":"// Expert-level validation utilities for NDA forms\n\nexport interface ValidationResult {\n  isValid: boolean;\n  message?: string;\n  formattedValue?: string;\n}\n\n/**\n * Comprehensive phone number validation for Saudi and international numbers\n * Supports Sadiq API requirements\n */\nexport function validatePhoneNumber(phone: string): ValidationResult {\n  if (!phone) {\n    return { isValid: false, message: 'رقم الهاتف مطلوب' };\n  }\n\n  // Remove all spaces, dashes, and special characters except +\n  const cleanPhone = phone.replace(/[\\s\\-\\(\\)\\.]/g, '');\n  \n  // STRICT VALIDATION FOR SADIQ API COMPATIBILITY\n  // Only accept: +966XXXXXXXXX (exactly 9 digits) or 00966XXXXXXXXX (exactly 9 digits)\n  \n  // Pattern 1: +966 followed by exactly 9 digits (mobile: 5XXXXXXXX or landline: 1XXXXXXXX)\n  const sadiqFormat1 = /^\\+966[15]\\d{8}$/;\n  \n  // Pattern 2: 00966 followed by exactly 9 digits  \n  const sadiqFormat2 = /^00966[15]\\d{8}$/\n  \n  // Check +966 format (9 digits after +966)\n  if (sadiqFormat1.test(cleanPhone)) {\n    return {\n      isValid: true,\n      message: `رقم صحيح متوافق مع صادق: ${cleanPhone}`,\n      formattedValue: cleanPhone\n    };\n  }\n  \n  // Check 00966 format (9 digits after 00966) - convert to +966\n  if (sadiqFormat2.test(cleanPhone)) {\n    const converted = '+966' + cleanPhone.substring(5); // Remove '00966' and add '+966'\n    return {\n      isValid: true,\n      message: `تم تحويل الرقم إلى صيغة صادق: ${converted}`,\n      formattedValue: converted\n    };\n  }\n  \n  // Specific error messages for common mistakes\n  if (cleanPhone.startsWith('+966') && !/^\\+966[15]\\d{8}$/.test(cleanPhone)) {\n    return {\n      isValid: false,\n      message: 'رقم +966 يجب أن يكون متبوعاً بـ 9 أرقام بالضبط (مثال: +966512345678)'\n    };\n  }\n  \n  if (cleanPhone.startsWith('00966') && !/^00966[15]\\d{8}$/.test(cleanPhone)) {\n    return {\n      isValid: false,\n      message: 'رقم 00966 يجب أن يكون متبوعاً بـ 9 أرقام بالضبط (مثال: 00966512345678)'\n    };\n  }\n  \n  // Reject local format - must use country code\n  if (cleanPhone.startsWith('05') || cleanPhone.startsWith('01')) {\n    return {\n      isValid: false,\n      message: 'يجب استخدام الرقم مع رمز البلد (+966). الأرقام المحلية (05..., 01...) غير مقبولة مع صادق'\n    };\n  }\n  \n  return {\n    isValid: false,\n    message: 'يجب إدخال رقم هاتف سعودي صحيح مع رمز البلد:\\n• +966512345678 أو 00966512345678\\n• يجب أن يكون بالضبط 9 أرقام بعد +966 أو 0096\\n• لا يُقبل الأرقام المحلية (05..., 01...)'\n  };\n}\n\n/**\n * Comprehensive email validation\n */\nexport function validateEmail(email: string): ValidationResult {\n  if (!email) {\n    return { isValid: false, message: 'البريد الإلكتروني مطلوب' };\n  }\n\n  // Basic email pattern\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  \n  if (!emailPattern.test(email)) {\n    return {\n      isValid: false,\n      message: 'تنسيق البريد الإلكتروني غير صحيح'\n    };\n  }\n  \n  // Check for common issues\n  if (email.includes('..')) {\n    return {\n      isValid: false,\n      message: 'البريد الإلكتروني لا يجب أن يحتوي على نقطتين متتاليتين'\n    };\n  }\n  \n  if (email.startsWith('.') || email.endsWith('.')) {\n    return {\n      isValid: false,\n      message: 'البريد الإلكتروني لا يجب أن يبدأ أو ينتهي بنقطة'\n    };\n  }\n  \n  if (email.length > 254) {\n    return {\n      isValid: false,\n      message: 'البريد الإلكتروني طويل جداً (أكثر من 254 حرف)'\n    };\n  }\n  \n  const localPart = email.split('@')[0];\n  if (localPart.length > 64) {\n    return {\n      isValid: false,\n      message: 'الجزء المحلي من البريد الإلكتروني طويل جداً'\n    };\n  }\n  \n  return {\n    isValid: true,\n    message: 'البريد الإلكتروني صحيح',\n    formattedValue: email.toLowerCase()\n  };\n}\n\n/**\n * Validate name field\n */\nexport function validateName(name: string): ValidationResult {\n  if (!name) {\n    return { isValid: false, message: 'الاسم مطلوب' };\n  }\n  \n  if (name.trim().length < 2) {\n    return {\n      isValid: false,\n      message: 'الاسم يجب أن يحتوي على حرفين على الأقل'\n    };\n  }\n  \n  if (name.trim().length > 100) {\n    return {\n      isValid: false,\n      message: 'الاسم طويل جداً (أكثر من 100 حرف)'\n    };\n  }\n  \n  // Check for basic name pattern (letters, spaces, some Arabic chars)\n  const namePattern = /^[\\u0600-\\u06FFa-zA-Z\\s\\-\\.]+$/;\n  if (!namePattern.test(name)) {\n    return {\n      isValid: false,\n      message: 'الاسم يجب أن يحتوي على أحرف وأرقام ومسافات فقط'\n    };\n  }\n  \n  return {\n    isValid: true,\n    message: 'الاسم صحيح',\n    formattedValue: name.trim()\n  };\n}\n\n/**\n * Validate all contact form fields\n */\nexport function validateContactForm(form: {\n  name: string;\n  email: string;\n  phone: string;\n}): {\n  isValid: boolean;\n  errors: Record<string, string>;\n  formattedData?: { name: string; email: string; phone: string };\n} {\n  const nameValidation = validateName(form.name);\n  const emailValidation = validateEmail(form.email);\n  const phoneValidation = validatePhoneNumber(form.phone);\n  \n  const errors: Record<string, string> = {};\n  \n  if (!nameValidation.isValid) {\n    errors.name = nameValidation.message || '';\n  }\n  \n  if (!emailValidation.isValid) {\n    errors.email = emailValidation.message || '';\n  }\n  \n  if (!phoneValidation.isValid) {\n    errors.phone = phoneValidation.message || '';\n  }\n  \n  const isValid = Object.keys(errors).length === 0;\n  \n  return {\n    isValid,\n    errors,\n    formattedData: isValid ? {\n      name: nameValidation.formattedValue || form.name,\n      email: emailValidation.formattedValue || form.email,\n      phone: phoneValidation.formattedValue || form.phone\n    } : undefined\n  };\n}","size_bytes":6169},"server/validationHelpers.ts":{"content":"// Server-side validation helpers for phone numbers and emails\n// Matches the client-side validation logic from client/src/lib/validation.ts\n\nexport interface ValidationResult {\n  isValid: boolean;\n  message?: string;\n  formattedValue?: string;\n}\n\nexport function validatePhoneNumber(phone: string): ValidationResult {\n  if (!phone) {\n    return { isValid: false, message: 'رقم الهاتف مطلوب' };\n  }\n\n  // Remove all spaces, dashes, and special characters except +\n  const cleanPhone = phone.replace(/[\\s\\-\\(\\)\\.]/g, '');\n  \n  // STRICT VALIDATION FOR SADIQ API COMPATIBILITY\n  // Only accept: +966XXXXXXXXX (exactly 9 digits) or 00966XXXXXXXXX (exactly 9 digits)\n  \n  // Pattern 1: +966 followed by exactly 9 digits (mobile: 5XXXXXXXX or landline: 1XXXXXXXX)\n  const sadiqFormat1 = /^\\+966[15]\\d{8}$/;\n  \n  // Pattern 2: 00966 followed by exactly 9 digits  \n  const sadiqFormat2 = /^00966[15]\\d{8}$/\n  \n  // Check +966 format (9 digits after +966)\n  if (sadiqFormat1.test(cleanPhone)) {\n    return {\n      isValid: true,\n      message: `رقم صحيح متوافق مع صادق: ${cleanPhone}`,\n      formattedValue: cleanPhone\n    };\n  }\n  \n  // Check 00966 format (9 digits after 00966) - convert to +966\n  if (sadiqFormat2.test(cleanPhone)) {\n    const converted = '+' + cleanPhone.substring(2); // Remove '00' and add '+'\n    return {\n      isValid: true,\n      message: `تم تحويل الرقم إلى صيغة صادق: ${converted}`,\n      formattedValue: converted\n    };\n  }\n  \n  // Reject local format - must use country code\n  if (cleanPhone.startsWith('05') || cleanPhone.startsWith('01')) {\n    return {\n      isValid: false,\n      message: 'يجب استخدام الرقم مع رمز البلد (+966). الأرقام المحلية (05..., 01...) غير مقبولة مع صادق'\n    };\n  }\n  \n  return { \n    isValid: false, \n    message: 'يجب إدخال رقم هاتف سعودي صحيح مع رمز البلد: +966512345678 أو 00966512345678. يجب أن يكون بالضبط 9 أرقام بعد +966 أو 0096. لا يُقبل الأرقام المحلية (05..., 01...)'\n  };\n}\n\nexport function validateEmail(email: string): ValidationResult {\n  if (!email) {\n    return { isValid: false, message: 'البريد الإلكتروني مطلوب' };\n  }\n  \n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  if (!emailRegex.test(email)) {\n    return { isValid: false, message: 'صيغة البريد الإلكتروني غير صحيحة' };\n  }\n  \n  return { isValid: true, message: 'البريد الإلكتروني صحيح' };\n}\n\nexport function validateName(name: string): ValidationResult {\n  if (!name) {\n    return { isValid: false, message: 'الاسم مطلوب' };\n  }\n  \n  if (name.length < 2) {\n    return { isValid: false, message: 'الاسم يجب أن يكون حرفين على الأقل' };\n  }\n  \n  if (name.length > 100) {\n    return { isValid: false, message: 'الاسم طويل جداً' };\n  }\n  \n  return { isValid: true, message: 'الاسم صحيح' };\n}","size_bytes":3045}},"version":1}